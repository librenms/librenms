name: Lint
on:
  push:
  pull_request:
    branches: [master, main]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  super-linter:
    permissions:
      contents: read # to fetch code (actions/checkout)
      checks: write # to mark the status of each individual linter run

    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      -
        name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_BASH: true
          # VALIDATE_PHP_BUILTIN: true # temp disable until it supports PHP 8.1
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_PYTHON_BLACK: true

          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  phpstan:
    name: PHP Static Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.1]
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4

      -
        name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: none

      -
        name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      -
        name: Cache composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}-${{ secrets.CACHE_VERSION }}-

      -
        name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-

      -
        name: Composer install
        run: composer install --prefer-dist --no-interaction --no-progress

      -
        name: Run PHPStan (Deprecated functions)
        run: ./vendor/bin/phpstan analyze --no-interaction --no-progress --memory-limit=4G --configuration=phpstan-deprecated.neon

      -
        name: Run PHPStan
        run: ./vendor/bin/phpstan analyze --no-interaction --no-progress --memory-limit=4G
