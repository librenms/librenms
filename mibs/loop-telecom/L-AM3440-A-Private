--======================================================================--
--  Loop Telecommunication International, Inc.                          --
--  Copyright (c) 2003-2025. All rights reserved.                       --
--======================================================================--

--======================================================================--
-- MIB definition of Loop-AM3440-A IMAP                                 --
--                                                                      --
-- Version V23.03.01  08/17/2022                                        --
--======================================================================--

 
L-AM3440-A-Private   DEFINITIONS ::= BEGIN

IMPORTS
    enterprises, IpAddress, Counter, Gauge
        FROM RFC1155-SMI
    DisplayString
        FROM RFC1213-MIB
    TRAP-TYPE
        FROM RFC-1215
    Integer32, NOTIFICATION-TYPE
        FROM SNMPv2-SMI
    OBJECT-TYPE
        FROM RFC-1212;

--======================================================================--

    -- General definition of Slot ID
    GenSlotID ::= INTEGER {
        no(0),
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16),
        pw(18)
    }

    -- Chassis slot definition
    ChassisSlot ::= INTEGER {
        primary(1),
        redundant(2),
        slotA(3),
        slotB(4),
        slotC(5),
        slotD(6),
        slot1(7),
        slot2(8),
        slot3(9),
        slot4(10),
        slot5(11),
        slot6(12),
        slot7(13),
        slot8(14),
        slot9(15),
        slot10(16),
        slot11(17),
        slot12(18)
    }

    -- General definition of Port ID
    GenPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8),
        port-9(9),
        port-10(10),
        port-11(11),
        port-12(12),
        port-13(13),
        port-14(14),
        port-15(15),
        port-16(16),
        port-17(17),
        port-18(18),
        port-19(19),
        port-20(20),
        port-21(21),
        port-22(22),
        port-23(23),
        port-24(24),
        port-25(25),
        port-26(26),
        port-27(27),
        port-28(28),
        port-29(29),
        port-30(30),
        port-31(31),
        port-32(32),
        port-33(33),
        port-34(34),
        port-35(35),
        port-36(36),
        port-37(37),
        port-38(38),
        port-39(39),
        port-40(40),
        port-41(41),
        port-42(42),
        port-43(43),
        port-44(44),
        port-45(45),
        port-46(46),
        port-47(47),
        port-48(48),
        port-49(49),
        port-50(50),
        port-51(51),
        port-52(52),
        port-53(53),
        port-54(54),
        port-55(55),
        port-56(56),
        port-57(57),
        port-58(58),
        port-59(59),
        port-60(60),
        port-61(61),
        port-62(62),
        port-63(63),
        port-64(64),		
        ep1(101),
        ep2(102),
        cp1(103),
        cp2(104),
        gp1(121),
        gp2(122),
        gp3(123),
        gp4(124),
        gp5(125),
        gp6(126),
        gp7(127),
        gp8(128),
        gp9(129),
        gp10(130),
        gp11(131),
        gp12(132),
        gp13(133),
        gp14(134),
        gp15(135),
        gp16(136),
        gp17(137),
        gp18(138),
        gp19(139),
        gp20(140),
        gp21(141),
        gp22(142),
        gp23(143),
        gp24(144),
        gp25(145),
        gp26(146),
        gp27(147),
        gp28(148),
        gp29(149),
        gp30(150),
        gp31(151),
        gp32(152),
        gp33(153),
        gp34(154),
        gp35(155),
        gp36(156),
        gp37(157),
        gp38(158),
        gp39(159),
        gp40(160),
        gp41(161),
        gp42(162),
        none(254)
    }

    -- General definition of Alarm Port
    AlarmPort ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8),
        port-9(9),
        port-10(10),
        port-11(11),
        port-12(12),
        port-13(13),
        port-14(14),
        port-15(15),
        port-16(16),
        port-17(17),
        port-18(18),
        port-19(19),
        port-20(20),
        port-21(21),
        port-22(22),
        port-23(23),
        port-24(24),
        port-25(25),
        port-26(26),
        port-27(27),
        port-28(28),
        port-29(29),
        port-30(30),
        port-31(31),
        port-32(32),
        port-33(33),
        port-34(34),
        port-35(35),
        port-36(36),
        port-37(37),
        port-38(38),
        port-39(39),     
        port-40(40),
        port-41(41),
        port-42(42),
        port-43(43),
        port-44(44),
        port-45(45),
        port-46(46),
        port-47(47),
        port-48(48),
        port-49(49),  
        port-50(50),
        port-51(51),
        port-52(52),
        port-53(53),
        port-54(54),
        port-55(55),
        port-56(56),
        port-57(57),
        port-58(58),
        port-59(59),
        port-60(60),
        port-61(61),
        port-62(62),
        port-63(63),
        port-64(64),
        eth-1(101),
        eth-2(102),
        eth-3(103),
        eth-4(104),
        eth-5(105),
        eth-6(106),
        eth-7(107),
        eth-8(108),
        p1-1(111),
        p1-2(112),
        p1-3(113),
        p2-1(114),
        p2-2(115),
        p2-3(116),
        p3-1(117),
        p3-2(118),
        p3-3(119),
        p4-1(120),
        p4-2(121),
        p4-3(122),
        none(254)
    }

    -- General definition of Alarm Severity
    AlarmSeverityDisp ::= INTEGER {
        major(1),
        critical(2),
        minor(3),
        indication(4),
        clear(5),
        na(6)
    }

    -- General definition of Alarm Link
    AlarmLink ::= INTEGER {
        ts01(1),
        ts02(2),
        ts03(3),
        ts04(4),
        ts05(5),
        ts06(6),
        ts07(7),
        ts08(8),
        ts09(9),
        ts10(10),
        ts11(11),
        ts12(12),
        ts13(13),
        ts14(14),
        ts15(15),
        ts16(16),
        ts17(17),
        ts18(18),
        ts19(19),
        ts20(20),
        ts21(21),
        ts22(22),
        ts23(23),
        ts24(24),
        ts25(25),
        ts26(26),
        ts27(27),
        ts28(28),
        ts29(29),
        ts30(30),
        ts31(31),
        bundle-0(100),
        bundle-1(101),
        bundle-2(102),
        bundle-3(103),
        bundle-4(104),
        bundle-5(105),
        bundle-6(106),
        bundle-7(107),
        bundle-8(108),
        bundle-9(109),
        bundle-10(110),
        bundle-11(111),
        bundle-12(112),
        bundle-13(113),
        bundle-14(114),
        bundle-15(115),
        bundle-16(116),
        bundle-17(117),
        bundle-18(118),
        bundle-19(119),
        bundle-20(120),
        bundle-21(121),
        bundle-22(122),
        bundle-23(123),
        bundle-24(124),
        bundle-25(125),
        bundle-26(126),
        bundle-27(127),
        bundle-28(128),
        bundle-29(129),
        bundle-30(130),
        bundle-31(131),
        none(254)
    }

    -- General definition of Model Type
    GenModelType ::= INTEGER {
        empty(1),
        fe1(2),
        ft1(3),
        v35(4),
        x50(5),
        dtu-10(6),
        mdsl(7),
        em(8),
        dtu-6(9),
        router(10),
        fxs(11),
        fxo(12),
        afr-e1(14),
        afr-t1(15),
        magneto(16),
        quad-e1(21),
        quad-t1(22),
        v35-b(23),
        mdsl-a(24),
        v35-a(25),
        x21-a(26),
        v36-a(27),
        g703(28),
        mquad-e1(29),
        mquad-t1(30),
        gshdsl-2(31),
        gshdsl-4(32),
        rs422-a(33),
        dry-contact(34),
        fom(35),
        router-a(36),
        eia530-rs449-a(37),
        ls-optical(38),
        ocudp(39),
        oct-rt-b(40),
        ts(41),
        rs232-8(42),
        qfxo(43),
        qfxs(44),
        q2wem(45),
        q4wem(46),
        conference(47),
        tri-e1(48),
        tri-t1(49),
        sdte(50),
        tdmoe(51),
        oct-dbra(52),
        socudp(53),
        octDte(54),
        plm(55),
        eca(56),
        rs232a(57),
        abra(58),
        tta(59),
        m4te(60),
        dte6(61),
        cda6(62),
        qmag(63),
        voip(64),
        tri-rs232a(65),
        clka(66),
        other(98),
        unknown(99),
        ctrl(100)
    }

    AlarmModelType ::= INTEGER {
        fe1(0),
        ft1(1),
        rs232-8(2),
        oct-rt-b(3),
        v35(4),
        x50(5),
        dtu-6(6),
        dtu-10(7),
        mdsl(8),
        ls-optical(9),
        em(10),
        fxs(11),
        router(12),
        fxo(13),
        afr-e1(14),
        afr-t1(15),
        magneto(16),
        ocudp(17),
        quad-e1(18),
        quad-t1(19),
        mdsl-a(21),
        v35-a(22),
        gshdsl-4(23),
        gshdsl-2(24),
        g703(25),
        mquad-e1(26),
        mquad-t1(27),
        dry-contact(28),
        fom(29),
        router-a(30),
        controller(32),
        pseudoWire(33),
        conference(37),
        octDte(38),
        tri-e1(39),
        tri-t1(40),
        m4te(41),
        sdte(42),
        tdmoe(43),
        oct-dbra(44),
        socudp(45),
        rs232a(48),
        abra(49),
        tta(50),
        dte6(51),
        cda6(52),
        clka(58),
        x21-a(91),
        v36-a(92),
        rs422-a(93),
        eia530-rs449-a(94),
        unknown(99)
    }

    GenClockIndex ::= INTEGER {
        internal(1),
        port-A(2),
        port-B(3),
        port-C(4),
        port-D(5),
        external(6),
        slot-A-port-1(7),
        slot-A-port-2(8),
        slot-A-port-3(9),
        slot-A-port-4(10),
        slot-B-port-1(11),
        slot-B-port-2(12),
        slot-B-port-3(13),
        slot-B-port-4(14),
        slot-C-port-1(15),
        slot-C-port-2(16),
        slot-C-port-3(17),
        slot-C-port-4(18),
        slot-D-port-1(19),
        slot-D-port-2(20),
        slot-D-port-3(21),
        slot-D-port-4(22),
        slot-1-port-1(23),
        slot-1-port-2(24),
        slot-1-port-3(25),
        slot-1-port-4(26),
        slot-2-port-1(27),
        slot-2-port-2(28),
        slot-2-port-3(29),
        slot-2-port-4(30),
        slot-3-port-1(31),
        slot-3-port-2(32),
        slot-3-port-3(33),
        slot-3-port-4(34),
        slot-4-port-1(35),
        slot-4-port-2(36),
        slot-4-port-3(37),
        slot-4-port-4(38),
        slot-5-port-1(39),
        slot-5-port-2(40),
        slot-5-port-3(41),
        slot-5-port-4(42),
        slot-6-port-1(43),
        slot-6-port-2(44),
        slot-6-port-3(45),
        slot-6-port-4(46),
        slot-7-port-1(47),
        slot-7-port-2(48),
        slot-7-port-3(49),
        slot-7-port-4(50),
        slot-8-port-1(51),
        slot-8-port-2(52),
        slot-8-port-3(53),
        slot-8-port-4(54),
        slot-9-port-1(55),
        slot-9-port-2(56),
        slot-9-port-3(57),
        slot-9-port-4(58),
        slot-10-port-1(59),
        slot-10-port-2(60),
        slot-10-port-3(61),
        slot-10-port-4(62),
        slot-11-port-1(63),
        slot-11-port-2(64),
        slot-11-port-3(65),
        slot-11-port-4(66),
        slot-12-port-1(67),
        slot-12-port-2(68),
        slot-12-port-3(69),
        slot-12-port-4(70)
    }

    SSMClockIndex ::= INTEGER {
        none(1),
        port-A(2),
        port-B(3),
        port-C(4),
        port-D(5),
        slot-A-port-1(6),
        slot-A-port-2(7),
        slot-A-port-3(8),
        slot-A-port-4(9),
        slot-B-port-1(10),
        slot-B-port-2(11),
        slot-B-port-3(12),
        slot-B-port-4(13),
        slot-C-port-1(14),
        slot-C-port-2(15),
        slot-C-port-3(16),
        slot-C-port-4(17),
        slot-D-port-1(18),
        slot-D-port-2(19),
        slot-D-port-3(20),
        slot-D-port-4(21),
        slot-1-port-1(22),
        slot-1-port-2(23),
        slot-1-port-3(24),
        slot-1-port-4(25),
        slot-2-port-1(26),
        slot-2-port-2(27),
        slot-2-port-3(28),
        slot-2-port-4(29),
        slot-3-port-1(30),
        slot-3-port-2(31),
        slot-3-port-3(32),
        slot-3-port-4(33),
        slot-4-port-1(34),
        slot-4-port-2(35),
        slot-4-port-3(36),
        slot-4-port-4(37),
        slot-5-port-1(38),
        slot-5-port-2(39),
        slot-5-port-3(40),
        slot-5-port-4(41),
        slot-6-port-1(42),
        slot-6-port-2(43),
        slot-6-port-3(44),
        slot-6-port-4(45),
        slot-7-port-1(46),
        slot-7-port-2(47),
        slot-7-port-3(48),
        slot-7-port-4(49),
        slot-8-port-1(50),
        slot-8-port-2(51),
        slot-8-port-3(52),
        slot-8-port-4(53),
        slot-9-port-1(54),
        slot-9-port-2(55),
        slot-9-port-3(56),
        slot-9-port-4(57),
        slot-10-port-1(58),
        slot-10-port-2(59),
        slot-10-port-3(60),
        slot-10-port-4(61),
        slot-11-port-1(62),
        slot-11-port-2(63),
        slot-11-port-3(64),
        slot-11-port-4(65),
        slot-12-port-1(66),
        slot-12-port-2(67),
        slot-12-port-3(68),
        slot-12-port-4(69),
        internal(70),
        external(71)
    }

    AlarmSlotIndex ::= INTEGER {
        none(0),
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16),
        redundant(98),
        external(99),
        ctrl1(101),
        ctrl2(102),
        ctrl1-external(103),
        ctrl2-external(104),
        power1(111),
        power2(112),
        fan1(121),
        fan2(122),
        na(255)
    }

    MapSlotIndex ::= INTEGER {
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16),
        slot-INBAND(17),
        pw(18),
        none(254),
        idle(255)
    }

    MapSetSlot ::= INTEGER {
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16),
        slot-INBAND(17),
        pw(18),		
        none(254)
    }

    SmallSlotIndex ::= INTEGER {
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-E(5),
        slot-F(6),
        slot-H(7),
        slot-J(8),
        slot-K(9)
    }

    LargeSlotIndex ::= INTEGER {
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16)
    }

    BackupLink ::= INTEGER {
        link-A(1),
        link-B(2),
        link-C(3),
        link-D(4),
        none(5)
    }

    NewBackupLink ::= INTEGER {
        link-A(1),
        link-B(2),
        link-C(3),
        link-D(4),
        link-1(5),
        link-2(6),
        link-3(7),
        link-4(8),
        link-5(9),
        link-6(10),
        link-7(11),
        link-8(12),
        link-9(13),
        link-10(14),
        link-11(15),
        link-12(16),
        none(17)
    }

    MapPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8),
        port-9(9),
        port-10(10),
        port-11(11),
        port-12(12),
        port-13(13),
        port-14(14),
        port-15(15),
        port-16(16),
        port-17(17),
        port-18(18),
        port-19(19),
        port-20(20),
        port-21(21),
        port-22(22),
        port-23(23),
        port-24(24),
        port-25(25),
        port-26(26),
        port-27(27),
        port-28(28),
        port-29(29),
        port-30(30),
        port-31(31),
        port-32(32),
        port-33(33),
        port-34(34),
        port-35(35),
        port-36(36),
        port-37(37),
        port-38(38),
        port-39(39),
        port-40(40),
        port-41(41),
        port-42(42),
        port-43(43),
        port-44(44),
        port-45(45),
        port-46(46),
        port-47(47),
        port-48(48),
        port-49(49),
        port-50(50),
        port-51(51),
        port-52(52),
        port-53(53),
        port-54(54),
        port-55(55),
        port-56(56),
        port-57(57),
        port-58(58),
        port-59(59),
        port-60(60),
        port-61(61),
        port-62(62),
        port-63(63),
        port-64(64),		
        ep1(101),
        ep2(102),
        cp1(103),
        cp2(104),
        gp1(121),
        gp2(122),
        gp3(123),
        gp4(124),
        gp5(125),
        gp6(126),
        gp7(127),
        gp8(128),
        gp9(129),
        gp10(130),
        gp11(131),
        gp12(132),
        gp13(133),
        gp14(134),
        gp15(135),
        gp16(136),
        gp17(137),
        gp18(138),
        gp19(139),
        gp20(140),
        gp21(141),
        gp22(142),
        gp23(143),
        gp24(144),
        gp25(145),
        gp26(146),
        gp27(147),
        gp28(148),
        gp29(149),
        gp30(150),
        gp31(151),
        gp32(152),
        gp33(153),
        gp34(154),
        gp35(155),
        gp36(156),
        gp37(157),
        gp38(158),
        gp39(159),
        gp40(160),
        gp41(161),
        gp42(162),
        none(254),
        idle(255)
    }

    G2PortID ::= INTEGER {
        port-1(1),
        port-3(2)
    }

    OnePortID ::= INTEGER {
        port1(1)
    }

    ThreePortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3)
    }

    FourPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4)
    }

    SixPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6)
    }

    EightPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8)
    }

    TenPortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8),
        port-9(9),
        port-10(10)
    }

    TwelvePortID ::= INTEGER {
        port-1(1),
        port-2(2),
        port-3(3),
        port-4(4),
        port-5(5),
        port-6(6),
        port-7(7),
        port-8(8),
        port-9(9),
        port-10(10),
        port-11(11),
        port-12(12)
    }

    WanID ::= INTEGER {
        xx(0),
        wan-1(1),
        wan-2(2),
        wan-3(3),
        wan-4(4),
        wan-5(5),
        wan-6(6),
        wan-7(7),
        wan-8(8),
        wan-9(9),
        wan-10(10),
        wan-11(11),
        wan-12(12),
        wan-13(13),
        wan-14(14),
        wan-15(15),
        wan-16(16),
        wan-17(17),
        wan-18(18),
        wan-19(19),
        wan-20(20),
        wan-21(21),
        wan-22(22),
        wan-23(23),
        wan-24(24),
        wan-25(25),
        wan-26(26),
        wan-27(27),
        wan-28(28),
        wan-29(29),
        wan-30(30),
        wan-31(31),
        wan-32(32),
        wan-33(33),
        wan-34(34),
        wan-35(35),
        wan-36(36),
        wan-37(37),
        wan-38(38),
        wan-39(39),
        wan-40(40),
        wan-41(41),
        wan-42(42),
        wan-43(43),
        wan-44(44),
        wan-45(45),
        wan-46(46),
        wan-47(47),
        wan-48(48),
        wan-49(49),
        wan-50(50),
        wan-51(51),
        wan-52(52),
        wan-53(53),
        wan-54(54),
        wan-55(55),
        wan-56(56),
        wan-57(57),
        wan-58(58),
        wan-59(59),
        wan-60(60),
        wan-61(61),
        wan-62(62),
        wan-63(63),
        wan-64(64)
    }

    TimeslotID ::= INTEGER {
        ts-1(1),
        ts-2(2),
        ts-3(3),
        ts-4(4),
        ts-5(5),
        ts-6(6),
        ts-7(7),
        ts-8(8),
        ts-9(9),
        ts-10(10),
        ts-11(11),
        ts-12(12),
        ts-13(13),
        ts-14(14),
        ts-15(15),
        ts-16(16),
        ts-17(17),
        ts-18(18),
        ts-19(19),
        ts-20(20),
        ts-21(21),
        ts-22(22),
        ts-23(23),
        ts-24(24),
        ts-25(25),
        ts-26(26),
        ts-27(27),
        ts-28(28),
        ts-29(29),
        ts-30(30),
        ts-31(31),
        ts-32(32)
    }

    EthportIndex ::= INTEGER {
        eth-1(1),
        eth-2(2),
        eth-3(3),
        eth-4(4)
    }

    Tributaryport ::= INTEGER{
        trib-1(1),
        trib-2(2),
        trib-3(3),
        trib-4(4)
    }

    Alarmtributaryport ::= INTEGER {
        trib-1(1),
        trib-2(2),
        trib-3(3),
        trib-4(4),
        none  (5)
    }

    Bundleid ::= INTEGER {
        idle(1),
        bundle0(2),
        bundle1(3),
        bundle2(4),
        bundle3(5),
        bundle4(6),
        bundle5(7),
        bundle6(8),
        bundle7(9),
        bundle8(10),
        bundle9(11),
        bundle10(12),
        bundle11(13),
        bundle12(14),
        bundle13(15),
        bundle14(16),
        bundle15(17),
        bundle16(18),
        bundle17(19),
        bundle18(20),
        bundle19(21),
        bundle20(22),
        bundle21(23),
        bundle22(24),
        bundle23(25),
        bundle24(26),
        bundle25(27),
        bundle26(28),
        bundle27(29),
        bundle28(30),
        bundle29(31),
        bundle30(32),
        bundle31(33)
    }

    Bundleid2 ::= INTEGER {
        bundle0(1),
        bundle1(2),
        bundle2(3),
        bundle3(4),
        bundle4(5),
        bundle5(6),
        bundle6(7),
        bundle7(8),
        bundle8(9),
        bundle9(10),
        bundle10(11),
        bundle11(12),
        bundle12(13),
        bundle13(14),
        bundle14(15),
        bundle15(16),
        bundle16(17),
        bundle17(18),
        bundle18(19),
        bundle19(20),
        bundle20(21),
        bundle21(22),
        bundle22(23),
        bundle23(24),
        bundle24(25),
        bundle25(26),
        bundle26(27),
        bundle27(28),
        bundle28(29),
        bundle29(30),
        bundle30(31),
        bundle31(32)
    }

    AlarmSeverity ::= INTEGER {
        disable(1),
        major(2),
        critical(3),
        minor(4)
    }

    AlarmType ::= INTEGER {
        alarm-cut-off(0),
        slot-no-work(1),
        slot-start(2),
        slot-clock-loss(3),
        primary-start(4),
        redundant-loss(5),
        backup-switch(6),
        power-fail(7),
        redundant-chksum-error(8),
        fan-fail(9),
        map-switch(10),
        link-protection(11),
        redundant-insert(12),
        redundant-unsync(13),
        redundant-to-primary(14),
        card-type-mismatch(15),
        link-id-mismatch(16),
        power-consumption-alarm(17),
        ssm-clock-switch(18),
        management-alarm(19),
        inbandSwitchAlarm(29), --//RIKER2021 SilverCreek

        master-clock-loss(103),
        second-clock-loss(104),
        redundant-ext-clock-loss(105),

        qe1t1-1for1-switch(106),
        ds0-sncp-switch(111),
        dbra-protection-alarm(112),
        ring-id-fail-alarm(113),

        card-sn-mismatch-alarm(116),
        too-many-rtab-card(117),
        sntp-alarm(121),
        slotInactive(123),
        redundantLoss(124),
        redundantUnsync(125),
        cardTypeMismatch(126),       
        externalAlarm(131),
        
        pw-arp-alarm(140),
        pw-rx-los-alarm(141),
        pw-los-of-bundle-alarm(142),
        pw-underrun-alarm(143),
        pw-overrun-alarm(144),
        pw-lbit-alarm(145),
        pw-rbit-alarm(146),
        pw-synce-clock-alarm(147),
        pw-ip-conflict-alarm(148),
        ctrl-port-link-alarm(149),
		
		ctrl1-eth1-elec-link-alarm(160),
		ctrl1-eth2-elec-link-alarm(161),
		ctrl1-eth1-opt-link-alarm(162),
		ctrl1-eth2-opt-link-alarm(163),	
		ctrl-eth1-looping-alarm(164),
		ctrl-eth2-looping-alarm(165),
		ctrl2-eth1-elec-link-alarm(166),
		ctrl2-eth2-elec-link-alarm(167),
		ctrl2-eth1-opt-link-alarm(168),
		ctrl2-eth2-opt-link-alarm(169),

		
		
        e1-rai(201),
        e1-ais(202),
        e1-los(203),
        e1-lof(204),
        e1-bpv(205),
        e1-es (206),
        e1-uas(207),
        e1-css(208),
        ais-ins(209),
        e1-tcpa(210),

        t1-yel(221),
        t1-ais(222),
        t1-los(223),
        t1-lof(224),
        t1-bpv(225),
        t1-es (226),
        t1-uas(227),
        t1-css(228),
        t1-ais-ins(229),
        t1-tcpa(230),

        atm-los(261),
        atm-ais(262),
        atm-rdi(263),
        atm-loc(264),
        fr-lkd (265),

        gshdsl-htuc-los-loop1(301),
        gshdsl-htuc-los-loop2(302),
        gshdsl-htur-los-loop1(303),
        gshdsl-htur-los-loop2(304),
        gshdsl-htuc-e1t1-los-lof(305),
        gshdsl-htur-e1t1-los-lof(306),
        gshdsl-htuc-es-15m-loop1(307),
        gshdsl-htuc-es-15m-loop2(308),
        gshdsl-htur-es-15m-loop1(309),
        gshdsl-htur-es-15m-loop2(310),
        gshdsl-htuc-e1t1-es-15m(311),
        gshdsl-htur-e1t1-es-15m(312),
        gshdsl-htuc-ses-15m-loop1(313),
        gshdsl-htuc-ses-15m-loop2(314),
        gshdsl-htur-ses-15m-loop1(315),
        gshdsl-htur-ses-15m-loop2(316),
        gshdsl-htuc-e1t1-ses-15m(317),
        gshdsl-htur-e1t1-ses-15m(318),
        gshdsl-htuc-es-24h-loop1(319),
        gshdsl-htuc-es-24h-loop2(320),
        gshdsl-htur-es-24h-loop1(321),
        gshdsl-htur-es-24h-loop2(322),
        gshdsl-htuc-e1t1-es-24h(323),
        gshdsl-htur-e1t1-es-24h(324),
        gshdsl-htuc-ses-24h-loop1(325),
        gshdsl-htuc-ses-24h-loop2(326),
        gshdsl-htur-ses-24h-loop1(327),
        gshdsl-htur-ses-24h-loop2(328),
        gshdsl-htuc-e1t1-ses-24h(329),
        gshdsl-htur-e1t1-ses-24h(330),
        gshdsl-sealing-current(331),
        gshdsl-mclk-loss(332),
        gshdsl-htuc-dte-rts(333),
        gshdsl-htur-dte-rts(334),
        gshdsl-htuc-dte-extclk(335),
        gshdsl-htur-dte-extclk(336),
        gshdsl-dying-gasp-alarm(337),
        gshdsl-loop-attenu-alarm(338),
        gshdsl-low-noise-margin(339),
        gshdsl-htur-link-down(340),

        mdsl-master-los(361),
        mdsl-slave-los(362),
        mdsl-master-es-15m(363),
        mdsl-slave-es-15m(364),
        mdsl-master-ses-15m(365),
        mdsl-slave-ses-15m(366),
        mdsl-master-es-24h(367),
        mdsl-slave-es-24h(368),
        mdsl-master-ses-24h(369),
        mdsl-slave-ses-24h(370),
        mdsl-mclk-loss(371),
        mdsl-sealing-current(372),

        lan1-link-down(401),
        lan2-link-down(402),
        lan3-link-down(403),
        lan4-link-down(404),
        lan5-link-down(405),
        lan6-link-down(406),
        lan7-link-down(407),
        lan8-link-down(408),

        lso-los(441),
        lso-yel(442),
        lso-es (443),
        lso-ses(444),
        lso-uas(445),

        ocudp-los(461),
        ocudp-oos(462),
        ocudp-es (465),
        ocudp-ses(466),
        ocudp-uas(467),
        ocudp-loopbk(468),
        ocudp-test(469),
        ocudp-lof(470),

        dte-unsync(501),
        x50-unsync(502),
        dtu-unsync(503),

        dte-ext-clk-loss(511),
        dte-rts-loss(512),
        dte-remote-alarm(513),
        fpga-fail(514),

        rts-loss(521),
        lolc(522),
        loch(523),
        cre(524),
        term-conn(525),
        term-disconn(526),

        g703-los(541),

        fom-opt-local-lof (601),
        fom-opt-local-los (602),
        fom-opt-local-rai (603),
        fom-opt-remote-lof(604),
        fom-opt-remote-los(605),
        fom-opt-local-es  (606),
        fom-opt-local-ses (607),
        fom-opt-local-uas (608),
        fom-e1-local-lof  (617),
        fom-e1-remote-lof (618),
        fom-e1-local-es   (619),
        fom-e1-local-ses  (620),
        fom-e1-local-uas  (621),
        fom-e1-local-bpv  (622),

        dc-n1-p1(701),
        dc-n1-p2(702),
        dc-n1-p3(703),
        dc-n1-p4(704),
        dc-n2-p1(705),
        dc-n2-p2(706),
        dc-n2-p3(707),
        dc-n2-p4(708),

        arbaCardProtection(780),

        tdmoe-arp-lost(1001),
        tdmoe-rx-lost(1002),
        tdmoe-loss-of-bundle(1003),
        tdmoe-jit-buf-underrun(1004),
        tdmoe-jit-buf-overrun(1005),
        tdmoe-eth1-link-down(1006),
        tdmoe-eth2-link-down(1007),
        tdmoe-eth3-link-down(1008),
        tdmoe-eth4-link-down(1009),
        tdmoe-sfp1-tx-power-high(1010),
        tdmoe-sfp2-tx-power-high(1011),
        tdmoe-sfp1-tx-power-low(1012),
        tdmoe-sfp2-tx-power-low(1013),
        tdmoe-sfp1-rx-power-high(1014),
        tdmoe-sfp2-rx-power-high(1015),
        tdmoe-sfp1-rx-power-low(1016),
        tdmoe-sfp2-rx-power-low(1017),
        tdmoe-sfp1-tx-bias-high(1018),
        tdmoe-sfp2-tx-bias-high(1019),
        tdmoe-sfp1-tx-bias-low(1020),
        tdmoe-sfp2-tx-bias-low(1021),
        tdmoe-bp-pri-hb-lost(1022),
        tdmoe-bp-sec-hb-lost(1023),
        tdmoe-bp-bundle-sw-to-pri(1024),
        tdmoe-bp-bundle-sw-to-sec(1025),
        tdmoe-bundle-l-bit(1026),
        tdmoe-bundle-r-bit(1027),

        tta-input-trigger(1101),
        tta-output-trigger(1102),
        tta-round-trip-time-range(1103),
        tta-local-channel-lost(1104),
        tta-remote-channel-lost(1105),
        tta-IRIG-loss(1106),
        tta-test-trigger(1107),
        tta-test-Response(1108),

        cda6-los(1121),
        cda6-loo(1122),
        cda6-tx-clk-loss(1123),
        cda6-rx-clk-loss(1124),

        wan1LinkDown(1201),
        wan2LinkDown(1202),
        wan3LinkDown(1203),
        wan4LinkDown(1204),
        wan5LinkDown(1205),
        wan6LinkDown(1206),
        wan7LinkDown(1207),
        wan8LinkDown(1208),
        wan9LinkDown(1209),
        wan10LinkDown(1210),
        wan11LinkDown(1211),
        wan12LinkDown(1212),
        wan13LinkDown(1213),
        wan14LinkDown(1214),
        wan15LinkDown(1215),
        wan16LinkDown(1216),
        wan17LinkDown(1217),
        wan18LinkDown(1218),
        wan19LinkDown(1219),
        wan20LinkDown(1220),
        wan21LinkDown(1221),
        wan22LinkDown(1222),
        wan23LinkDown(1223),
        wan24LinkDown(1224),
        wan25LinkDown(1225),
        wan26LinkDown(1226),
        wan27LinkDown(1227),
        wan28LinkDown(1228),
        wan29LinkDown(1229),
        wan30LinkDown(1230),
        wan31LinkDown(1231),
        wan32LinkDown(1232),
        wan33LinkDown(1233),
        wan34LinkDown(1234),
        wan35LinkDown(1235),
        wan36LinkDown(1236),
        wan37LinkDown(1237),
        wan38LinkDown(1238),
        wan39LinkDown(1239),
        wan40LinkDown(1240),
        wan41LinkDown(1241),
        wan42LinkDown(1242),
        wan43LinkDown(1243),
        wan44LinkDown(1244),
        wan45LinkDown(1245),
        wan46LinkDown(1246),
        wan47LinkDown(1247),
        wan48LinkDown(1248),
        wan49LinkDown(1249),
        wan50LinkDown(1250),
        wan51LinkDown(1251),
        wan52LinkDown(1252),
        wan53LinkDown(1253),
        wan54LinkDown(1254),
        wan55LinkDown(1255),
        wan56LinkDown(1256),
        wan57LinkDown(1257),
        wan58LinkDown(1258),
        wan59LinkDown(1259),
        wan60LinkDown(1260),
        wan61LinkDown(1261),
        wan62LinkDown(1262),
        wan63LinkDown(1263),
        wan64LinkDown(1264),
        na(9999)      
    }

    GroupChannelID ::= INTEGER {
        ch1master(1),
        ch2master(2),
        ch3slave(3),
        ch4slave(4),
        ch5slave(5),
        ch6slave(6),
        ch7slave(7),
        ch8slave(8),
        ch9slave(9),
        ch10slave(10),
        ch11slave(11),
        ch12slave(12),
        ch13slave(13),
        ch14slave(14),
        ch15slave(15),
        ch16slave(16)
    }

    SignalingBit ::= INTEGER {
        s0000(0),
        s0001(1),
        s0010(2),
        s0011(3),
        s0100(4),
        s0101(5),
        s0110(6),
        s0111(7),
        s1000(8),
        s1001(9),
        s1010(10),
        s1011(11),
        s1100(12),
        s1101(13),
        s1110(14),
        s1111(15)
    }

    EMOffOn ::= INTEGER {
        off(1),
        on(2),
        null(3)
    }

    SubSlot ::= INTEGER {
				none(1)
		}

		SubCardType ::= INTEGER {
				none(1)
		}

		SubChannel ::= INTEGER {
				none(1)
		}

		AlmVC ::= INTEGER {
				none(1)
		}

		AlmLocation ::= INTEGER {
				local(1)
		}

		AlmGPInt1 ::= INTEGER {
				none(1)
		}

		AlmPairing ::= INTEGER {
				singleshot(1),
				paired(2)
		}
    Anyds1Slot ::= INTEGER {
        slot-A(1),
        slot-B(2),
        slot-C(3),
        slot-D(4),
        slot-1(5),
        slot-2(6),
        slot-3(7),
        slot-4(8),
        slot-5(9),
        slot-6(10),
        slot-7(11),
        slot-8(12),
        slot-9(13),
        slot-10(14),
        slot-11(15),
        slot-12(16),
        pw(18),		
        none(254)
    }
--======================================================================--
--======================================================================--

loopTelecom 	OBJECT IDENTIFIER ::= { enterprises 823 }
loop-AM3440-CCPB-A 	OBJECT IDENTIFIER ::= { loopTelecom 34441 }
    controller          OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 1 }
    e1-card             OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 2 }
    t1-card             OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 3 }
    dtu-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 4 }
    dte-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 5 }
    x50-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 6 }
    dtu6-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 7 }
    mdsl-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 11 }
    em-card             OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 12 }
    fxs-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 13 }
    rtr-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 14 }
    afr-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 15 }
    fxo-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 16 }
    mag-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 17 }
    qe1-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 21 }
    qt1-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 22 }
    g703-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 23 }
    mqe1-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 24 }
    mqt1-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 25 }
    gdsl2-card          OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 26 }
    gdsl4-card          OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 27 }
    dc-card             OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 28 }
    fom-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 29 }
    router-a-card       OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 30 }
    ls-optical-card     OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 31 }
    ocudp-card          OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 32 }
    oct-rt-b-card       OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 33 }
    ts-card             OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 34 }
    qfxo-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 35 }
    qfxs-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 36 }
    qem-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 37 }
    conference-card     OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 38 }
    tri-e1-card         OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 39 }
    triT1card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 40 }
    sdte-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 50 }
    tdmoe-card          OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 51 }
    oct-dbra-card       OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 52 }
    socudp-card         OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 53 }
    octDte-card         OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 54 }

    eca-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 56 }
    rs232a-card         OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 57 }
    abra-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 58 }
    tta-card            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 59 }
    m4teCard            OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 60 }
    dte6-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 61 }
    cda6-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 62 }
    qmag-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 63 }
    voip-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 64 }
    trirs232a-card      OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 65 }
    clka-card           OBJECT IDENTIFIER  ::= { loop-AM3440-CCPB-A 66 }
--======================================================================--

--======================================================================--
--======================================================================--
--  Controller MIB
--======================================================================--
--    clockSourceTable            OBJECT IDENTIFIER ::= { controller 1 }
--    alarmControlTable           OBJECT IDENTIFIER ::= { controller 2 }
--    commandControlTable         OBJECT IDENTIFIER ::= { controller 3 }
--    systemInformationTable      OBJECT IDENTIFIER ::= { controller 4 }
--    alarmQueueSummaryTable      OBJECT IDENTIFIER ::= { controller 5 }
--    ledStatus                   OBJECT IDENTIFIER ::= { controller 6 }
--    controllerLedTable          OBJECT IDENTIFIER ::= { ledStatus 1 }
--    sCardLedTable               OBJECT IDENTIFIER ::= { ledStatus 2 }
--    slotLedTable                OBJECT IDENTIFIER ::= { ledStatus 3 }
--    dualControllerTable         OBJECT IDENTIFIER ::= { controller 7 }
--    channelMap                  OBJECT IDENTIFIER ::= { controller 8 }
--    tsiMapNumber                OBJECT IDENTIFIER ::= { channelMap 1 }
--    currentMapTable             OBJECT IDENTIFIER ::= { channelMap 2 }
--    channelMapTable             OBJECT IDENTIFIER ::= { channelMap 3 }
--    setMapTable                 OBJECT IDENTIFIER ::= { channelMap 4 }
--    slotModelTable              OBJECT IDENTIFIER ::= { controller 9 }
--    dualPowerTable              OBJECT IDENTIFIER ::= { controller 10 }
--    linkbackup                  OBJECT IDENTIFIER ::= { controller 11 }
--    fileTransferTable           OBJECT IDENTIFIER ::= { controller 12 }
--    ctlBertTable                OBJECT IDENTIFIER ::= { controller 14 }
--    ssmClockSourceTable         OBJECT IDENTIFIER ::= { controller 15 }
--    portStateControl            OBJECT IDENTIFIER ::= { controller 16 }
--    pdhRingProtection           OBJECT IDENTIFIER ::= { controller 17 }
--    qe1PairProtection           OBJECT IDENTIFIER ::= { controller 18 }
--    ds0sncpProtection           OBJECT IDENTIFIER ::= { controller 19 }
--    CurrentActiveAlarmSummaryTable OBJECT IDENTIFIER ::= { controller 21 }
--    sntpInfoTable               OBJECT IDENTIFIER ::= { controller 22 }
--    sysNetworkManagement        OBJECT IDENTIFIER ::= { controller 23 }
--    remDevUpgradeTable          OBJECT IDENTIFIER ::= { controller 24 }
--    syslogSetupTable            OBJECT IDENTIFIER ::= { controller 25 }
--    inbandProtectionTable       OBJECT IDENTIFIER ::= { controller 26 }
--    radiusSetupTable            OBJECT IDENTIFIER ::= { controller 27 }
--    featureActivation           OBJECT IDENTIFIER ::= { controller 28 }
--    ssmConversionTable          OBJECT IDENTIFIER ::= { controller 29 }    NFS-15000325 add by Bryan
--    externalAlarmTable          OBJECT IDENTIFIER ::= { controller 30 }
--    ccbTimingSource             OBJECT IDENTIFIER ::= { controller 31 }
--    consoleTelnetUser           OBJECT IDENTIFIER ::= { controller 32 }
--    ethernetTable               OBJECT IDENTIFIER ::= { controller 33 }
--    pwCtrlSetupTable            OBJECT IDENTIFIER ::= { controller 34 }
--    pwCtrlStatusTable           OBJECT IDENTIFIER ::= { controller 35 }
--    anyds1Protection            OBJECT IDENTIFIER ::= { controller 36 }
--    uplinkInbandTable           OBJECT IDENTIFIER ::= { controller 37 }
--    advancedStatusTable         OBJECT IDENTIFIER ::= { controller 38 }
--======================================================================--


--
--  Clock Source Table
--

    clockSourceTable    OBJECT IDENTIFIER ::= { controller 1 }

        ccClockIndicator  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    second(2),
                    internal(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clock indicator"
            ::= { clockSourceTable 1 }

        ccMasterClock  OBJECT-TYPE
            SYNTAX  GenClockIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Master clock setting"
            ::= { clockSourceTable 2 }

        ccSecondClock  OBJECT-TYPE
            SYNTAX  GenClockIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Second clock setting"
            ::= { clockSourceTable 3 }

        ccClkRecoverMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    manual(1),
                    automatic(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clk Recover Mode"
            ::= { clockSourceTable 4 }

        ccClockStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    loss(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Clock status indicate current clock status."
            ::= { clockSourceTable 5 }

        ccExternalClockType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    t1(1),
                    e1(2),
                    e1-120ohm(3),
                    e1-75ohm(4),
                    ext-2048Khz-75ohm(5),
                    ext-2048Khz-120ohm(6),
                    na(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "External Clock Type."
            ::= { clockSourceTable 6 }

        ccDualExtClkProtect  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(0),
                    enable(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Dual External Clock Protection"
            ::= { clockSourceTable 7 }

        ccRedExtClkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    loss(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant External Clock Status"
            ::= { clockSourceTable 8 }

        ccClockHoldOver  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    not-support(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clock hold-over"
            ::= { clockSourceTable 11 }

        ccHoldOverState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    hold-over(2),
                    not-support(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Clock hold-over state"
            ::= { clockSourceTable 12 }

        ccFramePulsePeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Frame Pulse Period: Hz"
            ::= { clockSourceTable 13 }


--
--  Alarm Control Table
--

    alarmControlTable   OBJECT IDENTIFIER ::= { controller 2 }

        ccAlarmActive  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Controller Alarm Setup"
            ::= { alarmControlTable 1 }

        ccRelayActive  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    manual(2),
                    auto(3),
                    period(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Controller Relay Setup:
                manual - user press ACO or VT100 command to clear alarm;
                auto - auto clear alarm when alarm remove occur;
                period - auto clear after few second."
            ::= { alarmControlTable 2 }

        ccAlarmCutOff  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Cut Off Setup"
            ::= { alarmControlTable 3 }

        ccPortInactive  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for slot no work,
                redundant loss, redundant checksum error,
                and redundant unsync alarm"
            ::= { alarmControlTable 4 }

        ccPortStartUp  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for slot start, primary start,
                redundant insert, and redundant to primary alarm"
            ::= { alarmControlTable 5 }

        ccClockLossAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for clock loss alarm"
            ::= { alarmControlTable 6 }

        ccLinkSwitch  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for link back switch alarm"
            ::= { alarmControlTable 7 }

        ccMapSwitch  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for map switch alarm"
            ::= { alarmControlTable 8 }

        ccPowerAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for power fail and fan fail alarm"
            ::= { alarmControlTable 9 }

        ccTypeMismatch  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for card type mismatch and link id mismatch alarm"
            ::= { alarmControlTable 10 }

        ccDualCPUalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for dual-CPU alarm"
            ::= { alarmControlTable 11 }

        ccManagementAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm setup for management alarm"
            ::= { alarmControlTable 12 }
			
		ccRelayPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (1..86400)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm relay period."
            ::= { alarmControlTable 13 }
			
        ccSNMPLinkDownAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SNMP port link down alarm"
            ::= { alarmControlTable 14 }


--
--  Command Control Table
--

    commandControlTable OBJECT IDENTIFIER ::= { controller 3 }

        ccStoreConfiguration   OBJECT-TYPE
            SYNTAX  INTEGER {
                    store(1),
                    retrieve(2),
                    no(3),
                    in-storing(11),
                    in-retrieving(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Command:Store/Retrieve Controller Configuration"
            ::= { commandControlTable 1 }

        ccAlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Reset Alarm Queue"
            ::= { commandControlTable 2 }

        ccClearACO  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Clear ACO"
            ::= { commandControlTable 3 }

        ccReturnToDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Return to default"
            ::= { commandControlTable 4 }

        ccSystemReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    cold-restart-primary(1),
                    redundant-controller(2),
                    no(3),
                    warm-restart-primary(4),
                    reset-system(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Controller Reset"
            ::= { commandControlTable 5 }

        ccClockMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    ssm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Change System Clock Mode"
            ::= { commandControlTable 6 }

        ccIdleSignalling  OBJECT-TYPE
            SYNTAX  INTEGER {
                    b0001(1),
                    b0010(2),
                    b0011(3),
                    b0100(4),
                    b0101(5),
                    b0110(6),
                    b0111(7),
                    b1000(8),
                    b1001(9),
                    b1010(10),
                    b1011(11),
                    b1100(12),
                    b1101(13),
                    b1110(14),
                    b1111(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command:Change Idle Signalling Code"
            ::= { commandControlTable 7 }

        ccInitNewCard  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Initial New Card"
            ::= { commandControlTable 8 }

        ccUnregisterCard  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Un-register a card after un-plugged"
            ::= { commandControlTable 9 }

        ccPasswordChecking  OBJECT-TYPE
            SYNTAX  OCTET STRING (SIZE (0..28))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Change stetting of password checking for console/telnet"
            ::= { commandControlTable 21 }

        ccConsoleLockout  OBJECT-TYPE
            SYNTAX  OCTET STRING (SIZE (0..28))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Console lockout or unlock"
            ::= { commandControlTable 22 }

        ccForceAllLEDFlashing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    allFlashing(1),
                    allNormal(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Force all LED flashing on controller"
            ::= { commandControlTable 23 }

        ccForceAllLEDTime  OBJECT-TYPE
            SYNTAX  INTEGER (0..86400)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Timer (seconds) to force all LED flashing on controller
                0=forever"
            ::= { commandControlTable 24 }

        ccTelnetLockout  OBJECT-TYPE
            SYNTAX  OCTET STRING (SIZE (0..28))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Telnet lockout or unlock"
            ::= { commandControlTable 25 }


--
--  SYSTEM Information Table
--

    systemInformationTable  OBJECT IDENTIFIER ::= { controller 4 }

        ccSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Serial Number "
            ::= { systemInformationTable 1 }

        ccMainboardVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mainboard Version"
            ::= { systemInformationTable 2 }

        ccPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Firmware Version"
            ::= { systemInformationTable 3 }

        ccSystemDateTime  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "System Date and Time"
            ::= { systemInformationTable 4 }

        ccRedSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant board Serial Number "
            ::= { systemInformationTable 11 }

        ccRedBoardVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant board hardware Version"
            ::= { systemInformationTable 12 }

        ccRedFirmwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant board firmware Version"
            ::= { systemInformationTable 13 }

        ccConsoleStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
--                         password-check-enable(2),
                    console-lockout(3),
                    console-login(4),
                    telnet1-login(10),
                    telnet2-login(11),
                    telnet3-login(12),
                    telnet4-login(13),
                    telnet5-login(14),
                    ssh1-login(15),
                    ssh2-login(16),
                    ssh3-login(17),
                    ssh4-login(18),
                    ssh5-login(19)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Console/Telnet status"
            ::= { systemInformationTable 21 }

        ccSupportSmallVoiceCard  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Support small voice card in this chassis?"
            ::= { systemInformationTable 31 }

        ccControllerType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    cca(1),
                    ccb(2),
                    ccpa(3),
                    ccpswa(4),
                    ccpb(5),
                    ccpbdcs(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CCA, CCB, or CCPA"
            ::= { systemInformationTable 32 }

--        ccChassisType  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    general(1),
--                    chxL(2)
--                }
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                "chassis type"
--            ::= { systemInformationTable 33 }

        ccConsoleLockoutState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    locked(1),
                    unlocked(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Console lockout state"
            ::= { systemInformationTable 34 }

        ccTelnetLockoutState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    locked(1),
                    unlocked(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Telnet lockout state"
            ::= { systemInformationTable 35 }
--
--  Alarm Queue Summary Table
--

        alarmQueueSummaryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AlarmQueueSummaryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Display Alarm Queue."
            ::= { controller 5 }

        alarmQueueSummaryEntry  OBJECT-TYPE
            SYNTAX  AlarmQueueSummaryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "alarm queue entry"
            INDEX { ccAlarmQueueIndex }
            ::= { alarmQueueSummaryTable 1 }

            AlarmQueueSummaryEntry ::= SEQUENCE {
            ccAlarmQueueIndex           INTEGER,
            ccAlarmQueueString          DisplayString,
            ccAlarmType                 AlarmType,
            ccAlarmModel                AlarmModelType,
            ccAlarmSlot                 AlarmSlotIndex,
            ccAlarmPort                 AlarmPort,
            ccAlarmSeverity             AlarmSeverityDisp,
            ccAlarmLink                 AlarmLink,
            ccAlarmTimeStamp            DisplayString,
            ccAlarmSubrack              INTEGER,
            ccAlarmSubSlot              SubSlot,
            ccAlarmSubCardType          SubCardType,
            ccAlarmSubChannel           SubChannel,
            ccAlarmVC                   AlmVC,
            ccAlarmLocation             AlmLocation,
            ccAlarmPairing              AlmPairing,
            ccAlarmGPInt1               AlmGPInt1,
            ccAlarmGPStr1               DisplayString
        }

        ccAlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..10000)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { alarmQueueSummaryEntry 1 }

        ccAlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { alarmQueueSummaryEntry 2 }

        ccAlarmType  OBJECT-TYPE
            SYNTAX  AlarmType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type"
            ::= { alarmQueueSummaryEntry 3 }

        ccAlarmModel  OBJECT-TYPE
            SYNTAX  AlarmModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Model"
            ::= { alarmQueueSummaryEntry 4 }

        ccAlarmSlot  OBJECT-TYPE
            SYNTAX  AlarmSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Slot"
            ::= { alarmQueueSummaryEntry 5 }

        ccAlarmPort  OBJECT-TYPE
            SYNTAX  AlarmPort
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Port"
            ::= { alarmQueueSummaryEntry 6 }

        ccAlarmSeverity  OBJECT-TYPE
            SYNTAX  AlarmSeverityDisp
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Severity"
            ::= { alarmQueueSummaryEntry 7 }

        ccAlarmLink  OBJECT-TYPE
            SYNTAX  AlarmLink
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Link"
            ::= { alarmQueueSummaryEntry 8 }

         ccAlarmTimeStamp  OBJECT-TYPE
             SYNTAX  DisplayString(SIZE  (0..255))
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Time Stamp"
             ::= { alarmQueueSummaryEntry 9 } 

         ccAlarmSubrack  OBJECT-TYPE
             SYNTAX  INTEGER {
                        shelf1(1)
                     }
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Subrack"
             ::= { alarmQueueSummaryEntry 10 } 
                  
          ccAlarmSubSlot  OBJECT-TYPE
             SYNTAX  SubSlot
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Sub Slot"
             ::= { alarmQueueSummaryEntry 11 }
         
          ccAlarmSubCardType  OBJECT-TYPE
             SYNTAX  SubCardType
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Sub Card Type"
             ::= { alarmQueueSummaryEntry 12 }
           
          ccAlarmSubChannel  OBJECT-TYPE
             SYNTAX  SubChannel
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Sub-Channel Number"
             ::= { alarmQueueSummaryEntry 13 }
         
          ccAlarmVC  OBJECT-TYPE
             SYNTAX  AlmVC
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Virtual Channel Number"
             ::= { alarmQueueSummaryEntry 14 }

          ccAlarmLocation  OBJECT-TYPE
             SYNTAX  AlmLocation
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm Location"
             ::= { alarmQueueSummaryEntry 15 }
         
          ccAlarmPairing  OBJECT-TYPE
             SYNTAX  AlmPairing
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "To specify it is Single-shot or Paired alarm type"
             ::= { alarmQueueSummaryEntry 16 }
         
         ccAlarmGPInt1  OBJECT-TYPE
             SYNTAX  AlmGPInt1
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "General-Purpose Integer field #1"
             ::= { alarmQueueSummaryEntry 17 }
                      
          ccAlarmGPStr1  OBJECT-TYPE
             SYNTAX  DisplayString (SIZE (0..255))
             MAX-ACCESS  read-only
             STATUS  current
             DESCRIPTION
                "Alarm General Purpose field #1 for String type"
             ::= { alarmQueueSummaryEntry 18 }  



--
--  LED Status Table
--

    ledStatus           OBJECT IDENTIFIER ::= { controller 6 }

--
-- Controller LED Status Table
--

        controllerLedTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ControllerLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Controller LED status table."
            ::= { ledStatus 1 }

        controllerLedEntry  OBJECT-TYPE
            SYNTAX  ControllerLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Controller LED status entry"
            INDEX { ccLedIndex }
            ::= { controllerLedTable 1 }

            ControllerLedEntry ::= SEQUENCE {
            ccLedIndex                  INTEGER,
            ccLedName                   DisplayString,
            ccLedColor                  INTEGER
        }

        ccLedIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..6)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Controller Led Number Index"
            ::= { controllerLedEntry 1 }

        ccLedName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Controller Led Name"
            ::= { controllerLedEntry 2 }

        ccLedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    off(1),
                    red(2),
                    green(3),
                    yellow(4),
                    redFlash(5),
                    greenFlash(6),
                    yellowFlash(7),
                    greenFlashRed(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Controller Led Color"
            ::= { controllerLedEntry 3 }


--
-- Small Card LED Status Table
--

        sCardLedTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SCardLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Small Card LED status table."
            ::= { ledStatus 2 }

        sCardLedEntry  OBJECT-TYPE
            SYNTAX  SCardLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Small Card LED status entry"
            INDEX { sCardLedIndex }
            ::= { sCardLedTable 1 }

            SCardLedEntry ::= SEQUENCE {
            sCardLedIndex               INTEGER,
            sCardLedName                DisplayString,
            sCardLedColor               INTEGER
        }

        sCardLedIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Small Card Led Number Index"
            ::= { sCardLedEntry 1 }

        sCardLedName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Small Card Led Name"
            ::= { sCardLedEntry 2 }

        sCardLedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    off(1),
                    red(2),
                    green(3),
                    yellow(4),
                    redFlash(5),
                    greenFlash(6),
                    yellowFlash(7),
                    greenFlashRed(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Small Card Led Color"
            ::= { sCardLedEntry 3 }


--
-- Slot LED Status Table
--

        slotLedTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SlotLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Slot LED status table."
            ::= { ledStatus 3 }

        slotLedEntry  OBJECT-TYPE
            SYNTAX  SlotLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Slot LED status entry"
            INDEX { slotLedIndex ,
        portLedIndex }
            ::= { slotLedTable 1 }

            SlotLedEntry ::= SEQUENCE {
            slotLedIndex                GenSlotID,
            portLedIndex                INTEGER,
            portLedColor                INTEGER,
            portLedName                 INTEGER
        }

        slotLedIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot Led Number Index"
            ::= { slotLedEntry 1 }

        portLedIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..20)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port Led Number Index"
            ::= { slotLedEntry 2 }

        portLedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    off(1),
                    red(2),
                    green(3),
                    yellow(4),
                    redFlash(5),
                    greenFlash(6),
                    yellowFlash(7),
                    greenFlashRed(8),
                    green-and-yellow(9),
                    greenFlash-1-hz(10),
                    greenFlash-4-hz(11),
                    greenFlash-8-hz(12),
                    greenFlash-32-hz(13),
                    redFlash-1-hz(14),
                    redFlash-4-hz(15),
                    redFlash-8-hz(16),
                    redFlash-32-hz(17)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Led Color"
            ::= { slotLedEntry 3 }

        portLedName  OBJECT-TYPE
            SYNTAX  INTEGER {
                    port(0),
                    a-law(1),
                    u-law(2),
                    freq-12K-hz(3),
                    freq-16K-hz(4),
                    imp-600-ohm(5),
                    imp-900-ohm(6),
                    side-a(7),
                    side-b(8),
                    with-2-WIRE(9),
                    with-4-WIRE(10),
                    ring-across-l1-l2(11),
                    ring-across-l1-gnd(12),
                    type-1(13),
                    type-2(14),
                    type-3(15),
                    type-4(16),
                    type-5(17),
                    setByDip(18),
                    active(19),
                    type(20),
                    los(21),
                    sync(22),
                    --12MAG
                    ring-active(23),
                    test-active(24),
                    --VoIP
                    alm(25),
                    voip(26),
                    test(27),
                    wan(28),
                    lan1(29),
                    lan2(30),
                    --8UDTE
                    omnibus(31),
                    ts(32),
                    oversampling(33),
                    throughclock(34),
                    --ECA
                    act(40),
                    s64ms(41),
                    s128ms(42),
                    --TTA
                    alarm(50),
                    outputPort1(51),
                    outputPort2(52),
                    outputPort3(53),
                    outputPort4(54),
                    inputPort1(55),
                    inputPort2(56),
                    inputPort3(57),
                    inputPort4(58),
                    --CDA
                    controlling(60),
                    subordinate(61),

                    port1(101),
                    port2(102),
                    port3(103),
                    port4(104),
                    port5(105),
                    port6(106),
                    port7(107),
                    port8(108),
                    act1(121),
                    act2(122),
                    act3(123),
                    act4(124),
                    act5(125),
                    act6(126),
                    act7(127),
                    act8(128)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Led Name"
            ::= { slotLedEntry 4 }

--
-- Remote LED Status Table
--

        remoteLedTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RemoteLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote LED status table."
            ::= { ledStatus 4 }

        remoteLedEntry  OBJECT-TYPE
            SYNTAX  RemoteLedEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Slot LED status entry"
            INDEX { remoteSlotLedIndex ,
        remotePortLedIndex ,
        remoteNumLedIndex }
            ::= { remoteLedTable 1 }

            RemoteLedEntry ::= SEQUENCE {
            remoteSlotLedIndex          GenSlotID,
            remotePortLedIndex          INTEGER,
            remoteNumLedIndex           INTEGER,
            remotePortLedColor          INTEGER,
            remotePortLedName           DisplayString
        }

        remoteSlotLedIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Slot Led Number Index"
            ::= { remoteLedEntry 1 }

        remotePortLedIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..20)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port Led Number Index"
            ::= { remoteLedEntry 2 }

        remoteNumLedIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    led-1(1),
                    led-2(2),
                    led-3(3),
                    led-4(4),
                    led-5(5),
                    led-6(6),
                    led-7(7),
                    led-8(8),
                    led-9(9),
                    led-10(10),
                    led-11(11),
                    led-12(12),
                    led-13(13),
                    led-14(14),
                    led-15(15),
                    led-16(16),
                    led-17(17),
                    led-18(18),
                    led-19(19),
                    led-20(20)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port Led Number Index"
            ::= { remoteLedEntry 3 }

        remotePortLedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    xx(0),
                    off(1),
                    red(2),
                    green(3),
                    yellow(4),
                    redFlash(5),
                    greenFlash(6),
                    yellowFlash(7),
                    greenFlashRed(8),
                    green-and-yellow(9),
                    greenFlash-1-hz(10),
                    greenFlash-4-hz(11),
                    greenFlash-8-hz(12),
                    greenFlash-32-hz(13),
                    redFlash-1-hz(14),
                    redFlash-4-hz(15),
                    redFlash-8-hz(16),
                    redFlash-32-hz(17)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Led Color"
            ::= { remoteLedEntry 4 }

        remotePortLedName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Led Name"
            ::= { remoteLedEntry 5 }


--
--  Dual Controller Table
--

    dualControllerTable OBJECT IDENTIFIER ::= { controller 7 }

        ccRedundantHWexist  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notExist(1),
                    exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant Controller Hardware Existence"
            ::= { dualControllerTable 1 }

        ccRedundantSWconnect  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notExist(1),
                    exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant Controller Software Connection"
            ::= { dualControllerTable 2 }

        ccRedundantSync   OBJECT-TYPE
            SYNTAX  INTEGER {
                    notSync(1),
                    sync(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Redundant Controller Synchronized with Primary"
            ::= { dualControllerTable 3 }

        ccSlotPrimary     OBJECT-TYPE
            SYNTAX  INTEGER {
                    right-slot(1),
                    left-slot(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "the Slot which Primary Controller Occupied"
            ::= { dualControllerTable 4 }


--
--  Channel Map Group
--

    channelMap          OBJECT IDENTIFIER ::= { controller 8 }

--
--  Select TSI map
--
        tsiMapNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Index for the TSI Map Used."
            ::= { channelMap 1 }

--
--  Current Map
--
        currentMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF CurrentMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "A list of Current TSI Map."
            ::= { channelMap 2 }

        currentMapEntry  OBJECT-TYPE
            SYNTAX  CurrentMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An Entry for Current TSI Map."
            INDEX { currentChannelMapIndex ,
        currentPortIndex ,
        currentTimeSlotIndex }
            ::= { currentMapTable 1 }

            CurrentMapEntry ::= SEQUENCE  {
            currentChannelMapIndex      MapSlotIndex,
            currentPortIndex            GenPortID,
            currentTimeSlotIndex        INTEGER,
            currentChannelType          INTEGER,
            currentMapToSlot            MapSlotIndex,
            currentMapToPort            MapPortID,
            currentMapToTS              INTEGER,
            currentMapCircuitInfo       DisplayString
        }

        currentChannelMapIndex  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { currentMapEntry 1 }

        currentPortIndex  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select port 1~10,
                total 10 ports."
            ::= { currentMapEntry 2 }

        currentTimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { currentMapEntry 3 }

        currentChannelType  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    signal(3),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot type."
            ::= { currentMapEntry 4 }

        currentMapToSlot  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port number."
            ::= { currentMapEntry 5 }

        currentMapToPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port number."
            ::= { currentMapEntry 6 }

        currentMapToTS  OBJECT-TYPE
            SYNTAX  INTEGER  {
                    ts00(0),
                    ts01(1),
                    ts02(2),
                    ts03(3),
                    ts04(4),
                    ts05(5),
                    ts06(6),
                    ts07(7),
                    ts08(8),
                    ts09(9),
                    ts10(10),
                    ts11(11),
                    ts12(12),
                    ts13(13),
                    ts14(14),
                    ts15(15),
                    ts16(16),
                    ts17(17),
                    ts18(18),
                    ts19(19),
                    ts20(20),
                    ts21(21),
                    ts22(22),
                    ts23(23),
                    ts24(24),
                    ts25(25),
                    ts26(26),
                    ts27(27),
                    ts28(28),
                    ts29(29),
                    ts30(30),
                    ts31(31),
                    ts32(32),
                    idle(33)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port time slot."
            ::= { currentMapEntry 7 }

        currentMapCircuitInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Circuit Info"
            ::= { currentMapEntry 8 }


--
--  Channel Map
--
        channelMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Channel Mapping for TSI."
            ::= { channelMap 3 }

        channelMapEntry  OBJECT-TYPE
            SYNTAX  ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Channel Mapping for TSI."
            INDEX { ccTsiMapIndex ,
        ccChannelMapIndex ,
        ccPortIndex ,
        ccTimeSlotIndex }
            ::= { channelMapTable 1 }

            ChannelMapEntry ::= SEQUENCE  {
            ccTsiMapIndex               INTEGER,
            ccChannelMapIndex           MapSlotIndex,
            ccPortIndex                 MapPortID,
            ccTimeSlotIndex             INTEGER,
            ccChannelType               INTEGER,
            ccMapToSlot                 MapSlotIndex,
            ccMapToPort                 MapPortID,
            ccMapToTS                   INTEGER,
            ccCircuitInfo               DisplayString
        }

        ccTsiMapIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TSI Map index."
            ::= { channelMapEntry 1 }

        ccChannelMapIndex  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { channelMapEntry 2 }

        ccPortIndex  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select port 1~10,
                total 10 ports."
            ::= { channelMapEntry 3 }

        ccTimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { channelMapEntry 4 }

        ccChannelType  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    signal(3),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot type."
            ::= { channelMapEntry 5 }

        ccMapToSlot  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port number."
            ::= { channelMapEntry 6 }

        ccMapToPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port number."
            ::= { channelMapEntry 7 }

        ccMapToTS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ts00(0),
                    ts01(1),
                    ts02(2),
                    ts03(3),
                    ts04(4),
                    ts05(5),
                    ts06(6),
                    ts07(7),
                    ts08(8),
                    ts09(9),
                    ts10(10),
                    ts11(11),
                    ts12(12),
                    ts13(13),
                    ts14(14),
                    ts15(15),
                    ts16(16),
                    ts17(17),
                    ts18(18),
                    ts19(19),
                    ts20(20),
                    ts21(21),
                    ts22(22),
                    ts23(23),
                    ts24(24),
                    ts25(25),
                    ts26(26),
                    ts27(27),
                    ts28(28),
                    ts29(29),
                    ts30(30),
                    ts31(31),
                    ts32(32),
                    none(254),
                    idle(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map to other port time slot."
            ::= { channelMapEntry 8 }

        ccCircuitInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Circuit Info"
            ::= { channelMapEntry 9 }


--
--  Set Channel Map
--
    setMapTable         OBJECT IDENTIFIER ::= { channelMap 4 }

        setTsiMap  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "select TSI Map index."
            ::= { setMapTable 1 }

        setTargetSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { setMapTable 2 }

        setTargetPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Target Port."
            ::= { setMapTable 3 }

        setTargetStartTimeSlot  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Target start time slot index."
            ::= { setMapTable 4 }

        setChannelNumber  OBJECT-TYPE
            SYNTAX  INTEGER  (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select map channel number."
            ::= { setMapTable 5 }

        setChannelType  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select time slot type."
            ::= { setMapTable 6 }

        setSourceSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map to Source slot number."
            ::= { setMapTable 7 }

        setSourcePort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map to Source port number."
            ::= { setMapTable 8 }

        setSourceStartTimeSlot  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map to Source port time slot."
            ::= { setMapTable 9 }

        setCommand  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(0), --//RIKER2021 SilverCreek
                    clearTarget(1),
                    clearAllAndSet(2),
                    setOnly(3),
                    forceSet(4),
                    clearStatus(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set command:
                1: clear Target port, start from time slot x;
                2: clear (all mapped channel) before set;
                3: set olny, if channel not cleared, response error.
                4: force clear target and source, then set."
            ::= { setMapTable 10 }

        setMapResult  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    na(1),
                    ok(2),
                    err-08(8),
                    err-09(9),
                    err-10(10),
                    err-11(11),
                    err-12(12),
                    err-13(13),
                    err-14(14),
                    err-15(15),
                    err-16(16),
                    err-17(17),
                    err-18(18),
                    err-19(19),
                    err-20(20),
                    err-21(21),
                    err-22(22),
                    err-23(23),
                    err-24(24),
                    err-25(25),
                    err-26(26),
                    err-27(27),
                    err-28(28),
                    err-29(29),
                    err-30(30),
                    err-31(31),
                    err-32(32),
                    err-33(33),
                    err-34(34),
                    err-35(35),
                    err-36(36),
                    err-37(37)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Set result:
                8  Somebody is in programming!
                9  No channel is assigned to DTE port!
                10  Incorrect total selected channels!
                11  Time slot is not IDLE!
                12  Time slot (TARGET slot/port) is out of range!
                13  Time slot (SOURCE slot/port) is out of range!
                14  TARGET slot/port is in CAS mode, Time slot 16 is for signaling!
                15  SOURCE slot/port is in CAS mode, Time slot 16 is for signaling!
                16  Time slot (TARGET slot/port) conflict!
                17  Time slot (TARGET slot/port) is out of range!
                18  Time slot (SOURCE. slot/port) is out of range!
                19  Port N must be equal Time slot N(TARGET slot)!
                20  Port N must be equal Time slot N(SOURCE slot)!
                21  Only 1 time slot can be mapped to IN-BAND!
                22  DTE only can map to 1 port!
                23  Slot D Port 4 TS1 reserved for In-Band Channel!
                24  SOURCE slot/port is unframed mode, TARGET slot/port must have full time slot!
                25  TARGET slot/port is unframed mode, SOURCE slot/port must have full time slot!
                26  TARGET TS should be same as TARGET port number!
                27  SOURCE TS should be same as SOURCE port number!
                28  TARGET port not exist!
                29  SOURCE port not exist!
                30  Slot 12 Port 4 TS1 reserved for In-Band Channel!
                31  Slot 12 Port 4 can not map 32 TS!
                32  Map can not set on 1+1 protection slave side!
                33  SOURCE slot/port is unframed mode, can not map to ECA card.
                34  TARGET slot/port is unframed mode, can not map to ECA card.
                35  SOURCE slot/port is unframed mode, can not map to ABRA card.
                36  TARGET slot/port is unframed mode, can not map to ABRA card.
                37  ABRA card protection, secondary card can not setup map.
                ..  "
            ::= { setMapTable 11 }

        setXCtype  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    byTSIfunction(1),
                    bidirection(2),
                    multicast(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set TSI function as 1:1 bidirection or 1:N multicast."
            ::= { setMapTable 12 }

        autoActivate  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Auto activate if using MAP match current map #."
            ::= { setMapTable 13 }

        setCircuitInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Circuit Info"
            ::= { setMapTable 14 }


--
--  clear TSI map
--
    clearMapTable       OBJECT IDENTIFIER ::= { channelMap 5 }

        clearMapNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear for the TSI Map."
            ::= { clearMapTable 5 }

--
--  Copy TSI map
--
    copyMapTable        OBJECT IDENTIFIER ::= { channelMap 6 }

        fromMapNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Copy  TSI Map from the Map"
            ::= { copyMapTable 1 }

        toMapNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Copy  TSI Map to the Map"
            ::= { copyMapTable 2 }


--
--  TSI function
--
        setTSIfunction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bidirection(1),
                    multicast(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set TSI function as 1:1 bidirection or 1:N multicast."
            ::= { channelMap 7 }


--
--  TSI map auto-switch
--
        switchMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SwitchMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Auto TSI map switching."
            ::= { channelMap 8 }

        switchMapEntry  OBJECT-TYPE
            SYNTAX  SwitchMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Auto TSI map switching."
            INDEX { ccSwMapIndex }
            ::= { switchMapTable 1 }

            SwitchMapEntry ::= SEQUENCE  {
            ccSwMapIndex                INTEGER,
            ccSwMapEnable               INTEGER,
            ccSwMapHour                 INTEGER,
            ccSwMapMinute               INTEGER
        }

        ccSwMapIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TSI Map index."
            ::= { switchMapEntry 1 }

        ccSwMapEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "disable or enable this map switching"
            ::= { switchMapEntry 2 }

        ccSwMapHour  OBJECT-TYPE
            SYNTAX  INTEGER (0..23)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "hour for map switching"
            ::= { switchMapEntry 3 }

        ccSwMapMinute  OBJECT-TYPE
            SYNTAX  INTEGER (0..59)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "minute for map switching"
            ::= { switchMapEntry 4 }

--
--  Batch command for TSI map
--

    batchCommand  OBJECT IDENTIFIER ::= { channelMap 9 }

        batchSet  OBJECT-TYPE
            SYNTAX  OCTET STRING
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "batch set command"
            ::= { batchCommand 1 }

        batchResponse  OBJECT-TYPE
            SYNTAX  OCTET STRING
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "batch response"
            ::= { batchCommand 2 }


--  map display mode

        mapDisplayMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    from0(1),
                    from1(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "For INMS only"
            ::= { channelMap 11 }


--
--  current map hex table
--

        currentMapHexTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF CurrentMapHexEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "A list of Current TSI Map by Hex."
            ::= { channelMap 12 }

        currentMapHexEntry  OBJECT-TYPE
            SYNTAX  CurrentMapHexEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An Entry for Current TSI Map."
            INDEX { currentMapHexSlot , currentMapHexPort }
            ::= { currentMapHexTable 1 }

            CurrentMapHexEntry ::= SEQUENCE  {
            currentMapHexSlot      MapSlotIndex,
            currentMapHexPort      GenPortID,
            currentMapHexData      OCTET STRING
        }

        currentMapHexSlot  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { currentMapHexEntry 1 }

        currentMapHexPort  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~N"
            ::= { currentMapHexEntry 2 }

        currentMapHexData  OBJECT-TYPE
            SYNTAX  OCTET STRING
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current map data in Hex"
            ::= { currentMapHexEntry 3 }

--
--  Channel Map Hex Table
--
        channelMapHexTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ChannelMapHexEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Channel Mapping for TSI in Hex."
            ::= { channelMap 13 }

        channelMapHexEntry  OBJECT-TYPE
            SYNTAX  ChannelMapHexEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Channel Mapping for TSI."
            INDEX { ccMapHexIndex ,
        ccMapHexSlot ,
        ccMapHexPort }
            ::= { channelMapHexTable 1 }

            ChannelMapHexEntry ::= SEQUENCE  {
            ccMapHexIndex          INTEGER,
            ccMapHexSlot           MapSlotIndex,
            ccMapHexPort           MapPortID,
            ccMapHexData           OCTET STRING
        }

        ccMapHexIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TSI Map index."
            ::= { channelMapHexEntry 1 }

        ccMapHexSlot  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { channelMapHexEntry 2 }

        ccMapHexPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~N"
            ::= { channelMapHexEntry 3 }

        ccMapHexData  OBJECT-TYPE
            SYNTAX  OCTET STRING
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Map data in Hex"
            ::= { channelMapHexEntry 4 }


--
--  Signaling/Data Display Table
--
        signalingDataDispTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SignalingDataDispEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Signaling/data display table."
            ::= { channelMap 14 }

        signalingDataDispEntry  OBJECT-TYPE
            SYNTAX  SignalingDataDispEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Signaling/data display entry."
            INDEX { sigDataDispSlot , sigDataDispPort , sigDataDispTS }
            ::= { signalingDataDispTable 1 }

            SignalingDataDispEntry ::= SEQUENCE  {
            sigDataDispSlot      MapSlotIndex,
            sigDataDispPort      GenPortID,
            sigDataDispTS        INTEGER,
            sigDataDispType      INTEGER,
            currentRxSignaling   INTEGER
        }

        sigDataDispSlot  OBJECT-TYPE
            SYNTAX  MapSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { signalingDataDispEntry 1 }

        sigDataDispPort  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { signalingDataDispEntry 2 }

        sigDataDispTS  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { signalingDataDispEntry 3 }

        sigDataDispType  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    signal(3),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot type."
            ::= { signalingDataDispEntry 4 }

        currentRxSignaling  OBJECT-TYPE
            SYNTAX  INTEGER  {
                    s0000(0),
                    s0001(1),
                    s0010(2),
                    s0011(3),
                    s0100(4),
                    s0101(5),
                    s0110(6),
                    s0111(7),
                    s1000(8),
                    s1001(9),
                    s1010(10),
                    s1011(11),
                    s1100(12),
                    s1101(13),
                    s1110(14),
                    s1111(15),
                    na(16)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received signaling."
            ::= { signalingDataDispEntry 5 }


--
--  Signaling Convertion Setup Table
--
        sigConvertSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SigConvertSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Signaling convertion setup table."
            ::= { channelMap 15 }

        sigConvertSetupEntry  OBJECT-TYPE
            SYNTAX  SigConvertSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Signaling convertion setup entry."
            INDEX { sigConvertTableIndex }
            ::= { sigConvertSetupTable 1 }

            SigConvertSetupEntry ::= SEQUENCE  {
            sigConvertTableIndex    INTEGER,
            sigConvertTableName     DisplayString,
            sigc0000                SignalingBit,
            sigc0001                SignalingBit,
            sigc0010                SignalingBit,
            sigc0011                SignalingBit,
            sigc0100                SignalingBit,
            sigc0101                SignalingBit,
            sigc0110                SignalingBit,
            sigc0111                SignalingBit,
            sigc1000                SignalingBit,
            sigc1001                SignalingBit,
            sigc1010                SignalingBit,
            sigc1011                SignalingBit,
            sigc1100                SignalingBit,
            sigc1101                SignalingBit,
            sigc1110                SignalingBit,
            sigc1111                SignalingBit
        }

        sigConvertTableIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Table Index."
            ::= { sigConvertSetupEntry 1 }

        sigConvertTableName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..15) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Table Namee"
            ::= { sigConvertSetupEntry 2 }

        sigc0000  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 3 }

        sigc0001  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 4 }

        sigc0010  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 5 }

        sigc0011  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 6 }

        sigc0100  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 7 }

        sigc0101  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 8 }

        sigc0110  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 9 }

        sigc0111  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 10 }

        sigc1000  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 11 }

        sigc1001  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 12 }

        sigc1010  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 13 }

        sigc1011  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 14 }

        sigc1100  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 15 }

        sigc1101  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 16 }

        sigc1110  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 17 }

        sigc1111  OBJECT-TYPE
            SYNTAX  SignalingBit
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Signaling."
            ::= { sigConvertSetupEntry 18 }


--==============================================================


--
--  tsi Data Cas In Out Table
--
    tsiDataCasInOutTable  OBJECT IDENTIFIER ::= { channelMap 16 }
	
	tsiDataCasInOutcommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    indata(1),
                    incas(2),
                    outdata(3),
                    outcas(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tsi Data Cas In Out command."
            ::= {tsiDataCasInOutTable 1 }

        tsiDataCasInOutset  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tsi Data Cas In Out set."
            ::= {tsiDataCasInOutTable 2 }
			
		tsiDataCasInOutget  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tsi Data Cas In Out set."
            ::= {tsiDataCasInOutTable 3 }


--
--  slot Model Table
--
        slotModelTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SlotModelEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Display slot model type"
            ::= { controller 9 }

        slotModelEntry  OBJECT-TYPE
            SYNTAX  SlotModelEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Slot model entry"
            INDEX { ccSlotIndex }
            ::= { slotModelTable 1 }

            SlotModelEntry ::= SEQUENCE {
            ccSlotIndex                 GenSlotID,
            ccModelType                 GenModelType,
            ccComment                   DisplayString,
            ccCardMode                  DisplayString,
            ccRegisteredModel           GenModelType,
            ccCardSerial                INTEGER,
            ccCardState                 INTEGER
        }

        ccSlotIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { slotModelEntry 1 }

        ccModelType  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Model type of current plug-in card"
            ::= { slotModelEntry 2 }

        ccComment  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Comment of current plug-in card"
            ::= { slotModelEntry 3 }

        ccCardMode  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Card mode of current plug-in card"
            ::= { slotModelEntry 4 }

        ccRegisteredModel  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Registered model in this slot"
            ::= { slotModelEntry 7 }

        ccCardSerial  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Card serial number"
            ::= { slotModelEntry 8 }

        ccCardState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    empty(1),
                    initializing(2),
                    working(3),
                    unplugged(4),
                    failed(5),
                    unknownCard(6),
                    brandMismatch(11),
                    systemMismatch(12),
                    cardTypeMismatch(13)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Card state"
            ::= { slotModelEntry 9 }

--
--  Dual Power Table
--

    dualPowerTable      OBJECT IDENTIFIER ::= { controller 10 }

        power1AC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Power1 Hardware Existence"
            ::= { dualPowerTable 1 }

        power2AC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Power2 Hardware Existence"
            ::= { dualPowerTable 2 }

        power1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    dc-100w(2),
                    dc-150w(3),
                    fail(4),
                    ac(5),
                    none(6),
                    dc-125v(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Power1 Status"
            ::= { dualPowerTable 3 }

        power2Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    dc-100w(2),
                    dc-150w(3),
                    fail(4),
                    ac(5),
                    none(6),
                    dc-125v(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Power2 Status"
            ::= { dualPowerTable 4 }

        powerConsumption  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total (Maximum) power consumption (Estimation in Watt)"
            ::= { dualPowerTable 5 }

        fan1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    good(1),
                    fail-or-not-exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Fan 1 Status"
            ::= { dualPowerTable 6 }

        fan2Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    good(1),
                    fail-or-not-exist(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Fan 1 Status"
            ::= { dualPowerTable 7 }

        power1Setup   OBJECT-TYPE
            SYNTAX  INTEGER {
                    pwr-48V-DC(1),
                    pwr-125V-DC(2),
                    pwr-AC(3),
                    pwr-24V-DC(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Power card 1 Setup"
            ::= { dualPowerTable 8 }

        power2Setup   OBJECT-TYPE
            SYNTAX  INTEGER {
                    pwr-48V-DC(1),
                    pwr-125V-DC(2),
                    pwr-AC(3),
                    pwr-24V-DC(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Power card 2 Setup"
            ::= { dualPowerTable 9 }

        c1Temperature   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CTRL 1 (left) Temperature"
            ::= { dualPowerTable 11 }

        c1RelativeHumidity   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CTRL 1 (left) Relative Humidity"
            ::= { dualPowerTable 12 }

        c2Temperature   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CTRL 2 (right) Temperature"
            ::= { dualPowerTable 13 }

        c2RelativeHumidity   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CTRL 2 (right) Relative Humidity"
            ::= { dualPowerTable 14 }
        
        dpwmInputVoltage   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM input volatge"
            ::= { dualPowerTable 15 }

        dpwmTemperature   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM Temperature"
            ::= { dualPowerTable 16 }    
            
        dpwmCH0Voltage   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch0 volatge"
            ::= { dualPowerTable 17 }    

        dpwmCH1Voltage   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch1 volatge"
            ::= { dualPowerTable 18 }     

        dpwmCH2Voltage   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch2 volatge"
            ::= { dualPowerTable 19 }    

        dpwmCH3Voltage   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch3 volatge"
            ::= { dualPowerTable 20 }                                                 

        dpwmCH0Current   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch0 Current"
            ::= { dualPowerTable 21 }    

        dpwmCH1Current   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch1 Current"
            ::= { dualPowerTable 22 }     

        dpwmCH2Current   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch2 Current"
            ::= { dualPowerTable 23 }    

        dpwmCH3Current   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DPWM ch3 Current"
            ::= { dualPowerTable 24 }
            
            
--
--  LINK BACKUP
--

    linkbackup          OBJECT IDENTIFIER ::= { controller 11 }

--
--  Link Backup Table
--

    backupTable         OBJECT IDENTIFIER ::= { linkbackup 1 }

        ccBackupfun  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on1for1(2),
                    on1plus1(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable Backup Function"
            ::= { backupTable 1 }

        ccBackupMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup Function Mode"
            ::= { backupTable 2 }

        ccLinkAbackup  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup Link Of Link A"
            ::= { backupTable 3 }

        ccLinkBbackup  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup Link Of Link B"
            ::= { backupTable 4 }

        ccLinkCbackup  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup Link Of Link C"
            ::= { backupTable 5 }

        ccLinkDbackup  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup Link Of Link D"
            ::= { backupTable 6 }

        ccLinkForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    link-A(1),
                    link-B(2),
                    link-C(3),
                    link-D(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Force switch for non-revertive mode"
            ::= { backupTable 7 }



--
--  backup status Table
--
        backupStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF BackupStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Display slot model type"
            ::= { linkbackup 2 }

        backupStatusEntry  OBJECT-TYPE
            SYNTAX  BackupStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "link status entry"
            INDEX { bkIndex }
            ::= { backupStatusTable 1 }

            BackupStatusEntry ::= SEQUENCE {
            bkIndex                     BackupLink,
            bkModelType                 INTEGER,
            bkBackupLink                BackupLink,
            bkBackupFun                 INTEGER,
            bkStatus                    INTEGER
        }

        bkIndex  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { backupStatusEntry 1 }

        bkModelType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fe1(1),
                    ft1(2),
                    fom(30),
                    none(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port model type"
            ::= { backupStatusEntry 2 }

        bkBackupLink  OBJECT-TYPE
            SYNTAX  BackupLink
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { backupStatusEntry 3 }


        bkBackupFun  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "link backup function status"
            ::= { backupStatusEntry 4 }

        bkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    working(2),
                    stand-by(3),
                    normal(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "link backup function status"
            ::= { backupStatusEntry 5 }


--
--  New Backup Table
--
        newBackupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF NewBackupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "New backup table"
            ::= { linkbackup 3 }

        newBackupEntry  OBJECT-TYPE
            SYNTAX  NewBackupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "New backup entry"
            INDEX { newBackupIndex }
            ::= { newBackupTable 1 }

            NewBackupEntry ::= SEQUENCE {
            newBackupIndex              NewBackupLink,
            newBkModelType              INTEGER,
            newBackupLink               NewBackupLink,
            newBackupForce              INTEGER,
            newBkBackupFun              INTEGER,
            newBkStatus                 INTEGER
        }

        newBackupIndex  OBJECT-TYPE
            SYNTAX  NewBackupLink
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Backup Index"
            ::= { newBackupEntry 1 }

        newBkModelType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fe1(1),
                    ft1(2),
                    fom(30),
                    none(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "slot model type"
            ::= { newBackupEntry 2 }

        newBackupLink  OBJECT-TYPE
            SYNTAX  NewBackupLink
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "backup link"
            ::= { newBackupEntry 3 }


        newBackupForce  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    force-switch(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "force switch"
            ::= { newBackupEntry 4 }

        newBkBackupFun  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "link backup function status"
            ::= { newBackupEntry 5 }

        newBkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    working(2),
                    stand-by(3),
                    normal(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "link backup function status"
            ::= { newBackupEntry 6 }


--
--  upload/download file Table
--

    fileTransferTable       OBJECT IDENTIFIER ::= { controller 12 }

        tftpServerIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address of tftp server"
            ::= { fileTransferTable 1 }

        tftpFileName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "File name for upload/download"
            ::= { fileTransferTable 2 }

        fileTransferType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear-status(1),
                    copy-controller-firmware-to-redundant(2),
                    download-controller-firmware(11),
                    download-system-configugration(13),
--                        download-bootup-code(14),
--                        download-fae-package(15),
                    download-RTAB-config(16),

--                    upload-controller-firmware1(21),
--                    upload-controller-firmware2(22),
                    upload-system-configugration(23),
                    upload-fae-info(25),
                    upload-RTAB-startup-config(26),
                    upload-RTAB-working-config(27),

--                        download-RTR-card(69),
--                        download-TS-card(70),
                    download-ATM-card(71),
                    download-QE1-card(81),
                    download-MQE1-card(82),
                    download-GSHDSL-card(83),
                    download-HDSLA-card(84),
                    download-DTEA-card(85),
                    download-DTU-card(86),
                    download-X50-card(87),
                    download-8X50-card(88),
                    download-OMNIBUS-card(89),
                    download-3E1-card(90),
                    download-TDMoE-card(91),
                    download-8DBRA-card(94),
                    download-8UDTE-card(95),
                    download-RTA-firmware(96),
                    download-RTB-firmware(100),
                    download-FE1-firmware(102),
                    download-FT1-firmware(103),
                    download-M4TE-firmware(104),
                    download-QFXO-firmware(111),
                    download-QFXO-FPGA(112),
                    download-FXS-firmware(113),
                    download-FXO-firmware(114),
                    download-MAG-firmware(115),
                    download-EM-firmware(116),
                    download-QFXS-FPGA(117),
                    download-QFXS-firmware(118),
                    download-FXO-FPGA(119),
                    download-EM-FPGA(121),
                    download-MAG-FPGA(123),
                    download-ECA-card(129),
                    download-RS232A-card(130),
                    download-ABRA-card(131),
                    download-TTA-firmware(132),
                    download-TTA-FPGA(133),
                    download-SDTE-firmware(134),
                    download-SDTE-FPGA(135),
                    download-6UDTEA-card(138),
                    download-6CDA-firmware(139),
                    download-6CDA-FPGA(140),
                    download-QMAG-firmware(142),
                    download-QMAG-FPGA(143),
                    download-3RS232-card(145),
                    na(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Upload/download type"
            ::= { fileTransferTable 3 }

        uploadDownloadCard  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slot-A(1),
                    slot-B(2),
                    slot-C(3),
                    slot-D(4),
                    slot-1(5),
                    slot-2(6),
                    slot-3(7),
                    slot-4(8),
                    slot-5(9),
                    slot-6(10),
                    slot-7(11),
                    slot-8(12),
                    slot-9(13),
                    slot-10(14),
                    slot-11(15),
                    slot-12(16),
                    controller(32),
                    na(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Upload/download card"
            ::= { fileTransferTable 4 }

        transferCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    start(2),
                    downloadFWandEnableUpgradeProtection(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upload/download command"
            ::= { fileTransferTable 5 }

        transferPercentage  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Upload/download percentage"
            ::= { fileTransferTable 6 }

        transferErrorCode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    ok(1),
                    in-transmit(2),
                    in-checksum(3),
                    in-write-flash(4),
                    in-send-to-card(5),
                    in-prepare-config-data(6),
                    in-enable-config(7),
                    in-sync-config(8),
                    other-see-message(9),
                    redundant-not-exist-or-sync(11),
                    redundant-no-response(12),
                    transmit-abort(13),
                    redundant-firmware-checksum-error(14),
                    other-transmit-in-progress(15),
                    program-flash-fail(16),
                    unmatched-version-or-structure(17),
                    fail-to-send-card(18),
                    redundant-model-not-correct(19),
                    image-too-large(21),
                    failed-to-erase-FLASH-memory(22),
                    failed-to-program-FLASH-memory(23),
                    unknow-TFTP-server-error(24),
                    checksum-error(25),
                    failed-to-read-data-in-FLASH-memory(26),
                    unable-to-download-configuration(27),
                    unmatch-firmware(28),
                    prepare-config-data-fail(29),
                    file-does-not-support-this-HW-version(30),
                    file-not-found(31),
                    access-violation(32),
                    disk-full-or-allocation-exceeded(33),
                    illegal-TFTP-operation(34),
                    unknown-transfer-ID(35),
                    file-already-exists(36),
                    no-such-user(37),
                    resources-not-available(38),
                    aborted-by-client-request(39),
                    timed-out(40),
                    connect-fail(41),
                    firmware-not-allow-copy-to-redundant(42),
                    firmware-serial-no-mismatch(43),
                    card-type-mismatch(51),
                    card-version-does-not-support-firmware-upgrade(52),
                    ptn-not-ready(53),
                    copy-to-standby-ptn(54),
                    irc2-transmit(55),
                    copy-to-working-ptn(56),
                    ok-need-cold-reset(101),
                    unknown-problem(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transfer percentage"
            ::= { fileTransferTable 7 }

        transferMessage  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Message of transfer process"
            ::= { fileTransferTable 8 }



--
--  Bit Error Rate Test Table
--

    ctlBertTable        OBJECT IDENTIFIER ::= { controller 14 }

        ctlBertSlot  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT slot"
            ::= { ctlBertTable 1 }

        ctlBertPort  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT port"
            ::= { ctlBertTable 2 }

        ctlBertPattern  OBJECT-TYPE
            SYNTAX  INTEGER {
--                        off(1),
                    prbs2exp20-1(2),
                    prbs2exp15-1(3),
                    prbs2exp11-1(4),
                    prbs2exp9-1(5),
                    user-define(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT pattern"
            ::= { ctlBertTable 3 }

        ctlSplitMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sendAIS(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT split mode"
            ::= { ctlBertTable 4 }

        ctlBertChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    mapped(1),
                    full(2),
                    select(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT channel"
            ::= { ctlBertTable 5 }

        ctlUserPattern  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT user pattern"
            ::= { ctlBertTable 6 }

        ctlBertAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    start(2),
                    reset(3),
                    insert-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT action"
            ::= { ctlBertTable 7 }

        ctlChannelInBert  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Channel in BERT"
            ::= { ctlBertTable 8 }

        ctlBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { ctlBertTable 9 }

        ctlBertElapsedTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Elapsed Time (s)"
            ::= { ctlBertTable 10 }

        ctlBertBitError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Bit Error"
            ::= { ctlBertTable 11 }

        ctlBertErrorSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Error Seconds"
            ::= { ctlBertTable 12 }

        ctlBertSeveralErrorSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT SES"
            ::= { ctlBertTable 13 }

        ctlBertPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Period(in seconds) of BERT"
            ::= { ctlBertTable 14 }

        ctlBertDirection  OBJECT-TYPE
            SYNTAX  INTEGER {
                    to-line(1),
                    to-mapped(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT direction"
            ::= { ctlBertTable 15 }

        ctlBertMap  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (32))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT map 32 chars, i=idle, 1=map. Ex:
                i1111iiiiiiiiiiiiiiiiiiiiiiiiiii => send BERT in TS1~4"
            ::= { ctlBertTable 16 }

-- RIKER 2013 NFS-13000090
        ctlBertUnsyncSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT US"
            ::= { ctlBertTable 17 }


--
--  SSM Clock Source Table
--

    ssmClockSourceTable OBJECT IDENTIFIER ::= { controller 15 }

        ssmFirstClock  OBJECT-TYPE
            SYNTAX  SSMClockIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SSM First Clock setting"
            ::= { ssmClockSourceTable 1 }

        ssmSecondClock  OBJECT-TYPE
            SYNTAX  SSMClockIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SSM Second Clock setting"
            ::= { ssmClockSourceTable 2 }

        ssmThirdClock  OBJECT-TYPE
            SYNTAX  SSMClockIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SSM Third Clock setting"
            ::= { ssmClockSourceTable 3 }

        ssmCurrentClock   OBJECT-TYPE
            SYNTAX  INTEGER {
                    first(1),
                    second(2),
                    third(3),
                    internal(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current Clock source"
            ::= { ssmClockSourceTable 4 }

        ssmClockStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    loss(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Clock status indicate current clock status."
            ::= { ssmClockSourceTable 5 }

        ssmInternalSSMmsg  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Internal Clock SSM Message"
            ::= { ssmClockSourceTable 6 }

        ssmExternalSSMmsg  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "External Clock SSM Message"
            ::= { ssmClockSourceTable 7 }

        ssmLineSSMmsg  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Clock SSM Message"
            ::= { ssmClockSourceTable 8 }

        ssmExtClockType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1Crc(1),
                    e1Fas(2),
                    t1Esf(3),
                    t1D4(4),
                    ext2048Khz(5),
                    na(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "External Clock Type."
            ::= { ssmClockSourceTable 9 }

        ssmExtClockImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ext75ohm(1),
                    ext120ohm(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "External Clock Impedance."
            ::= { ssmClockSourceTable 10 }

        ssmExtClockSabit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    na(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "External Clock SSM Sa-bit."
            ::= { ssmClockSourceTable 11 }

        ssmCurrentSSMmsg   OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current (send out) SSM."
            ::= { ssmClockSourceTable 12 }


--
--  Port State Control Table
--
--
--         portStateControlTable  OBJECT-TYPE
--             SYNTAX  SEQUENCE OF PortStateControlEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "Port State Control Table"
--             ::= { controller 16 }
--
--         portStateControlEntry  OBJECT-TYPE
--             SYNTAX  PortStateControlEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "Port State Control Entry"
--             INDEX  { pscSlotIndex, pscPortIndex }
--             ::= { portStateControlTable 1 }
--
--         PortStateControlEntry ::=
--             SEQUENCE {
--               pscSlotIndex
--                 GenSlotID,
--               pscPortIndex
--                 GenPortID,
--               pscModelType
--                 GenModelType,
--               pscPortState
--                 INTEGER
--             }
--
--         pscSlotIndex  OBJECT-TYPE
--             SYNTAX  GenSlotID
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Port State Control: Slot Index"
--             ::= { portStateControlEntry 1 }
--
--         pscPortIndex  OBJECT-TYPE
--             SYNTAX  GenPortID
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Port State Control: Port Index"
--             ::= { portStateControlEntry 2 }
--
--         pscModelType  OBJECT-TYPE
--             SYNTAX  GenModelType
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Port State Control: Model Type"
--             ::= { portStateControlEntry 3 }
--
--         pscPortState  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        disable(1),
--                        enable(2)
--                     }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "Disable   : no alarm, performance, protection;
--                 Enable    : normal work;
--                 Diagnostic: in protection, allow test."
--             ::= { portStateControlEntry 4 }


--
--  PDH Ring Protection
--

    pdhRingProtection       OBJECT IDENTIFIER ::= { controller 17 }

        pdhRingControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    deactivated(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable PDH Ring Protection Function"
            ::= { pdhRingProtection 1 }

        pdhRingSwitchingInterval  OBJECT-TYPE
            SYNTAX  INTEGER (5..180)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Protection Switching Interval (Seconds)"
            ::= { pdhRingProtection 2 }

        pdhRingStation  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave(1),
                    master(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Station type in the Ring"
            ::= { pdhRingProtection 3 }

        pdhRingAlarmFiltering  OBJECT-TYPE
            SYNTAX  INTEGER (0..180)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Protection Alarm Filtering (Seconds)"
            ::= { pdhRingProtection 4 }


--
--  PDH Ring Port Setup Table
--
        pdhRingPortSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PDHRingPortSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Port Setup Table"
            ::= { pdhRingProtection 5 }

        pdhRingPortSetupEntry  OBJECT-TYPE
            SYNTAX  PDHRingPortSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Port Setup Entry"
            INDEX { pdhRingSlotIndex , pdhRingPortIndex }
            ::= { pdhRingPortSetupTable 1 }

            PDHRingPortSetupEntry ::= SEQUENCE {
            pdhRingSlotIndex            GenSlotID,
            pdhRingPortIndex            GenPortID,
            pdhRingModelType            GenModelType,
            pdhRingPortProtection       INTEGER,
            pdhRingPortStatus           INTEGER,
            pdhRingPortDiagnostic       INTEGER
        }

        pdhRingSlotIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Setup: Slot Index"
            ::= { pdhRingPortSetupEntry 1 }

        pdhRingPortIndex  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Setup: Port Index"
            ::= { pdhRingPortSetupEntry 2 }

        pdhRingModelType  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Setup: Model Type"
            ::= { pdhRingPortSetupEntry 3 }

        pdhRingPortProtection  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    xxxxxx(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Setup: Enable/Disable"
            ::= { pdhRingPortSetupEntry 4 }

        pdhRingPortStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    normal(2),
                    in-protect(3),
                    xxxxxx(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Port Status"
            ::= { pdhRingPortSetupEntry 5 }

        pdhRingPortDiagnostic  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    diag1-send-ais(2),
                    diag2-test-mode(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "PDH Ring Port Diagnostic"
            ::= { pdhRingPortSetupEntry 6 }


--
--  QE1/QT1/mQE1 1:1 Pair Protection
--

        qe1PairProtectionTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Qe1PairProtectionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE1/QT1/mQE1 1:1 Pair Protection Table"
            ::= { controller 18 }

        qe1PairProtectionEntry  OBJECT-TYPE
            SYNTAX  Qe1PairProtectionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE1/QT1/mQE1 1:1 Pair Protection Entry"
            INDEX { qe1PairSlotIndex , qe1PairPortIndex }
            ::= { qe1PairProtectionTable 1 }

            Qe1PairProtectionEntry ::= SEQUENCE {
            qe1PairSlotIndex            INTEGER,
            qe1PairPortIndex            FourPortID,
            qe1PairModelType            GenModelType,
            qe1PairPortProtection       INTEGER,
            qe1PairPortStatus           INTEGER,
            qe1PairPortForceSwitch      INTEGER




    }

        qe1PairSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slot-a-b(1),
                    slot-c-d(2),
                    slot-1-2(3),
                    slot-3-4(4),
                    slot-5-6(5),
                    slot-7-8(6),
                    slot-9-10(7),
                    slot-11-12(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection: Slot Index"
            ::= { qe1PairProtectionEntry 1 }

        qe1PairPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection: Port Index"
            ::= { qe1PairProtectionEntry 2 }

        qe1PairModelType  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection: Model Type"
            ::= { qe1PairProtectionEntry 3 }

        qe1PairPortProtection  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    circuit(2),
                    line-non-revertive(3),
                    line-revertive(4),
                    one-plus-one-non-revertive(5),
                    one-plus-one-revertive(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection:
                1 = disable,
                2 = circuit (Y cable) protection,
                3 = non revertible line protection,
                4 = revertible line protection,
                5 = 1+1 non revertible line protection,
                6 = 1+1 revertible line protection
                "
            ::= { qe1PairProtectionEntry 4 }

        qe1PairPortStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    normal(2),
                    in-protect(3),
                    xxxxxx(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection: Status"
            ::= { qe1PairProtectionEntry 5 }

        qe1PairPortForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(0),
                    force-switch(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 1:1 Pair Protection: Force switch"
            ::= { qe1PairProtectionEntry 6 }




--
--  DS0-SNCP Protection
--

    ds0sncpProtection       OBJECT IDENTIFIER ::= { controller 19 }

        ds0sncpEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    clear-performance(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Enable/Disable."
            ::= { ds0sncpProtection 1 }

        ds0sncpMap  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Using TSI Map."
            ::= { ds0sncpProtection 2 }

        ds0sncpActionResponse  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP action response."
            ::= { ds0sncpProtection 3 }



--
--  DS0-SNCP Creation
--

    ds0sncpCreationTable    OBJECT IDENTIFIER ::= { ds0sncpProtection 4 }

        dsProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected Slot A~D, 1~12."
            ::= { ds0sncpCreationTable 1 }

        dsProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected Port 1~12."
            ::= { ds0sncpCreationTable 2 }

        dsProtectedStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected start time slot index."
            ::= { ds0sncpCreationTable 3 }

        dsChannelNumber  OBJECT-TYPE
            SYNTAX  INTEGER  (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Total channel number."
            ::= { ds0sncpCreationTable 4 }

        dsPrimarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 slot number."
            ::= { ds0sncpCreationTable 5 }

        dsPrimaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 port number."
            ::= { ds0sncpCreationTable 6 }

        dsPrimaryStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 start time slot."
            ::= { ds0sncpCreationTable 9 }

        dsSecondarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 slot number."
            ::= { ds0sncpCreationTable 11 }

        dsSecondaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 port number."
            ::= { ds0sncpCreationTable 12 }

        dsSecondaryStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 start time slot."
            ::= { ds0sncpCreationTable 15 }

        dsSwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { ds0sncpCreationTable 16 }

        dsSetCommand  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(0), --//RIKER2021 SilverCreek
                    check-set(1),
                    force-set(2),
                    force-switch(3),
                    delete-1(4),
                    delete-all(5),
                    clearAndSet(6),
                    lock-working(11),
                    lock-primary(12),
                    lock-secondary(13),
                    unlock(14),
                    change-switch-mode(21)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set command:
                1: check and set DS0-SNCP;
                2: force set DS0-SNCP;
                3: force switch a DS0-SNCP;
                4: delete a DS0-SNCP;
                5: delete all;
                11: lock on working;
                12: lock on primary;
                13: lock on secondary;
                14: unlock"
            ::= { ds0sncpCreationTable 17 }

        dsDataVoice  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Data or Voice"
            ::= { ds0sncpCreationTable 18 }

        dsCircuitGroup  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "group number for protected port, 0 means individual."
            ::= { ds0sncpCreationTable 19 }

        dsBackupEnable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2),
                    notSupported(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Backup disable/enable"
            ::= { ds0sncpCreationTable 20 }

        dsBackupSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select backup Slot A~D, 1~12."
            ::= { ds0sncpCreationTable 21 }

        dsBackupPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select backup Port 1~12."
            ::= { ds0sncpCreationTable 22 }

        dsBackupStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select backup start time slot index."
            ::= { ds0sncpCreationTable 23 }


--
--  DS0-SNCP Information
--

        ds0sncpInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Ds0sncpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Protection Information Table"
            ::= { ds0sncpProtection 5 }

        ds0sncpInfoEntry  OBJECT-TYPE
            SYNTAX  Ds0sncpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Protection Information Entry"
            INDEX { ds0sncpInfoIndex }
            ::= { ds0sncpInfoTable 1 }

            Ds0sncpInfoEntry ::= SEQUENCE {
            ds0sncpInfoIndex            INTEGER,
            dsiProtectedSlot            MapSetSlot,
            dsiProtectedPort            MapPortID,
            dsiProtectedTS              INTEGER,
            dsiPrimarySlot              LargeSlotIndex,
            dsiPrimaryPort              ThreePortID,
            dsiPrimaryTS                INTEGER,
            dsiSecondarySlot            LargeSlotIndex,
            dsiSecondaryPort            ThreePortID,
            dsiSecondaryTS              INTEGER,
            dsiSwitchMode               INTEGER,
            dsiDataVoice                INTEGER,
            dsiWorkingOn                INTEGER,
            dsiForceSwitch              INTEGER,
            dsiDeleteProtection         INTEGER
        }

        ds0sncpInfoIndex  OBJECT-TYPE
            SYNTAX  INTEGER  (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Information Index."
            ::= { ds0sncpInfoEntry 1 }

        dsiProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Slot A~D, 1~12."
            ::= { ds0sncpInfoEntry 2 }

        dsiProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Port 1~12."
            ::= { ds0sncpInfoEntry 3 }

        dsiProtectedTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected time slot."
            ::= { ds0sncpInfoEntry 4 }

        dsiPrimarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 slot number."
            ::= { ds0sncpInfoEntry 5 }

        dsiPrimaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 port number."
            ::= { ds0sncpInfoEntry 6 }

        dsiPrimaryTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 time slot."
            ::= { ds0sncpInfoEntry 7 }

        dsiSecondarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 slot number."
            ::= { ds0sncpInfoEntry 8 }

        dsiSecondaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 port number."
            ::= { ds0sncpInfoEntry 9 }

        dsiSecondaryTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 start time slot."
            ::= { ds0sncpInfoEntry 10 }

        dsiSwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { ds0sncpInfoEntry 11 }

        dsiWorkingOn  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    primary(1),
                    secondary(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Working on primary or secondary."
            ::= { ds0sncpInfoEntry 12 }

        dsiForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(1),
                    force-switch(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Force switch to standby TS."
            ::= { ds0sncpInfoEntry 13 }

        dsiDeleteProtection  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete protection."
            ::= { ds0sncpInfoEntry 14 }

        dsiDataVoice  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Data or Voice"
            ::= { ds0sncpInfoEntry 15 }


--
--  DS0-SNCP Performance Table
--

        ds0sncpPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Ds0sncpPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Performance Table"
            ::= { ds0sncpProtection 6 }

        ds0sncpPerfEntry  OBJECT-TYPE
            SYNTAX  Ds0sncpPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Performance Entry"
            INDEX { ds0sncpPerfIndex }
            ::= { ds0sncpPerfTable 1 }

            Ds0sncpPerfEntry ::= SEQUENCE {
            ds0sncpPerfIndex            INTEGER,
            dspProtectedSlot            MapSetSlot,
            dspProtectedPort            MapPortID,
            dspProtectedTS              INTEGER,
            dspCurrentDaySeconds        INTEGER,
            dspCurrentDayAS             INTEGER,
            dspCurrentDayUAS            INTEGER,
            dspValidDayInterval         INTEGER
        }

        ds0sncpPerfIndex  OBJECT-TYPE
            SYNTAX  INTEGER  (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Performance Index."
            ::= { ds0sncpPerfEntry 1 }

        dspProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Slot A~D, 1~12."
            ::= { ds0sncpPerfEntry 2 }

        dspProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Port 1~12."
            ::= { ds0sncpPerfEntry 3 }

        dspProtectedTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected time slot."
            ::= { ds0sncpPerfEntry 4 }

        dspCurrentDaySeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current day elapsed seconds"
            ::= { ds0sncpPerfEntry 5 }

        dspCurrentDayAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current day available seconds"
            ::= { ds0sncpPerfEntry 6 }

        dspCurrentDayUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current day unavailable seconds"
            ::= { ds0sncpPerfEntry 7 }

        dspValidDayInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Valid days Interval number"
            ::= { ds0sncpPerfEntry 8 }


--
-- DS0-SNCP 7 Days Performance Table
--

        ds0sncp7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Ds0sncp7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP 7 days performance table."
            ::= { ds0sncpProtection 7 }

        ds0sncp7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  Ds0sncp7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP 7 days performance entry."
            INDEX { dsdPerfIndex , dsdDayIndex }
            ::= { ds0sncp7DaysPerfTable 1 }

            Ds0sncp7DaysPerfEntry ::= SEQUENCE {
            dsdPerfIndex                INTEGER,
            dsdDayIndex                 INTEGER,
            dsdDateStrIndex             DisplayString,
            dsdProtectedSlot            MapSetSlot,
            dsdProtectedPort            MapPortID,
            dsdProtectedTS              INTEGER,
            dsdDayAS                    INTEGER,
            dsdDayUAS                   INTEGER
        }

        dsdPerfIndex  OBJECT-TYPE
            SYNTAX  INTEGER  (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Performance Index."
            ::= { ds0sncp7DaysPerfEntry 1 }

        dsdDayIndex  OBJECT-TYPE
            SYNTAX  INTEGER  (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Performance Day Index."
            ::= { ds0sncp7DaysPerfEntry 2 }

        dsdDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..32) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { ds0sncp7DaysPerfEntry 3 }

        dsdProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Slot A~D, 1~12."
            ::= { ds0sncp7DaysPerfEntry 4 }

        dsdProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Port 1~12."
            ::= { ds0sncp7DaysPerfEntry 5 }

        dsdProtectedTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected time slot."
            ::= { ds0sncp7DaysPerfEntry 6 }

        dsdDayAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day available seconds"
            ::= { ds0sncp7DaysPerfEntry 7 }

        dsdDayUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day unavailable seconds"
            ::= { ds0sncp7DaysPerfEntry 8 }


--
--  New DS0-SNCP Information
--

        newDs0sncpInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF NewDs0sncpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "New DS0-SNCP Protection Information Table"
            ::= { ds0sncpProtection 8 }

        newDs0sncpInfoEntry  OBJECT-TYPE
            SYNTAX  NewDs0sncpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "New DS0-SNCP Protection Information Entry"
            INDEX { ndsiProtectedSlot , ndsiProtectedPort , ndsiProtectedTS }
            ::= { newDs0sncpInfoTable 1 }

            NewDs0sncpInfoEntry ::= SEQUENCE {
            ndsiProtectedSlot            MapSetSlot,
            ndsiProtectedPort            MapPortID,
            ndsiProtectedTS              INTEGER,
            ndsiPrimarySlot              LargeSlotIndex,
            ndsiPrimaryPort              ThreePortID,
            ndsiPrimaryTS                INTEGER,
            ndsiSecondarySlot            LargeSlotIndex,
            ndsiSecondaryPort            ThreePortID,
            ndsiSecondaryTS              INTEGER,
            ndsiSwitchMode               INTEGER,
            ndsiDataVoice                INTEGER,
            ndsiWorkingOn                INTEGER,
            ndsiDispIndex                INTEGER,
            ndsiCircuitGroup             INTEGER,
            ndsiPrimaryStatus            INTEGER,
            ndsiSecondaryStatus          INTEGER,
            ndsiBackupSlot               MapSetSlot,
            ndsiBackupPort               MapPortID,
            ndsiBackupTS                 INTEGER



    }

        ndsiProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Slot A~D, 1~12."
            ::= { newDs0sncpInfoEntry 1 }

        ndsiProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected Port 1~12."
            ::= { newDs0sncpInfoEntry 2 }

        ndsiProtectedTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Protected time slot."
            ::= { newDs0sncpInfoEntry 3 }

        ndsiPrimarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 slot number."
            ::= { newDs0sncpInfoEntry 4 }

        ndsiPrimaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 port number."
            ::= { newDs0sncpInfoEntry 5 }

        ndsiPrimaryTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary 3E1/3T1 time slot."
            ::= { newDs0sncpInfoEntry 6 }

        ndsiSecondarySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 slot number."
            ::= { newDs0sncpInfoEntry 7 }

        ndsiSecondaryPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 port number."
            ::= { newDs0sncpInfoEntry 8 }

        ndsiSecondaryTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary 3E1/3T1 start time slot."
            ::= { newDs0sncpInfoEntry 9 }

        ndsiSwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { newDs0sncpInfoEntry 10 }

        ndsiDataVoice  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Data or Voice"
            ::= { newDs0sncpInfoEntry 11 }

        ndsiWorkingOn  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    primary(1),
                    secondary(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Working on primary or secondary."
            ::= { newDs0sncpInfoEntry 12 }

        ndsiDispIndex  OBJECT-TYPE
            SYNTAX  INTEGER  (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Display Index."
            ::= { newDs0sncpInfoEntry 13 }

        ndsiCircuitGroup  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "group number for protected port, 0 means individual."
            ::= { newDs0sncpInfoEntry 14 }

        ndsiPrimaryStatus  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary TS status."
            ::= { newDs0sncpInfoEntry 15 }

        ndsiSecondaryStatus  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary TS status."
            ::= { newDs0sncpInfoEntry 16 }

        ndsiBackupSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Backup Slot A~D, 1~12."
            ::= { newDs0sncpInfoEntry 17 }

        ndsiBackupPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Backup Port 1~12."
            ::= { newDs0sncpInfoEntry 18 }

        ndsiBackupTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Backup time slot."
            ::= { newDs0sncpInfoEntry 19 }



--
-- Current Active Alarm Summary Table
--

        currentActiveAlarmSummaryTable OBJECT-TYPE
            SYNTAX SEQUENCE OF CurrentActiveAlarmSummaryEntry
            ACCESS not-accessible
            STATUS mandatory
            DESCRIPTION
                "Display Current Active Alarm Summary"
            ::= {controller 21}

        currentActiveAlarmSummaryEntry  OBJECT-TYPE
            SYNTAX  CurrentActiveAlarmSummaryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current Active Alarm Summary Entry"
            INDEX { ccCurrentActiveAlarmSummaryIndex }
            ::= { currentActiveAlarmSummaryTable 1 }

            CurrentActiveAlarmSummaryEntry ::= SEQUENCE{
            ccCurrentActiveAlarmSummaryIndex    INTEGER (1..40),
            ccCaasAlarmDesString                DisplayString (SIZE(0..255)),
            ccCaasAlarmModel                    AlarmModelType,
            ccCaasAlarmSlot                     AlarmSlotIndex,
            ccCaasAlarmPort                     AlarmPort,
            ccCaasAlarmType                     AlarmType,
            ccCaasAlarmSeverity                 AlarmSeverityDisp,
            ccCaasAlarmStatus                   INTEGER,
            ccCaasAlarmLink                     AlarmLink
        }
        ccCurrentActiveAlarmSummaryIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Crrent Active Alarm Summary Index"
            ::= {currentActiveAlarmSummaryEntry 1 }

        ccCaasAlarmDesString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Description String"
            ::= {currentActiveAlarmSummaryEntry 2 }

        ccCaasAlarmModel OBJECT-TYPE
            SYNTAX  AlarmModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Model"
            ::= { currentActiveAlarmSummaryEntry 3 }

        ccCaasAlarmSlot OBJECT-TYPE
            SYNTAX  AlarmSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Slot"
            ::= {currentActiveAlarmSummaryEntry 4 }

        ccCaasAlarmPort  OBJECT-TYPE
            SYNTAX  AlarmPort
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Port"
            ::= { currentActiveAlarmSummaryEntry 5 }

        ccCaasAlarmType  OBJECT-TYPE
            SYNTAX  AlarmType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Type"
            ::= {currentActiveAlarmSummaryEntry 6 }

        ccCaasAlarmSeverity OBJECT-TYPE
            SYNTAX  AlarmSeverityDisp
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Severity"
            ::= { currentActiveAlarmSummaryEntry 7 }

        ccCaasAlarmStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    cleared(2)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "CAAS Alarm Status"
            ::= { currentActiveAlarmSummaryEntry 8 }

        ccCaasAlarmLink  OBJECT-TYPE
            SYNTAX  AlarmLink
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CAAS Alarm Link"
            ::= { currentActiveAlarmSummaryEntry 9 }


--
-- sntpInfoTable
--
    sntpInfoTable        OBJECT IDENTIFIER ::= { controller 22 }

        sntpInfoCurrnetServerIPAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current NTP Server  "
            ::= {sntpInfoTable 1}

        sntpInfoServerIPAddress1      OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " NTP Server  IP Address"
            ::= {sntpInfoTable 2}


        sntpInfoServerIPAddress2     OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " NTP Server IP Address "
            ::= {sntpInfoTable 3}

        sntpInfoTimeZone   OBJECT-TYPE
            SYNTAX  INTEGER{
                    utc(0),
                    utc1(1),
                    utc2(2),
                    utc3(3),
                    utc4(4),
                    utc5(5),
                    utc6(6),
                    utc7(7),
                    utc8(8),
                    utc9(9),
                    utc10(10),
                    utc11(11),
                    utc12(12),
                    utc-12(-12),
                    utc-11(-11),
                    utc-10(-10),
                    utc-9(-9),
                    utc-8(-8),
                    utc-7(-7),
                    utc-6(-6),
                    utc-5(-5),
                    utc-4(-4),
                    utc-3(-3),
                    utc-2(-2),
                    utc-1(-1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " UTC Time Zone  "
            ::= {sntpInfoTable 4}

        sntpInfoUpdateInterval  OBJECT-TYPE
            SYNTAX  INTEGER (5..1440)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SNTP Update Interval (5~1440 Minutes)"
            ::= { sntpInfoTable 5 }

        sntpInfoLastUpdateTime  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SNTP Last Update Time"
            ::= { sntpInfoTable 6 }

        sntpInfoFunction OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SNTP enable/disable"
            ::= { sntpInfoTable 7 }


--
-- sysNetworkManagement
--
    sysNetworkManagement  OBJECT IDENTIFIER ::= { controller 23 }

        sysNetIntfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SysNetIntfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "System Network Interface Table"
            ::= { sysNetworkManagement 1 }

        sysNetIntfEntry  OBJECT-TYPE
            SYNTAX  SysNetIntfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "System Network Interface Entry"
            INDEX { sysNiIndex }
            ::= { sysNetIntfTable 1 }

            SysNetIntfEntry ::= SEQUENCE {
            sysNiIndex                  INTEGER,
            sysNiEnable                 INTEGER,
            sysNiIPaddress              IpAddress,
            sysNiSubnetMask             IpAddress,
            sysNiFrame                  INTEGER,
            sysNiInterface              INTEGER
        }

        sysNiIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan(1),
                    wan(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LAN(ethernet), WAN(PPP/HDLC)"
            ::= { sysNetIntfEntry 1 }

        sysNiEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable this NI"
            ::= { sysNetIntfEntry 2 }

        sysNiIPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address"
            ::= { sysNetIntfEntry 3 }

        sysNiSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "subnet mask"
            ::= { sysNetIntfEntry 4 }

        sysNiFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    hdlc(2),
                    ppp(3),
                    slip(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN: HDLC/PPP"
            ::= { sysNetIntfEntry 5 }

        sysNiInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rjElectric(1),
                    optical(2),
                    inband(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface"
            ::= { sysNetIntfEntry 6 }

-- system Network Management

        sysGatewayIntf  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan(1),
                    wan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Gateway Interface"
            ::= { sysNetworkManagement 2 }

        sysGatewayIPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "gateway IP"
            ::= { sysNetworkManagement 3 }

        sysTelnetEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable Telnet"
            ::= { sysNetworkManagement 4 }

        sysSSHEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable SSH"
            ::= { sysNetworkManagement 5 }

        sysSSHStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    build-key(2),
                    normal(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SSH status"
            ::= { sysNetworkManagement 6 }

        trapSystemIP  OBJECT-TYPE
            SYNTAX  INTEGER {
--                        auto(1),
                    lan(2),
                    wan(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Trap System IP"
            ::= { sysNetworkManagement 7 }

        inbandUsesSlot  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slot-D(1),
                    slot-12(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Inband Uses Slot:
                Slot-D : slot-D port 4 can not use unframe mode.
                Slot-12: slot-12 port 4 can not use unframe mode, 4GH port 4 TS0 can not use."
            ::= { sysNetworkManagement 9 }

        alarmTrapType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    vendor-spec(1),
                    assigned(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm/Trap type"
            ::= { sysNetworkManagement 10 }

        trapObjectType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    vendor-spec(1),
                    individual(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Trap Object Type"
            ::= { sysNetworkManagement 11 }

-- RIKER 2013 NFS-13000080
        networkMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Trap System IP"
            ::= { sysNetworkManagement 12 }

        trapCompWindow   OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "trap compress window: 0=disable, or 1~15 min"
            ::= { sysNetworkManagement 13 }

        setMgmtIPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address"
            ::= { sysNetworkManagement 14 }

        setMgmtSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "subnet mask"
            ::= { sysNetworkManagement 15 }

        mgmtLinkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    linkDown(1),
                    linkUp(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mgmt port link status"
            ::= { sysNetworkManagement 16 }

        mgmtLinkSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    link10M(1),
                    link100M(2),
                    link1000M(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mgmt port link speed"
            ::= { sysNetworkManagement 17 }

        redMgmtLinkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    linkDown(1),
                    linkUp(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "redundant mgmt port link status"
            ::= { sysNetworkManagement 18 }

        redMgmtLinkSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    link10M(1),
                    link100M(2),
                    link1000M(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "redundant mgmt port link speed"
            ::= { sysNetworkManagement 19 }
		
        sysHTTPEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable HTTP"
            ::= { sysNetworkManagement 20 }
			
        sysHTTPSEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or Disable HTTPS"
            ::= { sysNetworkManagement 21 }		
			
        sysHTTPStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "HTTP status"
            ::= { sysNetworkManagement 22 }
			
        sysHTTPSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "HTTPS status"
            ::= { sysNetworkManagement 23 }		


--
-- V1 Trap and community
--

        v1TrapCommunityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF V1TrapCommunityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SNMP V1 Trap and Community Table"
            ::= { sysNetworkManagement 8 }

        v1TrapCommunityEntry  OBJECT-TYPE
            SYNTAX  V1TrapCommunityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SNMP V1 Trap and Community Entry"
            INDEX { trapIndex }
            ::= { v1TrapCommunityTable 1 }

            V1TrapCommunityEntry ::= SEQUENCE {
            trapIndex                   INTEGER,
            trapIPaddress               IpAddress,
            trapCommunity               DisplayString
        }

        trapIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..5)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Trap Index 1-5"
            ::= { v1TrapCommunityEntry 1 }

        trapIPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Trap IP address"
            ::= { v1TrapCommunityEntry 2 }

        trapCommunity  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..12))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Trap Community"
            ::= { v1TrapCommunityEntry 3 }


--
--  Remote Device upgrade
--

    remDevUpgradeTable       OBJECT IDENTIFIER ::= { controller 24 }

        remTftpServerIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address of tftp server"
            ::= { remDevUpgradeTable 1 }

        remTftpFileName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "File name for download"
            ::= { remDevUpgradeTable 2 }

        remFileTransferType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear-status(1),
                    download-GSHDSL-remote-device(11),
                    na(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upgrade device"
            ::= { remDevUpgradeTable 3 }

        remUpgradeSlot  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slot-A(1),
                    slot-B(2),
                    slot-C(3),
                    slot-D(4),
                    slot-1(5),
                    slot-2(6),
                    slot-3(7),
                    slot-4(8),
                    slot-5(9),
                    slot-6(10),
                    slot-7(11),
                    slot-8(12),
                    slot-9(13),
                    slot-10(14),
                    slot-11(15),
                    slot-12(16),
                    na(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upgrade slot"
            ::= { remDevUpgradeTable 4 }

        remUpgradePort  OBJECT-TYPE
            SYNTAX  GenPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upgrade port"
            ::= { remDevUpgradeTable 5 }

        remUpgradeCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    upgrade(2),
                    upgrade-and-reset(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upgrade command"
            ::= { remDevUpgradeTable 6 }

        remUpgradePrograss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    ok(1),
                    in-tftp-download(2),
                    in-send-to-card(3),
                    in-send-to-remote(4),
                    completed(5),
                    other-see-message(9),
                    card-model-error(11),
                    card-version-error(12),
                    port-unsync(13),
                    remote-device-error(14),
                    port-not-exist(15),
                    tftp-error(16),
                    fail-to-send-card(18),
                    check-fail(20),
                    check-ok(21),
                    rs485-loss(22),
                    checksum-error(23),
                    incorrect-file(24),
                    firmware-error(25),
                    unmatch-model(33),
                    other-in-send(35),
                    eoc-fail(36),
                    time-out(99),
                    unknown-problem(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transfer percentage"
            ::= { remDevUpgradeTable 7 }

        remUpgradePercentage  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "upgrade percentage"
            ::= { remDevUpgradeTable 8 }

        remUpgradeMessage  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Message of upgrade process"
            ::= { remDevUpgradeTable 9 }


--
-- syslogSetupTable
--
    syslogSetupTable        OBJECT IDENTIFIER ::= { controller 25 }

        syslogSetupFunction OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SYSLOG enable/disable"
            ::= { syslogSetupTable 1 }

        syslogServerAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SYSLOG server address"
            ::= { syslogSetupTable 2 }

        syslogServer2Address  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SYSLOG server 2 address"
            ::= { syslogSetupTable 3 }


--
-- inbandProtectionTable
--
-- RIKER 2013 NFS-12000476

    inbandProtectionTable    OBJECT IDENTIFIER ::= { controller 26 }

        inbProtEnable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Inband protection enable/disable"
            ::= { inbandProtectionTable 1 }

        inbProtMap  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Inband Protection Using TSI Map."
            ::= { inbandProtectionTable 2 }


        inbProtPrimarySlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary slot number."
            ::= { inbandProtectionTable 3 }

        inbProtPrimaryPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary port number."
            ::= { inbandProtectionTable 4 }

        inbProtPrimaryStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary start time slot."
            ::= { inbandProtectionTable 5 }

        inbProtSecondSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary slot number."
            ::= { inbandProtectionTable 6 }

        inbProtSecondPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary port number."
            ::= { inbandProtectionTable 7 }

        inbProtSecondStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary start time slot."
            ::= { inbandProtectionTable 8 }

        inbProtSwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { inbandProtectionTable 9 }

        inbProtSetCommand  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    na(0),
                    check-set(1),
                    clear(2),
                    force-set(3),
                    force-switch(4),
                    ok(11),
                    fail(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set command:
                1: check and set inband map;
                2: clear map;
                2: force set inband map;
                3: force switch"
            ::= { inbandProtectionTable 10 }

        inbProtStatus  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    workingPrimary(2),
                    workingSecondary(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Inband protection status"
            ::= { inbandProtectionTable 11 }


--
-- radiusSetupTable
--
-- RIKER 2013 NFS-13000078

    radiusSetupTable    OBJECT IDENTIFIER ::= { controller 27 }

        radiusServer1Enable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server1 Enable or Disable"
            ::= { radiusSetupTable 1 }

        radiusServer1IPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server1 IP address"
            ::= { radiusSetupTable 2 }

        radiusServer1Key  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server1 Key"
            ::= { radiusSetupTable 3 }

        radiusServer1Port  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server1 Port"
            ::= { radiusSetupTable 4 }

        radiusServer2Enable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server2 Enable or Disable"
            ::= { radiusSetupTable 5 }

        radiusServer2IPaddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server2 IP address"
            ::= { radiusSetupTable 6 }

        radiusServer2Key  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) ) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server2 Key"
            ::= { radiusSetupTable 7 }

        radiusServer2Port  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Radius Server2 Port"
            ::= { radiusSetupTable 8 }

        operatorPrivilegeLevel  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Operator Privilege Level"
            ::= { radiusSetupTable 9 }

        adminPrivilegeLevel  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Admin Privilege Level"
            ::= { radiusSetupTable 10 }

        radiusAuthConsole  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Auth. console via Radius"
            ::= { radiusSetupTable 11 }


    featureActivation            OBJECT IDENTIFIER ::= { controller 28 }

        hwInfoDisplayTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF HwInfoDisplayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "HW info display Table"
            ::= { featureActivation 1 }

        hwInfoDisplayEntry  OBJECT-TYPE
            SYNTAX  HwInfoDisplayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "HW info display Entry"
            INDEX { hwSlotIndex }
            ::= { hwInfoDisplayTable  1 }

            HwInfoDisplayEntry ::= SEQUENCE {
            hwSlotIndex                 ChassisSlot,
            hwCardModel                 GenModelType,
            hwInfoJSON                  DisplayString
        }

        hwSlotIndex   OBJECT-TYPE
            SYNTAX  ChassisSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "HW info slot"
            ::= { hwInfoDisplayEntry 1 }

        hwCardModel  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "HW info card model"
            ::= { hwInfoDisplayEntry 2 }

        hwInfoJSON  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "HW info display in JSON format"
            ::= { hwInfoDisplayEntry 3 }

--============================

    licenseImport             OBJECT IDENTIFIER ::= { featureActivation 2 }

        licenseDataImport  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..1024) ) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "License file import"
            ::= { licenseImport 1 }

        importStatus    OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    ok(2),
                    decodeFail(3),
                    fileFormatIncorrect(4),
                    noMatchCard(5),
                    noMatchSN(6),
                    unknownError(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Import status"
            ::= { licenseImport 2 }

--============================

    faTftp              OBJECT IDENTIFIER ::= { featureActivation 3 }

        faServerIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address of tftp server"
            ::= { faTftp 1 }

        faFileName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "File name for upload/download"
            ::= { faTftp 2 }

        faSlot  OBJECT-TYPE
            SYNTAX  ChassisSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Upload/download slot"
            ::= { faTftp 3 }

        faAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    uploadHWinfo(2),
                    downloadLicenseFile(3),
                    clearStatus(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "upload/download command"
            ::= { faTftp 4 }

        faResult  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    ok(2),
                    fail(3)
                    
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Result"
            ::= { faTftp 5 }

        faMessage  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Message of transfer process"
            ::= { faTftp 6 }



--============================

        activationStatusTable    OBJECT-TYPE
            SYNTAX  SEQUENCE OF ActivationStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "activation status table"
            ::= { featureActivation 4 }

        activationStatusEntry  OBJECT-TYPE
            SYNTAX  ActivationStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "activation status entry"
            INDEX { actSlotIndex , actItemIndex }
            ::= { activationStatusTable  1 }

            ActivationStatusEntry ::= SEQUENCE {
            actSlotIndex                ChassisSlot,
            actItemIndex                INTEGER,
            actItemName                 DisplayString,
            actCardModel                GenModelType,
            actStatus                   DisplayString
        }

        actSlotIndex   OBJECT-TYPE
            SYNTAX  ChassisSlot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "activation slot"
            ::= { activationStatusEntry 1 }

        actItemIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "activation item"
            ::= { activationStatusEntry 2 }

        actItemName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..32) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "activation name"
            ::= { activationStatusEntry 3 }

        actCardModel  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "model of slot"
            ::= { activationStatusEntry 4 }

        actStatus  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..32) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "activation status"
            ::= { activationStatusEntry 5 }

--============================

    iXC3440ActivationStatus               OBJECT IDENTIFIER ::= { featureActivation 5 }

        iXC3440PriCTRL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "iXC3440 is enabled for Primary controller"
            ::= { iXC3440ActivationStatus 1 }

        iXC3440RedCTRL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    unsyncOrNotExist(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "iXC3440 is enabled for Redundant controller"
            ::= { iXC3440ActivationStatus 2 }

    iNETLCTActivationStatus               OBJECT IDENTIFIER ::= { featureActivation 6 }

        iNETLCTPriCTRL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "iNET-LCT is enabled for Primary controller"
            ::= { iNETLCTActivationStatus 1 }

        iNETLCTRedCTRL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    unsyncOrNotExist(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "iNET-LCT is enabled for Redundant controller"
            ::= { iNETLCTActivationStatus 2 }


--
--  SSM conversion Table   , NFS-15000325, add by Bryan
--
        ssmConversionTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SsmConvTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SSM conversion table"
            ::= { controller 29 }

        ssmConvTableEntry OBJECT-TYPE
            SYNTAX  SsmConvTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SSM conversion table entry"
            INDEX { ssmQualityLevel }
            ::= { ssmConversionTable 1 }

            SsmConvTableEntry ::= SEQUENCE {
            ssmQualityLevel   INTEGER,
            ssmDS1-SSM        INTEGER,
            ssmE1-SSM         INTEGER
        }

        ssmQualityLevel OBJECT-TYPE
            SYNTAX  INTEGER {
                    levelPRS(1),
                    levelSTU(2),
                    levelST2(3),
--        levelTNC(4),
--        levelST3E(5),
                    levelST3(4),
                    levelSMC(5),
                    levelST4(6),
                    levelDUS(7),
                    levelRES(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Quality Level"
            ::= { ssmConvTableEntry 1 }

        ssmDS1-SSM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ssm000010(1),
                    ssm000100(2),
                    ssm000110(3),
                    ssm111100(4),
                    ssm111110(5),
                    ssm001000(6),
                    ssm010001(7),
                    ssm010100(8),
                    ssm011000(9),
                    ssm100000(10)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DS1 SSM value"
            ::= { ssmConvTableEntry 2 }

        ssmE1-SSM OBJECT-TYPE
            SYNTAX  INTEGER {
                    ssm0000(1),
                    ssm0001(2),
                    ssm0010(3),
                    ssm0011(4),
                    ssm0100(5),
                    ssm0101(6),
                    ssm0110(7),
                    ssm0111(8),
                    ssm1000(9),
                    ssm1001(10),
                    ssm1010(11),
                    ssm1011(12),
                    ssm1100(13),
                    ssm1101(14),
                    ssm1110(15),
                    ssm1111(16)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 SSM value
                0000 Internal
                1111 Not Used"
            ::= { ssmConvTableEntry 3 }

--
--  external alarm table
--
        externalAlarmTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ExternalAlarmEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SSM conversion table"
            ::= { controller 30 }

        externalAlarmEntry OBJECT-TYPE
            SYNTAX  ExternalAlarmEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SSM conversion table entry"
            INDEX { extAlarmIndex }
            ::= { externalAlarmTable 1 }

            ExternalAlarmEntry ::= SEQUENCE {
            extAlarmIndex     INTEGER,
            extAlarmSeverity  AlarmSeverity,
            extAlarmMessage   DisplayString
        }

        extAlarmIndex OBJECT-TYPE
            SYNTAX  INTEGER (1..4)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "external alarm index"
            ::= { externalAlarmEntry 1 }

        extAlarmSeverity  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Severity"
            ::= { externalAlarmEntry 2 }

        extAlarmMessage  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..31) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Message"
            ::= { externalAlarmEntry 3 }


--
-- new timing source (CCB)
--

    ccbTimingSource             OBJECT IDENTIFIER ::= { controller 31 }

        ccbClockMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    ssm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "System Clock Mode"
            ::= { ccbTimingSource 1 }

        ccbCurrentClock  OBJECT-TYPE
            SYNTAX  INTEGER {
                    first(1),
                    second(2),
                    third(3),
                    internal(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Current clock source"
            ::= { ccbTimingSource 2 }

        ccbClockHoldOverEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    notSupport(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clock Hold-over Mode"
            ::= { ccbTimingSource 3 }

        ccbNormalClockRecover  OBJECT-TYPE
            SYNTAX  INTEGER {
                    manual(1),
                    automatic(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Normal Clock Recover Mode"
            ::= { ccbTimingSource 4 }

        ccbStaticInternalSSM  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "static internal ssm message"
            ::= { ccbTimingSource 5 }

        ccbStaticExternalSSM  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "static external ssm message"
            ::= { ccbTimingSource 6 }

        ccbStaticLineSSM  OBJECT-TYPE
            SYNTAX  INTEGER (0..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "static line ssm message"
            ::= { ccbTimingSource 7 }

        ccbHoldOverState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    holdOver(2),
                    notSupport(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Clock hold-over state"
            ::= { ccbTimingSource 8 }

        ccbFramePulsePeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Frame Pulse Period: Hz"
            ::= { ccbTimingSource 9 }

		ccbSSMHoldTime  OBJECT-TYPE
            SYNTAX  INTEGER (0..99)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SSM hold time"
            ::= { ccbTimingSource 10 }
			
        ccbDpllClockState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    normal-m(2),
                    normal-s(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Clock dpll state"
            ::= { ccbTimingSource 13 }

-- external clock input



-- CCB clock source setup

        ccbClockSourceTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF CcbClockSourceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "CCB clock source"
            ::= { ccbTimingSource 12 }

        ccbClockSourceEntry OBJECT-TYPE
            SYNTAX  CcbClockSourceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ccb clock source"
            INDEX { ccbClockIndex }
            ::= { ccbClockSourceTable 1 }

            CcbClockSourceEntry ::= SEQUENCE {
            ccbClockIndex     INTEGER,
            ccbClockSource    INTEGER,
            ccbClockPort      INTEGER,
            ccbClockState     INTEGER
        }

        ccbClockIndex OBJECT-TYPE
            SYNTAX  INTEGER (1..3)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "clock index"
            ::= { ccbClockSourceEntry 1 }

        ccbClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    internal(1),
--                  external(2),
                    slotA(3),
                    slotB(4),
                    slotC(5),
                    slotD(6),
                    slot1(7),
                    slot2(8),
                    slot3(9),
                    slot4(10),
                    slot5(11),
                    slot6(12),
                    slot7(13),
                    slot8(14),
                    slot9(15),
                    slot10(16),
                    slot11(17),
                    slot12(18),
                    acr1(19),
                    acr2(20),
                    acr3(21),
                    acr4(22),
                    ctrl1eth1(23),
                    ctrl1eth2(24),
                    ctrl2eth1(31),
                    ctrl2eth2(32)   
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clock source slot"
            ::= { ccbClockSourceEntry 2 }

        ccbClockPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    port1(1),
                    port2(2),
                    port3(3),
                    port4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clock source port"
            ::= { ccbClockSourceEntry 3 }

        ccbClockState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    lossOrNotStable(2),
                    signalDetected(3),
                    rxSSM0000(10),
                    rxSSM0001(11),
                    rxSSM0010(12),
                    rxSSM0011(13),
                    rxSSM0100(14),
                    rxSSM0101(15),
                    rxSSM0110(16),
                    rxSSM0111(17),
                    rxSSM1000(18),
                    rxSSM1001(19),
                    rxSSM1010(20),
                    rxSSM1011(21),
                    rxSSM1100(22),
                    rxSSM1101(23),
                    rxSSM1110(24),
                    rxSSM1111(25)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "clock state"
            ::= { ccbClockSourceEntry 4 }


--
-- console/telnet user list and password change
--

    consoleTelnetUser         OBJECT IDENTIFIER ::= { controller 32 }

        userListTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF UserListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "user list table"
            ::= { consoleTelnetUser 1 }

        userListEntry OBJECT-TYPE
            SYNTAX  UserListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "user list entry"
            INDEX { userIndex }
            ::= { userListTable 1 }

            UserListEntry ::= SEQUENCE {
            userIndex     INTEGER,
            userName      DisplayString,
            userLevel     INTEGER
        }

        userIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "user index"
            ::= { userListEntry 1 }

        userName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "user name"
            ::= { userListEntry 2 }

        userLevel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    operator(1),
                    admin(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "user level"
            ::= { userListEntry 3 }


        userPasswordChange  OBJECT-TYPE
            SYNTAX  OCTET STRING (SIZE (10..127))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "password change by NMS"
            ::= { consoleTelnetUser 2 }

        userPwChangeResponse  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "password change response:
                USERNAME password changed!
                Format not correct!
                Password too long!
                User name not exist!"
            ::= { consoleTelnetUser 3 }

        userLoginTimeout  OBJECT-TYPE
            SYNTAX  INTEGER (60..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "timeout in seconds"
            ::= { consoleTelnetUser 4 }

        userLoginAttempts  OBJECT-TYPE
            SYNTAX  INTEGER (1..60)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "login attempts"
            ::= { consoleTelnetUser 5 }

        lockoutDuration  OBJECT-TYPE
            SYNTAX  INTEGER (0..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "log fail (lockout) recovery timer in minutes, 0=infinite"
            ::= { consoleTelnetUser 6 }

        unlockLogOn  OBJECT-TYPE
            SYNTAX  OCTET STRING (SIZE (0..28))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Console/telnet/SSH unlock (for user login failure attempts)"
            ::= { consoleTelnetUser 7 }



		ethernetTable         OBJECT IDENTIFIER ::= { controller 33 }

		       ethernetCopperSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthernetCopperSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Copper Set table"
            ::= { ethernetTable 1 }

        ethernetCopperSetEntry OBJECT-TYPE
            SYNTAX  EthernetCopperSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Copper Setup entry"
            INDEX { ethernetCopperIndex }
            ::= { ethernetCopperSetTable 1 }

            EthernetCopperSetEntry ::= SEQUENCE {
            ethernetCopperIndex     INTEGER,
            ethernetCopperName      DisplayString,
            ethernetCopperState     INTEGER,
            ethernetCopperSpeed     INTEGER
        }

        ethernetCopperIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CopperSet index"
            ::= { ethernetCopperSetEntry 1 }

        ethernetCopperName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CopperSet name"
            ::= { ethernetCopperSetEntry 2 }

        ethernetCopperState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CopperSet state"
            ::= { ethernetCopperSetEntry 3 }

				ethernetCopperSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    auto(1),
                    s1000full(2),
                    s1000half(3),
                    s100full(4),
                    s100half(5),
                    s10full(6),
                    s10half(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CopperSet speed"
            ::= { ethernetCopperSetEntry 4 }

		       ethernetOpticalSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthernetOpticalSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Optical Set table"
            ::= { ethernetTable 2 }

        ethernetOpticalSetEntry OBJECT-TYPE
            SYNTAX  EthernetOpticalSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Fiber Setup entry"
            INDEX { ethernetOpticalIndex }
            ::= { ethernetOpticalSetTable 1 }

            EthernetOpticalSetEntry ::= SEQUENCE {
            ethernetOpticalIndex     INTEGER,
            ethernetOpticalName      DisplayString,
            ethernetOpticalState     INTEGER,
            ethernetOpticalSpeed     INTEGER,
            ethernetOpticalUnidirectional     INTEGER
        }

        ethernetOpticalIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical index"
            ::= { ethernetOpticalSetEntry 1 }

        ethernetOpticalName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical name"
            ::= { ethernetOpticalSetEntry 2 }

        ethernetOpticalState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optical state"
            ::= { ethernetOpticalSetEntry 3 }

				ethernetOpticalSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    s1000(1),
                    s100(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optical speed"
            ::= { ethernetOpticalSetEntry 4 }
       
       ethernetOpticalUnidirectional  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Unidirectional mode"
            ::= { ethernetOpticalSetEntry 5 } 
        
		       ethernetStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthernetStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Optical Set table"
            ::= { ethernetTable 3 }

        ethernetStatusEntry OBJECT-TYPE
            SYNTAX  EthernetStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Status entry"
            INDEX { ethernetStatusIndex }
            ::= { ethernetStatusTable 1 }

            EthernetStatusEntry ::= SEQUENCE {
            ethernetStatusIndex     INTEGER,
            ethernetStatusName      DisplayString,
            ethernetStatusMode     INTEGER,
            ethernetStatusLink     INTEGER,
            ethernetStatusSpeed     INTEGER,
			      ethernetStatusUnidirectional     INTEGER
        }

        ethernetStatusIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical index"
            ::= { ethernetStatusEntry 1 }

        ethernetStatusName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical name"
            ::= { ethernetStatusEntry 2 }

        ethernetStatusMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    copper(1),
                    optical(2),
                    none(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical state"
            ::= { ethernetStatusEntry 3 }

       ethernetStatusLink  OBJECT-TYPE
            SYNTAX  INTEGER {
                    linkup(1),
                    linkdown(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical state"
            ::= { ethernetStatusEntry 4 }

				ethernetStatusSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    auto(1),
                    s1000full(2),
                    s1000half(3),
                    s100full(4),
                    s100half(5),
                    s10full(6),
                    s10half(7),
                    none(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical speed"
            ::= { ethernetStatusEntry 5 }
            
			ethernetStatusUnidirectional  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2),
					none(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Unidirectional state"
            ::= { ethernetStatusEntry 6 }                

		       ethernetCountTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthernetCountEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ethernet Count table"
            ::= { ethernetTable 4 }

        ethernetCountEntry OBJECT-TYPE
            SYNTAX  EthernetCountEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Count entry"
            INDEX { ethernetCountIndex }
            ::= { ethernetCountTable 1 }

            EthernetCountEntry ::= SEQUENCE {
            ethernetCountIndex     INTEGER,
            ethernetCountName      DisplayString,
            ethernetTxGoodPkt      INTEGER,
            ethernetTxMultiPkt     INTEGER,
            ethernetTxBroadcastPkt INTEGER,
            ethernetTxLength       INTEGER,
						ethernetRxGoodPkt      INTEGER,
            ethernetRxFCSerror     INTEGER,
            ethernetRxBadCount     INTEGER,
            ethernetRxLength       INTEGER
        }

        ethernetCountIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ethernet index"
            ::= { ethernetCountEntry 1 }

        ethernetCountName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ethernet Count name"
            ::= { ethernetCountEntry 2 }

        ethernetTxGoodPkt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 3 }

        ethernetTxMultiPkt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 4 }

        ethernetTxBroadcastPkt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 5 }

        ethernetTxLength  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 6 }

        ethernetRxGoodPkt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 7 }

        ethernetRxFCSerror  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 8 }

        ethernetRxBadCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 9 }

        ethernetRxLength  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Count ethernetTxGoodPkt"
            ::= { ethernetCountEntry 10 }   







	       ctrl2CopperSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Ctrl2CopperSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Copper Set table"
            ::= { ethernetTable 5 }

        ctrl2CopperSetEntry OBJECT-TYPE
            SYNTAX  Ctrl2CopperSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Copper Setup entry"
            INDEX { ctrl2CopperIndex }
            ::= { ctrl2CopperSetTable 1 }

            Ctrl2CopperSetEntry ::= SEQUENCE {
            ctrl2CopperIndex     INTEGER,
            ctrl2CopperName      DisplayString,
            ctrl2CopperState     INTEGER,
            ctrl2CopperSpeed     INTEGER
        }

        ctrl2CopperIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CopperSet index"
            ::= { ctrl2CopperSetEntry 1 }

        ctrl2CopperName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CopperSet name"
            ::= { ctrl2CopperSetEntry 2 }

        ctrl2CopperState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CopperSet state"
            ::= { ctrl2CopperSetEntry 3 }

				ctrl2CopperSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    auto(1),
                    s1000full(2),
                    s1000half(3),
                    s100full(4),
                    s100half(5),
                    s10full(6),
                    s10half(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CopperSet speed"
            ::= { ctrl2CopperSetEntry 4 }

		       ctrl2OpticalSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Ctrl2OpticalSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Optical Set table"
            ::= { ethernetTable 6 }

        ctrl2OpticalSetEntry OBJECT-TYPE
            SYNTAX  Ctrl2OpticalSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet Fiber Setup entry"
            INDEX { ctrl2OpticalIndex }
            ::= { ctrl2OpticalSetTable 1 }

            Ctrl2OpticalSetEntry ::= SEQUENCE {
            ctrl2OpticalIndex     INTEGER,
            ctrl2OpticalName      DisplayString,
            ctrl2OpticalState     INTEGER,
            ctrl2OpticalSpeed     INTEGER,
            ctrl2OpticalUnidirectional     INTEGER
        }

        ctrl2OpticalIndex OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical index"
            ::= { ctrl2OpticalSetEntry 1 }

        ctrl2OpticalName  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical name"
            ::= { ctrl2OpticalSetEntry 2 }

        ctrl2OpticalState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optical state"
            ::= { ctrl2OpticalSetEntry 3 }

				ctrl2OpticalSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    s1000(1),
                    s100(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optical speed"
            ::= { ctrl2OpticalSetEntry 4 }
       
       ctrl2OpticalUnidirectional  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Unidirectional mode"
            ::= { ctrl2OpticalSetEntry 5 } 










--
-- PseudWire Setup Table
--                                                                              
		pwCtrlSetupTable         OBJECT IDENTIFIER ::= { controller 34 }
		pwSourceSetupTable       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 1 }
        
        pwPriSourceIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Source IP"
            ::= { pwSourceSetupTable 1 }
            
        pwPriSourceNetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP netmask"
            ::= { pwSourceSetupTable 2 }
            
       pwPriSourceGateway  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP Gateway"
            ::= { pwSourceSetupTable 3 }          

       pwPriSourceMac  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire source mac address"
            ::= { pwSourceSetupTable 4 }    

        pwSecSourceIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire 2nd Source IP"
            ::= { pwSourceSetupTable 5 }
            
        pwSecSourceNetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire 2nd IP netmask"
            ::= { pwSourceSetupTable 6 }
            
       pwSecSourceGateway  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire 2nd IP Gateway"
            ::= { pwSourceSetupTable 7 }          

       pwSecSourceMac  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire 2nd source mac address"
            ::= { pwSourceSetupTable 8 }    
            
       pwActiveTimer  OBJECT-TYPE
            SYNTAX  INTEGER (1..99)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire active timer 1~99"
            ::= { pwSourceSetupTable 17 }    
            
       pwRemoteLoss  OBJECT-TYPE
            SYNTAX  INTEGER{
                    continue(1),
                    stop(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire source mac address"
            ::= { pwSourceSetupTable 18 }  
        
       pwSVlanTPID  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire svlan tpid"
            ::= { pwSourceSetupTable 19 }              

--
-- PseudWire Alarm Setup Table
--             
 		pwAlarmSetupTable       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 3 } 
            
       pwArpLost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "arp-bundle alarm severity type"
            ::= { pwAlarmSetupTable 1 }  
          
       pwRxLost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "rx lost alarm severity type"
            ::= { pwAlarmSetupTable 2 }           

       pwLostOfBundle  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "lost of bundle alarm "
            ::= { pwAlarmSetupTable 3 }  
            
       pwUnderRun  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "underrun alarm severity type"
            ::= { pwAlarmSetupTable 4 }  
            
       pwOverRun  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "overrun alarm severity type"
            ::= { pwAlarmSetupTable 5 }  
            
       pwLBitAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LBit alarm severity type"
            ::= { pwAlarmSetupTable 6 }  

       pwRBitAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RBit alarm severity type"
            ::= { pwAlarmSetupTable 7 }                                                            

       pwIPConflictAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Conflictalarm severity type"
            ::= { pwAlarmSetupTable 8 }      

	   ctrl1ETH1ELECAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 1 electrical Link down alarm"
            ::= { pwAlarmSetupTable 9 }  
			
	   ctrl1ETH2ELECAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 2 electrical Link down alarm"
            ::= { pwAlarmSetupTable 10 }  
			
	   ctrl1ETH1OPTIAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 1 optical Link down alarm"
            ::= { pwAlarmSetupTable 11 }  
			
	   ctrl1ETH2OPTIAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 2 optical Link down alarm"
            ::= { pwAlarmSetupTable 12 }  
	   ctrl2ETH1ELECAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 1 electrical Link down alarm"
            ::= { pwAlarmSetupTable 15 }  
			
	   ctrl2ETH2ELECAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 2 electrical Link down alarm"
            ::= { pwAlarmSetupTable 16 }  
			
	   ctrl2ETH1OPTIAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 1 optical Link down alarm"
            ::= { pwAlarmSetupTable 17 }  
			
	   ctrl2ETH2OPTIAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 2 optical Link down alarm"
            ::= { pwAlarmSetupTable 18 }   

	   eth1LOOPAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Eth 1 looping alarm"
            ::= { pwAlarmSetupTable 13 }  
	   eth2LOOPAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Eth 2 looping alarm"
            ::= { pwAlarmSetupTable 14 }
                     

--
-- PseudWire Clock Setup Table
--             
 		pwClockSetupTable       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 4 } 
 		
 		                                                            
        pwACRConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF   PWACRConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw ACR Config Table."
            ::= { pwClockSetupTable  1 }

        pwACRConfigEntry	OBJECT-TYPE
            SYNTAX  PWACRConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Pw ACR Config  Entry"
            INDEX { pwACRIndex }
            ::= { pwACRConfigTable 1 }

        PWACRConfigEntry ::= SEQUENCE {
            pwACRIndex       INTEGER,
            pwACRPortID      INTEGER,
            pwACREnable      INTEGER,
            pwACRStatus   INTEGER
        }

        pwACRIndex OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { pwACRConfigEntry 1 }

        pwACRPortID OBJECT-TYPE
            SYNTAX INTEGER (1..64)
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { pwACRConfigEntry 2 }

        pwACREnable OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { pwACRConfigEntry 3 }

        pwACRStatus OBJECT-TYPE
            SYNTAX INTEGER {
                    idle(1),
                    acquisition(2),
                    tracking1(3),
                    tracking2(4),
                    tracking3(5),
                    tracking4(6),
                    tracking5(7),
                    none(99)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { pwACRConfigEntry 4 }

     timeStampUploadTable       OBJECT IDENTIFIER ::= { pwClockSetupTable 2 } 

        pwTftpServerIP OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload TFTP server IP."
            ::= { timeStampUploadTable 1 }

        pwAcrNum OBJECT-TYPE
            SYNTAX INTEGER (1..4)
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload ACR Number."
            ::= { timeStampUploadTable 2 }

        pwEnable OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload Enable/Disable."
            ::= { timeStampUploadTable 3 }     


--
-- PseudWire Mode Setup Table
--             
 		pwProtectModeSetupTable       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 5 } 
            
       pwModeSelect  OBJECT-TYPE
            SYNTAX  INTEGER {
--                    mode0(1),
                    mode1(2),
                    mode2(3)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw protect mode select"
            ::= { pwProtectModeSetupTable 1 }  
          
--       pwModeAction  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    nonrevertible(1),
--                    revertible(2)
--            }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                "pw protect mode action"
--            ::= { pwProtectModeSetupTable 2 }          

       pwCascadePort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    eth1LinkUp(1),
                    eth2LinkUp(2),
                    eth1LinkDown(3),
                    eth2LinkDown(4),
                    na(5)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw protect cascade port"
            ::= { pwProtectModeSetupTable 3 }         
            
       pwCascadeChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notReady(1),
                    ready(2),
                    na(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw protect cascade channel"
            ::= { pwProtectModeSetupTable 4 }                                   

--
-- New PseudWire Bundle Setup Table 
--

-- primary
    pwProtectBundleSetup       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 6 } 
        pwPriPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
           ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle port 1~64"
            ::= { pwProtectBundleSetup 1 }               

        pwPriFormat  OBJECT-TYPE
            SYNTAX  INTEGER{
                    cesopsn(2),
                    satop(3)
            }        
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle format"
            ::= { pwProtectBundleSetup 2 }                        

        pwPriType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
--                    ipwithRTP(3),
--                    cesoEthwithRTP(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle Type"
            ::= { pwProtectBundleSetup 3 }  
          
        pwPriTos  OBJECT-TYPE
           SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle TOS"
            ::= { pwProtectBundleSetup 4 }           
          
        pwPriUdpEcid  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle udp/ecid"
            ::= { pwProtectBundleSetup 5 }              
          
        pwPriFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonCAS(1),
                    e1CAS(3),
                    t1CAS(4),
                    e1unframe(5),
                    t1unframe(6),
                    t1unframe192(7)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle frame item"
            ::= { pwProtectBundleSetup 6 }             
          
        pwPriDestIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle ip item"
           ::= { pwProtectBundleSetup 7 }  
                                        
        pwPriStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Stratum Setup"
            ::= { pwProtectBundleSetup 8 }          
          
        pwPriNumofTimeslot  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw number of timeslot"
            ::= { pwProtectBundleSetup 9 }                  
          
        pwPriNumofFrame  OBJECT-TYPE
            SYNTAX  INTEGER (1..1500)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw number of Frame"
            ::= { pwProtectBundleSetup 10 }             

        pwPriJitterDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw jitter delay"
            ::= { pwProtectBundleSetup 11 } 

        pwPriJitterSize  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw jitter size"
            ::= { pwProtectBundleSetup 12 } 

        pwPriVlanSetup  OBJECT-TYPE
            SYNTAX  INTEGER{
                    off(1),
                    cvlan(2),
                    svlan(3),
                    qinq(4)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw vlan"
            ::= { pwProtectBundleSetup 13 } 

        pwPriCVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { pwProtectBundleSetup 14 }

        pwPriCVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { pwProtectBundleSetup 15 }

        pwPriSVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { pwProtectBundleSetup 16 }

        pwPriSVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { pwProtectBundleSetup 17 }

-- Secondary
        pwSecFormat  OBJECT-TYPE
            SYNTAX  INTEGER{
                    cesopsn(2),
                    satop(3)
            }        
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle format"
            ::= { pwProtectBundleSetup 18 }                        

        pwSecType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
--                    ipwithRTP(3),
--                    cesoEthwithRTP(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle Type"
            ::= { pwProtectBundleSetup 19 }  
          
        pwSecTos  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle TOS"
            ::= { pwProtectBundleSetup 20 }           
          
        pwSecUdpEcid  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle udp/ecid"
            ::= { pwProtectBundleSetup 21 }              
          
        pwSecFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonCAS(1),
                    e1CAS(3),
                    t1CAS(4),
                    e1unframe(5),
                    t1unframe(6),
                    t1unframe192(7)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle frame item"
            ::= { pwProtectBundleSetup 22 }             
          
        pwSecDestIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle ip item"
           ::= { pwProtectBundleSetup 23 }  
                                        
        pwSecStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Stratum Setup"
            ::= { pwProtectBundleSetup 24 }          
          
        pwSecNumofTimeslot  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw number of timeslot"
            ::= { pwProtectBundleSetup 25 }                  
          
        pwSecNumofFrame  OBJECT-TYPE
            SYNTAX  INTEGER (1..1500)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw number of Frame"
            ::= { pwProtectBundleSetup 26 }             

        pwSecJitterDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw jitter delay"
            ::= { pwProtectBundleSetup 27 } 

        pwSecJitterSize  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw jitter size"
            ::= { pwProtectBundleSetup 28 } 

--        pwSecVlanSetup  OBJECT-TYPE
--            SYNTAX  INTEGER{
--                    off(1),
--                    cvlan(2),
--                    svlan(3)
--            }
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                "pw vlan"
--            ::= { pwProtectBundleSetup 29 } 

        pwSecCVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { pwProtectBundleSetup 30 }

        pwSecCVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { pwProtectBundleSetup 31 }

        pwSecSVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { pwProtectBundleSetup 32 }

        pwSecSVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { pwProtectBundleSetup 33 }

        pwProtectAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    activateBundle(1),
                    deleteBundle(2),
                    deleteAll(3),
--                    activeAll(4),
                    changeBundle(5),
                    stopBundleTx(6),
                    addPriPath(7),
                    add2ndPath(8),
                    delPriPath(9),
                    del2ndPath(10)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle action"
            ::= { pwProtectBundleSetup 34}

        pwProtectConfirm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "pw Confirm Setup"
            ::= { pwProtectBundleSetup 35}
						
        pwProtectCfgStatus  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle cfg status"
           ::= { pwProtectBundleSetup 36 } 	

--
-- New PseudWire Bundle Setup Table 
--

    pwPerfClearSetup       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 7 } 
       pwPerfStatistClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo perf clear"
            ::= { pwPerfClearSetup 1 }             
       
       pwBundleStatistClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo bundle statistics perf clear"
            ::= { pwPerfClearSetup 2 } 
       pwArrivalTimeClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo arrival time statistics clear"
            ::= { pwPerfClearSetup 3 } 
            
       pwRoundTripStatistClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo bundle round trip statistics perf clear"
            ::= { pwPerfClearSetup 4 }  
            
       pwProtectStatistClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo bundle Protect statistics perf clear"
            ::= { pwPerfClearSetup 5 }                        

       dpllStickyClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Dpll sticky clear"
            ::= { pwPerfClearSetup 6 }                                 

       acrStatusClear  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "acr status clear"
            ::= { pwPerfClearSetup 7 }   

       pwPerPerfStatistClear  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "per Pseudo perf clear"
            ::= { pwPerfClearSetup 8 }                                                              
            

--
-- PseudWire Round Trip Delay Table 
--

    pwRoundTripDelay       OBJECT IDENTIFIER ::= { pwCtrlSetupTable 8 } 
       
       pwRoundTripBid  OBJECT-TYPE
            SYNTAX  INTEGER (0..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo round trip delay bid 0~64"
            ::= { pwRoundTripDelay 1 }             
       
       pwRoundTripAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo bundle round trip action"
            ::= { pwRoundTripDelay 2 } 

--
-- PseudWire Jitter Buffer Recenter Table 
--

    pwJitterBufRecenter    OBJECT IDENTIFIER ::= { pwCtrlSetupTable 9 } 
       
       pwJitterBufBid  OBJECT-TYPE
            SYNTAX  INTEGER (0..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo jitter buf bid 0~64"
            ::= { pwJitterBufRecenter 1 }             
       
       pwJitterBufAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
            }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Pseudo jitter buf action"
            ::= { pwJitterBufRecenter 2 } 
               				
--
-- PseudWire Status Table
--                                                                              
		pwCtrlStatusTable         OBJECT IDENTIFIER ::= { controller 35 }
		pwSourceStatusTable       OBJECT IDENTIFIER ::= { pwCtrlStatusTable 1 }
        
        pwPriSrcIPInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Source IP"
            ::= { pwSourceStatusTable 1 }
            
        pwPriSubnetMaskInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP netmask"
            ::= { pwSourceStatusTable 2 }
            
       pwPriGatewayIPInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP Gateway"
            ::= { pwSourceStatusTable 3 }          

       pwPriMacAddrInfo  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire source mac address"
            ::= { pwSourceStatusTable 4 }    
 
        pwSecSrcIPInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Source IP"
            ::= { pwSourceStatusTable 5 }
            
        pwSecSubnetMaskInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP netmask"
            ::= { pwSourceStatusTable 6 }
            
       pwSecGatewayIPInfo  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire IP Gateway"
            ::= { pwSourceStatusTable 7 }          

       pwSecMacAddrInfo  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire source mac address"
            ::= { pwSourceStatusTable 8 }    
            
       pwActiveTimerInfo  OBJECT-TYPE
            SYNTAX  INTEGER (1..99)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire active timer 1~99"
            ::= { pwSourceStatusTable 17 }    
            
       pwRemoteLossInfo  OBJECT-TYPE
            SYNTAX  INTEGER{
                    continue(1),
                    stop(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire source mac address"
            ::= { pwSourceStatusTable 18 }  
       
       pwSVlanTPIDInfo  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire svlan tpid"
            ::= { pwSourceStatusTable 19 }                           
            
                                
--
-- PseudWire Status Table
-- 
       pwBundleStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWBundleStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw status table"
            ::= { pwCtrlStatusTable 2 }

        pwBundleStatusEntry OBJECT-TYPE
            SYNTAX  PWBundleStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw status entry"
            INDEX { pwStatusIndex }
            ::= { pwBundleStatusTable 1 }

        PWBundleStatusEntry ::= SEQUENCE {
            pwStatusIndex     				INTEGER,
            pwStatusPort      				INTEGER,
            pwStatusFormat						INTEGER,
            pwStatusType							INTEGER,
            pwStatusTos      					INTEGER,
            pwStatusUdpEcid     			INTEGER,
            pwStatusFrame 						INTEGER,
            pwStatusPriDestIP         DisplayString,
						pwStatusStratum      			INTEGER,
            pwStatusNumofTimeslot     INTEGER,
            pwStatusNumofFrame     		INTEGER,
            pwStatusJitterDelay       INTEGER,
            pwStatusJitterSize       	INTEGER,
            pwStatusVlanSetup       	INTEGER,
            pwStatusCVlanID       		INTEGER,
            pwStatusCVlanPriority 		INTEGER,
            pwStatusSVlanID       		INTEGER,
            pwStatusSVlanPriority 		INTEGER,
            pwStatusAction  					INTEGER,
            pwSecStatusPort      			INTEGER,
            pwSecStatusFormat					INTEGER,
            pwSecStatusType						INTEGER,
            pwSecStatusTos      			INTEGER,
            pwSecStatusUdpEcid     		INTEGER,
            pwSecStatusFrame 					INTEGER,
            pwSecStatusPriDestIP      DisplayString,
						pwSecStatusStratum      	INTEGER,
            pwSecStatusNumofTimeslot  INTEGER,
            pwSecStatusNumofFrame     INTEGER,
            pwSecStatusJitterDelay    INTEGER,
            pwSecStatusJitterSize     INTEGER,
            pwSecStatusVlanSetup      INTEGER,
            pwSecStatusCVlanID       	INTEGER,
            pwSecStatusCVlanPriority 	INTEGER,
            pwSecStatusSVlanID       	INTEGER,
            pwSecStatusSVlanPriority 	INTEGER,
            pwSecStatusAction   			INTEGER    
        }
       
       pwStatusIndex  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Index 1~64"
            ::= { pwBundleStatusEntry 1 }    
       
       pwStatusPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle port 1~64"
            ::= { pwBundleStatusEntry 2 }               

       pwStatusFormat  OBJECT-TYPE
            SYNTAX  INTEGER{
                    cesopsn(2),
                    satop(3)
            }        
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle format"
            ::= { pwBundleStatusEntry 3 }                        

       pwStatusType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
--                    ipwithRTP(3),
--                    cesoEthwithRTP(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle Type"
            ::= { pwBundleStatusEntry 4 }  
          
        pwStatusTos  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle TOS"
            ::= { pwBundleStatusEntry 5 }           
          
        pwStatusUdpEcid  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle udp/ecid"
            ::= { pwBundleStatusEntry 6 }              
          
        pwStatusFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonCAS(1),
                    e1CAS(3),
                    t1CAS(4),
                    e1unframe(5),
                    t1unframe(6),
                    t1unframe192(7)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle cas item"
            ::= { pwBundleStatusEntry 7 }             
          
         pwStatusPriDestIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle cas item"
            ::= { pwBundleStatusEntry 8 }               
          
         pwStatusStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stratum Setup"
            ::= { pwBundleStatusEntry 12 }          
          
         pwStatusNumofTimeslot  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw number of timeslot"
            ::= { pwBundleStatusEntry 13 }                  
          
         pwStatusNumofFrame  OBJECT-TYPE
            SYNTAX  INTEGER (1..1500)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw number of Frame"
            ::= { pwBundleStatusEntry 14 }             

         pwStatusJitterDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw jitter delay"
            ::= { pwBundleStatusEntry 15 } 

         pwStatusJitterSize  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw jitter delay"
            ::= { pwBundleStatusEntry 16 } 

         pwStatusVlanSetup  OBJECT-TYPE
            SYNTAX  INTEGER{
                    off(1),
                    cvlan(2),
                    svlan(3),
                    qinq(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw vlan"
            ::= { pwBundleStatusEntry 17 } 

         pwStatusCVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { pwBundleStatusEntry 18 }

         pwStatusCVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { pwBundleStatusEntry 19 }

         pwStatusSVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { pwBundleStatusEntry 20 }

         pwStatusSVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { pwBundleStatusEntry 21 }

        pwStatusAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
--                    deleteBundle(2),
--                    deleteAll(3),
--                    activeAll(4),
--                    changeBundle(5)
                    standby(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle action"
            ::= { pwBundleStatusEntry 22}  
             
       pwSecStatusPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pseudo Wire bundle port 1~64"
            ::= { pwBundleStatusEntry 23 }               

       pwSecStatusFormat  OBJECT-TYPE
            SYNTAX  INTEGER{
                    cesopsn(2),
                    satop(3)
            }        
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle format"
            ::= { pwBundleStatusEntry 24 }                        

       pwSecStatusType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
--                    ipwithRTP(3),
--                    cesoEthwithRTP(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle Type"
            ::= { pwBundleStatusEntry 25 }  
          
        pwSecStatusTos  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle TOS"
            ::= { pwBundleStatusEntry 26 }           
          
        pwSecStatusUdpEcid  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle udp/ecid"
            ::= { pwBundleStatusEntry 27 }              
          
        pwSecStatusFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonCAS(1),
                    e1CAS(3),
                    t1CAS(4),
                    e1unframe(5),
                    t1unframe(6),
                    t1unframe192(7)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle cas item"
            ::= { pwBundleStatusEntry 28 }             
          
         pwSecStatusPriDestIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pseudo Wire bundle cas item"
            ::= { pwBundleStatusEntry 29 }               
          
         pwSecStatusStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Stratum Setup"
            ::= { pwBundleStatusEntry 30 }          
          
         pwSecStatusNumofTimeslot  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw number of timeslot"
            ::= { pwBundleStatusEntry 31 }                  
          
         pwSecStatusNumofFrame  OBJECT-TYPE
            SYNTAX  INTEGER (1..1500)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secpw number of Frame"
            ::= { pwBundleStatusEntry 32 }             

         pwSecStatusJitterDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw jitter delay"
            ::= { pwBundleStatusEntry 33 } 

         pwSecStatusJitterSize  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec pw jitter delay"
            ::= { pwBundleStatusEntry 34 } 

         pwSecStatusVlanSetup  OBJECT-TYPE
            SYNTAX  INTEGER{
                    off(1),
                    cvlan(2),
                    svlan(3),
                    qinq(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec pw vlan"
            ::= { pwBundleStatusEntry 35 } 

         pwSecStatusCVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec customer VLAN ID"
            ::= { pwBundleStatusEntry 36 }

         pwSecStatusCVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec customer VLAN Priority"
            ::= { pwBundleStatusEntry 37 }

         pwSecStatusSVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec provider VLAN ID"
            ::= { pwBundleStatusEntry 38 }

         pwSecStatusSVlanPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p0(1),
                    p1(2),
                    p2(3),
                    p3(4),
                    p4(5),
                    p5(6),
                    p6(7),
                    p7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec provider VLAN Priority"
            ::= { pwBundleStatusEntry 39 }              

        pwSecStatusAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    standby(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "sec bundle action"
            ::= { pwBundleStatusEntry 40}              


--
-- PseudWire Statics Table
-- 
       pwBundleStaticsTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWBundleStaticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw statics table"
            ::= { pwCtrlStatusTable 3 }

        pwBundleStaticsEntry OBJECT-TYPE
            SYNTAX  PWBundleStaticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw statics entry"
            INDEX { pwStaticsIndex }
            ::= { pwBundleStaticsTable 1 }

        PWBundleStaticsEntry ::= SEQUENCE {
            pwStaticsIndex     		INTEGER,
            pwStaticsPort      		INTEGER,
            pwJitBufUnderRun			INTEGER,
            pwJitBufOverRun				INTEGER,
            pwJitBufMin      			INTEGER,
            pwJitBufMax     			INTEGER,
            pwJitBufDepth 				INTEGER,
            pwLBitCount     			INTEGER,
			      pwRBitCount      			INTEGER,
            pwTxGoodCount     		INTEGER,
            pwRxGoodCount       	INTEGER,
            pwRxLostCount         INTEGER,  
            pwLink       					INTEGER,
            pwSizeError       		INTEGER,
            pwRxAISAlm        		INTEGER,
            pwPath            		INTEGER,
            pwMisOrderCount       INTEGER, 
            pwRxDuplicateCount    INTEGER
        }
       
       pwStaticsIndex  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Index 1~64"
            ::= { pwBundleStaticsEntry 1 }    
       
       pwStaticsPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle port 1~64"
            ::= { pwBundleStaticsEntry 2 }               

       pwJitBufUnderRun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter uv"
            ::= { pwBundleStaticsEntry 3 }                        

       pwJitBufOverRun  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter ov"
            ::= { pwBundleStaticsEntry 4 }  
          
        pwJitBufMin  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter min"
            ::= { pwBundleStaticsEntry 5 }           
          
        pwJitBufMax  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter max"
            ::= { pwBundleStaticsEntry 6 }              
          
        pwJitBufDepth  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter depth"
            ::= { pwBundleStaticsEntry 7 }             
          
         pwLBitCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw l-bit error"
            ::= { pwBundleStaticsEntry 8 }               
          
         pwRBitCount  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw r-bit error"
            ::= { pwBundleStaticsEntry 9 }          
          
         pwTxGoodCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw tx good pkt"
            ::= { pwBundleStaticsEntry 10 }                  
          
         pwRxGoodCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx good pkt"
            ::= { pwBundleStaticsEntry 11 }             

         pwRxLostCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx lost count"
            ::= { pwBundleStaticsEntry 12 }  
            
         pwLink  OBJECT-TYPE
            SYNTAX  INTEGER
            {
            		down(1),
            		up(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw link status"
            ::= { pwBundleStaticsEntry 13 } 

         pwSizeError  OBJECT-TYPE
            SYNTAX  INTEGER{
            		no(1),
            		yes(2),
            		cas(3)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw size error"
            ::= { pwBundleStaticsEntry 14 } 

         pwRxAISAlm  OBJECT-TYPE
            SYNTAX  INTEGER{
            		no(1),
            		ais(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx ais alm"
            ::= { pwBundleStaticsEntry 15 } 

         pwPath  OBJECT-TYPE
            SYNTAX  INTEGER{
            		pri(1),
            		sec(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw path"
            ::= { pwBundleStaticsEntry 16 }  
              
         pwMisOrderCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw miss-order count"
            ::= { pwBundleStaticsEntry 17 }   
            
         pwRxDuplicateCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx duplicate count"
            ::= { pwBundleStaticsEntry 18 }                                                

--
-- PseudWire Delay Info Table
-- 
       pwBundleDelayInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw delay info table"
            ::= { pwCtrlStatusTable 4 }

        pwBundleDelayInfoEntry OBJECT-TYPE
            SYNTAX  PWBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw Delay Info entry"
            INDEX { pwInfoIndex }
            ::= { pwBundleDelayInfoTable 1 }

        PWBundleDelayInfoEntry ::= SEQUENCE {
            pwInfoIndex    	        INTEGER,
            pwInfoPort              INTEGER,
            pwCellNum								INTEGER,
            pwJitterDelaySt					INTEGER,
            pwJitterSizeSt     			INTEGER,
            pwPropDelay     				DisplayString,
            pwPktSize 							DisplayString,
            pwOverHead     					DisplayString,
						pwEthernetBW      			DisplayString,
            pwTotalBW     					DisplayString
        }
       
       pwInfoIndex  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Index 1~64"
            ::= { pwBundleDelayInfoEntry 1 }    
       
       pwInfoPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle port 1~64"
            ::= { pwBundleDelayInfoEntry 2 }               

       pwCellNum  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw cell number"
            ::= { pwBundleDelayInfoEntry 3 }                        

       pwJitterDelaySt  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter delay"
            ::= { pwBundleDelayInfoEntry 4 }  
          
        pwJitterSizeSt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter size"
            ::= { pwBundleDelayInfoEntry 5 }           
          
        pwPropDelay  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter prop delay"
            ::= { pwBundleDelayInfoEntry 6 }              
          
        pwPktSize  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw pkt size"
            ::= { pwBundleDelayInfoEntry 7 }             
          
         pwOverHead  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw over head"
            ::= { pwBundleDelayInfoEntry 8 }               
          
         pwEthernetBW  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw ethernet bw"
            ::= { pwBundleDelayInfoEntry 9 }          
          
         pwTotalBW  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw total bw"
            ::= { pwBundleDelayInfoEntry 10 }                  
                                        
		pwAlarmStatusTable       OBJECT IDENTIFIER ::= { pwCtrlStatusTable 5 }
        
      pwArpLostStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "arp-bundle alarm severity type"
            ::= { pwAlarmStatusTable 1 }  
          
       pwRxLostStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "rx lost alarm severity type"
            ::= { pwAlarmStatusTable 2 }           

       pwLostOfBundleStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "lost of bundle alarm "
            ::= { pwAlarmStatusTable 3 }  
            
       pwUnderRunStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "underrun alarm severity type"
            ::= { pwAlarmStatusTable 4 }  
            
       pwOverRunStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "overrun alarm severity type"
            ::= { pwAlarmStatusTable 5 }  
            
       pwLBitStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LBit alarm severity type"
            ::= { pwAlarmStatusTable 6 }  

       pwRBitStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RBit alarm severity type"
            ::= { pwAlarmStatusTable 7 }                                                                 
            
       pwIPConflictStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "IP Conflictalarm severity type"
            ::= { pwAlarmStatusTable 8 }  
			
	   ctrl1ETH1ELECAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 1 electrical Link down alarm"
            ::= { pwAlarmStatusTable 9 }  
			
	   ctrl1ETH2ELECAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 2 electrical Link down alarm"
            ::= { pwAlarmStatusTable 10 }  
			
	   ctrl1ETH1OPTIAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 1 optical Link down alarm"
            ::= { pwAlarmStatusTable 11 }  
			
	   ctrl1ETH2OPTIAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 1 Eth 2 optical Link down alarm"
            ::= { pwAlarmStatusTable 12 }  
	   eth1LOOPAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Eth 1 Looping alram"
            ::= { pwAlarmStatusTable 13 }  
	   eth2LOOPAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Eth 2 Looping alram"
            ::= { pwAlarmStatusTable 14 }
	   ctrl2ETH1ELECAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 1 electrical Link down alarm"
            ::= { pwAlarmStatusTable 15 }  
			
	   ctrl2ETH2ELECAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 2 electrical Link down alarm"
            ::= { pwAlarmStatusTable 16 }  
			
	   ctrl2ETH1OPTIAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 1 optical Link down alarm"
            ::= { pwAlarmStatusTable 17 }  
			
	   ctrl2ETH2OPTIAlarmStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "controller 2 Eth 2 optical Link down alarm"
            ::= { pwAlarmStatusTable 18 }  

--
--  PW SFP Info Table
--
        pwSfpInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSfpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "sfp information table"
            ::= {pwCtrlStatusTable  6}

        pwSfpInfoEntry  OBJECT-TYPE
            SYNTAX  PWSfpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in sfp information table."
            INDEX { sfpIndex }
            ::= { pwSfpInfoTable 1 }

        PWSfpInfoEntry ::= SEQUENCE  {
            sfpIndex            		INTEGER,
            sfpEthIndex            	INTEGER,
            sfpConnector            INTEGER,
            sfpTransceiver          DisplayString,
            sfpLinkLength           DisplayString,
            sfpTechnology           DisplayString,
            sfpEncoding             DisplayString,
            sfpLength9to125mm      	DisplayString,
            sfpLength50to125mm     	DisplayString,
            sfpLength62p5to125mm   	DisplayString,
            sfpLength          			DisplayString,
            sfpTemperature          DisplayString,
            sfpVcc                  DisplayString,
            sfpTxBias               DisplayString,
            sfpTxPower              DisplayString,
            sfpRxPower              DisplayString,
            sfpDate              		DisplayString,
            sfpVendorName           DisplayString,
            sfpOUI              		DisplayString,
            sfpPN              			DisplayString,
            sfpRev              		DisplayString,
            sfpWavelength           DisplayString
        }

        sfpIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "1~2,  "
            ::= { pwSfpInfoEntry 1 }

        sfpEthIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    eth1 (1),
                    eth2 (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "optical port"
            ::= { pwSfpInfoEntry 2 }

        sfpConnector  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notavailable(1),
                    sc(2),
                    fiberchannelstyle1copper(3),
                    fiberchannelstyle2copper(4),
                    bnctnc(5),
                    fibrechannelcoaxialheader(6),
                    fiberJack(7),
                    lc(8),
                    mtrj(9),
                    mu(10),
                    sg(11),
                    optcalpigtail(12),
                    hssdcii(13),
                    copperpigtail(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP connector"
            ::= { pwSfpInfoEntry 3 }

        sfpTransceiver  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP transceiver"
            ::= { pwSfpInfoEntry 4 }

        sfpLinkLength  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP link length"
            ::= { pwSfpInfoEntry 5 }

        sfpTechnology  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP technology"
            ::= { pwSfpInfoEntry 6 }

        sfpEncoding  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP encoding"
            ::= { pwSfpInfoEntry 7 }

        sfpLength9to125mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 9/125 mm fiber"
            ::= { pwSfpInfoEntry 8 }

        sfpLength50to125mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 50/125 mm fiber"
            ::= { pwSfpInfoEntry 9 }

        sfpLength62p5to125mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 62.5/125 mm fiber"
            ::= { pwSfpInfoEntry 10 }

        sfpLength  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Length"
            ::= { pwSfpInfoEntry 11 }

        sfpTemperature  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Temperature"
            ::= { pwSfpInfoEntry 12 }
            
        sfpVcc  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Vcc"
            ::= { pwSfpInfoEntry 13 }

        sfpTxBias  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Tx Bias current"
            ::= { pwSfpInfoEntry 14 }

        sfpTxPower  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Tx power"
            ::= { pwSfpInfoEntry 15 }

        sfpRxPower  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 16 }

        sfpDate             OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 17 }

        sfpVendorName              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 18 }

        sfpOUI              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 19 }

        sfpPN              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 20 }

        sfpRev              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 21 }

        sfpWavelength           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { pwSfpInfoEntry 22 }
            

--
--  PW ACR Status Table
--
        pwACRStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF   PWACRStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw ACR status Table."
            ::= { pwCtrlStatusTable  7 }

        pwACRStatusEntry	OBJECT-TYPE
            SYNTAX  PWACRStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Pw ACR Status  Entry"
            INDEX { pwACRIndex }
            ::= { pwACRStatusTable 1 }

        PWACRStatusEntry ::= SEQUENCE {
            pwACRStatusIndex       INTEGER,
            pwACRStatusPortID      INTEGER,
            pwACRStatusEnable      INTEGER,
            pwACRStatusStatus      INTEGER,
            pwACRDisconCnt         INTEGER,
            pwACRRestartCnt        INTEGER,
            pwACRCovariance        DisplayString,
            pwACRFreq              DisplayString
        }

        pwACRStatusIndex OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR status Index."
            ::= { pwACRStatusEntry 1 }

        pwACRStatusPortID OBJECT-TYPE
            SYNTAX INTEGER (1..64)
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR port id."
            ::= { pwACRStatusEntry 2 }

        pwACRStatusEnable OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2),
                    none(99)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The acr enable status."
            ::= { pwACRStatusEntry 3 }

        pwACRStatusStatus OBJECT-TYPE
            SYNTAX INTEGER {
                    idle(1),
                    acquisition(2),
                    tracking1(3),
                    tracking2(4),
                    tracking3(5),
                    tracking4(6),
                    tracking5(7),
                    none(99)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The acr tracking status."
            ::= { pwACRStatusEntry 4 }  

       pwACRDisconCnt OBJECT-TYPE
            SYNTAX INTEGER 
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR discountinue count."
            ::= { pwACRStatusEntry 5 }     
            
       pwACRRestartCnt OBJECT-TYPE
            SYNTAX INTEGER 
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR restart count."
            ::= { pwACRStatusEntry 6 }            
            
       pwACRCovariance OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..40))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR covariance."
            ::= { pwACRStatusEntry 7 }                                             
            
       pwACRFreq OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..40))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The ACR Freq."
            ::= { pwACRStatusEntry 8 }                                                        
            
--
--  Current Performance Table
--

    pwPerformanceTable       OBJECT IDENTIFIER ::= { pwCtrlStatusTable   8}

        pwCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current Performance Table"
            ::= { pwPerformanceTable 1}

        pwCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  PWCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { pwPortIndex }
            ::= { pwCurrentPerfTable 1 }

         PWCurrentPerfEntry ::= SEQUENCE  {
            pwPortIndex               INTEGER,
            pwCurrentRxLost         	INTEGER,
            pwCurrentJitBufUnderrun   INTEGER,
            pwCurrentJitBufOverrun    INTEGER,
            pwCurr15MinTimeElapsed    INTEGER,
            pwValid15MinInterval      INTEGER,
            pwCurrentEth1Loss         INTEGER,
            pwCurrentEth2Loss         INTEGER
        }

        pwPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw perf portIndex 1-64"
            ::= { pwCurrentPerfEntry 1 }

        pwCurrentRxLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current Rx-Lost Counter. Rx-Lost is count for a boundle about ethernet Lost/ jump events Packets."
            ::= { pwCurrentPerfEntry 2 }

        pwCurrentJitBufUnderrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current J-UR Counter. Underrun is count of jitter buffer underrun events."
            ::= { pwCurrentPerfEntry 3 }

        pwCurrentJitBufOverrun   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current J-OR Counter. Overrun is count of jitter buffer overrun events."
            ::= { pwCurrentPerfEntry 4 }


        pwCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { pwCurrentPerfEntry 5}

        pwValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { pwCurrentPerfEntry 6}

       pwCurrentEth1Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current eth1 los Counter."
            ::= { pwCurrentPerfEntry 7 }
            
       pwCurrentEth2Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current eth2 los Counter."
            ::= { pwCurrentPerfEntry 8 }            
                        

--
--  Interval Performance Table
--

       pwIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval Performance Table"
            ::= { pwPerformanceTable 2 }

       pwIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  PWIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval performance entry"
            INDEX { pwIntPortIndex, pwIntervalPerfNum }
            ::= { pwIntervalPerfTable 1 }

       PWIntervalPerfEntry  ::= SEQUENCE  {
            pwIntPortIndex              INTEGER,
            pwIntervalPerfNum           INTEGER,
            pwIntervalRxLost            INTEGER,
            pwIntervalJitBufUnderrun    INTEGER,
            pwIntervalJitBufOverrun     INTEGER,
            pwIntervalEth1Loss          INTEGER,
            pwIntervalEth2Loss          INTEGER
       }
       
       pwIntPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { pwIntervalPerfEntry 1 }

       pwIntervalPerfNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { pwIntervalPerfEntry 2 }

        pwIntervalRxLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " interval rx-lost counter "
            ::= { pwIntervalPerfEntry 3}

        pwIntervalJitBufUnderrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer underrun Counter "
            ::= { pwIntervalPerfEntry 4}

        pwIntervalJitBufOverrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer overrun Counter "
            ::= { pwIntervalPerfEntry 5}
            
        pwIntervalEth1Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth1 Loss Counter "
            ::= { pwIntervalPerfEntry 6}
            
        pwIntervalEth2Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth2 Loss Counter "
            ::= { pwIntervalPerfEntry 7}                        


--
--  Total Performance Table
--
        pwTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total Performance Table"
            ::= {  pwPerformanceTable 3 }

        pwTotalPerfEntry  OBJECT-TYPE
            SYNTAX  PWTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { pwTotalPortIndex }
            ::= { pwTotalPerfTable 1 }

        PWTotalPerfEntry ::= SEQUENCE  {
            pwTotalPortIndex          INTEGER,
            pwTotalRxLost             INTEGER,
            pwTotalJitBufUnderrun     INTEGER,
            pwTotalJitBufOverrun      INTEGER,
            pwTotalEth1Loss           INTEGER,
            pwTotalEth2Loss           INTEGER
        }
        
        
        pwTotalPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " total Counter in current 24 hours"
            ::= { pwTotalPerfEntry 1 }

        pwTotalRxLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Rx-lost Counter in current 24 hours"
            ::= { pwTotalPerfEntry 2 }

        pwTotalJitBufUnderrun OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Jitter buffer underrun Counter in current 24 hours"
            ::= { pwTotalPerfEntry 3}

        pwTotalJitBufOverrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Jitter buffer overrun Counter in current 24 hours"
            ::= { pwTotalPerfEntry 4}
            
        pwTotalEth1Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth1Loss Counter in current 24 hours"
            ::= { pwTotalPerfEntry 5}

        pwTotalEth2Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth2Loss Counter in current 24 hours"
            ::= { pwTotalPerfEntry 6}                        


--
-- Seven Days Performance Table
--
        pwSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= {  pwPerformanceTable 4}

        pwSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  PWSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance table"
            INDEX { pw7DaysPortIndex ,pwDaysIndex }
            ::= { pwSevenDaysPerfTable 1 }

        PWSevenDaysPerfEntry ::= SEQUENCE  {
            pw7DaysPortIndex        INTEGER,
            pwDaysIndex             INTEGER,
            pwDateString            DisplayString,
            pw7DaysRxLost           INTEGER,
            pw7DaysJitBufUnderrun   INTEGER,
            pw7DaysJitBufOverrun    INTEGER,
            pw7DaysEth1Loss         INTEGER,
            pw7DaysEth2Loss         INTEGER
        }
        
        pw7DaysPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..63)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days port index "
            ::= { pwSevenDaysPerfEntry 1 }

        pwDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { pwSevenDaysPerfEntry 2 }

        pwDateString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { pwSevenDaysPerfEntry 3 }

        pw7DaysRxLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Rx-lost Counter in seven days"
            ::= { pwSevenDaysPerfEntry 4}

        pw7DaysJitBufUnderrun OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer underrun  Counter in seven days"
            ::= { pwSevenDaysPerfEntry 5}

        pw7DaysJitBufOverrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer overrun  Counter in seven days"
            ::= { pwSevenDaysPerfEntry 6}     
            
        pw7DaysEth1Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth1Loss Counter in seven days"
            ::= { pwSevenDaysPerfEntry 7}           
            
        pw7DaysEth2Loss  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Eth2Loss Counter in seven days"
            ::= { pwSevenDaysPerfEntry 8}                                          


--
-- bundle arp status table
--
    pwBundleArpStatusTable  OBJECT IDENTIFIER ::= { pwCtrlStatusTable  9 }

        pwArpPrimaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWArpPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwBundleArpStatusTable  1}

        pwArpPrimaryStatusEntry  OBJECT-TYPE
            SYNTAX  PWArpPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwarpPrimaryNumIndex }
            ::= { pwArpPrimaryStatusTable 1 }

       PWArpPrimaryStatusEntry ::= SEQUENCE  {
            pwarpPrimaryNumIndex            INTEGER (1..64),
            pwarpPrimarySrcIpAddress        IpAddress,
            pwarpPrimaryMacAddress          DisplayString,
            pwarpPrimarySVLANId             INTEGER,
            pwarpPrimaryCVLANId             INTEGER,
            pwarpPrimaryRxRequest           Counter,
            pwarpPrimaryTxReply             Counter,
            pwarpPrimaryTxRequest           Counter,
            pwarpPrimaryRxReply             Counter,
            pwisPrimaryBundleIp             INTEGER
        }

        pwarpPrimaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~64) "
            ::= { pwArpPrimaryStatusEntry 1 }

        pwarpPrimarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { pwArpPrimaryStatusEntry 2 }

        pwarpPrimaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwArpPrimaryStatusEntry 3 }

        pwarpPrimarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwArpPrimaryStatusEntry 4 }

        pwarpPrimaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwArpPrimaryStatusEntry 5 }

        pwarpPrimaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { pwArpPrimaryStatusEntry 6 }

        pwarpPrimaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Reply counter"
            ::= { pwArpPrimaryStatusEntry 7 }

        pwarpPrimaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Request counter"
            ::= { pwArpPrimaryStatusEntry 8 }

        pwarpPrimaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { pwArpPrimaryStatusEntry 9 }

        pwisPrimaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { pwArpPrimaryStatusEntry 10 }

--arp other

        pwArpOtherStatusTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWArpOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth phy electric Config Table."
            ::= { pwBundleArpStatusTable 2 }

        pwArpOtherStatusEntry       OBJECT-TYPE
            SYNTAX  PWArpOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { pwarpOtherNumIndex }
            ::= { pwArpOtherStatusTable 1 }

       PWArpOtherStatusEntry ::= SEQUENCE  {
            pwarpOtherNumIndex            INTEGER (1..8),
            pwarpOtherSrcIpAddress        IpAddress,
            pwarpOtherMacAddress          DisplayString,
            pwarpOtherSVLANId             INTEGER,
            pwarpOtherCVLANId             INTEGER,
            pwarpOtherRxRequest           Counter,
            pwarpOtherRxReply             Counter
        }

        pwarpOtherNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~8) "
            ::= { pwArpOtherStatusEntry 1 }

        pwarpOtherSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { pwArpOtherStatusEntry 2 }

        pwarpOtherMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwArpOtherStatusEntry 3 }

        pwarpOtherSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwArpOtherStatusEntry 4 }

        pwarpOtherCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwArpOtherStatusEntry 5 }

        pwarpOtherRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { pwArpOtherStatusEntry 6 }

        pwarpOtherRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { pwArpOtherStatusEntry 7 }

--arp Secondary
        pwArpSecondaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWArpSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwBundleArpStatusTable  3}

        pwArpSecondaryStatusEntry  OBJECT-TYPE
            SYNTAX  PWArpSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwarpSecondaryNumIndex }
            ::= { pwArpSecondaryStatusTable 1 }

       PWArpSecondaryStatusEntry ::= SEQUENCE  {
            pwarpSecondaryNumIndex            INTEGER (1..64),
            pwarpSecondarySrcIpAddress        IpAddress,
            pwarpSecondaryMacAddress          DisplayString,
            pwarpSecondarySVLANId             INTEGER,
            pwarpSecondaryCVLANId             INTEGER,
            pwarpSecondaryRxRequest           Counter,
            pwarpSecondaryTxReply             Counter,
            pwarpSecondaryTxRequest           Counter,
            pwarpSecondaryRxReply             Counter,
            pwisSecondaryBundleIp             INTEGER
        }

        pwarpSecondaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~64) "
            ::= { pwArpSecondaryStatusEntry 1 }

        pwarpSecondarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { pwArpSecondaryStatusEntry 2 }

        pwarpSecondaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwArpSecondaryStatusEntry 3 }

        pwarpSecondarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwArpSecondaryStatusEntry 4 }

        pwarpSecondaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwArpSecondaryStatusEntry 5 }

        pwarpSecondaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { pwArpSecondaryStatusEntry 6 }

        pwarpSecondaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Reply counter"
            ::= { pwArpSecondaryStatusEntry 7 }

        pwarpSecondaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Request counter"
            ::= { pwArpSecondaryStatusEntry 8 }

        pwarpSecondaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { pwArpSecondaryStatusEntry 9 }

        pwisSecondaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { pwArpSecondaryStatusEntry 10 }
            

--
-- bundle ping status table
--
    pwBundlePingStatusTable  OBJECT IDENTIFIER ::= {  pwCtrlStatusTable  10}

        pwPingPrimaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPingPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {pwBundlePingStatusTable  1}

        pwPingPrimaryStatusEntry  OBJECT-TYPE
            SYNTAX  PWPingPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pwpingPrimaryNumIndex }
            ::= { pwPingPrimaryStatusTable 1 }

        PWPingPrimaryStatusEntry ::= SEQUENCE  {
            pwpingPrimaryNumIndex            INTEGER (1..64),
            pwpingPrimarySrcIpAddress        IpAddress,
            pwpingPrimaryMacAddress          DisplayString,
            pwpingPrimarySVLANId             INTEGER,
            pwpingPrimaryCVLANId             INTEGER,
            pwpingPrimaryRxRequest           Counter,
            pwpingPrimaryTxReply             Counter,
            pwpingPrimaryTxRequest           Counter,
            pwpingPrimaryRxReply             Counter,
            pwisPingPrimaryBundleIp          INTEGER
        }

        pwpingPrimaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~64) "
            ::= { pwPingPrimaryStatusEntry 1 }

        pwpingPrimarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { pwPingPrimaryStatusEntry 2 }

        pwpingPrimaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwPingPrimaryStatusEntry 3 }

        pwpingPrimarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwPingPrimaryStatusEntry 4 }

        pwpingPrimaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwPingPrimaryStatusEntry 5 }

        pwpingPrimaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { pwPingPrimaryStatusEntry 6 }

        pwpingPrimaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Reply counter"
            ::= { pwPingPrimaryStatusEntry 7 }

        pwpingPrimaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Request counter"
            ::= { pwPingPrimaryStatusEntry 8 }

        pwpingPrimaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { pwPingPrimaryStatusEntry 9 }

        pwisPingPrimaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { pwPingPrimaryStatusEntry 10 }

--  other
       pwPingOtherStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPingOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {pwBundlePingStatusTable  2}

        pwPingOtherStatusEntry  OBJECT-TYPE
            SYNTAX  PWPingOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pwpingOtherNumIndex }
            ::= { pwPingOtherStatusTable 1 }

        PWPingOtherStatusEntry ::= SEQUENCE  {
            pwpingOtherNumIndex            INTEGER (1..8),
            pwpingOtherSrcIpAddress        IpAddress,
            pwpingOtherMacAddress          DisplayString,
            pwpingOtherSVLANId             INTEGER,
            pwpingOtherCVLANId             INTEGER,
            pwpingOtherRxRequest           Counter,
            pwpingOtherRxReply             Counter
        }

        pwpingOtherNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~8) "
            ::= { pwPingOtherStatusEntry 1 }

        pwpingOtherSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { pwPingOtherStatusEntry 2 }

        pwpingOtherMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwPingOtherStatusEntry 3 }

        pwpingOtherSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwPingOtherStatusEntry 4 }

        pwpingOtherCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwPingOtherStatusEntry 5 }

        pwpingOtherRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { pwPingOtherStatusEntry 6 }

        pwpingOtherRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { pwPingOtherStatusEntry 7 }

--ping Secondary
            
        pwPingSecondaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPingSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {pwBundlePingStatusTable  3}

        pwPingSecondaryStatusEntry  OBJECT-TYPE
            SYNTAX  PWPingSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pwpingSecondaryNumIndex }
            ::= { pwPingSecondaryStatusTable 1 }

        PWPingSecondaryStatusEntry ::= SEQUENCE  {
            pwpingSecondaryNumIndex            INTEGER (1..64),
            pwpingSecondarySrcIpAddress        IpAddress,
            pwpingSecondaryMacAddress          DisplayString,
            pwpingSecondarySVLANId             INTEGER,
            pwpingSecondaryCVLANId             INTEGER,
            pwpingSecondaryRxRequest           Counter,
            pwpingSecondaryTxReply             Counter,
            pwpingSecondaryTxRequest           Counter,
            pwpingSecondaryRxReply             Counter,
            pwisPingSecondaryBundleIp          INTEGER
        }

        pwpingSecondaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~64) "
            ::= { pwPingSecondaryStatusEntry 1 }

        pwpingSecondarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { pwPingSecondaryStatusEntry 2 }

        pwpingSecondaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwPingSecondaryStatusEntry 3 }

        pwpingSecondarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwPingSecondaryStatusEntry 4 }

        pwpingSecondaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwPingSecondaryStatusEntry 5 }

        pwpingSecondaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { pwPingSecondaryStatusEntry 6 }

        pwpingSecondaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Reply counter"
            ::= { pwPingSecondaryStatusEntry 7 }

        pwpingSecondaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Request counter"
            ::= { pwPingSecondaryStatusEntry 8 }

        pwpingSecondaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { pwPingSecondaryStatusEntry 9 }

        pwisPingSecondaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { pwPingSecondaryStatusEntry 10 }            

                   
--
--  IP Conflict
--
       pwIpConflictTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWIpConflictEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle IP Conflict status table."
            ::= {pwCtrlStatusTable  11}

        pwIpConflictEntry  OBJECT-TYPE
            SYNTAX  PWIpConflictEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle IP Conflict status table."
            INDEX { pwipConflictNumIndex }
            ::= { pwIpConflictTable 1 }

        PWIpConflictEntry ::= SEQUENCE  {
            pwipConflictNumIndex            INTEGER (1..16),
            pwipConflictSrcIpAddress        IpAddress,
            pwipConflictMacAddress          DisplayString,
            pwipConflictSVLANId             INTEGER,
            pwipConflictCVLANId             INTEGER
        }

        pwipConflictNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle IP Conflict Number Index(1~64) "
            ::= { pwIpConflictEntry 1 }

        pwipConflictSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Bundle IP Conflict Source IP."
            ::= { pwIpConflictEntry 2 }

        pwipConflictMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The Bundle IP Conflict Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { pwIpConflictEntry 3 }

        pwipConflictSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { pwIpConflictEntry 4 }

        pwipConflictCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { pwIpConflictEntry 5 }


--
-- PseudWire Mode status Table
--             
 		pwProtectModeStatusTable       OBJECT IDENTIFIER ::= { pwCtrlStatusTable 12 } 
            
       pwModeSelectStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    mode0(1),
                    mode1(2),
                    mode2(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw protect mode select"
            ::= { pwProtectModeStatusTable 1 }  
          
--       pwModeActionStatus  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    nonrevertible(1),
--                    revertible(2)
--            }
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                "pw protect mode action"
--            ::= { pwProtectModeStatusTable 2 }       
            
       pwCascadePortStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    eth1LinkUp(1),
                    eth2LinkUp(2),
                    eth1LinkDown(3),
                    eth2LinkDown(4),
                    na(5)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw protect cascade port"
            ::= { pwProtectModeStatusTable 3 }         
            
       pwCascadeChannelStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notReady(1),
                    ready(2),
                    na(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw protect cascade channel"
            ::= { pwProtectModeStatusTable 4 }      
                        


--
-- pw arival time statist table
--
    pwArrivalTimeStatistTable  OBJECT IDENTIFIER ::= { pwCtrlStatusTable  14 }

        pwPriArrivalTimeStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPriArrivalTimeStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwArrivalTimeStatistTable  1}

        pwPriArrivalTimeStatistEntry  OBJECT-TYPE
            SYNTAX  PWPriArrivalTimeStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwPriEthStatistIndex }
            ::= { pwPriArrivalTimeStatistTable 1 }

       PWPriArrivalTimeStatistEntry ::= SEQUENCE  {
            pwPriEthStatistIndex            INTEGER (1..64),
            pwPriEth1ReOrder                DisplayString,
            pwPriEth1RxLoss                 DisplayString,
            pwPriEth1IPGMax                 DisplayString,
            pwPriEth1IPGMin                 DisplayString,
            pwPriEth1IPGCur                 DisplayString,
            pwPriEth2ReOrder                DisplayString,
            pwPriEth2RxLoss                 DisplayString,
            pwPriEth2IPGMax                 DisplayString,
            pwPriEth2IPGMin                 DisplayString,
            pwPriEth2IPGCur                 DisplayString
        }

        pwPriEthStatistIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle eth pri statist Index(1~64) "
            ::= { pwPriArrivalTimeStatistEntry 1 }

        pwPriEth1ReOrder OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth pri statist reorder"
            ::= { pwPriArrivalTimeStatistEntry 2 }

        pwPriEth1RxLoss OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth pri statist rx los"
            ::= { pwPriArrivalTimeStatistEntry 3 }
            
        pwPriEth1IPGMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG MAX"
            ::= { pwPriArrivalTimeStatistEntry 4 }

        pwPriEth1IPGMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG MIN"
            ::= { pwPriArrivalTimeStatistEntry 5 }
            
        pwPriEth1IPGCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG Cur"
            ::= { pwPriArrivalTimeStatistEntry 6 }

        pwPriEth2ReOrder OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth2 pri statist reorder"
            ::= { pwPriArrivalTimeStatistEntry 7 }

        pwPriEth2RxLoss OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth2 pri statist rx los"
            ::= { pwPriArrivalTimeStatistEntry 8 }
            
        pwPriEth2IPGMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG MAX"
            ::= { pwPriArrivalTimeStatistEntry 9 }

        pwPriEth2IPGMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG MIN"
            ::= { pwPriArrivalTimeStatistEntry 10 }
            
        pwPriEth2IPGCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG Cur"
            ::= { pwPriArrivalTimeStatistEntry 11 }                        

-- secondary 
        pwSecArrivalTimeStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSecArrivalTimeStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwArrivalTimeStatistTable  2}

        pwSecArrivalTimeStatistEntry  OBJECT-TYPE
            SYNTAX  PWSecArrivalTimeStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwSecEthStatistIndex }
            ::= { pwSecArrivalTimeStatistTable 1 }

       PWSecArrivalTimeStatistEntry ::= SEQUENCE  {
            pwSecEthStatistIndex            INTEGER (1..64),
            pwSecEth1ReOrder                DisplayString,
            pwSecEth1RxLoss                 DisplayString,
            pwSecEth1IPGMax                 DisplayString,
            pwSecEth1IPGMin                 DisplayString,
            pwSecEth1IPGCur                 DisplayString,
            pwSecEth2ReOrder                DisplayString,
            pwSecEth2RxLoss                 DisplayString,
            pwSecEth2IPGMax                 DisplayString,
            pwSecEth2IPGMin                 DisplayString,
            pwSecEth2IPGCur                 DisplayString
        }

        pwSecEthStatistIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle eth pri statist Index(1~64) "
            ::= { pwSecArrivalTimeStatistEntry 1 }

        pwSecEth1ReOrder OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth pri statist reorder"
            ::= { pwSecArrivalTimeStatistEntry 2 }

        pwSecEth1RxLoss OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth pri statist rx los"
            ::= { pwSecArrivalTimeStatistEntry 3 }
            
        pwSecEth1IPGMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG MAX"
            ::= { pwSecArrivalTimeStatistEntry 4 }

        pwSecEth1IPGMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG MIN"
            ::= { pwSecArrivalTimeStatistEntry 5 }
            
        pwSecEth1IPGCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth1 statist IPG Cur"
            ::= { pwSecArrivalTimeStatistEntry 6 }

        pwSecEth2ReOrder OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth2 pri statist reorder"
            ::= { pwSecArrivalTimeStatistEntry 7 }

        pwSecEth2RxLoss OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle eth2 pri statist rx los"
            ::= { pwSecArrivalTimeStatistEntry 8 }
            
        pwSecEth2IPGMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG MAX"
            ::= { pwSecArrivalTimeStatistEntry 9 }

        pwSecEth2IPGMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG MIN"
            ::= { pwSecArrivalTimeStatistEntry 10 }
            
        pwSecEth2IPGCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW eth2 statist IPG Cur"
            ::= { pwSecArrivalTimeStatistEntry 11 }  

--
-- bundle Round Trip statist table
--
    pwRoundTripStatistTable  OBJECT IDENTIFIER ::= { pwCtrlStatusTable  15 }

        pwPriRoundTripStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPriRoundTripStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwRoundTripStatistTable  1}

        pwPriRoundTripStatistEntry  OBJECT-TYPE
            SYNTAX  PWPriRoundTripStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwPriRoundTripIndex }
            ::= { pwPriRoundTripStatistTable 1 }

       PWPriRoundTripStatistEntry ::= SEQUENCE  {
            pwPriRoundTripIndex             INTEGER (1..64),
            pwPriRoundTripSeq               INTEGER,
            pwPriRoundTripSeqLoss           INTEGER,
            pwPriRoundTripIP                DisplayString,
            pwPriRoundTripCur               DisplayString,
            pwPriRoundTripMin               DisplayString,
            pwPriRoundTripMax               DisplayString
        }

        pwPriRoundTripIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Pri Round Trip Index(1~64) "
            ::= { pwPriRoundTripStatistEntry 1 }

        pwPriRoundTripSeq OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri Round Trip Seq "
            ::= { pwPriRoundTripStatistEntry 2 }

        pwPriRoundTripSeqLoss OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri Round Trip Seq los"
            ::= { pwPriRoundTripStatistEntry 3 }
        
        pwPriRoundTripIP   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bundle Pri Round Trip IP Address"
            ::= { pwPriRoundTripStatistEntry 4 }
                
        pwPriRoundTripCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Pri Round Trip Cur"
            ::= { pwPriRoundTripStatistEntry 5 }

        pwPriRoundTripMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Pri Round Trip MIN"
            ::= { pwPriRoundTripStatistEntry 6 }
            
        pwPriRoundTripMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Pri Round Trip Max"
            ::= { pwPriRoundTripStatistEntry 7 }


-- secondary 
        pwSecRoundTripStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSecRoundTripStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwRoundTripStatistTable  2}

        pwSecRoundTripStatistEntry  OBJECT-TYPE
            SYNTAX  PWSecRoundTripStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwSecRoundTripIndex }
            ::= { pwSecRoundTripStatistTable 1 }

       PWSecRoundTripStatistEntry ::= SEQUENCE  {
            pwSecRoundTripIndex             INTEGER (1..64),
            pwSecRoundTripSeq               INTEGER,
            pwSecRoundTripSeqLoss           INTEGER,
            pwSecRoundTripIP                DisplayString,  
            pwSecRoundTripCur               DisplayString,
            pwSecRoundTripMin               DisplayString,
            pwSecRoundTripMax               DisplayString
        }

        pwSecRoundTripIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Sec Round Trip Index(1~64) "
            ::= { pwSecRoundTripStatistEntry 1 }

        pwSecRoundTripSeq OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec Round Trip Seq "
            ::= { pwSecRoundTripStatistEntry 2 }

        pwSecRoundTripSeqLoss OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec Round Trip Seq los"
            ::= { pwSecRoundTripStatistEntry 3 }

        pwSecRoundTripIP   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bundle Sec Round Trip IP Address"
            ::= { pwSecRoundTripStatistEntry 4 }
                        
        pwSecRoundTripCur  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Sec Round Trip Cur"
            ::= { pwSecRoundTripStatistEntry 5 }

        pwSecRoundTripMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Sec Round Trip MIN"
            ::= { pwSecRoundTripStatistEntry 6 }
            
        pwSecRoundTripMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PW Sec Round Trip Max"
            ::= { pwSecRoundTripStatistEntry 7 }


--
-- bundle Protect statist table
--
    pwProtectStatistTable  OBJECT IDENTIFIER ::= { pwCtrlStatusTable  16 }

        pwPriProtectStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWPriProtectStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwProtectStatistTable  1}

        pwPriProtectStatistEntry  OBJECT-TYPE
            SYNTAX  PWPriProtectStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwPriProtectIndex }
            ::= { pwPriProtectStatistTable 1 }

       PWPriProtectStatistEntry ::= SEQUENCE  {
            pwPriProtectIndex             INTEGER (1..64),
            pwPriEth1Linkstat             INTEGER,
            pwPriEth2Linkstat             INTEGER,
            pwPriEth1RxSeqNum             INTEGER,
            pwPriEth2RxSeqNum             INTEGER,
            pwPriEth1RxSeqLos             INTEGER,
            pwPriEth2RxSeqLos             INTEGER,
            pwPriEth1RxJBLos              INTEGER,
            pwPriEth2RxJBLos              INTEGER,                        
            pwPriDiffDelay                DisplayString
        }

        pwPriProtectIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Pri protect Index(1~64) "
            ::= { pwPriProtectStatistEntry 1 }

        pwPriEth1Linkstat OBJECT-TYPE
            SYNTAX INTEGER
            {
            		down(1),
            		up(2)
            }		            
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth1 Round Trip Seq "
            ::= { pwPriProtectStatistEntry 2 }

        pwPriEth2Linkstat OBJECT-TYPE
            SYNTAX INTEGER
            {
            		down(1),
            		up(2)
            }		            
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth2 Round Trip Seq "
            ::= { pwPriProtectStatistEntry 3 }
            
        pwPriEth1RxSeqNum OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth1 Seq Num"
            ::= { pwPriProtectStatistEntry 4 }

        pwPriEth2RxSeqNum OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth2 Seq Num "
            ::= { pwPriProtectStatistEntry 5 }
                
        pwPriEth1RxSeqLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth1 Seq los"
            ::= { pwPriProtectStatistEntry 6 }

        pwPriEth2RxSeqLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth2 Seq Los "
            ::= { pwPriProtectStatistEntry 7 }

        pwPriEth1RxJBLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth1 jb los"
            ::= { pwPriProtectStatistEntry 8 }

        pwPriEth2RxJBLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri eth2 jb Los "
            ::= { pwPriProtectStatistEntry 9 }

        pwPriDiffDelay OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Pri diff delay "
            ::= { pwPriProtectStatistEntry 10 }            
            
-- secondary 

        pwSecProtectStatistTable OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSecProtectStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {pwProtectStatistTable  2}

        pwSecProtectStatistEntry  OBJECT-TYPE
            SYNTAX  PWSecProtectStatistEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { pwSecProtectIndex }
            ::= { pwSecProtectStatistTable 1 }

       PWSecProtectStatistEntry ::= SEQUENCE  {
            pwSecProtectIndex             INTEGER (1..64),
            pwSecEth1Linkstat             INTEGER,
            pwSecEth2Linkstat             INTEGER,
            pwSecEth1RxSeqNum             INTEGER,
            pwSecEth2RxSeqNum             INTEGER,
            pwSecEth1RxSeqLos             INTEGER,
            pwSecEth2RxSeqLos             INTEGER,
            pwSecEth1RxJBLos              INTEGER,
            pwSecEth2RxJBLos              INTEGER,                        
            pwSecDiffDelay                DisplayString
        }

        pwSecProtectIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Sec protect Index(1~64) "
            ::= { pwSecProtectStatistEntry 1 }

        pwSecEth1Linkstat OBJECT-TYPE
            SYNTAX INTEGER 
            {
            		down(1),
            		up(2)
            }		
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth1 Round Trip Seq "
            ::= { pwSecProtectStatistEntry 2 }

        pwSecEth2Linkstat OBJECT-TYPE
            SYNTAX INTEGER
            {
            		down(1),
            		up(2)
            }		            
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth2 Round Trip Seq "
            ::= { pwSecProtectStatistEntry 3 }
            
        pwSecEth1RxSeqNum OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth1 Seq Num"
            ::= { pwSecProtectStatistEntry 4 }

        pwSecEth2RxSeqNum OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth2 Seq Num "
            ::= { pwSecProtectStatistEntry 5 }
                
        pwSecEth1RxSeqLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth1 Seq los"
            ::= { pwSecProtectStatistEntry 6 }

        pwSecEth2RxSeqLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth2 Seq Los "
            ::= { pwSecProtectStatistEntry 7 }

        pwSecEth1RxJBLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth1 jb los"
            ::= { pwSecProtectStatistEntry 8 }

        pwSecEth2RxJBLos OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec eth2 jb Los "
            ::= { pwSecProtectStatistEntry 9 }

        pwSecDiffDelay OBJECT-TYPE
            SYNTAX DisplayString (SIZE (0..20))
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Bundle Sec diff delay "
            ::= { pwSecProtectStatistEntry 10 }    
            
          
--
-- Sec PseudWire Delay Info Table
-- 
       pwSecBundleDelayInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWSecBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "sec pw delay info table"
            ::= { pwCtrlStatusTable 18 }

        pwSecBundleDelayInfoEntry OBJECT-TYPE
            SYNTAX  PWSecBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw Delay Info entry"
            INDEX { pwSecInfoIndex }
            ::= { pwSecBundleDelayInfoTable 1 }

        PWSecBundleDelayInfoEntry ::= SEQUENCE {
            pwSecInfoIndex    	      INTEGER,
            pwSecInfoPort             INTEGER,
            pwSecCellNum							INTEGER,
            pwSecJitterDelaySt				INTEGER,
            pwSecJitterSizeSt     		INTEGER,
            pwSecPropDelay     				DisplayString,
            pwSecPktSize 							DisplayString,
            pwSecOverHead     				DisplayString,
						pwSecEthernetBW      			DisplayString,
            pwSecTotalBW     					DisplayString
        }
       
       pwSecInfoIndex  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pseudo Wire Index 1~64"
            ::= { pwSecBundleDelayInfoEntry 1 }    
       
       pwSecInfoPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pseudo Wire bundle port 1~64"
            ::= { pwSecBundleDelayInfoEntry 2 }               

       pwSecCellNum  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw cell number"
            ::= { pwSecBundleDelayInfoEntry 3 }                        

       pwSecJitterDelaySt  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw jitter delay"
            ::= { pwSecBundleDelayInfoEntry 4 }  
          
        pwSecJitterSizeSt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw jitter size"
            ::= { pwSecBundleDelayInfoEntry 5 }           
          
        pwSecPropDelay  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw jitter prop delay"
            ::= { pwSecBundleDelayInfoEntry 6 }              
          
        pwSecPktSize  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw pkt size"
            ::= { pwSecBundleDelayInfoEntry 7 }             
          
         pwSecOverHead  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec Pw over head"
            ::= { pwSecBundleDelayInfoEntry 8 }               
          
         pwSecEthernetBW  OBJECT-TYPE
            SYNTAX  DisplayString 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec pw ethernet bw"
            ::= { pwSecBundleDelayInfoEntry 9 }          
          
         pwSecTotalBW  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Sec pw total bw"
            ::= { pwSecBundleDelayInfoEntry 10 } 
			
			         
--
-- Standby PseudWire Statics Table
-- 
       pwStandbyStaticsTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF PWStandbyStaticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw Standby statics table"
            ::= { pwCtrlStatusTable 20 }

        pwStandbyStaticsEntry OBJECT-TYPE
            SYNTAX  PWStandbyStaticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "pw statics entry"
            INDEX { pwStandbyIndex }
            ::= { pwStandbyStaticsTable 1 }

        PWStandbyStaticsEntry ::= SEQUENCE {
            pwStandbyIndex     		    INTEGER,
            pwStandbyStaticsPort      INTEGER,
            pwStandbyJitBufUnderRun	  INTEGER,
            pwStandbyJitBufOverRun    INTEGER,
            pwStandbyJitBufMin   	    INTEGER,
            pwStandbyJitBufMax        INTEGER,
            pwStandbyJitBufDepth      INTEGER,
            pwStandbyLBitCount        INTEGER,
						pwStandbyRBitCount        INTEGER,
            pwStandbyTxGoodCount     	INTEGER,
            pwStandbyRxGoodCount      INTEGER,
            pwStandbyRxLostCount      INTEGER,  
            pwStandbyLink             INTEGER,
            pwStandbySizeError        INTEGER,
            pwStandbyRxAISAlm         INTEGER,
            pwStandbyPath             INTEGER,
            pwStandbyReOrderCount     INTEGER  
        }
       
       pwStandbyIndex  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire Index 1~64"
            ::= { pwStandbyStaticsEntry 1 }    
       
       pwStandbyStaticsPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pseudo Wire bundle port 1~64"
            ::= { pwStandbyStaticsEntry 2 }               

       pwStandbyJitBufUnderRun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter uv"
            ::= { pwStandbyStaticsEntry 3 }                        

       pwStandbyJitBufOverRun  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter ov"
            ::= { pwStandbyStaticsEntry 4 }  
          
        pwStandbyJitBufMin  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter min"
            ::= { pwStandbyStaticsEntry 5 }           
          
        pwStandbyJitBufMax  OBJECT-TYPE
            SYNTAX  INTEGER (1..1048575)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter max"
            ::= { pwStandbyStaticsEntry 6 }              
          
        pwStandbyJitBufDepth  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw jitter depth"
            ::= { pwStandbyStaticsEntry 7 }             
          
         pwStandbyLBitCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Pw l-bit error"
            ::= { pwStandbyStaticsEntry 8 }               
          
         pwStandbyRBitCount  OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw r-bit error"
            ::= { pwStandbyStaticsEntry 9 }          
          
         pwStandbyTxGoodCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw tx good pkt"
            ::= { pwStandbyStaticsEntry 10 }                  
          
         pwStandbyRxGoodCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx good pkt"
            ::= { pwStandbyStaticsEntry 11 }             

         pwStandbyRxLostCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx lost count"
            ::= { pwStandbyStaticsEntry 12 }  
            
         pwStandbyLink  OBJECT-TYPE
            SYNTAX  INTEGER
            {
            		down(1),
            		up(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw link status"
            ::= { pwStandbyStaticsEntry 13 } 

         pwStandbySizeError  OBJECT-TYPE
            SYNTAX  INTEGER{
            		no(1),
            		yes(2),
            		cas(3)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw size error"
            ::= { pwStandbyStaticsEntry 14 }   
            
         pwStandbyRxAISAlm  OBJECT-TYPE
            SYNTAX  INTEGER{
            		no(1),
            		ais(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw rx ais alm"
            ::= { pwStandbyStaticsEntry 15 } 

         pwStandbyPath  OBJECT-TYPE
            SYNTAX  INTEGER{
            		pri(1),
            		sec(2)
            }		
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw path"
            ::= { pwStandbyStaticsEntry 16 }  
              
         pwStandbyReOrderCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "pw re order count"
            ::= { pwStandbyStaticsEntry 17 }              
             

--======================================================================--
--
--  Any-Ds1 Protection
--

    anyds1Protection       OBJECT IDENTIFIER ::= { controller 36 }

        anyds1Enable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Any-Ds1 Enable/Disable."
            ::= { anyds1Protection 1 }

        anyds1Map  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tsimap1(1),
                    tsimap2(2),
                    tsimap3(3),
                    tsimap4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Any-Ds1 Using TSI Map."
            ::= { anyds1Protection 2 }

        anyds1ActionResponse  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Any-Ds1 action response."
            ::= { anyds1Protection 3 }



--
--  Any-Ds1 Creation
--

    anyds1CreationTable    OBJECT IDENTIFIER ::= { anyds1Protection 4 }

       ds1CircuitGroup  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "group number for protected port, 0 means individual."
            ::= { anyds1CreationTable 1 }        
       ds1PrimarySlot  OBJECT-TYPE
            SYNTAX  Anyds1Slot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary slot number."
            ::= { anyds1CreationTable 2 }

        ds1PrimaryPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary port number."
            ::= { anyds1CreationTable 3 }

        ds1PrimaryStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary start time slot."
            ::= { anyds1CreationTable 4 }

        ds1SecondarySlot  OBJECT-TYPE
            SYNTAX  Anyds1Slot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary slot number."
            ::= { anyds1CreationTable 5 }

        ds1SecondaryPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary port number."
            ::= { anyds1CreationTable 6 }

        ds1SecondaryStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary start time slot."
            ::= { anyds1CreationTable 7 }

        ds1ProtectedSlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected Slot A~D, 1~12."
            ::= { anyds1CreationTable 8 }

        ds1ProtectedPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected Port 1~12."
            ::= { anyds1CreationTable 9 }

        ds1ProtectedStartTS  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Protected start time slot index."
            ::= { anyds1CreationTable 10 }

        ds1ProtectCount  OBJECT-TYPE
            SYNTAX  INTEGER  (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Total channel number."
            ::= { anyds1CreationTable 11 }


        ds1SwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { anyds1CreationTable 12 }        

        ds1DataVoice  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Data or Voice"
            ::= { anyds1CreationTable 13 }
        
        ds1SetCommand  OBJECT-TYPE
             SYNTAX  INTEGER   {
                    check-set(1),
                    force-set(2),
                    force-switch(3),
                    delete-1(4),
--                    delete-all(5),
--                    clearAndSet(6),
                    lock-working(11),
                    lock-primary(12),
                    lock-secondary(13),
                    unlock(14),
                    change-switch-mode(21)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set command:
                1: check and set Any-Ds1;
                2: force set Any-Ds1;
                3: force switch a Any-Ds1;
                4: delete a Any-Ds1;
                5: delete all;
                11: lock on working;
                12: lock on primary;
                13: lock on secondary;
                14: unlock"
            ::= { anyds1CreationTable 14 }

--
--  Any-Ds1 Information
--

        anyds1InfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Anyds1InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP Protection Information Table"
            ::= { anyds1Protection 5 }

        anyds1InfoEntry  OBJECT-TYPE
            SYNTAX  Anyds1InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Any-Ds1 Protection Information Entry"
            INDEX { anyds1Index }
            ::= { anyds1InfoTable 1 }

            Anyds1InfoEntry ::= SEQUENCE {
            anyds1Index                    INTEGER,
            anyds1Group                    INTEGER,
            anyds1PrimarySlot              Anyds1Slot,
            anyds1PrimaryPort              MapPortID,
            anyds1SecondarySlot            Anyds1Slot,
            anyds1SecondaryPort            MapPortID,            
            anyds1WorkingOn                INTEGER,
            anyds1DataVoice                INTEGER,            
            anyds1SwitchMode               INTEGER,
            anyds1ForceSwitch              INTEGER,
            anyds1DeleteProtection         INTEGER            
        }

        anyds1Index  OBJECT-TYPE
            SYNTAX  INTEGER  (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Any-ds1 Index."
            ::= { anyds1InfoEntry 1 }

       anyds1Group  OBJECT-TYPE
            SYNTAX  INTEGER (0..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Any-ds1 Gruop number"
            ::= { anyds1InfoEntry 2 }

        anyds1PrimarySlot  OBJECT-TYPE
            SYNTAX  Anyds1Slot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary slot number."
            ::= { anyds1InfoEntry 3 }

        anyds1PrimaryPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary port number."
            ::= { anyds1InfoEntry 4 }

        anyds1SecondarySlot  OBJECT-TYPE
            SYNTAX  Anyds1Slot
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary slot number."
            ::= { anyds1InfoEntry 5 }

        anyds1SecondaryPort  OBJECT-TYPE
            SYNTAX  MapPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary port number."
            ::= { anyds1InfoEntry 6 }

        anyds1WorkingOn  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    primary(1),
                    secondary(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Working on primary or secondary."
            ::= { anyds1InfoEntry 7 }          

        anyds1DataVoice  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    data(1),
                    voice(2),
                    voiceWithoutAu(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Data or Voice"
            ::= { anyds1InfoEntry 8 }

        anyds1SwitchMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    non-revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Switch mode"
            ::= { anyds1InfoEntry 9 }   
        anyds1ForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(1),
                    force-switch(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Force switch to standby TS."
            ::= { anyds1InfoEntry 10 }

        anyds1DeleteProtection  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    no(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete protection."
            ::= { anyds1InfoEntry 11 } 

--
--  Any-Ds1 Total Group Counter
--

    anyds1TotalCountTable    OBJECT IDENTIFIER ::= { anyds1Protection 6 }

       ds1TotalGroup  OBJECT-TYPE
            SYNTAX  INTEGER  (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "group number counter."
            ::= { anyds1TotalCountTable 1 }    


--======================================================================--
--
--  Uplink inband
--

    uplinkInbandTable       OBJECT IDENTIFIER ::= { controller 37 }

        uplinkEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Uplink Enable/Disable."
            ::= { uplinkInbandTable 1 }

        uplinkVlan  OBJECT-TYPE
            SYNTAX  INTEGER {
                       off(1),
                       cvlan(2),
                       svlan(3),
                       qinq(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VLAN SWITCH."
            ::= { uplinkInbandTable 2 }

        uplinkCvlanId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
               "C VLAN ID (1..4094)"
            ::= { uplinkInbandTable 3 }
            
        uplinkSvlanId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
               "S VLAN ID(1..4094) "
            ::= { uplinkInbandTable 4 }

        uplinkTpidId  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
               "SPlease Input: 0~9, A~F"
            ::= { uplinkInbandTable 5 }

--======================================================================--
--
--  AdvancedStatus
--

    advancedStatusTable       OBJECT IDENTIFIER ::= { controller 38 }            
--
-- DPLL status Display Table
--             
 		dpllStatusTable       OBJECT IDENTIFIER ::= { advancedStatusTable 1 } 
    dpllPriStatusTable    OBJECT IDENTIFIER ::= { dpllStatusTable 1 }        
       deviceCalibration  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "device calibration"
            ::= { dpllPriStatusTable 1 }  
          
       signalatXAXB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll signal at xaxb pins"
            ::= { dpllPriStatusTable 2 }           
            
       lockingtoXAXB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll locking to xaxb pins"
            ::= { dpllPriStatusTable 3 }      
            
       smbustimeoutError  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll smbus timeout error"
            ::= { dpllPriStatusTable 4 }              

       dpllInput1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    ooflos(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input1 status"
            ::= { dpllPriStatusTable 5 } 

       dpllInput2Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    ooflos(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 status"
            ::= { dpllPriStatusTable 6 } 
            
       dpllLockStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lock(1),
                    freerun(2),
                    unlock(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 lock status"
            ::= { dpllPriStatusTable 7 }      
            
       dpllCalStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 calibration"
            ::= { dpllPriStatusTable 8 }
            
            
       dpllInputSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input status Sticky"
            ::= { dpllPriStatusTable 9 } 

       dpllLockSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lock(1),
                    freerun(2),
                    unlock(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input lock Sticky"
            ::= { dpllPriStatusTable 10 }
              
       dpllCalSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 calibration"
            ::= { dpllPriStatusTable 11 }      

      dpllInput2Sticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 status Sticky"
            ::= { dpllPriStatusTable 12 } 
                                            
-- standby
      dpllStandbyStatusTable    OBJECT IDENTIFIER ::= { dpllStatusTable 2 }   
       standbydeviceCalibration  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "device calibration"
            ::= { dpllStandbyStatusTable 1 }  
          
       standbysignalatXAXB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll signal at xaxb pins"
            ::= { dpllStandbyStatusTable 2 }           
            
       standbylockingtoXAXB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll locking to xaxb pins"
            ::= { dpllStandbyStatusTable 3 }      
            
       standbysmbustimeoutError  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll smbus timeout error"
            ::= { dpllStandbyStatusTable 4 }              

       standbydpllInput1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    ooflos(4),
                    none(5)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input1 status"
            ::= { dpllStandbyStatusTable 5 } 

      standbydpllInput2Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    ooflos(4),
                    none(5)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input1 status"
            ::= { dpllStandbyStatusTable 6 } 
            
       standbydpllLockStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lock(1),
                    freerun(2),
                    unlock(3),
                    none(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 lock status"
            ::= { dpllStandbyStatusTable 7 }      
            
       standbydpllCalStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 calibration"
            ::= { dpllStandbyStatusTable 8 }
            
            
       standbydpllInputSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    none(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input status Sticky"
            ::= { dpllStandbyStatusTable 9 } 

       standbydpllLockSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lock(1),
                    freerun(2),
                    unlock(3),
                    none(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input lock Sticky"
            ::= { dpllStandbyStatusTable 10 }
              
       standbydpllCalSticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    yes(2),
                    none(3)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 calibration"
            ::= { dpllStandbyStatusTable 11 }   

       standbydpllInput2Sticky  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    los(2),
                    oof(3),
                    none(4)
            }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dpll input2 status Sticky"
            ::= { dpllStandbyStatusTable 12 } 
--
-- backplane Sync status table
--
    backPlaneSyncStatusTable  OBJECT IDENTIFIER ::= { advancedStatusTable  2 } 
        
        bpTxJBSyncStatus  OBJECT-TYPE
            SYNTAX  INTEGER
            {
              none(1),
              sync(2)
            }  
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Tx JB sync status"
            ::= { backPlaneSyncStatusTable 1 }
            
        bpTxSyncWordError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Tx syncword error"
            ::= { backPlaneSyncStatusTable 2 }
            
       bpTx1stframeError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Tx 1st frame error"
            ::= { backPlaneSyncStatusTable 3 }          

       bpTxseqNumError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Tx seq number error"
            ::= { backPlaneSyncStatusTable 4 }    

        bpTxFPSyncStatus  OBJECT-TYPE
            SYNTAX  INTEGER
            {
              none(1),
              sync(2)
            }  
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Tx frame pulse sync status"
            ::= { backPlaneSyncStatusTable 5 }
            
        bpRxJBSyncStatus  OBJECT-TYPE
            SYNTAX  INTEGER
            {
              none(1),
              sync(2)
            }  
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx JB sync status"
            ::= { backPlaneSyncStatusTable 6 }    
            
        bpRxSyncWordDone  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx syncword done"
            ::= { backPlaneSyncStatusTable 7 }
            
        bpRxSyncWordDoneError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx syncword doneerror"
            ::= { backPlaneSyncStatusTable 8 }     
        
        bpRxSyncWordError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx syncword error"
            ::= { backPlaneSyncStatusTable 9 }            

       bpRxseqNumError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx seq number error"
            ::= { backPlaneSyncStatusTable 10 }    

       bpRxPCMError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx PCM error"
            ::= { backPlaneSyncStatusTable 11 }                

       bpRxBDError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP Rx bd error"
            ::= { backPlaneSyncStatusTable 12 }    

       bpModeChnageCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BP mode change count"
            ::= { backPlaneSyncStatusTable 13 } 
            
--
-- HDLC status Display Table
--              

        hdlcStatusTable  OBJECT IDENTIFIER ::= { advancedStatusTable  3 }
--pri
        hdlcPriStatusTable    OBJECT IDENTIFIER ::= { hdlcStatusTable 1 }
        priFpgaRxFCSOk OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx FCS_ok(0x400e1008)"
            ::= { hdlcPriStatusTable 1 }  		
        priFpgaRxFCSerr OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx FCS_err(0x400e100c)"
            ::= { hdlcPriStatusTable 2 } 
        priFpgaRxFifoWrite OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx fifo_w(0x400e2000)"
            ::= { hdlcPriStatusTable 3 } 
        priFpgaRxFifoRead OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx fifo_r(0x400e2004)"
            ::= { hdlcPriStatusTable 4 } 
        priFpgaTxFifoWrite OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary tx fifo_w_pkt8q(0x400e0000)"
            ::= { hdlcPriStatusTable 5 } 
        priFpgaTxFifoRead OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary tx fifo_r_pkt8q(0x400e0004)"
            ::= { hdlcPriStatusTable 6 } 	
        priFpgaRxFlagCnt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx Flag_cnt(0x400e1000)"
            ::= { hdlcPriStatusTable 7 } 
        priFpgaRxFlagAbort OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx Flag_abort(0x400e1004)"
            ::= { hdlcPriStatusTable 8 }
        priFpgaRxLink OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary rx Link(0x400e1010)"
            ::= { hdlcPriStatusTable 9 }
        priCpuInbandIsr OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary cpu inband_isr"
            ::= { hdlcPriStatusTable 10 }	
        priCpuHdlcRxTadk OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary cpu hdlc_rx_task"
            ::= { hdlcPriStatusTable 11 }
        priCpuHdlcRxPkt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary cpu hdlc_rx_pkt"
            ::= { hdlcPriStatusTable 12 }
        priCpuHdlcTxPkt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Primary cpu hdlc_tx_inband_pkt"
            ::= { hdlcPriStatusTable 13 }	
--sec
        hdlcSecStatusTable    OBJECT IDENTIFIER ::= { hdlcStatusTable 2 }

        secFpgaRxFCSOk OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx FCS_ok(0x400e1008)"
            ::= { hdlcSecStatusTable 1 }  		

        secFpgaRxFCSerr OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx FCS_err(0x400e100c)"
            ::= { hdlcSecStatusTable 2 } 
        secFpgaRxFifoWrite OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx fifo_w(0x400e2000)"
            ::= { hdlcSecStatusTable 3 } 
        secFpgaRxFifoRead OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx fifo_r(0x400e2004)"
            ::= { hdlcSecStatusTable 4 } 
        secFpgaTxFifoWrite OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary tx fifo_w_pkt8q(0x400e0000)"
            ::= { hdlcSecStatusTable 5 } 
        secFpgaTxFifoRead OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary tx fifo_r_pkt8q(0x400e0004)"
            ::= { hdlcSecStatusTable 6 } 	
        secFpgaRxFlagCnt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx Flag_cnt(0x400e1000)"
            ::= { hdlcSecStatusTable 7 } 
        secFpgaRxFlagAbort OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx Flag_abort(0x400e1004)"
            ::= { hdlcSecStatusTable 8 }
        secFpgaRxLink OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary rx Link(0x400e1010)"
            ::= { hdlcSecStatusTable 9 }
        secCpuInbandIsr OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary cpu inband_isr"
            ::= { hdlcSecStatusTable 10 }	
        secCpuHdlcRxTadk OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary cpu hdlc_rx_task"
            ::= { hdlcSecStatusTable 11 }
        secCpuHdlcRxPkt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary cpu hdlc_rx_pkt"
            ::= { hdlcSecStatusTable 12 }
        secCpuHdlcTxPkt OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "Secondary cpu hdlc_tx_inband_pkt"
            ::= { hdlcSecStatusTable 13 }	               
                        
--
--  rs485 max delay
--
        rs485StatusTable  OBJECT IDENTIFIER ::= { advancedStatusTable  4 }
        rs485MaxDelayTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs485MaxDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Display slot rs485 max delay"
            ::= { rs485StatusTable 1 }

        rs485MaxDelayEntry  OBJECT-TYPE
            SYNTAX  Rs485MaxDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Slot model entry"
            INDEX { rs485SlotIndex }
            ::= { rs485MaxDelayTable 1 }

            Rs485MaxDelayEntry ::= SEQUENCE {
            rs485SlotIndex                 GenSlotID,
            rs485MaxDelay                  DisplayString,
            rs485NoRxCnt                   INTEGER,
            rs485ModelType                 GenModelType
        }
		
        rs485SlotIndex  OBJECT-TYPE
          SYNTAX  GenSlotID
          ACCESS  read-only
          STATUS  mandatory
          DESCRIPTION
          "Slot A~D and 1~12, total 16 slots."
          ::= { rs485MaxDelayEntry 1 }  

        rs485MaxDelay  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Card max delay"
            ::= { rs485MaxDelayEntry 2 }
        rs485NoRxCnt  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Card no rx counter"
            ::= { rs485MaxDelayEntry 3 }	

        rs485ModelType  OBJECT-TYPE
            SYNTAX  GenModelType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Model type of current plug-in card"
            ::= { rs485MaxDelayEntry 4 }

--
--  rs485 TX/RX overlap
--
        rs485TxRxOverlapTable    OBJECT IDENTIFIER ::= { rs485StatusTable 2 }
        rs485TxRxOverlap OBJECT-TYPE
            SYNTAX INTEGER
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "rs485 tx/rx overlap."
            ::= { rs485TxRxOverlapTable 1 }
			
--
--  advanced status cmd
--
        advancedCmdTable  OBJECT IDENTIFIER ::= { advancedStatusTable  5 }
--        
--  rs485 max delay clean		
--	
        rs485MaxDelayClearTable    OBJECT IDENTIFIER ::= { advancedCmdTable 1 }
        delayClearAll  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Uplink Enable/Disable."
            ::= { rs485MaxDelayClearTable 1 }
				
        delayClearBySlot  OBJECT-TYPE
            SYNTAX  MapSetSlot
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D and 1~12, total 16 slots."
            ::= { rs485MaxDelayClearTable 2 }	
--
--  rs485 tx rx debug enable
--
        rs485DebugCmdTable OBJECT IDENTIFIER ::= { advancedCmdTable 2 }
		rs485txRxDebug OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tx rx debug Enable/Disable."
            ::= { rs485DebugCmdTable 1 }
		rs485txRxDebugStClear OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tx rx debug Enable/Disable."
            ::= { rs485DebugCmdTable 2 }
		debugCmd3 OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tx rx debug Enable/Disable."
            ::= { rs485DebugCmdTable 3 }
		debugCmd4 OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tx rx debug Enable/Disable."
            ::= { rs485DebugCmdTable 4 }
		debugCmd5 OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tx rx debug Enable/Disable."
            ::= { rs485DebugCmdTable 5 }				
--        
--  debug table		
--			
        debugStatesTable  OBJECT IDENTIFIER ::= { advancedStatusTable  6 }	
		
        debugList    OBJECT IDENTIFIER ::= { debugStatesTable 1 }
        bufferFull1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug1"
            ::= { debugList 1 }
				
        bufferFull2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug2"
            ::= { debugList 2 }
			
        irc1IntcMask  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug3"
            ::= { debugList 3 }	
        irc2TimeOut  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug4"
            ::= { debugList 4 }	
        irc2RemoteTimeOut  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug5"
            ::= { debugList 5 }	
        irc2Ready  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug6"
            ::= { debugList 6 }	
        debug7  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug7"
            ::= { debugList 7 }	
        debug8  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug8"
            ::= { debugList 8 }	
        debug9  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug9"
            ::= { debugList 9 }	
        debug10  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug10"
            ::= { debugList 10 }	
        debug11  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug11"
            ::= { debugList 11 }
				
        debug12  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug12"
            ::= { debugList 12 }
			
        debug13  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug13"
            ::= { debugList 13 }	
        debug14  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug14"
            ::= { debugList 14 }	
        debug15  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug15"
            ::= { debugList 15 }	
        debug16  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug16"
            ::= { debugList 16 }	
        debug17  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug17"
            ::= { debugList 17 }	
        debug18  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug18"
            ::= { debugList 18 }	
        debug19  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug19"
            ::= { debugList 19 }	
        debug20  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug20"
            ::= { debugList 20 }
        debug21  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug21"
            ::= { debugList 21 }
				
        debug22  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug22"
            ::= { debugList 22 }
			
        debug23  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug23"
            ::= { debugList 23 }	
        debug24  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug24"
            ::= { debugList 24 }	
        debug25  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug25"
            ::= { debugList 25 }	
        debug26  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug26"
            ::= { debugList 26 }	
        debug27  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug27"
            ::= { debugList 27 }	
        debug28  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug28"
            ::= { debugList 28 }	
        debug29  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug29"
            ::= { debugList 29 }	
        debug30  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..65) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "debug30"
            ::= { debugList 30 }
		
			
--======================================================================--
--======================================================================--
--  trap MIB
--======================================================================--
--======================================================================--

        localTrap  TRAP-TYPE
            ENTERPRISE loop-AM3440-CCPB-A
            VARIABLES  { ccAlarmQueueString,
                ccAlarmType,
                ccAlarmModel,
                ccAlarmSlot,
                ccAlarmPort,
                ccAlarmSeverity,
                ccAlarmLink ,
                ccAlarmSubrack}
            DESCRIPTION
                "Local alarm trap"
            ::= 3

        remoteTrap  TRAP-TYPE
            ENTERPRISE loop-AM3440-CCPB-A
            VARIABLES  {ccAlarmQueueString}
            DESCRIPTION
                "remote alarm trap"
            ::= 4

        remove2Trap  TRAP-TYPE
            ENTERPRISE loop-AM3440-CCPB-A
            VARIABLES  { ccAlarmQueueString,
                ccAlarmType,
                ccAlarmModel,
                ccAlarmSlot,
                ccAlarmPort,
                ccAlarmSeverity,
                ccAlarmLink ,
                ccAlarmSubrack}
            DESCRIPTION
                "Local alarm trap remove for old version"
            ::= 5

        removeTrap  TRAP-TYPE
            ENTERPRISE loop-AM3440-CCPB-A
            VARIABLES  { ccAlarmQueueString,
                ccAlarmType,
                ccAlarmModel,
                ccAlarmSlot,
                ccAlarmPort,
                ccAlarmSeverity,
                ccAlarmLink ,
                ccAlarmSubrack}
            DESCRIPTION
                "Local alarm trap remove"
            ::= 9

    ccNotification     OBJECT IDENTIFIER ::= { loop-AM3440-CCPB-A 0 }

        v3LocalTrap  NOTIFICATION-TYPE
            OBJECTS  { ccAlarmQueueString,
                ccAlarmType,
                ccAlarmModel,
                ccAlarmSlot,
                ccAlarmPort,
                ccAlarmSeverity,
                ccAlarmLink ,
                ccAlarmSubrack}
            STATUS current
            DESCRIPTION
                "Local alarm trap"
            ::= { ccNotification 1 }

        v3RemoveTrap  NOTIFICATION-TYPE
            OBJECTS  { ccAlarmQueueString,
                ccAlarmType,
                ccAlarmModel,
                ccAlarmSlot,
                ccAlarmPort,
                ccAlarmSeverity,
                ccAlarmLink ,
                ccAlarmSubrack}
            STATUS current
            DESCRIPTION
                "Local alarm trap"
            ::= { ccNotification 2 }


--======================================================================--
--======================================================================--
--  e1-card MIB
--======================================================================--
-- E1
--    lineControlTable          OBJECT IDENTIFIER ::= { e1-card 1  }

--    userCurrentPerfTable      OBJECT IDENTIFIER ::= { e1-card 2  }
--    userIntervalPerfTable     OBJECT IDENTIFIER ::= { e1-card 3  }
--    userTotalPerfTable        OBJECT IDENTIFIER ::= { e1-card 4  }
--    userSevenDayPerfTable     OBJECT IDENTIFIER ::= { e1-card 5  }

--    remoteCurrentPerfTable    OBJECT IDENTIFIER ::= { e1-card 6  }
--    remoteIntervalPerfTable   OBJECT IDENTIFIER ::= { e1-card 7  }
--    remoteTotalPerfTable      OBJECT IDENTIFIER ::= { e1-card 8  }
--    remoteSevenDayPerfTable   OBJECT IDENTIFIER ::= { e1-card 9  }

--    lineCurrentPerfTable      OBJECT IDENTIFIER ::= { e1-card 10 }
--    lineIntervalPerfTable     OBJECT IDENTIFIER ::= { e1-card 11 }
--    lineTotalPerfTable        OBJECT IDENTIFIER ::= { e1-card 12 }
--    lineSevenDayPerfTable     OBJECT IDENTIFIER ::= { e1-card 13 }

--    alarmQueueTable           OBJECT IDENTIFIER ::= { e1-card 14 }
--    alarmHistoryTable         OBJECT IDENTIFIER ::= { e1-card 15 }
--    lineAvailabilityTable     OBJECT IDENTIFIER ::= { e1-card 16 }

--    alarmControlTable         OBJECT IDENTIFIER ::= { e1-card 17 }
--    thresholdControlTable     OBJECT IDENTIFIER ::= { e1-card 18 }
--    lineDiagControlTable      OBJECT IDENTIFIER ::= { e1-card 19 }
--    commandControlTable       OBJECT IDENTIFIER ::= { e1-card 20 }

--    systemInformationTable    OBJECT IDENTIFIER ::= { e1-card 21 }
--======================================================================--

--
--  Line Control Table
--

        e1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { e1-card 1 }

        e1LineControlEntry  OBJECT-TYPE
            SYNTAX  E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { e1Index }
            ::= { e1LineControlTable 1 }

            E1LineControlEntry ::= SEQUENCE  {
            e1Index                     SmallSlotIndex,
            e1LineFrame                 INTEGER,
            e1LineCoding                INTEGER,
            e1Interface                 INTEGER,
            e1FDL                       INTEGER,
            e1FDLSabit                  INTEGER,
            e1AIS                       INTEGER,
            e1RAI                       INTEGER,
            e1CRC                       INTEGER,
            e1IdleCode                  INTEGER,
            e1CASMode                   INTEGER,
            e1SignallingMode            INTEGER,
            e1CGA                       INTEGER,
            e1OutOfService              INTEGER
        }

        e1Index  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { e1LineControlEntry 1 }

        e1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { e1LineControlEntry 2 }

        e1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { e1LineControlEntry 3 }

        e1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twisted-pair(1),
                    coaxial-cable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that E1 line use 75/120 Ohm Cable."
            ::= { e1LineControlEntry 4 }

        e1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link ON/OFF"
            ::= { e1LineControlEntry 5 }

        e1FDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5)
--                    sa4-5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link use Sax bit"
            ::= { e1LineControlEntry 6 }

        e1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 line Alarm Indication Signal."
            ::= { e1LineControlEntry 7 }

        e1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { e1LineControlEntry 8 }

        e1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Cycle Redundancy Check ON/OFF"
            ::= { e1LineControlEntry 9 }

        e1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { e1LineControlEntry 10 }

        e1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { e1LineControlEntry 11 }

        e1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1),
                    cd01(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS or CD01"
            ::= { e1LineControlEntry 12 }

        e1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1),
                    trans(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { e1LineControlEntry 13 }

        e1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2)
--                busy-idle(3),
--                idle-busy(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { e1LineControlEntry 14 }


--
--  User Current Performance Table
--

        e1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { e1-card 2 }

        e1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  E1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { e1Index }
            ::= { e1UserCurrentPerfTable 1 }

            E1UserCurrentPerfEntry ::= SEQUENCE  {
            e1UserCurrentPerfES         INTEGER,
            e1UserCurrentPerfSES        INTEGER,
            e1UserCurrentPerfBES        INTEGER,
            e1UserCurrentPerfUAS        INTEGER,
            e1UserCurrentPerfCSS        INTEGER,
            e1UserCurrentPerfBPV        INTEGER,
            e1UserCurrentPerfDMs        INTEGER,
            e1UserCurr15MinTimeElapsed  INTEGER,
            e1UserValid15MinInterval    INTEGER
        }

        e1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1UserCurrentPerfEntry 2 }

        e1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1UserCurrentPerfEntry 3 }

        e1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1UserCurrentPerfEntry 4 }

        e1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1UserCurrentPerfEntry 5 }

        e1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { e1UserCurrentPerfEntry 6 }

        e1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1UserCurrentPerfEntry 7 }

        e1UserCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1UserCurrentPerfEntry 8 }

        e1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { e1UserCurrentPerfEntry 11 }

        e1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { e1UserCurrentPerfEntry 12 }



--
--  User Interval Performance Table
--

        e1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { e1-card 3 }

        e1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  E1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { e1Index ,
        e1UserIntervalPerfNumber }
            ::= { e1UserIntervalPerfTable 1 }

            E1UserIntervalPerfEntry ::= SEQUENCE  {
            e1UserIntervalPerfNumber    INTEGER  (1..96),
            e1UserIntervalPerfES        INTEGER,
            e1UserIntervalPerfSES       INTEGER,
            e1UserIntervalPerfBES       INTEGER,
            e1UserIntervalPerfUAS       INTEGER,
            e1UserIntervalPerfCSS       INTEGER,
            e1UserIntervalPerfBPV       INTEGER,
            e1UserIntervalPerfDMs       INTEGER
        }

        e1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { e1UserIntervalPerfEntry 2 }

        e1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1UserIntervalPerfEntry 3 }

        e1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1UserIntervalPerfEntry 4 }

        e1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1UserIntervalPerfEntry 5 }

        e1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1UserIntervalPerfEntry 6 }

        e1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1UserIntervalPerfEntry 7 }

        e1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1UserIntervalPerfEntry 8 }

        e1UserIntervalPerfDMs   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        e1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { e1-card 4 }

        e1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  E1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { e1Index }
            ::= { e1UserTotalPerfTable 1 }

            E1UserTotalPerfEntry ::= SEQUENCE  {
            e1UserTotalPerfES           INTEGER,
            e1UserTotalPerfSES          INTEGER,
            e1UserTotalPerfBES          INTEGER,
            e1UserTotalPerfUAS          INTEGER,
            e1UserTotalPerfCSS          INTEGER,
            e1UserTotalPerfBPV          INTEGER,
            e1UserTotalPerfDMs          INTEGER
        }

        e1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1UserTotalPerfEntry 2 }

        e1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1UserTotalPerfEntry 3 }

        e1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1UserTotalPerfEntry 4 }

        e1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1UserTotalPerfEntry 5 }

        e1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1UserTotalPerfEntry 6 }

        e1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1UserTotalPerfEntry 7 }

        e1UserTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1UserTotalPerfEntry 8 }

--
--  User Seven Days Performance Table
--
        e1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { e1-card 5 }

        e1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  E1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { e1Index ,
        e1UserDaysIndex }
            ::= { e1UserSevenDaysPerfTable 1 }

            E1UserSevenDaysPerfEntry ::= SEQUENCE  {
            e1UserDaysIndex             INTEGER (1..7),
            e1UserDateStrIndex          DisplayString (SIZE (0..255) ),
            e1UserSevenDaysPerfES       INTEGER,
            e1UserSevenDaysPerfSES      INTEGER,
            e1UserSevenDaysPerfBES      INTEGER,
            e1UserSevenDaysPerfUAS      INTEGER,
            e1UserSevenDaysPerfCSS      INTEGER,
            e1UserSevenDaysPerfDMs      INTEGER
        }

        e1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { e1UserSevenDaysPerfEntry 2 }

        e1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { e1UserSevenDaysPerfEntry 3 }

        e1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1UserSevenDaysPerfEntry 4 }

        e1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1UserSevenDaysPerfEntry 5 }

        e1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1UserSevenDaysPerfEntry 6 }

        e1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1UserSevenDaysPerfEntry 7 }

        e1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1UserSevenDaysPerfEntry 8 }

        e1UserSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1UserSevenDaysPerfEntry 9 }


--
--  Line Current Performance Table
--

        e1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { e1-card 10 }

        e1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  E1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { e1Index }
            ::= { e1LineCurrentPerfTable 1 }

            E1LineCurrentPerfEntry ::= SEQUENCE  {
            e1LineCurrentPerfES         INTEGER,
            e1LineCurrentPerfSES        INTEGER,
            e1LineCurrentPerfBES        INTEGER,
            e1LineCurrentPerfUAS        INTEGER,
            e1LineCurrentPerfCSS        INTEGER,
            e1LineCurrentPerfBPV        INTEGER,
            e1LineCurrentPerfDMs        INTEGER,
            e1LineCurr15MinTimeElapsed  INTEGER,
            e1LineValid15MinInterval    INTEGER
        }

        e1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { e1LineCurrentPerfEntry 2 }

        e1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1LineCurrentPerfEntry 3 }

        e1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1LineCurrentPerfEntry 4 }

        e1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1LineCurrentPerfEntry 5 }

        e1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1LineCurrentPerfEntry 6 }

        e1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1LineCurrentPerfEntry 7 }

        e1LineCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1LineCurrentPerfEntry 8 }

        e1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { e1LineCurrentPerfEntry 11 }

        e1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { e1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        e1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { e1-card 11 }

        e1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  E1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { e1Index ,
        e1LineIntervalPerfNumber }
            ::= { e1LineIntervalPerfTable 1 }

            E1LineIntervalPerfEntry ::= SEQUENCE {
            e1LineIntervalPerfNumber    INTEGER  (1..96),
            e1LineIntervalPerfES        INTEGER,
            e1LineIntervalPerfSES       INTEGER,
            e1LineIntervalPerfBES       INTEGER,
            e1LineIntervalPerfUAS       INTEGER,
            e1LineIntervalPerfCSS       INTEGER,
            e1LineIntervalPerfBPV       INTEGER,
            e1LineIntervalPerfDMs       INTEGER,
            e1LineIntvAvailable         INTEGER
        }

        e1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { e1LineIntervalPerfEntry 2 }

        e1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1LineIntervalPerfEntry 3 }

        e1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1LineIntervalPerfEntry 4 }

        e1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1LineIntervalPerfEntry 5 }

        e1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1LineIntervalPerfEntry 6 }

        e1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1LineIntervalPerfEntry 7 }

        e1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1LineIntervalPerfEntry 8 }

        e1LineIntervalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1LineIntervalPerfEntry 9 }

        e1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { e1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        e1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { e1-card 12 }

        e1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  E1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { e1Index }
            ::= { e1LineTotalPerfTable 1 }

            E1LineTotalPerfEntry ::= SEQUENCE  {
            e1LineTotalPerfES           INTEGER,
            e1LineTotalPerfSES          INTEGER,
            e1LineTotalPerfBES          INTEGER,
            e1LineTotalPerfUAS          INTEGER,
            e1LineTotalPerfCSS          INTEGER,
            e1LineTotalPerfBPV          INTEGER,
            e1LineTotalPerfDMs          INTEGER
        }

        e1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1LineTotalPerfEntry 2 }

        e1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1LineTotalPerfEntry 3 }

        e1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1LineTotalPerfEntry 4 }

        e1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1LineTotalPerfEntry 5 }

        e1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1LineTotalPerfEntry 6 }

        e1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { e1LineTotalPerfEntry 7 }

        e1LineTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        e1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { e1-card 13 }

        e1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  E1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { e1Index ,
        e1LineDaysIndex }
            ::= { e1LineSevenDaysPerfTable 1 }

            E1LineSevenDaysPerfEntry ::= SEQUENCE  {
            e1LineDaysIndex             INTEGER (1..7),
            e1LineDateStrIndex          DisplayString (SIZE (0..255) ),
            e1LineSevenDaysPerfES       INTEGER,
            e1LineSevenDaysPerfSES      INTEGER,
            e1LineSevenDaysPerfBES      INTEGER,
            e1LineSevenDaysPerfUAS      INTEGER,
            e1LineSevenDaysPerfCSS      INTEGER,
            e1LineSevenDaysPerfDMs      INTEGER
        }

        e1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { e1LineSevenDaysPerfEntry 2 }

        e1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { e1LineSevenDaysPerfEntry 3 }

        e1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { e1LineSevenDaysPerfEntry 4 }

        e1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { e1LineSevenDaysPerfEntry 5 }

        e1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { e1LineSevenDaysPerfEntry 6 }

        e1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { e1LineSevenDaysPerfEntry 7 }

        e1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { e1LineSevenDaysPerfEntry 8 }

        e1LineSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { e1LineSevenDaysPerfEntry 9 }


--
--  Alarm Queue Table
--

        e1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { e1-card 14 }

        e1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  E1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { e1Index ,
        e1AlarmQueueIndex }
            ::= { e1AlarmQueueTable 1 }

            E1AlarmQueueEntry ::= SEQUENCE {
            e1AlarmQueueIndex           INTEGER (1..40),
            e1AlarmQueueString          DisplayString (SIZE(0..255))
        }

        e1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { e1AlarmQueueEntry 2 }

        e1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { e1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        e1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { e1-card 15 }

        e1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  E1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { e1Index ,
        e1AlarmHistoryIndex }
            ::= { e1AlarmHistoryTable 1 }

            E1AlarmHistoryEntry ::= SEQUENCE {
            e1AlarmHistoryIndex         INTEGER,
            e1Threshold                 INTEGER,
            e1CurrentState              INTEGER,
            e1CurrentCount              INTEGER,
            e1Alarm                     AlarmSeverity
        }

        e1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { e1AlarmHistoryEntry 2 }

        e1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { e1AlarmHistoryEntry 3 }

        e1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { e1AlarmHistoryEntry 4 }

        e1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { e1AlarmHistoryEntry 5 }

        e1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { e1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        e1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { e1-card 16 }

        e1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  E1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { e1Index }
            ::= { e1LineAvailabilityTable 1 }

            E1LineAvailabilityEntry ::= SEQUENCE {
            e1AvailableSeconds          DisplayString,
            e1UnavailableSeconds        DisplayString,
            e1LineAvailability          DisplayString
        }

        e1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { e1LineAvailabilityEntry 2 }

        e1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { e1LineAvailabilityEntry 3 }

        e1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { e1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        e1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { e1-card 17 }

        e1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  E1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { e1Index }
            ::= { e1AlarmControlTable 1 }

            E1AlarmControlEntry ::= SEQUENCE {
            e1RAI-Line                  AlarmSeverity,
            e1AIS-Line                  AlarmSeverity,
            e1LOS-Line                  AlarmSeverity,
            e1LOF-Line                  AlarmSeverity,
            e1BPV-Line                  AlarmSeverity,
            e1ESS-Line                  AlarmSeverity,
            e1UAS-Line                  AlarmSeverity,
            e1CSS-Line                  AlarmSeverity
        }

        e1RAI-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { e1AlarmControlEntry 2 }

        e1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { e1AlarmControlEntry 3 }

        e1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { e1AlarmControlEntry 4 }

        e1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { e1AlarmControlEntry 5 }

        e1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { e1AlarmControlEntry 6 }

        e1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { e1AlarmControlEntry 7 }

        e1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { e1AlarmControlEntry 8 }

        e1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { e1AlarmControlEntry 9 }


--
--  Threshold Control Table
--

        e1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { e1-card 18 }

        e1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  E1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { e1Index }
            ::= { e1ThresholdControlTable 1 }

            E1ThresholdControlEntry ::= SEQUENCE {
            e1ThresholdBPV-Line         INTEGER,
            e1ThresholdESS-Line         INTEGER,
            e1ThresholdUAS-Line         INTEGER,
            e1ThresholdCSS-Line         INTEGER
        }

        e1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line "
            ::= { e1ThresholdControlEntry 2 }

        e1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { e1ThresholdControlEntry 3 }

        e1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { e1ThresholdControlEntry 4 }

        e1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { e1ThresholdControlEntry 5 }


--
-- Line Diagnostic Control Table
--

        e1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { e1-card 19 }

        e1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  E1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { e1Index }
            ::= { e1LineDiagControlTable 1 }

            E1LineDiagControlEntry ::= SEQUENCE {
            e1LoopbackType              INTEGER,
            e1LoopbackStatus            INTEGER,
            e1PRBSControl               INTEGER,
            e1PRBSStatus                INTEGER,
            e1PRBSElapseSeconds         INTEGER,
            e1PRBSErrorSeconds          INTEGER,
            e1PRBSErrorCounts           INTEGER,
            e1InbandLoopbackPeriod      INTEGER
        }

        e1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-PLB-Active(5),
                    remote-LLB-Active(6),
                    remote-PLB-Deactive(7),
                    remote-LLB-Deactive(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "e1 Loopback Type"
            ::= { e1LineDiagControlEntry 2 }

        e1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "e1 Loopback Status"
            ::= { e1LineDiagControlEntry 3 }

        e1PRBSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-deactive(1),
                    prbs-active-full(2),
                    prbs-reset-error-count(3),
                    prbs-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "e1 PRBS Control"
            ::= { e1LineDiagControlEntry 4 }

        e1PRBSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-sync(1),
                    prbs-unsync(2),
                    prbs-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "e1 PRBS Status"
            ::= { e1LineDiagControlEntry 5 }

        e1PRBSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "e1 PRBS Elapse Seconds"
            ::= { e1LineDiagControlEntry 6 }

        e1PRBSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "e1 PRBS Error Seconds"
            ::= { e1LineDiagControlEntry 7 }

        e1PRBSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "e1 PRBS Error Counts"
            ::= { e1LineDiagControlEntry 8 }

        e1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of E1 inband local, payload, or line loopback"
            ::= { e1LineDiagControlEntry 9 }

--
--  Command Control Table
--

        e1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { e1-card 20 }

        e1CommandControlEntry  OBJECT-TYPE
            SYNTAX  E1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { e1Index }
            ::= { e1CommandControlTable 1 }

            E1CommandControlEntry ::= SEQUENCE {
            e1AlarmQueueReset           INTEGER,
            e1UserPerfReset             INTEGER,
            e1AlarmHistoryReset         INTEGER,
            e1PortReset                 INTEGER,
            e1PortLoadDefault           INTEGER
        }

        e1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { e1CommandControlEntry 2 }

        e1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { e1CommandControlEntry 3 }

        e1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { e1CommandControlEntry 4 }

        e1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset E1 Port"
            ::= { e1CommandControlEntry 5 }

        e1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default E1 Port"
            ::= { e1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        e1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { e1-card 21 }

        e1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  E1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { e1Index }
            ::= { e1SystemInformationTable 1 }

            E1SystemInformationEntry ::= SEQUENCE {
            e1PROMVersion               DisplayString,
            e1HWVersion                 DisplayString
        }

        e1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " e1 PROM Version"
            ::= { e1SystemInformationEntry 2 }

        e1HWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " e1 HW Version"
            ::= { e1SystemInformationEntry 3 }


--
--  Remote Link Identification Table
--

        e1RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Table"
            ::= { e1-card 22 }

        e1RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  E1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification entry"
            INDEX { e1Index }
            ::= { e1RemoteLinkIDTable 1 }

            E1RemoteLinkIDEntry ::= SEQUENCE {
            e1RemoteLinkIDType          INTEGER,
            e1RemoteLinkIDRack          INTEGER,
            e1RemoteLinkIDSlotNumber    INTEGER,
            e1RemoteLinkIDPort          INTEGER,
            e1RemoteLinkIDSerialNumber  INTEGER,
            e1RemoteLinkIDBackupSlotNUM INTEGER,
            e1RemoteLinkIDBackupPort    INTEGER
        }

        e1RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type of remote site."
            ::= { e1RemoteLinkIDEntry 2 }

        e1RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { e1RemoteLinkIDEntry 3 }

        e1RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { e1RemoteLinkIDEntry 4 }

        e1RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { e1RemoteLinkIDEntry 5 }

        e1RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { e1RemoteLinkIDEntry 6 }

        e1RemoteLinkIDBackupSlotNUM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Slot Number"
            ::= { e1RemoteLinkIDEntry 7 }

        e1RemoteLinkIDBackupPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Port"
            ::= { e1RemoteLinkIDEntry 8 }


--
--  E1 Customer Information Table
--

        e1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF E1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { e1-card 99 }

        e1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  E1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { e1CISlotIndex , e1CIPortIndex }
            ::= { e1CustomerInfoTable 1 }

        E1CustomerInfoEntry ::= SEQUENCE {
            e1CISlotIndex              SmallSlotIndex,
            e1CIPortIndex              FourPortID,
            e1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        e1CISlotIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { e1CustomerInfoEntry 1 }

        e1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { e1CustomerInfoEntry 2 }

        e1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { e1CustomerInfoEntry 3 }

        e1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of FE1"
            ::= { e1-card 100 }


--======================================================================--
--======================================================================--
--  t1-card MIB
--======================================================================--
--======================================================================--


--
--  Line Control Table
--

        t1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { t1-card 1 }

        t1LineControlEntry  OBJECT-TYPE
            SYNTAX  T1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { t1Index }
            ::= { t1LineControlTable 1 }

            T1LineControlEntry ::= SEQUENCE  {
            t1Index                     SmallSlotIndex,
            t1LineFrame                 INTEGER,
            t1LineCoding                INTEGER,
            t1Interface                 INTEGER,
            t1LineBuildOut              INTEGER,
            t1Equalizer                 INTEGER,
            t1AIS                       INTEGER,
            t1YEL                       INTEGER,
            t1Inband                    INTEGER,
            t1IdleCode                  INTEGER,
            t1CASMode                   INTEGER,
            t1SignallingMode            INTEGER,
            t1CGA                       INTEGER,
            t1OutOfService              INTEGER
        }

        t1Index  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { t1LineControlEntry 1 }

        t1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esf-t1-403(3),
                    g802(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { t1LineControlEntry 2 }

        t1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { t1LineControlEntry 3 }

        t1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    long-haul(1),
                    short-haul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that T1 line use Long/Short haul."
            ::= { t1LineControlEntry 4 }

        t1LineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo-0-0dB(1),
                    lbo-7-5dB(2),
                    lbo-15dB(3)
--                        lbo-0.0dB(1),
--                        lbo-7.5dB(2),
--                        lbo-15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line build out."
            ::= { t1LineControlEntry 5 }

        t1Equalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ-0-133Ft(1),
                    equ-133-266ft(2),
                    equ-266-399ft(3),
                    equ-399-533ft(4),
                    equ-533-655ft(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line equalizer."
            ::= { t1LineControlEntry 6 }

        t1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line Alarm Indication Signal."
            ::= { t1LineControlEntry 7 }

        t1YEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { t1LineControlEntry 8 }

        t1Inband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line inband ON/OFF"
            ::= { t1LineControlEntry 9 }

        t1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { t1LineControlEntry 10 }

        t1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { t1LineControlEntry 11 }

        t1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS"
            ::= { t1LineControlEntry 12 }

        t1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
--                        trans(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { t1LineControlEntry 13 }

        t1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2)
--                        busy-idle(3),
--                        idle-busy(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { t1LineControlEntry 14 }



--
--  User Current Performance Table
--

        t1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { t1-card 2 }

        t1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  T1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { t1Index }
            ::= { t1UserCurrentPerfTable 1 }

            T1UserCurrentPerfEntry ::= SEQUENCE  {
            t1UserCurrentPerfES         INTEGER,
            t1UserCurrentPerfSES        INTEGER,
            t1UserCurrentPerfBES        INTEGER,
            t1UserCurrentPerfUAS        INTEGER,
            t1UserCurrentPerfCSS        INTEGER,
            t1UserCurrentPerfBPV        INTEGER,
            t1UserCurrentPerfLOFC       INTEGER,
            t1UserCurr15MinTimeElapsed  INTEGER,
            t1UserValid15MinInterval    INTEGER
        }

        t1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1UserCurrentPerfEntry 2 }

        t1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1UserCurrentPerfEntry 3 }

        t1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1UserCurrentPerfEntry 4 }

        t1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1UserCurrentPerfEntry 5 }

        t1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { t1UserCurrentPerfEntry 6 }

        t1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1UserCurrentPerfEntry 7 }

        t1UserCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1UserCurrentPerfEntry 8 }

        t1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { t1UserCurrentPerfEntry 11 }

        t1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { t1UserCurrentPerfEntry 12 }


--
--  User Interval Performance Table
--

        t1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { t1-card 3 }

        t1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  T1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { t1Index ,
        t1UserIntervalPerfNumber }
            ::= { t1UserIntervalPerfTable 1 }

            T1UserIntervalPerfEntry ::= SEQUENCE  {
            t1UserIntervalPerfNumber    INTEGER  (1..96),
            t1UserIntervalPerfES        INTEGER,
            t1UserIntervalPerfSES       INTEGER,
            t1UserIntervalPerfBES       INTEGER,
            t1UserIntervalPerfUAS       INTEGER,
            t1UserIntervalPerfCSS       INTEGER,
            t1UserIntervalPerfBPV       INTEGER,
            t1UserIntervalPerfLOFC      INTEGER
        }

        t1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { t1UserIntervalPerfEntry 2 }

        t1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1UserIntervalPerfEntry 3 }

        t1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1UserIntervalPerfEntry 4 }

        t1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1UserIntervalPerfEntry 5 }

        t1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1UserIntervalPerfEntry 6 }

        t1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1UserIntervalPerfEntry 7 }

        t1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1UserIntervalPerfEntry 8 }

        t1UserIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        t1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { t1-card 4 }

        t1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  T1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { t1Index }
            ::= { t1UserTotalPerfTable 1 }

            T1UserTotalPerfEntry ::= SEQUENCE  {
            t1UserTotalPerfES           INTEGER,
            t1UserTotalPerfSES          INTEGER,
            t1UserTotalPerfBES          INTEGER,
            t1UserTotalPerfUAS          INTEGER,
            t1UserTotalPerfCSS          INTEGER,
            t1UserTotalPerfBPV          INTEGER,
            t1UserTotalPerfLOFC         INTEGER
        }

        t1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1UserTotalPerfEntry 2 }

        t1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1UserTotalPerfEntry 3 }

        t1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1UserTotalPerfEntry 4 }

        t1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1UserTotalPerfEntry 5 }

        t1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1UserTotalPerfEntry 6 }

        t1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1UserTotalPerfEntry 7 }

        t1UserTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        t1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { t1-card 22 }

        t1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  T1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance entry"
            INDEX { t1Index ,
        t1UserDaysIndex }
            ::= { t1UserSevenDaysPerfTable 1 }

            T1UserSevenDaysPerfEntry ::= SEQUENCE  {
            t1UserDaysIndex             INTEGER (1..7),
            t1UserDateStrIndex          DisplayString (SIZE (0..255) ),
            t1UserSevenDaysPerfES       INTEGER,
            t1UserSevenDaysPerfSES      INTEGER,
            t1UserSevenDaysPerfBES      INTEGER,
            t1UserSevenDaysPerfUAS      INTEGER,
            t1UserSevenDaysPerfCSS      INTEGER
--            t1UserSevenDaysPerfLOFC     INTEGER




    }

        t1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { t1UserSevenDaysPerfEntry 2 }

        t1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { t1UserSevenDaysPerfEntry 3 }

        t1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1UserSevenDaysPerfEntry 4 }

        t1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1UserSevenDaysPerfEntry 5 }

        t1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1UserSevenDaysPerfEntry 6 }

        t1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1UserSevenDaysPerfEntry 7 }

        t1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1UserSevenDaysPerfEntry 8 }

--        t1UserSevenDaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { t1UserSevenDaysPerfEntry 9 }


--
--  Line Current Performance Table
--

        t1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { t1-card 8 }

        t1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  T1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { t1Index }
            ::= { t1LineCurrentPerfTable 1 }

            T1LineCurrentPerfEntry ::= SEQUENCE  {
            t1LineCurrentPerfES         INTEGER,
            t1LineCurrentPerfSES        INTEGER,
            t1LineCurrentPerfBES        INTEGER,
            t1LineCurrentPerfUAS        INTEGER,
            t1LineCurrentPerfCSS        INTEGER,
            t1LineCurrentPerfBPV        INTEGER,
            t1LineCurrentPerfLOFC       INTEGER,
            t1LineCurr15MinTimeElapsed  INTEGER,
            t1LineValid15MinInterval    INTEGER
        }

        t1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { t1LineCurrentPerfEntry 2 }

        t1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1LineCurrentPerfEntry 3 }

        t1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1LineCurrentPerfEntry 4 }

        t1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1LineCurrentPerfEntry 5 }

        t1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1LineCurrentPerfEntry 6 }

        t1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1LineCurrentPerfEntry 7 }

        t1LineCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1LineCurrentPerfEntry 8 }

        t1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { t1LineCurrentPerfEntry 11 }

        t1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { t1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        t1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { t1-card 9 }

        t1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  T1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { t1Index ,
        t1LineIntervalPerfNumber }
            ::= { t1LineIntervalPerfTable 1 }

            T1LineIntervalPerfEntry ::= SEQUENCE {
            t1LineIntervalPerfNumber    INTEGER  (1..96),
            t1LineIntervalPerfES        INTEGER,
            t1LineIntervalPerfSES       INTEGER,
            t1LineIntervalPerfBES       INTEGER,
            t1LineIntervalPerfUAS       INTEGER,
            t1LineIntervalPerfCSS       INTEGER,
            t1LineIntervalPerfBPV       INTEGER,
            t1LineIntervalPerfLOFC      INTEGER,
            t1LineIntvAvailable         INTEGER
        }

        t1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index "
            ::= { t1LineIntervalPerfEntry 2 }

        t1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1LineIntervalPerfEntry 3 }

        t1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1LineIntervalPerfEntry 4 }

        t1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1LineIntervalPerfEntry 5 }

        t1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1LineIntervalPerfEntry 6 }

        t1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1LineIntervalPerfEntry 7 }

        t1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1LineIntervalPerfEntry 8 }

        t1LineIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1LineIntervalPerfEntry 9 }

        t1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { t1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        t1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { t1-card 10 }

        t1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  T1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance entry"
            INDEX { t1Index }
            ::= { t1LineTotalPerfTable 1 }

            T1LineTotalPerfEntry ::= SEQUENCE  {
            t1LineTotalPerfES           INTEGER,
            t1LineTotalPerfSES          INTEGER,
            t1LineTotalPerfBES          INTEGER,
            t1LineTotalPerfUAS          INTEGER,
            t1LineTotalPerfCSS          INTEGER,
            t1LineTotalPerfBPV          INTEGER,
            t1LineTotalPerfLOFC         INTEGER
        }

        t1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1LineTotalPerfEntry 2 }

        t1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1LineTotalPerfEntry 3 }

        t1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1LineTotalPerfEntry 4 }

        t1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1LineTotalPerfEntry 5 }

        t1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1LineTotalPerfEntry 6 }

        t1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { t1LineTotalPerfEntry 7 }

        t1LineTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { t1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        t1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { t1-card 21 }

        t1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  T1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { t1Index ,
        t1LineDaysIndex }
            ::= { t1LineSevenDaysPerfTable 1 }

            T1LineSevenDaysPerfEntry ::= SEQUENCE  {
            t1LineDaysIndex             INTEGER (1..7),
            t1LineDateStrIndex          DisplayString (SIZE (0..255) ),
            t1LineSevenDaysPerfES       INTEGER,
            t1LineSevenDaysPerfSES      INTEGER,
            t1LineSevenDaysPerfBES      INTEGER,
            t1LineSevenDaysPerfUAS      INTEGER,
            t1LineSevenDaysPerfCSS      INTEGER
--            t1LineSevenDaysPerfLOFC     INTEGER




    }

        t1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { t1LineSevenDaysPerfEntry 2 }

        t1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { t1LineSevenDaysPerfEntry 3 }

        t1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { t1LineSevenDaysPerfEntry 4 }

        t1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { t1LineSevenDaysPerfEntry 5 }

        t1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { t1LineSevenDaysPerfEntry 6 }

        t1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { t1LineSevenDaysPerfEntry 7 }

        t1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { t1LineSevenDaysPerfEntry 8 }

--        t1LineSevenDaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { t1LineSevenDaysPerfEntry 9 }


--
--  Alarm Queue Table
--

        t1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue Table"
            ::= { t1-card 11 }

        t1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  T1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { t1Index ,
        t1AlarmQueueIndex }
            ::= { t1AlarmQueueTable 1 }

            T1AlarmQueueEntry ::= SEQUENCE {
            t1AlarmQueueIndex           INTEGER (1..40),
            t1AlarmQueueString          DisplayString (SIZE(0..255))
        }

        t1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { t1AlarmQueueEntry 2 }

        t1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { t1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        t1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { t1-card 12 }

        t1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  T1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { t1Index ,
        t1AlarmHistoryIndex }
            ::= { t1AlarmHistoryTable 1 }

            T1AlarmHistoryEntry ::= SEQUENCE {
            t1AlarmHistoryIndex         INTEGER,
            t1Threshold                 INTEGER,
            t1CurrentState              INTEGER,
            t1CurrentCount              INTEGER,
            t1Alarm                     AlarmSeverity
        }

        t1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yel-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { t1AlarmHistoryEntry 2 }

        t1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { t1AlarmHistoryEntry 3 }

        t1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { t1AlarmHistoryEntry 4 }

        t1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { t1AlarmHistoryEntry 5 }

        t1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { t1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        t1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { t1-card 13 }

        t1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  T1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { t1Index }
            ::= { t1LineAvailabilityTable 1 }

            T1LineAvailabilityEntry ::= SEQUENCE {
            t1AvailableSeconds          DisplayString,
            t1UnavailableSeconds        DisplayString,
            t1LineAvailability          DisplayString
        }

        t1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { t1LineAvailabilityEntry 2 }

        t1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { t1LineAvailabilityEntry 3 }

        t1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { t1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        t1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { t1-card 14 }

        t1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  T1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { t1Index }
            ::= { t1AlarmControlTable 1 }

            T1AlarmControlEntry ::= SEQUENCE {
            t1YEL-Line                  AlarmSeverity,
            t1AIS-Line                  AlarmSeverity,
            t1LOS-Line                  AlarmSeverity,
            t1LOF-Line                  AlarmSeverity,
            t1BPV-Line                  AlarmSeverity,
            t1ESS-Line                  AlarmSeverity,
            t1UAS-Line                  AlarmSeverity,
            t1CSS-Line                  AlarmSeverity
        }

        t1YEL-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-Line State"
            ::= { t1AlarmControlEntry 2 }

        t1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { t1AlarmControlEntry 3 }

        t1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { t1AlarmControlEntry 4 }

        t1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { t1AlarmControlEntry 5 }

        t1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { t1AlarmControlEntry 6 }

        t1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { t1AlarmControlEntry 7 }

        t1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { t1AlarmControlEntry 8 }

        t1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { t1AlarmControlEntry 9 }


--
--  Threshold Control Table
--

        t1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { t1-card 15 }

        t1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  T1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { t1Index }
            ::= { t1ThresholdControlTable 1 }

            T1ThresholdControlEntry ::= SEQUENCE {
            t1ThresholdBPV-Line         INTEGER,
            t1ThresholdESS-Line         INTEGER,
            t1ThresholdUAS-Line         INTEGER,
            t1ThresholdCSS-Line         INTEGER
        }

        t1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line "
            ::= { t1ThresholdControlEntry 2 }

        t1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { t1ThresholdControlEntry 3 }

        t1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { t1ThresholdControlEntry 4 }

        t1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { t1ThresholdControlEntry 5 }


--
-- Line Diagnostic Control Table
--

        t1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { t1-card 16 }

        t1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  T1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { t1Index }
            ::= { t1LineDiagControlTable 1 }

            T1LineDiagControlEntry ::= SEQUENCE {
            t1LoopbackType              INTEGER,
            t1LoopbackStatus            INTEGER,
            t1QRSSControl               INTEGER,
            t1QRSSStatus                INTEGER,
            t1QRSSElapseSeconds         INTEGER,
            t1QRSSErrorSeconds          INTEGER,
            t1QRSSErrorCounts           INTEGER,
            t1InbandLoopbackPeriod      INTEGER
        }

        t1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-LLB-Inband-Active(5),
                    remote-PLB-ATT-Active(6),
                    remote-PLB-ANSI-Active(7),
                    remote-LLB-ANSI-Active(8),
                    remote-LLB-Inband-Deactive(9),
                    remote-PLB-ATT-Deactive(10),
                    remote-PLB-ANSI-Deactive(11),
                    remote-LLB-ANSI-Deactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "t1 Loopback Type"
            ::= { t1LineDiagControlEntry 2 }

        t1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "t1 Loopback Status"
            ::= { t1LineDiagControlEntry 3 }

        t1QRSSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-deactive(1),
                    qrss-active-full(2),
                    qrss-reset-error-count(3),
                    qrss-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "t1 QRSS Control"
            ::= { t1LineDiagControlEntry 4 }

        t1QRSSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-sync(1),
                    qrss-unsync(2),
                    qrss-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "t1 QRSS Status"
            ::= { t1LineDiagControlEntry 5 }

        t1QRSSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "t1 QRSS Elapse Seconds"
            ::= { t1LineDiagControlEntry 6 }

        t1QRSSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "t1 QRSS Error Seconds"
            ::= { t1LineDiagControlEntry 7 }

        t1QRSSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "t1 QRSS Error Counts"
            ::= { t1LineDiagControlEntry 8 }

        t1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of T1 inband local, payload, or line loopback"
            ::= { t1LineDiagControlEntry 9 }


--
--  Command Control Table
--

        t1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { t1-card 17 }

        t1CommandControlEntry  OBJECT-TYPE
            SYNTAX  T1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { t1Index }
            ::= { t1CommandControlTable 1 }

            T1CommandControlEntry ::= SEQUENCE {
            t1AlarmQueueReset           INTEGER,
            t1UserPerfReset             INTEGER,
            t1AlarmHistoryReset         INTEGER,
            t1PortReset                 INTEGER,
            t1PortLoadDefault           INTEGER
        }

        t1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { t1CommandControlEntry 2 }

        t1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { t1CommandControlEntry 3 }

        t1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { t1CommandControlEntry 4 }

        t1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset T1 Port"
            ::= { t1CommandControlEntry 5 }

        t1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default T1 Port"
            ::= { t1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        t1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { t1-card 18 }

        t1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  T1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { t1Index }
            ::= { t1SystemInformationTable 1 }

            T1SystemInformationEntry ::= SEQUENCE {
            t1PROMVersion               DisplayString,
            t1HWVersion                 DisplayString
        }

        t1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " t1 PROM Version"
            ::= { t1SystemInformationEntry 2 }

        t1HWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " t1 HW Version"
            ::= { t1SystemInformationEntry 3 }


--
--  T1 Customer Information Table
--

        t1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF T1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { t1-card 99 }

        t1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  T1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { t1CISlotIndex , t1CIPortIndex }
            ::= { t1CustomerInfoTable 1 }

        T1CustomerInfoEntry ::= SEQUENCE {
            t1CISlotIndex              SmallSlotIndex,
            t1CIPortIndex              FourPortID,
            t1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        t1CISlotIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { t1CustomerInfoEntry 1 }

        t1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { t1CustomerInfoEntry 2 }

        t1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { t1CustomerInfoEntry 3 }


        t1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of FT1"
            ::= { t1-card 100 }


--======================================================================--
--======================================================================--
--  dtu-card MIB
--======================================================================--
--======================================================================--


--
-- DTU Command Control Table
--

        dtuCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU command control table."
            ::= { dtu-card 1 }

        dtuCommandControlEntry  OBJECT-TYPE
            SYNTAX  DtuCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU command control table."
            INDEX { dtuCommandSlotIndex , dtuCommandPortIndex }
            ::= { dtuCommandControlTable 1 }

            DtuCommandControlEntry ::= SEQUENCE {
            dtuCommandSlotIndex         LargeSlotIndex,
            dtuCommandPortIndex         TenPortID,
            dtuClearPerformanceData     INTEGER,
            dtuPortReset                INTEGER,
            dtuPortClearCRC             INTEGER,
            dtuCardReset                INTEGER
        }

        dtuCommandSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuCommandControlEntry 1 }

        dtuCommandPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-10"
            ::= { dtuCommandControlEntry 2 }

        dtuClearPerformanceData  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear DTU performance data"
            ::= { dtuCommandControlEntry 3 }

        dtuPortReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTU port"
            ::= { dtuCommandControlEntry 4 }

        dtuPortClearCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear-local-crc(1),
                    clear-remote-crc(2),
                    clear-all-port-crc(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear DTU port CRC Error Counter."
            ::= { dtuCommandControlEntry 5 }

        dtuCardReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTU Card"
            ::= { dtuCommandControlEntry 6 }


--
-- Remote DTE Config Table
--

        dtuRdteConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRdteConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU remote DTE configuration."
            ::= { dtu-card 2 }

        dtuRdteConfigEntry  OBJECT-TYPE
            SYNTAX  DtuRdteConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU remote DTE configuration."
            INDEX { dtuRdteSlotIndex , dtuRdtePortIndex }
            ::= { dtuRdteConfigTable 1 }

            DtuRdteConfigEntry ::= SEQUENCE {
            dtuRdteSlotIndex            LargeSlotIndex,
            dtuRdtePortIndex            TenPortID,
            dtuSyncMode                 INTEGER,
            dtuRdteSpeed                INTEGER,
            dtuRdteChannel              INTEGER,
            dtuRdteClock                INTEGER,
            dtuRdteData                 INTEGER,
            dtuRdteRTS                  INTEGER,
            dtuRdteTTM                  INTEGER,
            dtuRdteInterface            INTEGER,
            dtuRdteX50IdleCode          INTEGER,
            dtuRdteX50Map               DisplayString,
            dtuRdteX50Status            DisplayString
        }

        dtuRdteSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRdteConfigEntry 1 }

        dtuRdtePortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-10"
            ::= { dtuRdteConfigEntry 2 }

        dtuSyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sync(1),
                    async(2),
                    async-8(3),
                    async-9(4),
                    async-10(5),
                    async-11(6),
                    n-a(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote SYNC mode"
            ::= { dtuRdteConfigEntry 3 }

        dtuRdteSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nx64K(1),
                    nx56K(2),
                    nx128K(3),
                    nx112K(4),
                    nx0K(5),
                    nx1-2K(6),
                    nx2-4K(7),
                    nx4-8K(8),
                    nx9-6K(9),
                    nx19-2K(10),
                    nx38-4K(11),
                    nx48-0K(12),
--                        async1-2K(13),
--                        async2-4K(14),
--                        async4-8K(15),
--                        async9-6K(16),
--                        async19-2K(17),
--                        async38-4K(18),
                    n-a(13)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE Speed"
            ::= { dtuRdteConfigEntry 4 }

        dtuRdteChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    iDLE(1),
                    b1(2),
                    b2(3),
                    b1-b2(4),
                    n-a(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE channel"
            ::= { dtuRdteConfigEntry 5 }

        dtuRdteClock  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE clock type"
            ::= { dtuRdteConfigEntry 6 }

        dtuRdteData  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE data type"
            ::= { dtuRdteConfigEntry 7 }

        dtuRdteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE RTS type"
            ::= { dtuRdteConfigEntry 8 }

        dtuRdteTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE TTM type"
            ::= { dtuRdteConfigEntry 9 }

        dtuRdteInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    rs449-eia530(2),
                    x21(3),
                    rs232(4),
                    rs232-SubRate(8),
                    g-703(11),
                    na(16),
                    other(18),
                    router(20),
                    rs232-x50(24)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card interface"
            ::= { dtuRdteConfigEntry 10 }

        dtuRdteX50IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER (0..47)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 idle code"
            ::= { dtuRdteConfigEntry 11 }

        dtuRdteX50Map  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..21) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 Map"
            ::= { dtuRdteConfigEntry 12 }

        dtuRdteX50Status  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..21) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 Status"
            ::= { dtuRdteConfigEntry 13 }

--
-- Diagnostic Control Table
--

        dtuDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU diagnostics control table."
            ::= { dtu-card 3 }

        dtuDiagControlEntry  OBJECT-TYPE
            SYNTAX  DtuDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU diagnostics control table."
            INDEX { dtuDiagSlotIndex , dtuDiagPortIndex }
            ::= { dtuDiagControlTable 1 }

            DtuDiagControlEntry ::= SEQUENCE {
            dtuDiagSlotIndex            LargeSlotIndex,
            dtuDiagPortIndex            TenPortID,
            dtuNearLoopback             INTEGER,
            dtuRemoteLoopback           INTEGER,
            dtuBertControl              INTEGER,
            dtuBertStatus               INTEGER,
            dtuQrssElapseSeconds        INTEGER,
            dtuQrssErrorSeconds         INTEGER,
            dtuQrssErrorBits            INTEGER,
            dtuRemBertControl           INTEGER,
            dtuRemBertStatus            INTEGER,
            dtuRemQrssElapseSeconds     INTEGER,
            dtuRemQrssErrorSeconds      INTEGER,
            dtuRemQrssErrorBits         INTEGER,
            dtuRemQrssPatternUnsyncSeconds  INTEGER
        }

        dtuDiagSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuDiagControlEntry 1 }

        dtuDiagPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-10"
            ::= { dtuDiagControlEntry 2 }

        dtuNearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payLoadLoopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Near loopback type"
            ::= { dtuDiagControlEntry 3 }

        dtuRemoteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    remotePayLoad(2),
                    remoteDTE-or-remoteROUTER(3),
                    remoteDTE-DTE(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote loopback type"
            ::= { dtuDiagControlEntry 4 }

        dtuBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-ON(2),
                    reset(3),
                    inject-Error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT control"
            ::= { dtuDiagControlEntry 5 }

        dtuBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-Sync(1),
                    bert-Unsync(2),
                    bert-Not-Active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { dtuDiagControlEntry 6 }

        dtuQrssElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss elapse seconds"
            ::= { dtuDiagControlEntry 7 }

        dtuQrssErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error seconds"
            ::= { dtuDiagControlEntry 8 }

        dtuQrssErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error bits"
            ::= { dtuDiagControlEntry 9 }

        dtuRemBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-FULL(2),
                    bert-DTE1(3),
--                        bert-DTE2(4),
                    reset(5),
                    inject-Error(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT control"
            ::= { dtuDiagControlEntry 10 }

        dtuRemBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-Sync(1),
                    bert-Unsync(2),
                    bert-Not-Active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { dtuDiagControlEntry 11 }

        dtuRemQrssElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss elapse seconds"
            ::= { dtuDiagControlEntry 12 }

        dtuRemQrssErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error seconds"
            ::= { dtuDiagControlEntry 13 }

        dtuRemQrssErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error bits"
            ::= { dtuDiagControlEntry 14 }

        dtuRemQrssPatternUnsyncSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss pattern unsync seconds"
            ::= { dtuDiagControlEntry 15 }


--
--  Alarm History Table
--

        dtuAlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The dtu alarm history table."
            ::= { dtu-card 4 }

        dtuAlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  DtuAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU alarm history table."
            INDEX { dtuAlmhisSlotIndex , dtuAlmhisPortIndex }
            ::= { dtuAlarmHistoryTable 1 }

            DtuAlarmHistoryEntry ::= SEQUENCE {
            dtuAlmhisSlotIndex          LargeSlotIndex,
            dtuAlmhisPortIndex          TenPortID,
            dtuUnsyncAlarmState         INTEGER,
            dtuUnsyncAlarmCount         INTEGER
        }

        dtuAlmhisSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuAlarmHistoryEntry 1 }

        dtuAlmhisPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuAlarmHistoryEntry 2 }

        dtuUnsyncAlarmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm history : unsync alarm state"
            ::= { dtuAlarmHistoryEntry 3 }

        dtuUnsyncAlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm history : unsync alarm count"
            ::= { dtuAlarmHistoryEntry 4 }


--
--  Alarm Control Table
--

        dtuAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU alarm control table."
            ::= { dtu-card 5 }

        dtuAlarmControlEntry  OBJECT-TYPE
            SYNTAX  DtuAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU alarm control table."
            INDEX { dtuAlarmSlotIndex , dtuAlarmPortIndex }
            ::= { dtuAlarmControlTable 1 }

            DtuAlarmControlEntry ::= SEQUENCE {
            dtuAlarmSlotIndex           LargeSlotIndex,
            dtuAlarmPortIndex           TenPortID,
            dtuLineUnsync               AlarmSeverity
        }

        dtuAlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuAlarmControlEntry 1 }

        dtuAlarmPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuAlarmControlEntry 2 }

        dtuLineUnsync  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm : Line Unsync"
            ::= { dtuAlarmControlEntry 3 }


--
-- Current Line Performance Table
--

        dtuCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU current line performance table."
            ::= { dtu-card 6 }

        dtuCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  DtuCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU current line performance table."
            INDEX { dtuCurrSlotIndex , dtuCurrPortIndex }
            ::= { dtuCurrentPerfTable 1 }

            DtuCurrentPerfEntry ::= SEQUENCE {
            dtuCurrSlotIndex            LargeSlotIndex,
            dtuCurrPortIndex            TenPortID,
            dtuCurrentAS                INTEGER,
            dtuCurrentUAS               INTEGER,
            dtuCurrent24hAS             INTEGER,
            dtuCurrent24hUAS            INTEGER,
            dtuValid15minInterval       INTEGER,
            dtuValid1dayInterval        INTEGER
        }

        dtuCurrSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuCurrentPerfEntry 1 }

        dtuCurrPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuCurrentPerfEntry 2 }

        dtuCurrentAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "15m Performance available seconds"
            ::= { dtuCurrentPerfEntry 3 }

        dtuCurrentUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "15m Performance unavailable seconds"
            ::= { dtuCurrentPerfEntry 4 }

        dtuCurrent24hAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "24h Performance available seconds"
            ::= { dtuCurrentPerfEntry 5 }

        dtuCurrent24hUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "24h Performance unavailable seconds"
            ::= { dtuCurrentPerfEntry 6 }

        dtuValid15minInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Valid 15 minutes Interval number"
            ::= { dtuCurrentPerfEntry 7 }

        dtuValid1dayInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Valid 1 day Interval number"
            ::= { dtuCurrentPerfEntry 8 }


--
-- Interval Line Performance Table
--

        dtuIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU interval line performance table."
            ::= { dtu-card 7 }

        dtuIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  DtuIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU interval line performance table."
            INDEX { dtuPerfSlotIndex ,
        dtuPerfPortIndex ,
        dtuItvIndex }
            ::= { dtuIntervalPerfTable 1 }

            DtuIntervalPerfEntry ::= SEQUENCE {
            dtuPerfSlotIndex            LargeSlotIndex,
            dtuPerfPortIndex            TenPortID,
            dtuItvIndex                 INTEGER,
            dtuIntervalAS               INTEGER,
            dtuIntervalUAS              INTEGER
        }

        dtuPerfSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuIntervalPerfEntry 1 }

        dtuPerfPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuIntervalPerfEntry 2 }

        dtuItvIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance interval index"
            ::= { dtuIntervalPerfEntry 3 }

        dtuIntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance available seconds"
            ::= { dtuIntervalPerfEntry 4 }

        dtuIntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance unavailable seconds"
            ::= { dtuIntervalPerfEntry 5 }


--
-- Total Line Performance Table
--
        dtuTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU total line performance table."
            ::= { dtu-card 8 }

        dtuTotalPerfEntry  OBJECT-TYPE
            SYNTAX  DtuTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU total line performance table."
            INDEX { dtuTPerfSlotIndex ,
        dtuTPerfPortIndex ,
        dtuTotalIndex }
            ::= { dtuTotalPerfTable 1 }

            DtuTotalPerfEntry ::= SEQUENCE {
            dtuTPerfSlotIndex           LargeSlotIndex,
            dtuTPerfPortIndex           TenPortID,
            dtuTotalIndex               INTEGER,
            dtuTotalAS                  INTEGER,
            dtuTotalUAS                 INTEGER
        }

        dtuTPerfSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuTotalPerfEntry 1 }

        dtuTPerfPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuTotalPerfEntry 2 }

        dtuTotalIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance interval index"
            ::= { dtuTotalPerfEntry 3 }

        dtuTotalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day performance available seconds"
            ::= { dtuTotalPerfEntry 4 }

        dtuTotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day performance unavailable seconds"
            ::= { dtuTotalPerfEntry 5 }


--
-- LED Status Table
--

        dtuRemLedStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRemLedStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTU remote LED status table."
            ::= { dtu-card 9 }

        dtuRemLedStatusEntry  OBJECT-TYPE
            SYNTAX  DtuRemLedStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LED status entry"
            INDEX { dtuLedSlotIndex , dtuLedPortIndex }
            ::= { dtuRemLedStatusTable 1 }

            DtuRemLedStatusEntry ::= SEQUENCE {
            dtuLedSlotIndex             LargeSlotIndex,
            dtuLedPortIndex             TenPortID,
            dtuLedColor                 INTEGER
        }

        dtuLedSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRemLedStatusEntry 1 }

        dtuLedPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuRemLedStatusEntry 2 }

        dtuLedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    off(1),
                    red(2),
                    green(3),
                    flashing-green(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Led Color"
            ::= { dtuRemLedStatusEntry 3 }

--
-- DTU Line Config Table
--

        dtuLineConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuLineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU line configuration."
            ::= { dtu-card 10 }

        dtuLineConfigEntry  OBJECT-TYPE
            SYNTAX  DtuLineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU line configuration."
            INDEX { dtuConfigSlotIndex , dtuConfigPortIndex }
            ::= { dtuLineConfigTable 1 }

            DtuLineConfigEntry ::= SEQUENCE {
            dtuConfigSlotIndex          LargeSlotIndex,
            dtuConfigPortIndex          TenPortID,
            dtuLineMode                 INTEGER,
            dtuLineProtocol             INTEGER,
            dtuClockSource              INTEGER
        }

        dtuConfigSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuLineConfigEntry 1 }

        dtuConfigPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-10"
            ::= { dtuLineConfigEntry 2 }

        dtuLineMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lT(1),
                    nT(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU Line Mode"
            ::= { dtuLineConfigEntry 3 }

        dtuLineProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    d-channel(1),
                    m-channel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU Line protocol channel"
            ::= { dtuLineConfigEntry 4 }

        dtuClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    internal(1),
                    dTE-1(2),
                    dTE-2(3),
                    line(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU master clock source"
            ::= { dtuLineConfigEntry 5 }


--
-- 15 minutes Interval Performance Table
--

        dtu15minIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu15minIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU 15 minutes interval performance table."
            ::= { dtu-card 17 }

        dtu15minIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu15minIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU 15 minutes interval performance table."
            INDEX { dtuPerfSlotIndex ,
        dtuPerfPortIndex ,
        dtuItvIndex }
            ::= { dtu15minIntervalPerfTable 1 }

            Dtu15minIntervalPerfEntry ::= SEQUENCE {
            dtu15minIntervalAS          INTEGER,
            dtu15minIntervalUAS         INTEGER
        }

        dtu15minIntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Available Seconds"
            ::= { dtu15minIntervalPerfEntry 4 }

        dtu15minIntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "UnAvailable Seconds"
            ::= { dtu15minIntervalPerfEntry 5 }


--
-- 1 Day Interval Performance Table
--
        dtu1dayIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu1dayIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU total line performance table."
            ::= { dtu-card 18 }

        dtu1dayIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu1dayIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU total line performance table."
            INDEX { dtuTPerfSlotIndex ,
        dtuTPerfPortIndex ,
        dtuTotalIndex }
            ::= { dtu1dayIntervalPerfTable 1 }

            Dtu1dayIntervalPerfEntry ::= SEQUENCE {
            dtu1dayIntervalAS           INTEGER,
            dtu1dayIntervalUAS          INTEGER
        }

        dtu1dayIntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Available Seconds"
            ::= { dtu1dayIntervalPerfEntry 4 }

        dtu1dayIntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "UnAvailable Seconds"
            ::= { dtu1dayIntervalPerfEntry 5 }


--
--  Remote Router Table
--
    dtuRouterConfig     OBJECT IDENTIFIER ::= { dtu-card 11 }
--
--  NI Control Table
--

        dtuRtrNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Table"
            ::= { dtuRouterConfig 1 }

        dtuRouterNiControlEntry  OBJECT-TYPE
            SYNTAX  DtuRtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Entry"
            INDEX { dtuRtrNiUnitIndex ,
        dtuRtrNiPortIndex ,
        dtuRtrNiIndex }
            ::= { dtuRtrNiControlTable 1 }

            DtuRtrNiControlEntry ::= SEQUENCE {
            dtuRtrNiUnitIndex           LargeSlotIndex,
            dtuRtrNiPortIndex           TenPortID,
            dtuRtrNiIndex               INTEGER,
            dtuRtrIPAddr                IpAddress,
            dtuRtrSubnetMask            IpAddress,
            dtuRtrFrame                 INTEGER,
            dtuRtrRIP1                  INTEGER,
            dtuRtrRIP2                  INTEGER,
            dtuRtrMode                  INTEGER
        }

        dtuRtrNiUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRouterNiControlEntry 1 }

        dtuRtrNiPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~10, total 10 ports."
            ::= { dtuRouterNiControlEntry 2 }

        dtuRtrNiIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
--                        wan2(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Ni index"
            ::= { dtuRouterNiControlEntry 3 }

        dtuRtrIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR IP Address"
            ::= { dtuRouterNiControlEntry 4 }

        dtuRtrSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR net mask"
            ::= { dtuRouterNiControlEntry 5 }

        dtuRtrFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    ethernet(4),
                    na(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Layer2 frame"
            ::= { dtuRouterNiControlEntry 6 }

        dtuRtrRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP1"
            ::= { dtuRouterNiControlEntry 7 }

        dtuRtrRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP2"
            ::= { dtuRouterNiControlEntry 8 }

        dtuRtrMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR mode"
            ::= { dtuRouterNiControlEntry 9 }

--
--  Route Table
--

        dtuRtrRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Table"
            ::= { dtuRouterConfig 2 }

        dtuRouterRouteControlEntry  OBJECT-TYPE
            SYNTAX  DtuRtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Entry"
            INDEX { dtuRtrRUnitIndex ,
        dtuRtrRPortIndex ,
        dtuRtrEntry }
            ::= { dtuRtrRouteControlTable 1 }

            DtuRtrRouteControlEntry ::= SEQUENCE {
            dtuRtrRUnitIndex            LargeSlotIndex,
            dtuRtrRPortIndex            TenPortID,
            dtuRtrEntry                 INTEGER (1..16),
            dtuRtrNetAddr               IpAddress,
            dtuRtrNetMask               IpAddress,
            dtuRtrGatewayAddr           IpAddress,
            dtuRtrNIAddr                IpAddress,
            dtuRtrMetric                INTEGER
        }

        dtuRtrRUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRouterRouteControlEntry 1 }

        dtuRtrRPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~10, total 10 ports."
            ::= { dtuRouterRouteControlEntry 2 }

        dtuRtrEntry  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Route Entry"
            ::= { dtuRouterRouteControlEntry 3 }


        dtuRtrNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net Address"
            ::= { dtuRouterRouteControlEntry 4 }

        dtuRtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net mask"
            ::= { dtuRouterRouteControlEntry 5 }

        dtuRtrGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route gateway Address"
            ::= { dtuRouterRouteControlEntry 6 }

        dtuRtrNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route NI Address"
            ::= { dtuRouterRouteControlEntry 7 }


        dtuRtrMetric OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Route metric"
            ::= { dtuRouterRouteControlEntry 8 }

--
--  Router Command
--
        dtuRtrCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command(reset & load-default) Table"
            ::= { dtuRouterConfig 3 }

        dtuRtrCommandEntry  OBJECT-TYPE
            SYNTAX  DtuRtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Entry"
            INDEX { dtuRtrCmdUnitIndex ,
        dtuRtrCmdPortIndex }
            ::= { dtuRtrCommandTable 1 }

            DtuRtrCmdEntry ::= SEQUENCE {
            dtuRtrCmdUnitIndex          LargeSlotIndex,
            dtuRtrCmdPortIndex          TenPortID,
            dtuRtrCommand               INTEGER,
            dtuCrcMode                  INTEGER
        }

        dtuRtrCmdUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRtrCommandEntry 1 }

        dtuRtrCmdPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~10, total 10 ports."
            ::= { dtuRtrCommandEntry 2 }

        dtuRtrCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1),
                    load-default(2),
                    none(3),
                    re-get-map-cfg(11),
                    re-get-ni-cfg(12),
                    re-get-rtr-cfg(13),
                    re-get-crc-cfg(14),
                    re-get-all-cfg(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Command(reset or load-default)"
            ::= { dtuRtrCommandEntry 3 }

        dtuCrcMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-padding(1),
                    padding(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CRC mode"
            ::= { dtuRtrCommandEntry 4 }

--
--  Router Map
--
        dtuRtrMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Table"
            ::= { dtuRouterConfig 4 }

        dtuRtrMapEntry  OBJECT-TYPE
            SYNTAX  DtuRtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Entry"
            INDEX { dtuRtrMapUnitIndex ,
        dtuRtrMapPortIndex }
            ::= { dtuRtrMapTable 1 }

            DtuRtrMappingEntry ::= SEQUENCE {
            dtuRtrMapUnitIndex          LargeSlotIndex,
            dtuRtrMapPortIndex          TenPortID,
            dtuRtrChB1                  INTEGER,
            dtuRtrChB2                  INTEGER
        }

        dtuRtrMapUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRtrMapEntry 1 }

        dtuRtrMapPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~10, total 10 ports."
            ::= { dtuRtrMapEntry 2 }

        dtuRtrChB1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
--                        wan2(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " U channel B1 map data"
            ::= { dtuRtrMapEntry 3 }

        dtuRtrChB2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
--                        wan2(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " U channel B2 map data"
            ::= { dtuRtrMapEntry 4 }

--
-- DTU Remote DTU Information Table
--

        dtuRemoteDTUInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuRemoteDTUInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote DTU Information Table."
            ::= { dtu-card 12 }

        dtuRemoteDTUInfoEntry  OBJECT-TYPE
            SYNTAX  DtuRemoteDTUInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Remote DTU Information Table."
            INDEX { dtuRemoteDTUInfoSlotIndex ,
        dtuRemoteDTUInfoPortIndex }
            ::= { dtuRemoteDTUInfoTable 1 }

            DtuRemoteDTUInfoEntry ::= SEQUENCE {
            dtuRemoteDTUInfoSlotIndex   LargeSlotIndex,
            dtuRemoteDTUInfoPortIndex   TenPortID,
            dtuRemoteDTUInfoDate        DisplayString,
            dtuRemoteDTUInfoSerialNumber    DisplayString,
            dtuRemoteDTUInfoSWVersion       DisplayString,
            dtuRemoteDTUInfoConfiguration   DisplayString
        }

        dtuRemoteDTUInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuRemoteDTUInfoEntry 1 }

        dtuRemoteDTUInfoPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-6"
            ::= { dtuRemoteDTUInfoEntry 2 }

        dtuRemoteDTUInfoDate  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote DTU Date "
            ::= { dtuRemoteDTUInfoEntry 3 }

        dtuRemoteDTUInfoSerialNumber  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Serial Number"
            ::= { dtuRemoteDTUInfoEntry 4 }

        dtuRemoteDTUInfoSWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Software Version"
            ::= { dtuRemoteDTUInfoEntry 5 }

        dtuRemoteDTUInfoConfiguration  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Configuration"
            ::= { dtuRemoteDTUInfoEntry 6 }

--
-- DTU Line Status Table
--

        dtuLineStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DtuLineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTU line status table."
            ::= { dtu-card 13 }

        dtuLineStatusEntry  OBJECT-TYPE
            SYNTAX  DtuLineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU line status table."
            INDEX { dtuLineStatusSlotIndex ,
        dtuLineStatusPortIndex }
            ::= { dtuLineStatusTable 1 }

            DtuLineStatusEntry ::= SEQUENCE {
            dtuLineStatusSlotIndex      LargeSlotIndex,
            dtuLineStatusPortIndex      TenPortID,
            dtuLineLocalCRC             INTEGER,
            dtuLineLocalIntervalAVG     DisplayString,
            dtuLineRemoteCRC            INTEGER,
            dtuLineRemoteIntervalAVG    DisplayString
        }

        dtuLineStatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtuLineStatusEntry 1 }

        dtuLineStatusPortIndex  OBJECT-TYPE
            SYNTAX  TenPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-10"
            ::= { dtuLineStatusEntry 2 }

        dtuLineLocalCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port Local CRC Error."
            ::= { dtuLineStatusEntry 3 }

        dtuLineLocalIntervalAVG  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTU port local CRC Interval Average."
            ::= { dtuLineStatusEntry 4 }

        dtuLineRemoteCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port Remote CRC Error."
            ::= { dtuLineStatusEntry 5 }

        dtuLineRemoteIntervalAVG  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTU port remote CRC Interval Average."
            ::= { dtuLineStatusEntry 6 }


        dtuTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of DTU"
            ::= { dtu-card 100 }


--======================================================================--
--======================================================================--
--  dte card MIB
--======================================================================--
--======================================================================--


--
--      DTE Control Table
--

        dteConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTEConfigControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Configuration Control Table"
            ::= { dte-card 1 }

        dteConfigCtrlEntry  OBJECT-TYPE
            SYNTAX  DTEConfigControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE configuration control entry"
            INDEX {
        dteIndex ,
        dtePortIndex
    }
            ::= { dteConfigControlTable 1 }

            DTEConfigControl ::= SEQUENCE {
            dteIndex                    LargeSlotIndex,
            dtePortIndex                SixPortID,
            dteRate                     INTEGER,
            dteChannel                  INTEGER,
            dteClock                    INTEGER,
            dteData                     INTEGER,
            dteInterface                INTEGER,
            dteRTS                      INTEGER,
            dteTTM                      INTEGER,
            dteV54                      INTEGER
        }

        dteIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dteConfigCtrlEntry 1 }

        dtePortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports"
            ::= { dteConfigCtrlEntry 2 }

        dteRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate64k(1),
                    rate56k(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Rate "
            ::= { dteConfigCtrlEntry 3 }

        dteChannel   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Channel: channel numbers designed by MAP."
            ::= { dteConfigCtrlEntry 4 }

        dteClock   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Clock Polarity "
            ::= { dteConfigCtrlEntry 5 }

        dteData   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Data Polarity "
            ::= { dteConfigCtrlEntry 6 }

        dteInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    eia530(1),
                    x21(2),
                    rs232(3),
                    v35(4),
                    v36(5),
                    rs422(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Interface Type "
            ::= { dteConfigCtrlEntry 7 }

        dteRTS   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS Permanent "
            ::= { dteConfigCtrlEntry 8 }

        dteTTM   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Terminal Timing Mode "
            ::= { dteConfigCtrlEntry 9 }

        dteV54   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE V54 control "
            ::= { dteConfigCtrlEntry 10 }


--
--  Alarm Queue Table
--

        dteAlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTEAlarmQueue
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Alarm Queue Table"
            ::= { dte-card 2 }

        dteAlarmQueueEntry  OBJECT-TYPE
            SYNTAX  DTEAlarmQueue
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE alarm queue entry"
            INDEX { dteIndex ,
        dtePortIndex ,
        dteAlarmQIndex }
            ::= { dteAlarmQueueTable 1 }

            DTEAlarmQueue ::= SEQUENCE {
            dteAlarmQIndex              INTEGER (1..40),
            alarmQStr                   DisplayString (SIZE(0..255))
        }

        dteAlarmQIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { dteAlarmQueueEntry 2 }

        alarmQStr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { dteAlarmQueueEntry 3 }

--
--  Alarm History Table
--

        dteAlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTEAlarmHistory
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Alarm History Table"
            ::= { dte-card 3 }

        dteAlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  DTEAlarmHistory
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE alarm history entry"
            INDEX { dteIndex ,
        dtePortIndex ,
        dteAlarmHIndex }
            ::= { dteAlarmHistoryTable 1 }

            DTEAlarmHistory ::= SEQUENCE {
            dteAlarmHIndex              INTEGER,
            currentHState               INTEGER,
            countH                      INTEGER,
            alarmH                      AlarmSeverity
        }

        dteAlarmHIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte-alarm(1)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { dteAlarmHistoryEntry 2 }

        currentHState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { dteAlarmHistoryEntry 3 }

        countH  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { dteAlarmHistoryEntry 4 }

        alarmH  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { dteAlarmHistoryEntry 5 }

--
--  Alarm Control Table
--

        dteAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTEAlarmControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { dte-card 4 }

        dteAlarmCtrlEntry  OBJECT-TYPE
            SYNTAX  DTEAlarmControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE alarm control table."
            INDEX { dteIndex ,
        dtePortIndex
    }
            ::= { dteAlarmControlTable 1 }

            DTEAlarmControl ::= SEQUENCE {
            alarmDte                    AlarmSeverity,
            alarmHistoryReset           INTEGER
--               alarmQueueReset
--                 INTEGER





    }

        alarmDte  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm State"
            ::= { dteAlarmCtrlEntry 2 }

        alarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { dteAlarmCtrlEntry 3 }

--         alarmQueueReset    OBJECT-TYPE
--             SYNTAX  INTEGER {
--                         reset(1)
--                     }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "Command: Reset Alarm Queue "
--             ::= { dteCommandCtrlEntry 2 }


--
-- Line Diagnostic Control Table
--

        dteLineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTELineDiagControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Diagnostic Control Table."
            ::= { dte-card 5 }

        dteDiagCtrlEntry  OBJECT-TYPE
            SYNTAX  DTELineDiagControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of DTE diagnostic control table."
            INDEX { dteIndex ,
        dtePortIndex
    }
            ::= { dteLineDiagControlTable 1 }

            DTELineDiagControl ::= SEQUENCE {
            loopbacktype                INTEGER,
            loopbackstatus              INTEGER,
            bertctrl                    INTEGER,
            bertstatus                  INTEGER,
            elapseseconds               INTEGER,
            errorseconds                INTEGER,
            errorcounts                 INTEGER
        }

        loopbacktype  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    loopback-To-DTE(2),
                    loopback-To-Line(3),
                    remoteV54-active(4),
                    remoteV54-deactive(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE Loopback Type"
            ::= { dteDiagCtrlEntry 2 }

        loopbackstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE Loopback Status"
            ::= { dteDiagCtrlEntry 3 }

        bertctrl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-DEACTIVE(1),
                    prbs-ACTIVE-DTE(2),
                    qrss-ACTIVE-DTE(3),
                    bert-RESET-ERROR-COUNT(4),
                    bert-INJECT-ERROR(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE PRBS/QRSS Control"
            ::= { dteDiagCtrlEntry 4 }

        bertstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-SYNC(1),
                    bert-UNSYNC(2),
                    bert-NOT-ACTIVE(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE PRBS/QRSS Status"
            ::= { dteDiagCtrlEntry 5 }

        elapseseconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte PRBS/QRSS Elapse Seconds"
            ::= { dteDiagCtrlEntry 6 }

        errorseconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte PRBS/QRSS Error Seconds"
            ::= { dteDiagCtrlEntry 7 }

        errorcounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte PRBS/QRSS Error Counts"
            ::= { dteDiagCtrlEntry 8 }


--
--  Command Control Table
--

        dteCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTECommandControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { dte-card 6 }

        dteCommandCtrlEntry  OBJECT-TYPE
            SYNTAX  DTECommandControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { dteIndex
--                      dtePortIndex
    }
            ::= { dteCommandControlTable 1 }

            DTECommandControl ::= SEQUENCE {
            portReset                   INTEGER,
            portLoadDefault             INTEGER
        }

        portReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset DTE Port"
            ::= { dteCommandCtrlEntry 3 }

        portLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    loadDefault(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default DTE Port"
            ::= { dteCommandCtrlEntry 4 }


--
--  SYSTEM Information Table
--

        dteSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTESystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { dte-card 7 }

        dteSystemInfoEntry  OBJECT-TYPE
            SYNTAX  DTESystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { dteIndex
    }
            ::= { dteSystemInformationTable 1 }

            DTESystemInformation ::= SEQUENCE {
            promVersion                 DisplayString
        }

        promVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE EPROM Version"
            ::= { dteSystemInfoEntry 2 }


--
--  DTE Status Table
--

        dteStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DTEStatus
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE status table."
            ::= { dte-card 8 }

        dteStatusEntry  OBJECT-TYPE
            SYNTAX  DTEStatus
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE status table."
            INDEX { dteIndex ,
        dtePortIndex
    }
            ::= { dteStatusTable 1 }

            DTEStatus ::= SEQUENCE {
            statusRTS                   INTEGER,
            statusCTS                   INTEGER,
            statusDSR                   INTEGER,
            statusDCD                   INTEGER,
            extclkloss                  INTEGER
        }

        statusRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS status "
            ::= { dteStatusEntry 2 }

        statusCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE CTS status "
            ::= { dteStatusEntry 3 }

        statusDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE DSR status "
            ::= { dteStatusEntry 4 }

        statusDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE DCD status "
            ::= { dteStatusEntry 5 }

        extclkloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    loss(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE external clock loss "
            ::= { dteStatusEntry 6 }


        dteTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of DTE"
            ::= { dte-card 100 }


--======================================================================--
--======================================================================--
--  x50-card MIB
--======================================================================--
--======================================================================--

--
--  X50 Configuartion
--

        x50ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The X50 Interface Configuration table."
            ::= { x50-card 1 }

        x50ConfigEntry  OBJECT-TYPE
            SYNTAX  X50ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the X50 Configuration table."
            INDEX { x50ConfigSlotIndex , x50ConfigPortIndex }
            ::= { x50ConfigTable 1 }

            X50ConfigEntry ::= SEQUENCE {
            x50ConfigSlotIndex          LargeSlotIndex,
            x50ConfigPortIndex          EightPortID,
            x50Channel                  INTEGER,
            x50Mux                      INTEGER,
            x50SyncMode                 INTEGER,
            x50Rate                     INTEGER,
            x50Phase                    INTEGER,
            x5048k-sel                  INTEGER,
            x50ClockPolarity            INTEGER,
            x50DataPolarity             INTEGER,
            x50RTS                      INTEGER,
            x50TTM                      INTEGER,
            x50Interface                INTEGER,
            x50Warrning                 INTEGER,
            x50DCD                      INTEGER
        }

        x50ConfigSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50ConfigEntry 1 }

        x50ConfigPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 port 1-5"
            ::= { x50ConfigEntry 2 }

        x50Channel  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 Used channel"
            ::= { x50ConfigEntry 3 }


        x50Mux  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noMux(1),
                    mux(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 MUX mode"
            ::= { x50ConfigEntry 4 }


        x50SyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sync(1),
                    async8(2),
                    async9(3),
                    async10(4),
                    async11(5),
                    async12(6),
                    na(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Sync mode"
            ::= { x50ConfigEntry 5 }

        x50Rate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0-6K(0),
                    r1-2K(1),
                    r2-4K(2),
                    r4-8K(3),
                    r9-6K(4),
                    r19-2K(5),
                    r38-4K(6),
                    r48K(7),
                    r64K(8),
                    na(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Base Rate"
            ::= { x50ConfigEntry 6 }


        x50Phase  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ph1(1),
                    ph2(2),
                    ph3(3),
                    ph4(4),
                    ph5(5),
                    na(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Phase select"
            ::= { x50ConfigEntry 7 }

        x5048k-sel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    firstHalf(1),
                    lastHalf(2),
                    oddPair(3),
                    evenPair(4),
                    na(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 4.8k map select"
            ::= { x50ConfigEntry 8 }

        x50ClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Clock Polarity"
            ::= { x50ConfigEntry 9 }

        x50DataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Data Polarity"
            ::= { x50ConfigEntry 10 }

        x50RTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 RTS Mode"
            ::= {  x50ConfigEntry 11 }

        x50TTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttmOff(1),
                    ttmOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 TTM Mode"
            ::= { x50ConfigEntry 12 }

        x50Interface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    rs449-eia530(2),
                    x21(3),
                    rs232(4),
                    na(16),
                    rs232-x50(24),
                    db25-rj(41),
                    rj-only(42)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 Interface Type"
            ::= { x50ConfigEntry 13 }

        x50Warrning  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    overlap(2),
                    na(3)
                }
--             SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 map setup warrning"
            ::= { x50ConfigEntry 14 }

        x50DCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    remote-all-1-forward(1),
                    permanent-ON(2),
                    remote-X50-forward(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 DCD setup"
            ::= { x50ConfigEntry 15 }


--
--  X50 Status
--

        x50StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The X50 Interface Status table."
            ::= { x50-card 2 }

        x50StatusEntry  OBJECT-TYPE
            SYNTAX  X50StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the X50 Status table."
            INDEX { x50StatusSlotIndex , x50StatusPortIndex }
            ::= { x50StatusTable 1 }

            X50StatusEntry ::= SEQUENCE {
            x50StatusSlotIndex          LargeSlotIndex,
            x50StatusPortIndex          EightPortID,
            x50Existed                  INTEGER,
            x50RTSloss                  INTEGER,
            x50EXTCLKloss               INTEGER,
            x50DSRstatus                INTEGER,
            x50CTSstatus                INTEGER,
            x50DCDstatus                INTEGER,
            x50DTRstatus                INTEGER,
            x50RTSstatus                INTEGER,
            x50RemoteAlarm              INTEGER
        }

        x50StatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50StatusEntry 1 }

        x50StatusPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 port 1-5"
            ::= { x50StatusEntry 2 }

        x50Existed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 Existed"
            ::= { x50StatusEntry 3 }

        x50RTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 RTS loss"
            ::= { x50StatusEntry 4 }

        x50EXTCLKloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 EXT-CLK loss"
            ::= { x50StatusEntry 5 }

        x50DSRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 DSR"
            ::= { x50StatusEntry 6 }

        x50CTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 CTS"
            ::= { x50StatusEntry 7 }

        x50DCDstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 DCD"
            ::= { x50StatusEntry 8 }

        x50DTRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 DTR"
            ::= { x50StatusEntry 9 }

        x50RTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 RTS"
            ::= { x50StatusEntry 10 }

        x50RemoteAlarm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 RTS"
            ::= { x50StatusEntry 11 }


--
--  Alarm History Table
--

        x50AlmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: x50AlmHistoryUnitIndex "
            ::= { x50-card 3 }

        x50AlmHistoryEntry  OBJECT-TYPE
            SYNTAX  X50AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { x50AlmHistorySlotIndex , x50AlmHistoryPortIndex }
            ::= { x50AlmHistoryTable 1 }

            X50AlmHistoryEntry ::= SEQUENCE {
            x50AlmHistorySlotIndex      LargeSlotIndex,
            x50AlmHistoryPortIndex      EightPortID,
            x50AlmHistoryState          INTEGER,
            x50AlmHistoryCount          INTEGER,
            x50AlmHistoryEnable         AlarmSeverity
        }

        x50AlmHistorySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50AlmHistoryEntry 1 }

        x50AlmHistoryPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 port 1-5"
            ::= { x50AlmHistoryEntry 2 }

        x50AlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { x50AlmHistoryEntry 3 }

        x50AlmHistoryCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { x50AlmHistoryEntry 4 }

        x50AlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { x50AlmHistoryEntry 5 }


--
--  Alarm Control Table
--

        x50AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The x50 alarm control table."
            ::= { x50-card 4 }

        x50AlarmControlEntry  OBJECT-TYPE
            SYNTAX  X50AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the x50 alarm control table."
            INDEX { x50AlarmSlotIndex , x50AlarmPortIndex }
            ::= { x50AlarmControlTable 1 }

            X50AlarmControlEntry ::= SEQUENCE {
            x50AlarmSlotIndex           LargeSlotIndex,
            x50AlarmPortIndex           EightPortID,
            x50AlarmSetup               AlarmSeverity
        }

        x50AlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50AlarmControlEntry 1 }

        x50AlarmPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 port 1-5"
            ::= { x50AlarmControlEntry 2 }

        x50AlarmSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { x50AlarmControlEntry 3 }


--
-- Diagnostic Control Table
--

        x50DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { x50-card 5 }

        x50DiagControlEntry  OBJECT-TYPE
            SYNTAX  X50DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { x50DiagControlSlotIndex , x50DiagControlPortIndex }
            ::= { x50DiagControlTable 1 }

            X50DiagControlEntry ::= SEQUENCE {
            x50DiagControlSlotIndex     LargeSlotIndex,
            x50DiagControlPortIndex     EightPortID,
            x50NearLoopback             INTEGER,
--               x50V54Loopback
--                 INTEGER,
            x50BERTControl              INTEGER,
            x50BERTStatus               INTEGER,
            x50BERTElapsedSeconds       INTEGER,
            x50BERTErrorSeconds         INTEGER,
            x50BERTErrorCounts          INTEGER
        }

        x50DiagControlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50DiagControlEntry 1 }

        x50DiagControlPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "X50 port 1-5"
            ::= { x50DiagControlEntry 2 }

        x50NearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    x50-TO-DTE(2),
                    x50-TO-DS1(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "X50 Loopback Type"
            ::= { x50DiagControlEntry 3 }

        x50BERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-ON(2),
                    reset(3),
                    inject-Error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Control"
            ::= { x50DiagControlEntry 4 }

        x50BERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-SYNC(1),
                    bert-UNSYNC(2),
                    bert-NOT-ACTIVE(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { x50DiagControlEntry 5 }

        x50BERTElapsedSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Elapsed Time"
            ::= { x50DiagControlEntry 6 }

        x50BERTErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Error Seconds"
            ::= { x50DiagControlEntry 7 }

        x50BERTErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Error Counter"
            ::= { x50DiagControlEntry 8 }

--
-- Card Control Table
--

        x50CardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The x50 Card control table."
            ::= { x50-card 7 }

        x50CardControlEntry  OBJECT-TYPE
            SYNTAX  X50CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the x50 Card control table."
            INDEX { x50CardIndex }
            ::= { x50CardControlTable 1 }

            X50CardControlEntry ::= SEQUENCE {
            x50CardIndex                LargeSlotIndex,
            x50Reset                    INTEGER,
            x50LoadDefault              INTEGER
        }

        x50CardIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50CardControlEntry 1 }

        x50Reset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset x50 card"
            ::= { x50CardControlEntry 2 }

        x50LoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { x50CardControlEntry 3 }


--
-- Card Information Table
--

        x50CardInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF X50CardInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The x50 Card information."
            ::= { x50-card 8 }

        x50CardInformationEntry  OBJECT-TYPE
            SYNTAX  X50CardInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the x50 Card Information."
            INDEX { x50CardInformationIndex }
            ::= { x50CardInformationTable 1 }

            X50CardInformationEntry ::= SEQUENCE {
            x50CardInformationIndex     LargeSlotIndex,
            x50SoftwareVersion          DisplayString
        }

        x50CardInformationIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { x50CardInformationEntry 1 }

        x50SoftwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "x50 card software version"
            ::= { x50CardInformationEntry 2 }


        x50TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of X50"
            ::= { x50-card 100 }


--======================================================================--
--======================================================================--
--  mdsl MIB
--======================================================================--
--======================================================================--


--
--  MDSL SYSTEM Table
--

        xdslSystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system control table."
            ::= { mdsl-card 1 }

        xdslSystemEntry  OBJECT-TYPE
            SYNTAX  XdslSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system table."
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslSysHTUIndex }
            ::= { xdslSystemTable 1 }

            XdslSystemEntry ::= SEQUENCE {
            xdslIndex                   LargeSlotIndex,
            xdslPortIndex               ThreePortID,
            xdslSysHTUIndex             INTEGER,
            xdslMode                    INTEGER,
            xdslServiceType             INTEGER,
            xdslClockSource             INTEGER,
            xdslSWVersion               DisplayString,
            xdslClearPerformance        INTEGER,
            xdslSerialNumber            INTEGER
        }

        xdslIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { xdslSystemEntry 1 }

        xdslPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~3, total 3 slots."
            ::= { xdslSystemEntry 2 }

        xdslSysHTUIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote"
            ::= { xdslSystemEntry 3 }

        xdslMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "xDSL mode (Master or Slave)"
            ::= { xdslSystemEntry 4 }

        xdslServiceType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    one-pair(1),
                    two-pairs(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Service Configuration"
            ::= { xdslSystemEntry 5 }

        xdslClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    line(1),
                    internal(2),
                    dte(3),
                    e1(4),
                    t1(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " System Master Clock Source"
            ::= { xdslSystemEntry 6 }

        xdslSWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Software Version"
            ::= { xdslSystemEntry 7 }

        xdslClearPerformance  OBJECT-TYPE
            SYNTAX INTEGER {
                    none(1),
                    clear(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear Performance"
            ::= { xdslSystemEntry 8 }

        xdslSerialNumber  OBJECT-TYPE
            SYNTAX INTEGER {
                    none(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Serial number of remote site"
            ::= { xdslSystemEntry 9 }


--
--  xDSL Line Configuartion for Loop-1, Loop-2
--

        xdslLineConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslLineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The xDSL Line Configuration table."
            ::= { mdsl-card 2 }

        xdslLineConfigEntry  OBJECT-TYPE
            SYNTAX  XdslLineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the xDSL Line Configuration table."
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslLineLoopNumber }
            ::= { xdslLineConfigTable 1 }

            XdslLineConfigEntry ::= SEQUENCE {
            xdslLineLoopNumber          INTEGER,
            xdslLineRate                INTEGER,
            xdslLineCode                INTEGER
        }

        xdslLineLoopNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..2)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Unit Loop Number"
            ::= { xdslLineConfigEntry 2 }

        xdslLineRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r272Kbps(1),
                    r400Kbps(2),
                    r528Kbps(3),
                    r784Kbps(4),
                    r1168Kbps(5),
                    r1552Kbps(6),
                    r2064Kbps(8),
                    r2320Kbps(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "To describe xDSL Line Rate of specified loop,
                for an example: 784Kbps"
            ::= { xdslLineConfigEntry 3 }

        xdslLineCode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    xdsl-2b1q(1),
                    xdsl-cap(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xDSL Line Coding"
            ::= { xdslLineConfigEntry 4 }


--
--  xDSL AI Configuartion
--

        xdslAIConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslAIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The xDSL Application Interface Configuration table."
            ::= { mdsl-card 3 }

        xdslAIConfigEntry  OBJECT-TYPE
            SYNTAX  XdslAIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the xDSL AI Configuration table."
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslAiNumber }
            ::= { xdslAIConfigTable 1 }

            XdslAIConfigEntry ::= SEQUENCE {
            xdslAiNumber                INTEGER,
            xdslDteReady                INTEGER,
            xdslDteRate                 INTEGER,
            xdslDteClockPolarity        INTEGER,
            xdslDteDataPolarity         INTEGER,
            xdslDteRTS                  INTEGER,
            xdslDteTTM                  INTEGER,
            xdslDteV54                  INTEGER,
            xdslDteInterface            INTEGER,
            xdslDS1Ready                INTEGER,
            xdslDS1Framing              INTEGER,
            xdslDS1Code                 INTEGER
        }

        xdslAiNumber  OBJECT-TYPE
            SYNTAX  INTEGER  {
--                      local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote unit"
            ::= { xdslAIConfigEntry 2 }

        xdslDteReady   OBJECT-TYPE
            SYNTAX  INTEGER  {
                    dte-ready(1),
                    dte-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE port is present or not"
            ::= { xdslAIConfigEntry 3 }

        xdslDteRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte64K(1),
                    dte128K(2),
                    dte192K(3),
                    dte256K(4),
                    dte320K(5),
                    dte384K(6),
                    dte448K(7),
                    dte512K(8),
                    dte576K(9),
                    dte640K(10),
                    dte704K(11),
                    dte768K(12),
                    dte832K(13),
                    dte896K(14),
                    dte960K(15),
                    dte1024K(16),
                    dte1088K(17),
                    dte1152K(18),
                    dte1216K(19),
                    dte1280K(20),
                    dte1344K(21),
                    dte1408K(22),
                    dte1472K(23),
                    dte1536K(24),
                    dte1600K(25),
                    dte1664K(26),
                    dte1728K(27),
                    dte1792K(28),
                    dte1856K(29),
                    dte1920K(30),
                    dte1984K(31),
                    dte2048K(32),
                    none(33)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE Base Rate"
            ::= { xdslAIConfigEntry 4 }

        xdslDteClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clock-normal(1),
                    clock-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE Clock Polarity"
            ::= { xdslAIConfigEntry 5 }

        xdslDteDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-normal(1),
                    data-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE Data Polarity"
            ::= { xdslAIConfigEntry 6 }

        xdslDteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rts-active(1),
                    rts-permanent(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE RTS Mode"
            ::= { xdslAIConfigEntry 7 }

        xdslDteTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttm-off(1),
                    ttm-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE TTM Mode"
            ::= { xdslAIConfigEntry 8 }

        xdslDteV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v54-off(1),
                    v54-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE V.54 Loopback Mode"
            ::= { xdslAIConfigEntry 9 }

        xdslDteInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    eia530-rs449(2),
                    x21(3),
                    rs232(4),
                    none(5),
                    other(18),
                    router(19)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xDSL DTE Interface Type"
            ::= { xdslAIConfigEntry 10 }

        xdslDS1Ready  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ds1-ready(1),
                    ds1-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "xDSL DS1 unit is present or not"
            ::= { xdslAIConfigEntry 11 }

        xdslDS1Framing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unframe(1),
                    d4(2),
                    esf(3),
                    crc-off(4),
                    crc-on(5),
                    cas-crc-off(6),
                    cas-crc-on(7),
                    none(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DS1 Framing"
            ::= { xdslAIConfigEntry 12 }

        xdslDS1Code  OBJECT-TYPE
            SYNTAX  INTEGER {
                    b8zs(1),
                    ami(2),
                    hdb3(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " xDSL DS1 Coding"
            ::= { xdslAIConfigEntry 13 }


--
--  Current Performance Table
--

        xdslCurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { mdsl-card 4 }

        xdslCurrPerfEntry  OBJECT-TYPE
            SYNTAX  XdslCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslCurrPerfTypeIndex }
            ::= { xdslCurrPerfTable 1 }

            XdslCurrPerfEntry ::= SEQUENCE  {
            xdslCurrPerfTypeIndex       INTEGER,
            xdslCurrES                  INTEGER,
            xdslCurrSES                 INTEGER,
            xdslCurrUAS                 INTEGER,
            xdslCurr15MinTimeElapsed    INTEGER,
            xdslValid15MinInterval      INTEGER
        }

        xdslCurrPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { xdslCurrPerfEntry 2 }

        xdslCurrES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { xdslCurrPerfEntry 3 }

        xdslCurrSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { xdslCurrPerfEntry 4 }

        xdslCurrUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { xdslCurrPerfEntry 5 }

        xdslCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { xdslCurrPerfEntry 6 }

        xdslValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { xdslCurrPerfEntry 7 }



--
--  Total Performance Table
--

        xdslTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { mdsl-card 5 }

        xdslTotalPerfEntry  OBJECT-TYPE
            SYNTAX  XdslTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslTotalPerfTypeIndex }
            ::= { xdslTotalPerfTable 1 }

            XdslTotalPerfEntry ::= SEQUENCE  {
            xdslTotalPerfTypeIndex      INTEGER,
            xdslTotalES                 INTEGER,
            xdslTotalSES                INTEGER,
            xdslTotalUAS                INTEGER,
            xdslLineAvailableSeconds    INTEGER,
            xdslLineUnavailableSeconds  INTEGER
        }

        xdslTotalPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { xdslTotalPerfEntry 2 }

        xdslTotalES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { xdslTotalPerfEntry 3 }

        xdslTotalSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { xdslTotalPerfEntry 4 }

        xdslTotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { xdslTotalPerfEntry 5 }

        xdslLineAvailableSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Line Available Seconds "
            ::= { xdslTotalPerfEntry 6 }

        xdslLineUnavailableSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Line Unavailable Seconds "
            ::= { xdslTotalPerfEntry 7 }


--
--  Interval Performance Table
--

        xdslIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { mdsl-card 6 }

        xdslIntvPerfEntry  OBJECT-TYPE
            SYNTAX  XdslIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslIntvPerfTypeIndex ,
        xdslIntvPerfPeriod }
            ::= { xdslIntvPerfTable 1 }

            XdslIntvPerfEntry ::= SEQUENCE  {
            xdslIntvPerfTypeIndex       INTEGER,
            xdslIntvPerfPeriod          INTEGER,
            xdslIntvES                  INTEGER,
            xdslIntvSES                 INTEGER,
            xdslIntvUAS                 INTEGER,
            xdslIntvAvailable           INTEGER
        }

        xdslIntvPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { xdslIntvPerfEntry 2 }

        xdslIntvPerfPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Interval Period Number"
            ::= { xdslIntvPerfEntry 3 }

        xdslIntvES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { xdslIntvPerfEntry 4 }

        xdslIntvSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { xdslIntvPerfEntry 5 }

        xdslIntvUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { xdslIntvPerfEntry 6 }

        xdslIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { xdslIntvPerfEntry 7 }


--
-- xDSL FRACTIONAL TABLE
--

        xdslFracTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: xdslFracUnitIndex.xdslFracNumber"
            ::= { mdsl-card 7 }

        xdslFracEntry   OBJECT-TYPE
            SYNTAX  XdslFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslFracNumber }
            ::= { xdslFracTable 1 }

            XdslFracEntry ::= SEQUENCE {
            xdslFracNumber              INTEGER  (1..32),
            xdslFracIfIndex             INTEGER
        }

        xdslFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "xdslFracNumber "
            ::= { xdslFracEntry 2 }

        xdslFracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-dte(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "xdslFracIfIndex "
            ::= { xdslFracEntry 3 }


--
-- Diagnostic Control Table
--

        xdslDiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { mdsl-card 8 }

        xdslDiagEntry  OBJECT-TYPE
            SYNTAX  XdslDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { xdslIndex ,
        xdslPortIndex }
            ::= { xdslDiagTable 1 }

            XdslDiagEntry ::= SEQUENCE {
            xdslLocalXdslLoopback       INTEGER,
            xdslRemoteXdslLoopback      INTEGER,
            xdslRemoteDteLoopback       INTEGER,
            xdslBERTControl             INTEGER,
            xdslBERTReset               INTEGER,
            xdslBERTStatus              INTEGER,
            xdslBERTCounter             INTEGER,
            xdslBERTElapsed             INTEGER,
            xdslremBERTControl          INTEGER,
            xdslremBERTReset            INTEGER,
            xdslremBERTStatus           INTEGER,
            xdslremBERTCounter          INTEGER,
            xdslremBERTElapsed          INTEGER,
            xdslremBERTErrorSeconds     INTEGER,
            xdslremBERTPatternUnsyncSeconds INTEGER
        }

        xdslLocalXdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
--                      xdsl-to-line(2),
                    xdsl-to-local(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { xdslDiagEntry 2 }

        xdslRemoteXdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-xdsl-to-line(2),
                    slave-xdsl-to-local(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { xdslDiagEntry 4 }

        xdslRemoteDteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-t1-to-line(2),
                    slave-t1-to-local(3),
                    slave-e1-to-line(4),
                    slave-e1-to-local(5),
                    slave-dte-to-line(6),
                    slave-dte-to-local(7),
                    slave-router-to-line(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE/T1/E1 Loopback Type"
            ::= { xdslDiagEntry 5 }

        xdslBERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
--                        bert-2-15-1(2),
                    bert-on(3),
                    bert-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Control"
            ::= { xdslDiagEntry 6 }

        xdslBERTReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-no-action(1),
                    bert-restart(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Restart"
            ::= { xdslDiagEntry 7 }

        xdslBERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { xdslDiagEntry 8 }

        xdslBERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Counter"
            ::= { xdslDiagEntry 9 }

        xdslBERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Elapsed Time"
            ::= { xdslDiagEntry 10 }

        xdslremBERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
--                        bert-2-15-1(2),
                    bert-on(3)
--                        bert-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "remBert Control"
            ::= { xdslDiagEntry 11 }

        xdslremBERTReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-no-action(1),
                    bert-restart(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "remBert Restart"
            ::= { xdslDiagEntry 12 }

        xdslremBERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Status"
            ::= { xdslDiagEntry 13 }

        xdslremBERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Counter"
            ::= { xdslDiagEntry 14 }

        xdslremBERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Elapsed Time"
            ::= { xdslDiagEntry 15 }

        xdslremBERTErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Error Seconds"
            ::= { xdslDiagEntry 16 }

        xdslremBERTPatternUnsyncSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Pattern Unsync Seconds"
            ::= { xdslDiagEntry 17 }


--
--  Alarm Queue Table
--

        xdslAlmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: xdslAlmQueueUnitIndex "
            ::= { mdsl-card 9 }

        xdslAlmQueueEntry  OBJECT-TYPE
            SYNTAX  XdslAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslAlmQueueNumber }
            ::= { xdslAlmQueueTable 1 }

            XdslAlmQueueEntry ::= SEQUENCE {
            xdslAlmQueueNumber          INTEGER (1..40),
            xdslAlmQueueString          DisplayString (SIZE(0..80))
        }

        xdslAlmQueueNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Latest Alarm Queue number (1-40)"
            ::= { xdslAlmQueueEntry 2 }

        xdslAlmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { xdslAlmQueueEntry 3 }


--
--  Alarm Status Table
--

        xdslAlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: xdslAlmStatusUnitIndex "
            ::= { mdsl-card 10 }

        xdslAlmStatusEntry  OBJECT-TYPE
            SYNTAX  XdslAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslAlmStatusNumber }
            ::= { xdslAlmStatusTable 1 }

            XdslAlmStatusEntry ::= SEQUENCE {
            xdslAlmStatusNumber         INTEGER (1..40),
            xdslAlmStatusString         DisplayString,
            xdslAlmStatusThreshold      INTEGER,
            xdslAlmStatusState          INTEGER,
            xdslAlmStatusCount          INTEGER,
            xdslAlmStatusEnable         AlarmSeverity
        }

        xdslAlmStatusNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Index "
            ::= { xdslAlmStatusEntry 2 }

        xdslAlmStatusString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { xdslAlmStatusEntry 3 }

        xdslAlmStatusThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm Threshold Value "
            ::= { xdslAlmStatusEntry 4 }

        xdslAlmStatusState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { xdslAlmStatusEntry 5 }

        xdslAlmStatusCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { xdslAlmStatusEntry 6 }

        xdslAlmStatusEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { xdslAlmStatusEntry 7 }


--
--  Remote Router Table
--

        xdslRouterConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslRtrConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Remote Router Configuration "
            ::= { mdsl-card 11 }

        xdslRtrConfigEntry  OBJECT-TYPE
            SYNTAX  XdslRtrConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslRtrUnitIndex ,
        xdslRtrPortIndex }
            ::= { xdslRouterConfigTable 1 }

            XdslRtrConfigTableEntry ::= SEQUENCE {
            xdslRtrUnitIndex            LargeSlotIndex,
            xdslRtrPortIndex            ThreePortID,
            xdslRtrNetIP                IpAddress,
            xdslRtrNetMask              IpAddress,
            xdslRtrWanIP                IpAddress,
            xdslRtrWanMask              IpAddress,
            xdslRtrGatewayIP            IpAddress,
            xdslRtrMode                 INTEGER
        }

        xdslRtrUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { xdslRtrConfigEntry 1 }

        xdslRtrPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~3, total 3 ports."
            ::= { xdslRtrConfigEntry 2 }

        xdslRtrNetIP   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Net Address"
            ::= { xdslRtrConfigEntry 3 }

        xdslRtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Net mask"
            ::= { xdslRtrConfigEntry 4 }

        xdslRtrWanIP   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router WAN Address"
            ::= { xdslRtrConfigEntry 5 }

        xdslRtrWanMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router WAN mask"
            ::= { xdslRtrConfigEntry 6 }

        xdslRtrGatewayIP   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Gateway Address"
            ::= { xdslRtrConfigEntry 7 }

        xdslRtrMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Mode(router or bridge)"
            ::= { xdslRtrConfigEntry 8 }


--
--  xdsl Status Config Table
--

        xdslStatusConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslStatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " xdsl Status Config Configuration "
            ::= { mdsl-card 12 }

        xdslStatusConfigEntry  OBJECT-TYPE
            SYNTAX  XdslStatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { xdslIndex ,
        xdslPortIndex }
            ::= { xdslStatusConfigTable 1 }

            XdslStatusConfigTableEntry ::= SEQUENCE {
            xdsle1SYNC                  INTEGER,
            xdsle1TxAIS                 INTEGER,
            xdsle1TxRAI                 INTEGER,
            xdsle1RxAIS                 INTEGER,
            xdsle1RxRAI                 INTEGER,
            xdsle1LOS                   INTEGER,
            xdsle1LOF                   INTEGER,
            xdsldteDSR                  INTEGER,
            xdsldteCTS                  INTEGER,
            xdsldteDCD                  INTEGER,
            xdsldteDTR                  INTEGER,
            xdsldteRTS                  INTEGER
        }

        xdsle1SYNC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line status."
            ::= { xdslStatusConfigEntry 1 }

        xdsle1TxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line Tx Alarm Indication Signal."
            ::= { xdslStatusConfigEntry 2 }

        xdsle1TxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line Tx Remote Alarm Indication."
            ::= { xdslStatusConfigEntry 3 }

        xdsle1RxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line Rx Alarm Indication Signal."
            ::= { xdslStatusConfigEntry 4 }

        xdsle1RxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line Rx Remote Alarm Indication."
            ::= { xdslStatusConfigEntry 5 }

        xdsle1LOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line LOS Status."
            ::= { xdslStatusConfigEntry 6 }

        xdsle1LOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl e1 line LOF Status."
            ::= { xdslStatusConfigEntry 7 }

        xdsldteDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl dte line DSR Status."
            ::= { xdslStatusConfigEntry 8 }

        xdsldteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl dte line CTS Status."
            ::= { xdslStatusConfigEntry 9 }

        xdsldteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl dte line DCD Status."
            ::= { xdslStatusConfigEntry 10 }

        xdsldteDTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl dte line DTR Status."
            ::= { xdslStatusConfigEntry 11 }

        xdsldteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " xdsl dte line RTS Status."
            ::= { xdslStatusConfigEntry 12 }

--
--  Seven Days Performance Table
--
        xdslSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= { mdsl-card 13 }

        xdslSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  XdslSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance entry"
            INDEX { xdslIndex ,
        xdslPortIndex ,
        xdslDaysPerfTypeIndex ,
        xdslDaysIndex }
            ::= { xdslSevenDaysPerfTable 1 }

            XdslSevenDaysPerfEntry ::= SEQUENCE  {
            xdslDaysPerfTypeIndex       INTEGER,
            xdslDaysIndex               INTEGER (1..7),
            xdslDateStrIndex            DisplayString (SIZE (0..255) ),
            xdslSevenDaysPerfES         INTEGER,
            xdslSevenDaysPerfSES        INTEGER,
            xdslSevenDaysPerfUAS        INTEGER
        }

        xdslDaysPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { xdslSevenDaysPerfEntry 3 }

        xdslDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { xdslSevenDaysPerfEntry 4 }

        xdslDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { xdslSevenDaysPerfEntry 5 }

        xdslSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { xdslSevenDaysPerfEntry 6 }

        xdslSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { xdslSevenDaysPerfEntry 7 }

        xdslSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { xdslSevenDaysPerfEntry 8 }

--
--  Command Control Table
--

        xdslCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF XdslCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { mdsl-card 14 }

        xdslCommandControlEntry  OBJECT-TYPE
            SYNTAX  XdslCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { xdslIndex ,
        xdslPortIndex }
            ::= { xdslCommandControlTable 1 }

            XdslCommandControlEntry ::= SEQUENCE {
            xdslUnitReset               INTEGER,
            xdslPortLoadDefault         INTEGER
        }

        xdslUnitReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Unit"
            ::= { xdslCommandControlEntry 1 }

        xdslPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Port Load Default"
            ::= { xdslCommandControlEntry 2 }


        mdslTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of MDSL"
            ::= { mdsl-card 100 }


--======================================================================--
--======================================================================--
--  dtu6-card MIB
--======================================================================--
--======================================================================--


--
-- DTU Command Control Table
--

        dtu6CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU command control table."
            ::= { dtu6-card 1 }

        dtu6CommandControlEntry  OBJECT-TYPE
            SYNTAX  Dtu6CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU command control table."
            INDEX { dtu6CommandSlotIndex , dtu6CommandPortIndex }
            ::= { dtu6CommandControlTable 1 }

            Dtu6CommandControlEntry ::= SEQUENCE {
            dtu6CommandSlotIndex        LargeSlotIndex,
            dtu6CommandPortIndex        SixPortID,
            dtu6ClearPerformanceData    INTEGER,
            dtu6PortReset               INTEGER,
            dtu6PortClearCRC            INTEGER,
            dtu6CardReset               INTEGER
        }

        dtu6CommandSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6CommandControlEntry 1 }

        dtu6CommandPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-6"
            ::= { dtu6CommandControlEntry 2 }

        dtu6ClearPerformanceData  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear DTU performance data"
            ::= { dtu6CommandControlEntry 3 }

        dtu6PortReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTU port"
            ::= { dtu6CommandControlEntry 4 }

        dtu6PortClearCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear-local-crc(1),
                    clear-remote-crc(2),
                    clear-all-port-crc(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear DTU port CRC Error Counter."
            ::= { dtu6CommandControlEntry 5 }

        dtu6CardReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTU Card"
            ::= { dtu6CommandControlEntry 6 }

--
-- Remote DTE Config Table
--

        dtu6RdteConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RdteConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU remote DTE configuration."
            ::= { dtu6-card 2 }

        dtu6RdteConfigEntry  OBJECT-TYPE
            SYNTAX  Dtu6RdteConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU remote DTE configuration."
            INDEX { dtu6RdteSlotIndex , dtu6RdtePortIndex }
            ::= { dtu6RdteConfigTable 1 }

            Dtu6RdteConfigEntry ::= SEQUENCE {
            dtu6RdteSlotIndex           LargeSlotIndex,
            dtu6RdtePortIndex           SixPortID,
            dtu6SyncMode                INTEGER,
            dtu6RdteSpeed               INTEGER,
            dtu6RdteChannel             INTEGER,
            dtu6RdteClock               INTEGER,
            dtu6RdteData                INTEGER,
            dtu6RdteRTS                 INTEGER,
            dtu6RdteTTM                 INTEGER,
            dtu6RdteInterface           INTEGER,
            dtu6RdteX50IdleCode         INTEGER,
            dtu6RdteX50Map              DisplayString,
            dtu6RdteX50Status           DisplayString
        }

        dtu6RdteSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RdteConfigEntry 1 }

        dtu6RdtePortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-6"
            ::= { dtu6RdteConfigEntry 2 }

        dtu6SyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sync(1),
                    async(2),
                    async-8(3),
                    async-9(4),
                    async-10(5),
                    async-11(6),
                    n-a(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote SYNC mode"
            ::= { dtu6RdteConfigEntry 3 }

        dtu6RdteSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nx64K(1),
                    nx56K(2),
                    nx128K(3),
                    nx112K(4),
                    nx0K(5),
                    nx1-2K(6),
                    nx2-4K(7),
                    nx4-8K(8),
                    nx9-6K(9),
                    nx19-2K(10),
                    nx38-4K(11),
                    nx48-0K(12),
--                        async1-2K(13),
--                        async2-4K(14),
--                        async4-8K(15),
--                        async9-6K(16),
--                        async19-2K(17),
--                        async38-4K(18),
                    n-a(13)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE Speed"
            ::= { dtu6RdteConfigEntry 4 }

        dtu6RdteChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    iDLE(1),
                    b1(2),
                    b2(3),
                    b1-b2(4),
                    n-a(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE channel"
            ::= { dtu6RdteConfigEntry 5 }

        dtu6RdteClock  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE clock type"
            ::= { dtu6RdteConfigEntry 6 }

        dtu6RdteData  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE data type"
            ::= { dtu6RdteConfigEntry 7 }

        dtu6RdteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE RTS type"
            ::= { dtu6RdteConfigEntry 8 }

        dtu6RdteTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    n-a(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE TTM type"
            ::= { dtu6RdteConfigEntry 9 }

        dtu6RdteInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    rs449-eia530(2),
                    x21(3),
                    rs232(4),
                    rs232-SubRate(8),
                    g-703(11),
                    na(16),
                    other(18),
                    router(20),
                    rs232-x50(24)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card interface"
            ::= { dtu6RdteConfigEntry 10 }

        dtu6RdteX50IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER (0..47)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 idle code"
            ::= { dtu6RdteConfigEntry 11 }

        dtu6RdteX50Map  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..21) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 Map"
            ::= { dtu6RdteConfigEntry 12 }

        dtu6RdteX50Status  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..21) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote DTE card X50 Status"
            ::= { dtu6RdteConfigEntry 13 }

--
-- Diagnostic Control Table
--

        dtu6DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU diagnostics control table."
            ::= { dtu6-card 3 }

        dtu6DiagControlEntry  OBJECT-TYPE
            SYNTAX  Dtu6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU diagnostics control table."
            INDEX { dtu6DiagSlotIndex , dtu6DiagPortIndex }
            ::= { dtu6DiagControlTable 1 }

            Dtu6DiagControlEntry ::= SEQUENCE {
            dtu6DiagSlotIndex           LargeSlotIndex,
            dtu6DiagPortIndex           SixPortID,
            dtu6NearLoopback            INTEGER,
            dtu6RemoteLoopback          INTEGER,
            dtu6BertControl             INTEGER,
            dtu6BertStatus              INTEGER,
            dtu6QrssElapseSeconds       INTEGER,
            dtu6QrssErrorSeconds        INTEGER,
            dtu6QrssErrorBits           INTEGER,
            dtu6RemBertControl          INTEGER,
            dtu6RemBertStatus           INTEGER,
            dtu6RemQrssElapseSeconds    INTEGER,
            dtu6RemQrssErrorSeconds     INTEGER,
            dtu6RemQrssErrorBits        INTEGER,
            dtu6RemQrssPatternUnsyncSeconds INTEGER
        }

        dtu6DiagSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6DiagControlEntry 1 }

        dtu6DiagPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-6"
            ::= { dtu6DiagControlEntry 2 }

        dtu6NearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payLoadLoopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Near loopback type"
            ::= { dtu6DiagControlEntry 3 }

        dtu6RemoteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    remotePayLoad(2),
                    remoteDTE-or-remoteROUTER(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote loopback type"
            ::= { dtu6DiagControlEntry 4 }

        dtu6BertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-ON(2),
                    reset(3),
                    inject-Error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT control"
            ::= { dtu6DiagControlEntry 5 }

        dtu6BertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-Sync(1),
                    bert-Unsync(2),
                    bert-Not-Active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { dtu6DiagControlEntry 6 }

        dtu6QrssElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss elapse seconds"
            ::= { dtu6DiagControlEntry 7 }

        dtu6QrssErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error seconds"
            ::= { dtu6DiagControlEntry 8 }

        dtu6QrssErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error bits"
            ::= { dtu6DiagControlEntry 9 }

        dtu6RemBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-FULL(2),
                    bert-DTE1(3),
--                        bert-DTE2(4),
                    reset(5),
                    inject-Error(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT control"
            ::= { dtu6DiagControlEntry 10 }

        dtu6RemBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-Sync(1),
                    bert-Unsync(2),
                    bert-Not-Active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { dtu6DiagControlEntry 11 }

        dtu6RemQrssElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss elapse seconds"
            ::= { dtu6DiagControlEntry 12 }

        dtu6RemQrssErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error seconds"
            ::= { dtu6DiagControlEntry 13 }

        dtu6RemQrssErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss error bits"
            ::= { dtu6DiagControlEntry 14 }

        dtu6RemQrssPatternUnsyncSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Qrss pattern unsync seconds"
            ::= { dtu6DiagControlEntry 15 }


--
--  Alarm History Table
--

        dtu6AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The dtu6 alarm history table."
            ::= { dtu6-card 4 }

        dtu6AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  Dtu6AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU alarm history table."
            INDEX { dtu6AlmhisSlotIndex , dtu6AlmhisPortIndex }
            ::= { dtu6AlarmHistoryTable 1 }

            Dtu6AlarmHistoryEntry ::= SEQUENCE {
            dtu6AlmhisSlotIndex         LargeSlotIndex,
            dtu6AlmhisPortIndex         SixPortID,
            dtu6UnsyncAlarmState        INTEGER,
            dtu6UnsyncAlarmCount        INTEGER
        }

        dtu6AlmhisSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6AlarmHistoryEntry 1 }

        dtu6AlmhisPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6AlarmHistoryEntry 2 }

        dtu6UnsyncAlarmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm history : unsync alarm state"
            ::= { dtu6AlarmHistoryEntry 3 }

        dtu6UnsyncAlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm history : unsync alarm count"
            ::= { dtu6AlarmHistoryEntry 4 }


--
--  Alarm Control Table
--

        dtu6AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU alarm control table."
            ::= { dtu6-card 5 }

        dtu6AlarmControlEntry  OBJECT-TYPE
            SYNTAX  Dtu6AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU alarm control table."
            INDEX { dtu6AlarmSlotIndex , dtu6AlarmPortIndex }
            ::= { dtu6AlarmControlTable 1 }

            Dtu6AlarmControlEntry ::= SEQUENCE {
            dtu6AlarmSlotIndex          LargeSlotIndex,
            dtu6AlarmPortIndex          SixPortID,
            dtu6LineUnsync              AlarmSeverity
        }

        dtu6AlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6AlarmControlEntry 1 }

        dtu6AlarmPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6AlarmControlEntry 2 }

        dtu6LineUnsync  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm : Line Unsync"
            ::= { dtu6AlarmControlEntry 3 }


--
-- Current Line Performance Table
--

        dtu6CurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU current line performance table."
            ::= { dtu6-card 6 }

        dtu6CurrentPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu6CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU current line performance table."
            INDEX { dtu6CurrSlotIndex , dtu6CurrPortIndex }
            ::= { dtu6CurrentPerfTable 1 }

            Dtu6CurrentPerfEntry ::= SEQUENCE {
            dtu6CurrSlotIndex           LargeSlotIndex,
            dtu6CurrPortIndex           SixPortID,
            dtu6CurrentAS               INTEGER,
            dtu6CurrentUAS              INTEGER,
            dtu6Current24hAS            INTEGER,
            dtu6Current24hUAS           INTEGER,
            dtu6Valid15minInterval      INTEGER,
            dtu6Valid1dayInterval       INTEGER
        }

        dtu6CurrSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6CurrentPerfEntry 1 }

        dtu6CurrPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6CurrentPerfEntry 2 }

        dtu6CurrentAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "15m Performance available seconds"
            ::= { dtu6CurrentPerfEntry 3 }

        dtu6CurrentUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "15m Performance unavailable seconds"
            ::= { dtu6CurrentPerfEntry 4 }

        dtu6Current24hAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "24h Performance available seconds"
            ::= { dtu6CurrentPerfEntry 5 }

        dtu6Current24hUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "24h Performance unavailable seconds"
            ::= { dtu6CurrentPerfEntry 6 }

        dtu6Valid15minInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Valid 15 minutes Interval number"
            ::= { dtu6CurrentPerfEntry 7 }

        dtu6Valid1dayInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Valid 1 day Interval number"
            ::= { dtu6CurrentPerfEntry 8 }


--
-- Interval Line Performance Table
--

        dtu6IntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6IntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU interval line performance table."
            ::= { dtu6-card 7 }

        dtu6IntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu6IntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU interval line performance table."
            INDEX { dtu6PerfSlotIndex ,
        dtu6PerfPortIndex ,
        dtu6ItvIndex }
            ::= { dtu6IntervalPerfTable 1 }

            Dtu6IntervalPerfEntry ::= SEQUENCE {
            dtu6PerfSlotIndex           LargeSlotIndex,
            dtu6PerfPortIndex           SixPortID,
            dtu6ItvIndex                INTEGER,
            dtu6IntervalAS              INTEGER,
            dtu6IntervalUAS             INTEGER
        }

        dtu6PerfSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6IntervalPerfEntry 1 }

        dtu6PerfPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6IntervalPerfEntry 2 }

        dtu6ItvIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance interval index"
            ::= { dtu6IntervalPerfEntry 3 }

        dtu6IntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance available seconds"
            ::= { dtu6IntervalPerfEntry 4 }

        dtu6IntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance unavailable seconds"
            ::= { dtu6IntervalPerfEntry 5 }


--
-- Total Line Performance Table
--
        dtu6TotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU total line performance table."
            ::= { dtu6-card 8 }

        dtu6TotalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu6TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU total line performance table."
            INDEX { dtu6TPerfSlotIndex ,
        dtu6TPerfPortIndex ,
        dtu6TotalIndex }
            ::= { dtu6TotalPerfTable 1 }

            Dtu6TotalPerfEntry ::= SEQUENCE {
            dtu6TPerfSlotIndex          LargeSlotIndex,
            dtu6TPerfPortIndex          SixPortID,
            dtu6TotalIndex              INTEGER,
            dtu6TotalAS                 INTEGER,
            dtu6TotalUAS                INTEGER
        }

        dtu6TPerfSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6TotalPerfEntry 1 }

        dtu6TPerfPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6TotalPerfEntry 2 }

        dtu6TotalIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance interval index"
            ::= { dtu6TotalPerfEntry 3 }

        dtu6TotalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day performance available seconds"
            ::= { dtu6TotalPerfEntry 4 }

        dtu6TotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Day performance unavailable seconds"
            ::= { dtu6TotalPerfEntry 5 }


--
-- LED Status Table
--

        dtu6RemLedStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RemLedStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTU remote LED status table."
            ::= { dtu6-card 9 }

        dtu6RemLedStatusEntry  OBJECT-TYPE
            SYNTAX  Dtu6RemLedStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LED status entry"
            INDEX { dtu6LedSlotIndex , dtu6LedPortIndex }
            ::= { dtu6RemLedStatusTable 1 }

            Dtu6RemLedStatusEntry ::= SEQUENCE {
            dtu6LedSlotIndex            LargeSlotIndex,
            dtu6LedPortIndex            SixPortID,
            dtu6LedColor                INTEGER
        }

        dtu6LedSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RemLedStatusEntry 1 }

        dtu6LedPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6RemLedStatusEntry 2 }

        dtu6LedColor  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(0),
                    off(1),
                    red(2),
                    green(3),
                    flashing-green(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Led Color"
            ::= { dtu6RemLedStatusEntry 3 }

--
-- DTU Line Config Table
--

        dtu6LineConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU line configuration."
            ::= { dtu6-card 10 }

        dtu6LineConfigEntry  OBJECT-TYPE
            SYNTAX  Dtu6LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU line configuration."
            INDEX { dtu6ConfigSlotIndex , dtu6ConfigPortIndex }
            ::= { dtu6LineConfigTable 1 }

            Dtu6LineConfigEntry ::= SEQUENCE {
            dtu6ConfigSlotIndex         LargeSlotIndex,
            dtu6ConfigPortIndex         SixPortID,
            dtu6LineMode                INTEGER,
            dtu6LineProtocol            INTEGER,
            dtu6ClockSource             INTEGER
        }

        dtu6ConfigSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6LineConfigEntry 1 }

        dtu6ConfigPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port 1-6"
            ::= { dtu6LineConfigEntry 2 }

        dtu6LineMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lT(1),
                    nT(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU Line Mode"
            ::= { dtu6LineConfigEntry 3 }

        dtu6LineProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    d-channel(1),
                    m-channel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU Line protocol channel"
            ::= { dtu6LineConfigEntry 4 }

        dtu6ClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    internal(1),
                    dTE-1(2),
                    dTE-2(3),
                    line(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU master clock source"
            ::= { dtu6LineConfigEntry 5 }


--
-- 15 minutes Interval Performance Table
--

        dtu6-15minIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6-15minIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU 15 minutes interval performance table."
            ::= { dtu6-card 17 }

        dtu6-15minIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu6-15minIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU 15 minutes interval performance table."
            INDEX { dtu6PerfSlotIndex ,
        dtu6PerfPortIndex ,
        dtu6ItvIndex }
            ::= { dtu6-15minIntervalPerfTable 1 }

            Dtu6-15minIntervalPerfEntry ::= SEQUENCE {
            dtu6-15minIntervalAS        INTEGER,
            dtu6-15minIntervalUAS       INTEGER
        }

        dtu6-15minIntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Available Seconds"
            ::= { dtu6-15minIntervalPerfEntry 4 }

        dtu6-15minIntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "UnAvailable Seconds"
            ::= { dtu6-15minIntervalPerfEntry 5 }


--
-- 1 Day Interval Performance Table
--
        dtu6-1dayIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6-1dayIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTU total line performance table."
            ::= { dtu6-card 18 }

        dtu6-1dayIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Dtu6-1dayIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU total line performance table."
            INDEX { dtu6TPerfSlotIndex ,
        dtu6TPerfPortIndex ,
        dtu6TotalIndex }
            ::= { dtu6-1dayIntervalPerfTable 1 }

            Dtu6-1dayIntervalPerfEntry ::= SEQUENCE {
            dtu6-1dayIntervalAS         INTEGER,
            dtu6-1dayIntervalUAS        INTEGER
        }

        dtu6-1dayIntervalAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Available Seconds"
            ::= { dtu6-1dayIntervalPerfEntry 4 }

        dtu6-1dayIntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "UnAvailable Seconds"
            ::= { dtu6-1dayIntervalPerfEntry 5 }


--
--  Remote Router Table
--
    dtu6RouterConfig    OBJECT IDENTIFIER ::= { dtu6-card 11 }
--
--  NI Control Table
--

        dtu6RtrNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Table"
            ::= { dtu6RouterConfig 1 }

        dtu6RouterNiControlEntry  OBJECT-TYPE
            SYNTAX  Dtu6RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Entry"
            INDEX { dtu6RtrNiUnitIndex ,
        dtu6RtrNiPortIndex ,
        dtu6RtrNiIndex }
            ::= { dtu6RtrNiControlTable 1 }

            Dtu6RtrNiControlEntry ::= SEQUENCE {
            dtu6RtrNiUnitIndex          LargeSlotIndex,
            dtu6RtrNiPortIndex          SixPortID,
            dtu6RtrNiIndex              INTEGER,
            dtu6RtrIPAddr               IpAddress,
            dtu6RtrSubnetMask           IpAddress,
            dtu6RtrFrame                INTEGER,
            dtu6RtrRIP1                 INTEGER,
            dtu6RtrRIP2                 INTEGER,
            dtu6RtrMode                 INTEGER
        }

        dtu6RtrNiUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RouterNiControlEntry 1 }

        dtu6RtrNiPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~6, total 6 ports."
            ::= { dtu6RouterNiControlEntry 2 }

        dtu6RtrNiIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2),
                    wan2(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Ni index"
            ::= { dtu6RouterNiControlEntry 3 }

        dtu6RtrIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR IP Address"
            ::= { dtu6RouterNiControlEntry 4 }

        dtu6RtrSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR net mask"
            ::= { dtu6RouterNiControlEntry 5 }

        dtu6RtrFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    ethernet(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Layer2 frame"
            ::= { dtu6RouterNiControlEntry 6 }

        dtu6RtrRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP1"
            ::= { dtu6RouterNiControlEntry 7 }

        dtu6RtrRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP2"
            ::= { dtu6RouterNiControlEntry 8 }

        dtu6RtrMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR mode"
            ::= { dtu6RouterNiControlEntry 9 }

--
--  Route Table
--

        dtu6RtrRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Table"
            ::= { dtu6RouterConfig 2 }

        dtu6RouterRouteControlEntry  OBJECT-TYPE
            SYNTAX  Dtu6RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Entry"
            INDEX { dtu6RtrRUnitIndex ,
        dtu6RtrRPortIndex ,
        dtu6RtrEntry }
            ::= { dtu6RtrRouteControlTable 1 }

            Dtu6RtrRouteControlEntry ::= SEQUENCE {
            dtu6RtrRUnitIndex           LargeSlotIndex,
            dtu6RtrRPortIndex           SixPortID,
            dtu6RtrEntry                INTEGER (1..16),
            dtu6RtrNetAddr              IpAddress,
            dtu6RtrNetMask              IpAddress,
            dtu6RtrGatewayAddr          IpAddress,
            dtu6RtrNIAddr               IpAddress,
            dtu6RtrMetric               INTEGER
        }

        dtu6RtrRUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RouterRouteControlEntry 1 }

        dtu6RtrRPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~6, total 6 ports."
            ::= { dtu6RouterRouteControlEntry 2 }

        dtu6RtrEntry  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Route Entry"
            ::= { dtu6RouterRouteControlEntry 3 }


        dtu6RtrNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net Address"
            ::= { dtu6RouterRouteControlEntry 4 }

        dtu6RtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net mask"
            ::= { dtu6RouterRouteControlEntry 5 }

        dtu6RtrGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route gateway Address"
            ::= { dtu6RouterRouteControlEntry 6 }

        dtu6RtrNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route NI Address"
            ::= { dtu6RouterRouteControlEntry 7 }


        dtu6RtrMetric OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Route metric"
            ::= { dtu6RouterRouteControlEntry 8 }

--
--  Router Command
--
        dtu6RtrCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command(reset & load-default) Table"
            ::= { dtu6RouterConfig 3 }

        dtu6RtrCommandEntry  OBJECT-TYPE
            SYNTAX  Dtu6RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Entry"
            INDEX { dtu6RtrCmdUnitIndex ,
        dtu6RtrCmdPortIndex }
            ::= { dtu6RtrCommandTable 1 }

            Dtu6RtrCmdEntry ::= SEQUENCE {
            dtu6RtrCmdUnitIndex         LargeSlotIndex,
            dtu6RtrCmdPortIndex         SixPortID,
            dtu6RtrCommand              INTEGER
        }

        dtu6RtrCmdUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RtrCommandEntry 1 }

        dtu6RtrCmdPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~6, total 6 ports."
            ::= { dtu6RtrCommandEntry 2 }

        dtu6RtrCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1),
                    load-default(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Command(reset or load-default)"
            ::= { dtu6RtrCommandEntry 3 }

--
--  Router Map
--
        dtu6RtrMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Table"
            ::= { dtu6RouterConfig 4 }

        dtu6RtrMapEntry  OBJECT-TYPE
            SYNTAX  Dtu6RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Entry"
            INDEX { dtu6RtrMapUnitIndex ,
        dtu6RtrMapPortIndex }
            ::= { dtu6RtrMapTable 1 }

            Dtu6RtrMappingEntry ::= SEQUENCE {
            dtu6RtrMapUnitIndex         LargeSlotIndex,
            dtu6RtrMapPortIndex         SixPortID,
            dtu6RtrChB1                 INTEGER,
            dtu6RtrChB2                 INTEGER
        }

        dtu6RtrMapUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RtrMapEntry 1 }

        dtu6RtrMapPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~6, total 6 ports."
            ::= { dtu6RtrMapEntry 2 }

        dtu6RtrChB1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    wan2(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " U channel B1 map data"
            ::= { dtu6RtrMapEntry 3 }

        dtu6RtrChB2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    wan2(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " U channel B2 map data"
            ::= { dtu6RtrMapEntry 4 }

--
-- DTU Remote DTU Information Table
--

        dtu6RemoteDTUInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6RemoteDTUInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote DTU Information Table."
            ::= { dtu6-card 12 }

        dtu6RemoteDTUInfoEntry  OBJECT-TYPE
            SYNTAX  Dtu6RemoteDTUInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Remote DTU Information Table."
            INDEX { dtu6RemoteDTUInfoSlotIndex ,
        dtu6RemoteDTUInfoPortIndex }
            ::= { dtu6RemoteDTUInfoTable 1 }

            Dtu6RemoteDTUInfoEntry ::= SEQUENCE {
            dtu6RemoteDTUInfoSlotIndex  LargeSlotIndex,
            dtu6RemoteDTUInfoPortIndex  SixPortID,
            dtu6RemoteDTUInfoDate       DisplayString,
            dtu6RemoteDTUInfoSerialNumber   DisplayString,
            dtu6RemoteDTUInfoSWVersion      DisplayString,
            dtu6RemoteDTUInfoConfiguration  DisplayString
        }

        dtu6RemoteDTUInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6RemoteDTUInfoEntry 1 }

        dtu6RemoteDTUInfoPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-6"
            ::= { dtu6RemoteDTUInfoEntry 2 }

        dtu6RemoteDTUInfoDate  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote DTU Date "
            ::= { dtu6RemoteDTUInfoEntry 3 }

        dtu6RemoteDTUInfoSerialNumber  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Serial Number"
            ::= { dtu6RemoteDTUInfoEntry 4 }

        dtu6RemoteDTUInfoSWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Software Version"
            ::= { dtu6RemoteDTUInfoEntry 5 }

        dtu6RemoteDTUInfoConfiguration  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Configuration"
            ::= { dtu6RemoteDTUInfoEntry 6 }

--
-- DTU6 Line Status Table
--

        dtu6LineStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dtu6LineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTU line status table."
            ::= { dtu6-card 13 }

        dtu6LineStatusEntry  OBJECT-TYPE
            SYNTAX  Dtu6LineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTU line status table."
            INDEX { dtu6LineStatusSlotIndex ,
        dtu6LineStatusPortIndex }
            ::= { dtu6LineStatusTable 1 }

            Dtu6LineStatusEntry ::= SEQUENCE {
            dtu6LineStatusSlotIndex     LargeSlotIndex,
            dtu6LineStatusPortIndex     SixPortID,
            dtu6LineLocalCRC            INTEGER,
            dtu6LineLocalIntervalAVG    DisplayString,
            dtu6LineRemoteCRC           INTEGER,
            dtu6LineRemoteIntervalAVG   DisplayString
        }

        dtu6LineStatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dtu6LineStatusEntry 1 }

        dtu6LineStatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU sport 1-10"
            ::= { dtu6LineStatusEntry 2 }

        dtu6LineLocalCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port Local CRC Error."
            ::= { dtu6LineStatusEntry 3 }

        dtu6LineLocalIntervalAVG  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTU port local CRC Interval Average."
            ::= { dtu6LineStatusEntry 4 }

        dtu6LineRemoteCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTU port Remote CRC Error."
            ::= { dtu6LineStatusEntry 5 }

        dtu6LineRemoteIntervalAVG  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTU port remote CRC Interval Average."
            ::= { dtu6LineStatusEntry 6 }


        dtu6TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of DTU6"
            ::= { dtu6-card 100 }


--======================================================================--
--======================================================================--
--  em-card MIB
--======================================================================--
-- E&M Card

--    emConfigControlTable           OBJECT IDENTIFIER ::= { em-card 1  }
--    emDiagControlTable             OBJECT IDENTIFIER ::= { em-card 3  }
--    emCommandControlTable          OBJECT IDENTIFIER ::= { em-card 4  }
--    emAllPortConfigControlTable    OBJECT IDENTIFIER ::= { em-card 5  }
--    emPerPortConfigControlTable    OBJECT IDENTIFIER ::= { em-card 6  }
--    emALLPortSigConfigControlTable OBJECT IDENTIFIER ::= { em-card 7  }
--======================================================================--

    EMGain ::= INTEGER   {
        gain-neg-16-0-db(1),
        gain-neg-15-5-db(2),
        gain-neg-15-0-db(3),
        gain-neg-14-5-db(4),
        gain-neg-14-0-db(5),
        gain-neg-13-5-db(6),
        gain-neg-13-0-db(7),
        gain-neg-12-5-db(8),
        gain-neg-12-0-db(9),
        gain-neg-11-5-db(10),
        gain-neg-11-0-db(11),
        gain-neg-10-5-db(12),
        gain-neg-10-0-db(13),
        gain-neg-9-5-db(14),
        gain-neg-9-0-db(15),
        gain-neg-8-5-db(16),
        gain-neg-8-0-db(17),
        gain-neg-7-5-db(18),
        gain-neg-7-0-db(19),
        gain-neg-6-5-db(20),
        gain-neg-6-0-db(21),
        gain-neg-5-5-db(22),
        gain-neg-5-0-db(23),
        gain-neg-4-5-db(24),
        gain-neg-4-0-db(25),
        gain-neg-3-5-db(26),
        gain-neg-3-0-db(27),
        gain-neg-2-5-db(28),
        gain-neg-2-0-db(29),
        gain-neg-1-5-db(30),
        gain-neg-1-0-db(31),
        gain-neg-0-5-db(32),
        gain-0-0-db(33),
        gain-0-5-db(34),
        gain-1-0-db(35),
        gain-1-5-db(36),
        gain-2-0-db(37),
        gain-2-5-db(38),
        gain-3-0-db(39),
        gain-3-5-db(40),
        gain-4-0-db(41),
        gain-4-5-db(42),
        gain-5-0-db(43),
        gain-5-5-db(44),
        gain-6-0-db(45),
        gain-6-5-db(46),
        gain-7-0-db(47),
        not-available(255)
    }

--
--      EM Control Table
--

        emConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Configuration Control Table"
            ::= { em-card 1 }

        emConfigControlEntry  OBJECT-TYPE
            SYNTAX  EmConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&m configuration control entry"
            INDEX { emConfigControlIndex }
            ::= { emConfigControlTable 1 }

            EmConfigControlEntry ::= SEQUENCE {
            emConfigControlIndex        LargeSlotIndex,
            emConfigControlSide         INTEGER,
            emConfigControlLine         INTEGER,
            emConfigControlImpedance    INTEGER,
            emConfigControlSignaling    INTEGER,
--             emConfigControlAB-bit
--               INTEGER,
            emConfigControlA-u-law      INTEGER,
            emConfigControlTx-gain      EMGain,
            emConfigControlRx-gain      EMGain,
            emConfigControlHW-SW-Control    INTEGER
        }

        emConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emConfigControlEntry 1 }

        emConfigControlSide   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
--                      a-b(3),
                    error(4),
                    not-available(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M Side "
            ::= { emConfigControlEntry 2 }

        emConfigControlLine   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2),
                    not-available(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { emConfigControlEntry 3 }

        emConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2),
                    not-available(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { emConfigControlEntry 4 }

        emConfigControlSignaling   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7),
                    not-available(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { emConfigControlEntry 5 }

--       emConfigControlAB-bit OBJECT-TYPE
--           SYNTAX  INTEGER {
--                      normal(1),
--                      invert(2)
--                   }
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " AB-BIT "
--           ::= { emConfigControlEntry 6 }

        emConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2),
                    not-available(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { emConfigControlEntry 7 }

        emConfigControlTx-gain   OBJECT-TYPE
            SYNTAX  EMGain
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TX-GAIN "
            ::= { emConfigControlEntry 8 }

        emConfigControlRx-gain   OBJECT-TYPE
            SYNTAX  EMGain
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RX-GAIN "
            ::= { emConfigControlEntry 9 }

        emConfigControlHW-SW-Control   OBJECT-TYPE
            SYNTAX  INTEGER {
                    hw-control(1),
                    sw-control(2),
                    not-available(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M HW/SW Control Mode "
            ::= { emConfigControlEntry 10 }


--
-- Line Diagnostic Control Table
--

        emDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Diagnostic Control Table."
            ::= { em-card 3 }

        emDiagControlEntry  OBJECT-TYPE
            SYNTAX  EmDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of E&M diagnostic control table."
            INDEX { emDiagControlIndex }
            ::= { emDiagControlTable 1 }

            EmDiagControlEntry ::= SEQUENCE {
            emDiagControlIndex          LargeSlotIndex,
            emDiagControlTEST           INTEGER,
            emDiagControlE1             EMOffOn,
            emDiagControlE2             EMOffOn,
            emDiagControlE3             EMOffOn,
            emDiagControlE4             EMOffOn,
            emDiagControlE5             EMOffOn,
            emDiagControlE6             EMOffOn,
            emDiagControlE7             EMOffOn,
            emDiagControlE8             EMOffOn,
            emDiagControlM1             EMOffOn,
            emDiagControlM2             EMOffOn,
            emDiagControlM3             EMOffOn,
            emDiagControlM4             EMOffOn,
            emDiagControlM5             EMOffOn,
            emDiagControlM6             EMOffOn,
            emDiagControlM7             EMOffOn,
            emDiagControlM8             EMOffOn,
            emDiagControl-48V-Power     INTEGER,
            emUpLinkStatus              INTEGER,
            emTestButton                INTEGER
        }

        emDiagControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emDiagControlEntry 1 }

        emDiagControlTEST  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    start(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { emDiagControlEntry 2 }

        emDiagControlE1  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E1"
            ::= { emDiagControlEntry 3 }

        emDiagControlE2  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E2"
            ::= { emDiagControlEntry 4 }

        emDiagControlE3  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E3"
            ::= { emDiagControlEntry 5 }

        emDiagControlE4  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E4"
            ::= { emDiagControlEntry 6 }

        emDiagControlE5  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E5"
            ::= { emDiagControlEntry 7 }

        emDiagControlE6  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E6"
            ::= { emDiagControlEntry 8 }

        emDiagControlE7  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E7"
            ::= { emDiagControlEntry 9 }

        emDiagControlE8  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  E8"
            ::= { emDiagControlEntry 10 }

        emDiagControlM1  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M1"
            ::= { emDiagControlEntry 11 }

        emDiagControlM2  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M2"
            ::= { emDiagControlEntry 12 }

        emDiagControlM3  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M3"
            ::= { emDiagControlEntry 13 }

        emDiagControlM4  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M4"
            ::= { emDiagControlEntry 14 }

        emDiagControlM5  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M5"
            ::= { emDiagControlEntry 15 }

        emDiagControlM6  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M6"
            ::= { emDiagControlEntry 16 }

        emDiagControlM7  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M7"
            ::= { emDiagControlEntry 17 }

        emDiagControlM8  OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M  M8"
            ::= { emDiagControlEntry 18 }

        emDiagControl-48V-Power  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    failure(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "<V5.0: -48V Power OK/Failure
                >V5.0: M,SB Lead 48V status"
            ::= { emDiagControlEntry 19 }

        emUpLinkStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    failure(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "UpLink Status"
            ::= { emDiagControlEntry 20 }

        emTestButton  OBJECT-TYPE
            SYNTAX  INTEGER {
                    available(1),
                    unavailable(2),
                    old-version(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test button available"
            ::= { emDiagControlEntry 21 }


--
--  Command Control Table
--

        emCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { em-card 4 }

        emCommandControlEntry  OBJECT-TYPE
            SYNTAX  EmCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { emCommandControlIndex }
            ::= { emCommandControlTable 1 }

            EmCommandControlEntry ::= SEQUENCE {
            emCommandControlIndex       LargeSlotIndex,
            emCommandControlReset       INTEGER,
            emCommandControlLoadDefault INTEGER
        }

        emCommandControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emCommandControlEntry 1 }

        emCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default E&M CONF"
            ::= { emCommandControlEntry 2 }

        emCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: E&M Card Reset"
            ::= { emCommandControlEntry 3 }

--
--      EM All Port Control Table
--

        emAllPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M All Port Configuration Control Table"
            ::= { em-card 5 }

        emAllPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  EmAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&m All Port configuration control entry"
            INDEX { emAllPortConfigControlIndex }
            ::= { emAllPortConfigControlTable 1 }

            EmAllPortConfigControlEntry ::= SEQUENCE {
            emAllPortConfigControlIndex LargeSlotIndex,
            emAllPortConfigControlSide  INTEGER,
            emAllPortConfigControlLine  INTEGER,
            emAllPortConfigControlImpedance INTEGER,
            emAllPortConfigControlSignaling INTEGER,
            emAllPortConfigControlA-u-law   INTEGER,
            emAllPortConfigControlHW-SW-Control INTEGER,
            emAllPortConfigControlTrunk-Condition   INTEGER
        }

        emAllPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emAllPortConfigControlEntry 1 }

        emAllPortConfigControlSide   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M Side "
            ::= { emAllPortConfigControlEntry 2 }

        emAllPortConfigControlLine   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { emAllPortConfigControlEntry 3 }

        emAllPortConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { emAllPortConfigControlEntry 4 }

        emAllPortConfigControlSignaling   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { emAllPortConfigControlEntry 5 }

        emAllPortConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { emAllPortConfigControlEntry 7 }

        emAllPortConfigControlHW-SW-Control   OBJECT-TYPE
            SYNTAX  INTEGER {
                    hw-control(1),
                    sw-control(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M HW/SW Control Mode "
            ::= { emAllPortConfigControlEntry 8 }

        emAllPortConfigControlTrunk-Condition   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { emAllPortConfigControlEntry 9 }


--
--      E&M Per Port Config Control Table
--

        emPerPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Per Port Configuration Control Table"
            ::= { em-card 6 }

        emPerPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  EmPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Per Port Configuration control entry"
            INDEX { emPerPortConfigControlIndex ,
        emPerPortConfigControlPortIndex }
            ::= { emPerPortConfigControlTable 1 }

            EmPerPortConfigControlEntry ::= SEQUENCE {
            emPerPortConfigControlIndex LargeSlotIndex,
            emPerPortConfigControlPortIndex EightPortID,
--               emPerPortConfigControlPLAR
--                 INTEGER,
            emPerPortConfigControlTx-gain   DisplayString,
            emPerPortConfigControlRx-gain   DisplayString
        }

        emPerPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emPerPortConfigControlEntry 1 }

        emPerPortConfigControlPortIndex   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { emPerPortConfigControlEntry 2 }

--         emPerPortConfigControlPLAR   OBJECT-TYPE
--             SYNTAX INTEGER {
--                       off(1),
--                       on(2)
--                    }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                " Per port PLAR setting "
--             ::= { emPerPortConfigControlEntry 3 }

        emPerPortConfigControlTx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { emPerPortConfigControlEntry 4 }

        emPerPortConfigControlRx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { emPerPortConfigControlEntry 5 }


--
--      E&M All Port Signaling Config Control Table
--

        emALLPortSigConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M All Port Signaling Configuration Control Table"
            ::= { em-card 7 }

        emAllPortSigConfigControlEntry  OBJECT-TYPE
            SYNTAX  EmAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M all port signaling configuration control entry"
            INDEX { emAllPortSigConfigControlIndex ,
        emAllPortSigConfigControlItemIndex ,
        emAllPortSigConfigControlSigBitIndex }
            ::= { emALLPortSigConfigControlTable 1 }

            EmAllPortSigConfigControlEntry ::= SEQUENCE {
            emAllPortSigConfigControlIndex  LargeSlotIndex,
            emAllPortSigConfigControlItemIndex  INTEGER,
            emAllPortSigConfigControlSigBitIndex    INTEGER,
            emAllPortSigConfigControlSigBit         INTEGER
        }

        emAllPortSigConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emAllPortSigConfigControlEntry 1 }

        emAllPortSigConfigControlItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-on-hook(1),
                    tx-off-hook(2),
                    rx-relay-open(3),
                    rx-relay-close(4),
                    tx-ring-back(5),
                    rx-oos-alm(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "on-hook, off-hook, relay-open, relay-close"
            ::= { emAllPortSigConfigControlEntry 2 }

        emAllPortSigConfigControlSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { emAllPortSigConfigControlEntry 3 }

        emAllPortSigConfigControlSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { emAllPortSigConfigControlEntry 4 }

--
--      EM6 All Port Control Table
--

        em6AllPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6AllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M6 All Port Configuration Control Table"
            ::= { em-card 8 }

        em6AllPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  Em6AllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&m6 All Port configuration control entry"
            INDEX { em6AllPortConfigControlIndex }
            ::= { em6AllPortConfigControlTable 1 }

            Em6AllPortConfigControlEntry ::= SEQUENCE {
            em6AllPortConfigControlIndex LargeSlotIndex,
            em6AllPortConfigControlSide14  INTEGER,
            em6AllPortConfigControlSide58  INTEGER,
            em6AllPortConfigControlLine  INTEGER,
            em6AllPortConfigControlImpedance INTEGER,
            em6AllPortConfigControlSignaling INTEGER,
            em6AllPortConfigControlA-u-law   INTEGER,
            em6AllPortConfigControlHW-SW-Control INTEGER,
            em6AllPortConfigControlTrunk14   INTEGER,
            em6AllPortConfigControlTrunk58   INTEGER,
            em6AllPortConfigControlRingBackSW   INTEGER,
            em6AllPortConfigControlTestButton   INTEGER
        }

        em6AllPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6AllPortConfigControlEntry 1 }

        em6AllPortConfigControlSide14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M6 Side "
            ::= { em6AllPortConfigControlEntry 2 }

        em6AllPortConfigControlSide58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M6 Side "
            ::= { em6AllPortConfigControlEntry 3 }


        em6AllPortConfigControlLine   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { em6AllPortConfigControlEntry 4 }

        em6AllPortConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { em6AllPortConfigControlEntry 5 }

        em6AllPortConfigControlSignaling   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line "
            ::= { em6AllPortConfigControlEntry 6 }

        em6AllPortConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { em6AllPortConfigControlEntry 7 }

        em6AllPortConfigControlHW-SW-Control   OBJECT-TYPE
            SYNTAX  INTEGER {
                    hw-control(1),
                    sw-control(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M HW/SW Control Mode "
            ::= { em6AllPortConfigControlEntry 8 }

        em6AllPortConfigControlTrunk14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortConfigControlEntry 9 }

        em6AllPortConfigControlTrunk58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortConfigControlEntry 10 }

        em6AllPortConfigControlRingBackSW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    available(1),
                    unavailable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortConfigControlEntry 11 }

        em6AllPortConfigControlTestButton  OBJECT-TYPE
            SYNTAX  INTEGER {
                    available(1),
                    unavailable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortConfigControlEntry 12 }
--
--      E&M All Port Signaling Config Set Table
--

        em6ALLPortSigConfigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6AllPortSigConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M All Port Signaling Configuration Set Table"
            ::= { em-card 9 }

        em6AllPortSigConfigSetEntry  OBJECT-TYPE
            SYNTAX  Em6AllPortSigConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M all port signaling configuration control entry"
            INDEX { em6AllPortSigConfigSetIndex ,
        em6AllPortSigConfigSetItemIndex ,
        em6AllPortSigConfigSetSigBitIndex }
            ::= { em6ALLPortSigConfigSetTable 1 }

            Em6AllPortSigConfigSetEntry ::= SEQUENCE {
            em6AllPortSigConfigSetIndex  LargeSlotIndex,
            em6AllPortSigConfigSetItemIndex  INTEGER,
            em6AllPortSigConfigSetSigBitIndex    INTEGER,
            em6AllPortSigConfigSetSigBit         INTEGER
        }

        em6AllPortSigConfigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6AllPortSigConfigSetEntry 1 }

        em6AllPortSigConfigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-on-hook(1),
                    tx-off-hook(2),
                    rx-relay-open(3),
                    rx-relay-close(4),
                    tx-ring-back(5),
                    rx-oos-alm(6),
                    txRemoteLB(7),
                    rxVocalLB(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "on-hook, off-hook, relay-open, relay-close"
            ::= { em6AllPortSigConfigSetEntry 2 }

        em6AllPortSigConfigSetSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { em6AllPortSigConfigSetEntry 3 }

        em6AllPortSigConfigSetSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { em6AllPortSigConfigSetEntry 4 }


--
--      E&M Per Port Diag InfoTable
--

        em6DiagInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6DiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Diag Info Table"
            ::= { em-card 10 }

        em6DiagInfoEntry  OBJECT-TYPE
            SYNTAX  Em6DiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Diag Infoentry"
            INDEX { em6DiagInfoIndex ,
        em6DiagInfoPortIndex }
            ::= { em6DiagInfoTable 1 }

            Em6DiagInfoEntry ::= SEQUENCE {
            em6DiagInfoIndex              LargeSlotIndex,
            em6DiagInfoPortIndex        EightPortID,
            em6DiagInfoSide           INTEGER,
            em6DiagInfoType             INTEGER,
            em6DiagInfoElead            EMOffOn,
            em6DiagInfoMlead           EMOffOn,
            em6DiagInfoAIS               EMOffOn,
            em6DiagInfoOOS              EMOffOn,
            em6DiagInfoInputPW        INTEGER,
            em6DiagInfoEleadPW       INTEGER,
            em6DiagInfoPWStatus      INTEGER,
            em6DiagInfoTx               DisplayString,
            em6DiagInfoRx              DisplayString,
            em6DiagInfoAuLaw           INTEGER,
            em6DiagInfoImp           INTEGER,
            em6DiagInfoLine           INTEGER,
            em6DiagInfoTrunk        INTEGER,
            em6DiagInfoVocalLB      EMOffOn
        }

        em6DiagInfoIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6DiagInfoEntry 1 }

        em6DiagInfoPortIndex   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { em6DiagInfoEntry 2 }

        em6DiagInfoSide   OBJECT-TYPE
            SYNTAX  INTEGER {
                    side-a(1),
                    side-b(2),
                    error(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { em6DiagInfoEntry 3}

        em6DiagInfoType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-only(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " signaling type"
            ::= { em6DiagInfoEntry 4}

        em6DiagInfoElead   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E lead "
            ::= { em6DiagInfoEntry 5}

        em6DiagInfoMlead   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " M lead "
            ::= { em6DiagInfoEntry 6}

        em6DiagInfoAIS   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " AIS "
            ::= { em6DiagInfoEntry 7}

        em6DiagInfoOOS   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OOS "
            ::= { em6DiagInfoEntry 8}

        em6DiagInfoInputPW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    plusMinus48v(1),
                    plusMinus24v(2),
                    fail(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Input power module"
            ::= { em6DiagInfoEntry 9}

        em6DiagInfoEleadPW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    minus48v(1),
                    plus24v(2),
                    plus5v(3),
                    fail(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " e lead power "
            ::= { em6DiagInfoEntry 10}

        em6DiagInfoPWStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Input power status"
            ::= { em6DiagInfoEntry 11}


        em6DiagInfoTx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { em6DiagInfoEntry 12 }

        em6DiagInfoRx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { em6DiagInfoEntry 13}

        em6DiagInfoAuLaw      OBJECT-TYPE
            SYNTAX  INTEGER {
                    uLaw(1),
                    aLaw(2),
                    error(3),
                    noSupport(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " a u Law "
            ::= { em6DiagInfoEntry 14}

        em6DiagInfoImp      OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp900ohm(1),
                    imp600ohm(2),
                    error(3),
                    noSupport(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Impdance "
            ::= { em6DiagInfoEntry 15}

        em6DiagInfoLine      OBJECT-TYPE
            SYNTAX  INTEGER {
                    with2Wire(1),
                    with4Wire(2),
                    error(3),
                    noSupport(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Line "
            ::= { em6DiagInfoEntry 16}

        em6DiagInfoTrunk     OBJECT-TYPE
            SYNTAX  INTEGER {
                    offHook(1),
                    onHook(2),
                    na(3),
                    noSupport(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Trunk condition "
            ::= { em6DiagInfoEntry 17}

        em6DiagInfoVocalLB   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Vocal LB "
            ::= { em6DiagInfoEntry 18}



--
-- EM6 Line Diagnostic Control Table
--

        em6DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M6 Diagnostic Control Table."
            ::= { em-card 11 }

        em6DiagControlEntry  OBJECT-TYPE
            SYNTAX  Em6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of E&M diagnostic control table."
            INDEX { em6DiagControlSlot }
            ::= { em6DiagControlTable 1 }

            Em6DiagControlEntry ::= SEQUENCE {
            em6DiagControlSlot          LargeSlotIndex,
            em6DiagControlTest           INTEGER,
            em6DiagControlRemain           INTEGER

    }

        em6DiagControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6DiagControlEntry 1 }

        em6DiagControlTest  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    e-lead(2),
                    voice-loopback(3),
                    channel-swap(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { em6DiagControlEntry 2 }

        em6DiagControlRemain  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { em6DiagControlEntry 3 }

--
--      EM6 All Port Control Table for Phase 4
--

        em6AllPortP4CfgSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6AllPortP4CfgSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M6 All Port Configuration Control Table"
            ::= { em-card 12 }

        em6AllPortP4CfgSetEntry  OBJECT-TYPE
            SYNTAX  Em6AllPortP4CfgSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&m6 All Port configuration control entry"
            INDEX { em6AllPortP4CfgSetIndex }
            ::= { em6AllPortP4CfgSetTable 1 }

            Em6AllPortP4CfgSetEntry ::= SEQUENCE {
            em6AllPortP4CfgSetIndex LargeSlotIndex,
            em6AllPortP4CfgSetSide14  INTEGER,
            em6AllPortP4CfgSetSide58  INTEGER,
            em6AllPortP4CfgSetLine14  INTEGER,
            em6AllPortP4CfgSetLine58  INTEGER,
            em6AllPortP4CfgSetImp14 INTEGER,
            em6AllPortP4CfgSetImp58 INTEGER,
            em6AllPortP4CfgSetType14 INTEGER,
            em6AllPortP4CfgSetType58 INTEGER,
            em6AllPortP4CfgSetAuLaw   INTEGER,
--            em6AllPortP4CfgSetAuLaw58   INTEGER,
            em6AllPortP4CfgSetTrunk14   INTEGER,
            em6AllPortP4CfgSetTrunk58   INTEGER,
            em6AllPortP4CfgSetRingBackSW   INTEGER,
            em6AllPortP4CfgSetTestButton   INTEGER,
            em6AllPortP4CfgSetRemoteLBbit  INTEGER,
            em6AllPortP4CfgSetVocalLB  INTEGER
        }

        em6AllPortP4CfgSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6AllPortP4CfgSetEntry 1 }

        em6AllPortP4CfgSetSide14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M6 Side "
            ::= { em6AllPortP4CfgSetEntry 2 }

        em6AllPortP4CfgSetSide58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&M6 Side "
            ::= { em6AllPortP4CfgSetEntry 3 }


        em6AllPortP4CfgSetLine14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line L1~ L4"
            ::= { em6AllPortP4CfgSetEntry 4 }

        em6AllPortP4CfgSetLine58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Line L5~L8"
            ::= { em6AllPortP4CfgSetEntry 5 }

        em6AllPortP4CfgSetImp14  OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE L1~L4"
            ::= { em6AllPortP4CfgSetEntry 6 }

        em6AllPortP4CfgSetImp58  OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE L5~L8"
            ::= { em6AllPortP4CfgSetEntry 7 }

        em6AllPortP4CfgSetType14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Type L1~L4 "
            ::= { em6AllPortP4CfgSetEntry 8 }

        em6AllPortP4CfgSetType58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Type L5~L8 "
            ::= { em6AllPortP4CfgSetEntry 9 }

        em6AllPortP4CfgSetAuLaw   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { em6AllPortP4CfgSetEntry 10 }

--        em6AllPortP4CfgSetAuLaw58   OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    u-law(1),
--                    a-law(2)
--                }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                " A/u LAW L5~L8"
--            ::= { em6AllPortP4CfgSetEntry 11 }

        em6AllPortP4CfgSetTrunk14   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode L1~L4 "
            ::= { em6AllPortP4CfgSetEntry 12 }

        em6AllPortP4CfgSetTrunk58   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode L5~L8"
            ::= { em6AllPortP4CfgSetEntry 13 }

        em6AllPortP4CfgSetRingBackSW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortP4CfgSetEntry 14 }

        em6AllPortP4CfgSetTestButton  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { em6AllPortP4CfgSetEntry 15 }

        em6AllPortP4CfgSetRemoteLBbit  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Remote Loopback "
            ::= { em6AllPortP4CfgSetEntry 16 }

        em6AllPortP4CfgSetVocalLB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Loopback Signaling Switch"
            ::= { em6AllPortP4CfgSetEntry 17 }


--
-- EM6 Line Diagnostic Control Table  for Phase4
--

        em6P4DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Em6P4DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M6 Diagnostic Control Table."
            ::= { em-card 13 }

        em6P4DiagControlEntry  OBJECT-TYPE
            SYNTAX  Em6P4DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of E&M diagnostic control table."
            INDEX { em6P4DiagControlSlot }
            ::= { em6P4DiagControlTable 1 }

            Em6P4DiagControlEntry ::= SEQUENCE {
            em6P4DiagControlSlot          LargeSlotIndex,
            em6P4DiagControlTest           INTEGER,
            em6P4DiagControlRemain           INTEGER,
            em6P4DiagControlPeriod           INTEGER

    }

        em6P4DiagControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { em6P4DiagControlEntry 1 }

        em6P4DiagControlTest  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    e-lead(2),
                    voice-loopback(3),
                    channel-swap(4),
                    remote-loopback(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { em6P4DiagControlEntry 2 }

        em6P4DiagControlRemain  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { em6P4DiagControlEntry 3 }

        em6P4DiagControlPeriod  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sec10(1),
                    sec60(2),
                    sec240(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { em6P4DiagControlEntry 4 }

--
--      EMA Per Port Enable/Disable Control Table
--

        emaPortEnableTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmaPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EMA Per Port Enable Table"
            ::= { em-card 14 }

        emaPortEnableEntry  OBJECT-TYPE
            SYNTAX  EmaPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EMA Per Port Enable entry"
            INDEX { emaPortEnableIndex ,
        emaPortEnablePort }
            ::= { emaPortEnableTable 1 }

            EmaPortEnableEntry ::= SEQUENCE {
            emaPortEnableIndex      LargeSlotIndex,
            emaPortEnablePort       EightPortID,
            emaPortEnable           INTEGER
        }

        emaPortEnableIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emaPortEnableEntry 1 }

        emaPortEnablePort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { emaPortEnableEntry 2 }

        emaPortEnable   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " port enable/disable"
            ::= { emaPortEnableEntry 3 }

  --    EM Per Port Signaling Config Control Table


        emPortSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EM Per Port Signaling Configuration Control Table"
            ::= { em-card 15 }

        emPortSigSetEntry  OBJECT-TYPE
            SYNTAX  EmPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EM Per port signaling configuration control entry"
            INDEX { emPortSigSetIndex ,
        emPortSigSetPort ,
        emPortSigSetItemIndex }
            ::= { emPortSigSetTable 1 }

            EmPortSigSetEntry ::= SEQUENCE {
            emPortSigSetIndex LargeSlotIndex,
            emPortSigSetPort      EightPortID,
            emPortSigSetItemIndex INTEGER,
            emPortSigSetSigBit        DisplayString
        }

        emPortSigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emPortSigSetEntry 1 }

        emPortSigSetPort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-8"
            ::= { emPortSigSetEntry 2 }

        emPortSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                   tx-on-hook(1),
                    tx-off-hook(2),
                    rx-relay-open(3),
                    rx-relay-close(4),
                    tx-ring-back(5),
                    rx-oos-alm(6),
                    txRemoteLB(7),
                    rxVocalLB(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ringing, no-ring, batt-rev, pulse-on, tip-open, off-hook, oos-on, ring-gnd "
            ::= { emPortSigSetEntry 3 }

        emPortSigSetSigBit   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { emPortSigSetEntry 4 }

--
--  EM SetupMode Control Table
--

        emSetupModeSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Setup Mode control table."
            ::= { em-card 16 }

        emSetupModeSetEntry  OBJECT-TYPE
            SYNTAX  EmSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Setup Mode control table."
            INDEX { emSetupModeSetIndex }
            ::= { emSetupModeSetTable 1 }

            EmSetupModeSetEntry ::= SEQUENCE {
            emSetupModeSetIndex      LargeSlotIndex,
            emSetupModeSetSigMode      INTEGER
        }

        emSetupModeSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emSetupModeSetEntry 1 }

        emSetupModeSetSigMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    perCard(1),
                    perPort(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SigMode Mode"
            ::= { emSetupModeSetEntry 2 }

--
-- EMA Line Diagnostic Control Table
--

        emBertControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "EMA Bert Control Table."
            ::= { em-card 17 }

        emBertControlEntry  OBJECT-TYPE
            SYNTAX  EmBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of EMA Bert control table."
            INDEX { emBertControlSlot }
            ::= { emBertControlTable 1 }

        EmBertControlEntry ::= SEQUENCE {
            emBertControlSlot          LargeSlotIndex,
            emBertControlMode           INTEGER,
            emBertControlPort           INTEGER,
            emBertControlType           INTEGER,
--            emBertControlSpilt          INTEGER,
            emBertControlPattern        DisplayString,
            emBertControlPeriod         INTEGER,
            emBertControlStatus         INTEGER,
            emBertControlSync           INTEGER,
            emBertControlError          INTEGER,
            emBertControlTime           INTEGER,
            emBertControlES             INTEGER,
            emBertControlSES            INTEGER,
            emBertControlUS             INTEGER
       }

        emBertControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emBertControlEntry 1 }

        emBertControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    bert(2),
                    loopback(3),
                    reset(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Mode Select"
            ::= { emBertControlEntry 2 }

        emBertControlPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    p9(9),
                    p10(10),
                    p11(11),
                    p12(12)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { emBertControlEntry 3 }

        emBertControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    --off(1),
                    prbs2exp20of1(2),
                    prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5),
                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { emBertControlEntry 4 }

--        emBertControlSpilt  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    sendAIS(1),
--                    no(2)
--                }
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert Spilt Mode"
--            ::= { emBertControlEntry 5 }

        emBertControlPattern  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert User Pattern"
            ::= { emBertControlEntry 6 }

        emBertControlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { emBertControlEntry 7 }

        emBertControlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bert(2),
                    loopback(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { emBertControlEntry 8 }

        emBertControlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { emBertControlEntry 9 }

        emBertControlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { emBertControlEntry 10 }

        emBertControlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { emBertControlEntry 11 }

        emBertControlES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Error Second"
            ::= { emBertControlEntry 12 }

        emBertControlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert SES"
            ::= { emBertControlEntry 13 }

        emBertControlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Unsync time"
            ::= { emBertControlEntry 14 }                                    


--
-- EMA Self Test Control Table
--

        emSelfTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "EM SelfTest Control Table."
            ::= { em-card 18 }

        emSelfTestControlEntry  OBJECT-TYPE
            SYNTAX  EmSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of EM SelfTest control table."
            INDEX { emSelfTestSlot }
            ::= { emSelfTestControlTable 1 }

        EmSelfTestControlEntry ::= SEQUENCE {
            emSelfTestSlot          LargeSlotIndex,
            emSelfTestP1           INTEGER,
            emSelfTestP2           INTEGER,
            emSelfTestP3           INTEGER,
            emSelfTestP4           INTEGER,
            emSelfTestP5           INTEGER,
            emSelfTestP6           INTEGER,
            emSelfTestP7           INTEGER,
            emSelfTestP8           INTEGER,
            emSelfTestConfirm           INTEGER,
            emSelfTestStatus           INTEGER,
            emSelfTestResult           DisplayString,
            emSelfTestTestType1           INTEGER,
            emSelfTestTestRes1           DisplayString,
            emSelfTestTestType2           INTEGER,
            emSelfTestTestRes2           DisplayString,
            emSelfTestTestType3           INTEGER,
            emSelfTestTestRes3           DisplayString
       }

        emSelfTestSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { emSelfTestControlEntry 1 }

        emSelfTestP1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port Select"
            ::= { emSelfTestControlEntry 2 }

        emSelfTestP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port Select"
            ::= { emSelfTestControlEntry 3 }

        emSelfTestP3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port Select"
            ::= { emSelfTestControlEntry 4 }

        emSelfTestP4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port Select"
            ::= { emSelfTestControlEntry 5 }

        emSelfTestP5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Port Select"
            ::= { emSelfTestControlEntry 6 }

        emSelfTestP6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Port Select"
            ::= { emSelfTestControlEntry 7 }

        emSelfTestP7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Port Select"
            ::= { emSelfTestControlEntry 8 }

        emSelfTestP8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Port Select"
            ::= { emSelfTestControlEntry 9 }

        emSelfTestConfirm           OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Port Select"
            ::= { emSelfTestControlEntry 10 }

        emSelfTestStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    testing(2),
                    finish(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Port Select"
            ::= { emSelfTestControlEntry 11 }

        emSelfTestResult           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Result"
            ::= { emSelfTestControlEntry 12 }

        emSelfTestTestType1           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Port Select"
            ::= { emSelfTestControlEntry 13 }

        emSelfTestTestRes1           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Result"
            ::= { emSelfTestControlEntry 14 }

        emSelfTestTestType2           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Port Select"
            ::= { emSelfTestControlEntry 15 }

        emSelfTestTestRes2           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Result"
            ::= { emSelfTestControlEntry 16 }

        emSelfTestTestType3           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Port Select"
            ::= { emSelfTestControlEntry 17 }

        emSelfTestTestRes3           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Result"
            ::= { emSelfTestControlEntry 18 }


--
--      EMB Config Control Table
--

        embConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&MB Port Configuration Control Table"
            ::= { em-card 19 }

        embConfigControlEntry  OBJECT-TYPE
            SYNTAX  EmbConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&mB Port configuration control entry"
            INDEX { embConfigControlSlot ,embConfigControlPort}
            ::= { embConfigControlTable 1 }

            EmbConfigControlEntry ::= SEQUENCE {
            embConfigControlSlot LargeSlotIndex,
            embConfigControlPort  EightPortID,
            embConfigControlSide  INTEGER,
            embConfigControlTxGain  DisplayString,
            embConfigControlRxGain  DisplayString,
            embConfigControlLine  INTEGER,
            embConfigControlImp  INTEGER,
            embConfigControlAuLaw  INTEGER,
            embConfigControlSigType   INTEGER,
            embConfigControlTrunk   INTEGER
        }

        embConfigControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embConfigControlEntry 1 }

        embConfigControlPort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&MB Port "
            ::= { embConfigControlEntry 2 }

        embConfigControlSide   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    error(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&MB Side "
            ::= { embConfigControlEntry 3 }

        embConfigControlTxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { embConfigControlEntry 4 }

        embConfigControlRxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { embConfigControlEntry 5 }

        embConfigControlLine   OBJECT-TYPE
            SYNTAX  INTEGER {
                    with-2-WIRE(1),
                    with-4-WIRE(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Line "
            ::= { embConfigControlEntry 6 }

        embConfigControlImp   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2),
                    followP5(97),
                    followP1(98)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { embConfigControlEntry 7 }

        embConfigControlAuLaw  OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2),
                    followP5(97),
                    followP1(98)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { embConfigControlEntry 8 }

        embConfigControlSigType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ONLY(1),
                    type-1(2),
                    type-2(3),
                    type-3(4),
                    type-4(5),
                    type-5(6),
                    error(7),
                    followP5(97),
                    followP1(98)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling Type "
            ::= { embConfigControlEntry 9 }

        embConfigControlTrunk   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    on-hook(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&M Trunk Condition Control Mode "
            ::= { embConfigControlEntry 10 }

--
--      EMB Signaling Control Table
--

        embSignalingControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbSignalingControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&MB Port Signaling Control Table"
            ::= { em-card 20 }

        embSignalingControlEntry  OBJECT-TYPE
            SYNTAX  EmbSignalingControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&mB Port Signaling control entry"
            INDEX { embSigControlSlot ,embSigControlPort}
            ::= { embSignalingControlTable 1 }

            EmbSignalingControlEntry ::= SEQUENCE {
            embSigControlSlot LargeSlotIndex,
            embSigControlPort  EightPortID,
            embSigCtrlRingBackEnable  INTEGER,
            embSigControlOnHook  DisplayString,
            embSigControlOffHook  DisplayString,
            embSigControlRingBack  DisplayString,
            embSigControlRelayOpen  DisplayString,
            embSigControlRelayClose  DisplayString,
            embSigControlOosAlarm  DisplayString
        }

        embSigControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embSignalingControlEntry 1 }

        embSigControlPort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E&MB Port "
            ::= { embSignalingControlEntry 2 }

        embSigCtrlRingBackEnable   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling Ring Back enable"
            ::= { embSignalingControlEntry 3 }

        embSigControlOnHook   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling ON HOOK "
            ::= { embSignalingControlEntry 6 }

        embSigControlOffHook   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling OFF HOOK "
            ::= { embSignalingControlEntry 7 }

        embSigControlRingBack   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling RingBack "
            ::= { embSignalingControlEntry 8 }
                                
        embSigControlRelayOpen   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling Relay Open "
            ::= { embSignalingControlEntry 10 }

        embSigControlRelayClose   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling Relay Close "
            ::= { embSignalingControlEntry 11 }

        embSigControlOosAlarm   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " E&MB Signaling OOS Alarm"
            ::= { embSignalingControlEntry 12 }                                  

--
--      E&MB Diag InfoTable
--

        embDiagInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&MB Diag Info Table"
            ::= { em-card 21 }

        embDiagInfoEntry  OBJECT-TYPE
            SYNTAX  EmbDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&MB Diag Infoentry"
            INDEX { embDiagInfoSlot ,
        embDiagInfoPort }
            ::= { embDiagInfoTable 1 }

            EmbDiagInfoEntry ::= SEQUENCE {
            embDiagInfoSlot              LargeSlotIndex,
            embDiagInfoPort        EightPortID,
            embDiagInfoElead            EMOffOn,
            embDiagInfoMlead           EMOffOn,
      --      embDiagInfoVocalLB           EMOffOn,
            embDiagInfoAisAlm               EMOffOn,
            embDiagInfoOosAlm              EMOffOn,
            embDiagInfoTsiAlm              EMOffOn,
            embDiagInfoTx               DisplayString,
            embDiagInfoRx              DisplayString,
            embDiagInfoInputPW        INTEGER,
            embDiagInfoEleadPW       INTEGER,
            embDiagInfoPWStatus      INTEGER            
        }

        embDiagInfoSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embDiagInfoEntry 1 }

        embDiagInfoPort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-8"
            ::= { embDiagInfoEntry 2 }

        embDiagInfoElead   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E lead "
            ::= { embDiagInfoEntry 3}

        embDiagInfoMlead   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " M lead "
            ::= { embDiagInfoEntry 4}

--        embDiagInfoVocalLB   OBJECT-TYPE
--           SYNTAX  EMOffOn
--           ACCESS  read-only
--           STATUS  mandatory
--           DESCRIPTION
--               " Vocal LB "
--           ::= { embDiagInfoEntry 5}            

        embDiagInfoAisAlm   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " AIS "
            ::= { embDiagInfoEntry 6}

        embDiagInfoOosAlm   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OOS "
            ::= { embDiagInfoEntry 7}

        embDiagInfoTsiAlm   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OOS "
            ::= { embDiagInfoEntry 8}            

        embDiagInfoTx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { embDiagInfoEntry 9 }

        embDiagInfoRx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { embDiagInfoEntry 10}

        embDiagInfoInputPW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    plusMinus48v(1),
                    plusMinus24v(2),
                    fail(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Input power module"
            ::= { embDiagInfoEntry 11}

        embDiagInfoEleadPW   OBJECT-TYPE
            SYNTAX  INTEGER {
                    minus48v(1),
                    plus24v(2),
                    plus5v(3),
                    fail(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " e lead power "
            ::= { embDiagInfoEntry 12}

        embDiagInfoPWStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Input power status"
            ::= { embDiagInfoEntry 13} 

--
-- EMB Diagnostic Control Table
--

        embDiagCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&MB Diagnostic Control Table."
            ::= { em-card 22 }

        embDiagCtrlEntry  OBJECT-TYPE
            SYNTAX  EmbDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of E&M diagnostic control table."
            INDEX { embDiagCtrlSlot }
            ::= { embDiagCtrlTable 1 }

            EmbDiagCtrlEntry ::= SEQUENCE {
            embDiagCtrlSlot          LargeSlotIndex,
            embDiagCtrlTestType           INTEGER,
            embDiagCtrlPort           INTEGER,
            embDiagCtrlPeriod           INTEGER,
            embDiagCtrlTxSig           DisplayString,
            embDiagCtrlStatus           INTEGER,
            embDiagCtrlRemain           INTEGER

    }

        embDiagCtrlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embDiagCtrlEntry 1 }

        embDiagCtrlTestType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    e-lead(2),
                    voice-loopback(3),
                    channel-swap(4),
                    signalingTx(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { embDiagCtrlEntry 2 }

        embDiagCtrlPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    all(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Select Port"
            ::= { embDiagCtrlEntry 3 }

        embDiagCtrlPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set test time"
            ::= { embDiagCtrlEntry 4 }


        embDiagCtrlTxSig   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Tx Bit"
            ::= { embDiagCtrlEntry 5 }

        embDiagCtrlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    e-lead(2),
                    voice-loopback(3),
                    channel-swap(4),
                    signalingTx(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { embDiagCtrlEntry 11 }

        embDiagCtrlRemain  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(4294967295)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { embDiagCtrlEntry 12 }

--
-- EMB Bert Control Table
--

        embBertControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "EMA Bert Control Table."
            ::= { em-card 23 }

        embBertControlEntry  OBJECT-TYPE
            SYNTAX  EmbBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of EMA Bert control table."
            INDEX { embBertControlSlot }
            ::= { embBertControlTable 1 }

        EmbBertControlEntry ::= SEQUENCE {
            embBertControlSlot          LargeSlotIndex,
            embBertControlMode           INTEGER,
            embBertControlPort           INTEGER,
            embBertControlType           INTEGER,
--            embBertControlSpilt          INTEGER,
            embBertControlPattern        DisplayString,
            embBertControlPeriod         INTEGER,
            embBertControlStatus         INTEGER,
            embBertControlSync           INTEGER,
            embBertControlError          INTEGER,
            embBertControlTime           INTEGER,
            embBertControlES             INTEGER,
            embBertControlSES            INTEGER,
            embBertControlUS             INTEGER
       }

        embBertControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embBertControlEntry 1 }

        embBertControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    bert(2),
                    loopback(3),
                    reset(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Mode Select"
            ::= { embBertControlEntry 2 }

        embBertControlPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    p9(9),
                    p10(10),
                    p11(11),
                    p12(12)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { embBertControlEntry 3 }

        embBertControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    --off(1),
                    prbs2exp20of1(2),
                    prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5),
                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { embBertControlEntry 4 }

--        embBertControlSpilt  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    sendAIS(1),
--                    no(2)
--                }
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert Spilt Mode"
--            ::= { embBertControlEntry 5 }

        embBertControlPattern  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert User Pattern"
            ::= { embBertControlEntry 6 }

        embBertControlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { embBertControlEntry 7 }

        embBertControlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bert(2),
                    loopback(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { embBertControlEntry 8 }

        embBertControlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { embBertControlEntry 9 }

        embBertControlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { embBertControlEntry 10 }

        embBertControlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { embBertControlEntry 11 }

        embBertControlES  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Second"
            ::= { embBertControlEntry 12 }

        embBertControlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert SES"
            ::= { embBertControlEntry 13 }

        embBertControlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Unsync time"
            ::= { embBertControlEntry 14 }  

--
-- EMB Self Test Control Table
--

        embSelfTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "EM SelfTest Control Table."
            ::= { em-card 24 }

        embSelfTestControlEntry  OBJECT-TYPE
            SYNTAX  EmbSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of EM SelfTest control table."
            INDEX { embSelfTestSlot }
            ::= { embSelfTestControlTable 1 }

        EmbSelfTestControlEntry ::= SEQUENCE {
            embSelfTestSlot          LargeSlotIndex,
            embSelfTestP1           INTEGER,
            embSelfTestP2           INTEGER,
            embSelfTestP3           INTEGER,
            embSelfTestP4           INTEGER,
            embSelfTestP5           INTEGER,
            embSelfTestP6           INTEGER,
            embSelfTestP7           INTEGER,
            embSelfTestP8           INTEGER,
            embSelfTestConfirm           INTEGER,
            embSelfTestStatus           INTEGER,
            embSelfTestResult           DisplayString,
            embSelfTestTestType1           INTEGER,
            embSelfTestTestRes1           DisplayString,
            embSelfTestTestType2           INTEGER,
            embSelfTestTestRes2           DisplayString,
            embSelfTestTestType3           INTEGER,
            embSelfTestTestRes3           DisplayString
       }

        embSelfTestSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embSelfTestControlEntry 1 }

        embSelfTestP1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { embSelfTestControlEntry 2 }

        embSelfTestP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { embSelfTestControlEntry 3 }

        embSelfTestP3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { embSelfTestControlEntry 4 }

        embSelfTestP4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { embSelfTestControlEntry 5 }

        embSelfTestP5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { embSelfTestControlEntry 6 }

        embSelfTestP6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { embSelfTestControlEntry 7 }

        embSelfTestP7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { embSelfTestControlEntry 8 }

        embSelfTestP8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { embSelfTestControlEntry 9 }

        embSelfTestConfirm           OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { embSelfTestControlEntry 10 }

        embSelfTestStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    testing(2),
                    finish(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { embSelfTestControlEntry 11 }

        embSelfTestResult           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { embSelfTestControlEntry 12 }

        embSelfTestTestType1           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { embSelfTestControlEntry 13 }

        embSelfTestTestRes1           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { embSelfTestControlEntry 14 }

        embSelfTestTestType2           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { embSelfTestControlEntry 15 }

        embSelfTestTestRes2           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { embSelfTestControlEntry 16 }

        embSelfTestTestType3           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    relayTest(2),
                    nw1034(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { embSelfTestControlEntry 17 }

        embSelfTestTestRes3           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { embSelfTestControlEntry 18 }
            
--
--      EMB Per Port Enable/Disable Control Table
--

        embPortEnableTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EMB Per Port Enable Table"
            ::= { em-card 25 }

        embPortEnableEntry  OBJECT-TYPE
            SYNTAX  EmbPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "EMB Per Port Enable entry"
            INDEX { embPortEnableIndex ,
        embPortEnablePort }
            ::= { embPortEnableTable 1 }

            EmbPortEnableEntry ::= SEQUENCE {
            embPortEnableIndex      LargeSlotIndex,
            embPortEnablePort       EightPortID,
            embPortEnable           INTEGER
        }

        embPortEnableIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embPortEnableEntry 1 }

        embPortEnablePort   OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { embPortEnableEntry 2 }

        embPortEnable   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " port enable/disable"
            ::= { embPortEnableEntry 3 }

--
--  EMB Command Control Table
--

        embCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EmbCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { em-card 26 }

        embCommandControlEntry  OBJECT-TYPE
            SYNTAX  EmbCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { embCommandControlIndex }
            ::= { embCommandControlTable 1 }

            EmbCommandControlEntry ::= SEQUENCE {
            embCommandControlIndex       LargeSlotIndex,
            embCommandControlReset       INTEGER,
            embCommandControlLoadDefault INTEGER
        }

        embCommandControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { embCommandControlEntry 1 }

        embCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default E&M CONF"
            ::= { embCommandControlEntry 2 }

        embCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: E&M Card Reset"
            ::= { embCommandControlEntry 3 }

        emTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 8EM"
            ::= { em-card 100 }


--======================================================================--
--======================================================================--
--  fxs-card MIB
--======================================================================--
-- FXS Card

--    fxsAllPortConfigControlTable        OBJECT IDENTIFIER ::= { fxs-card 1 }
--    fxsAllPortSigConfigControlTable     OBJECT IDENTIFIER ::= { fxs-card 2 }
--    fxsPerPortConfigControlTable        OBJECT IDENTIFIER ::= { fxs-card 3 }
--    fxsPortStatusTable                  OBJECT IDENTIFIER ::= { fxs-card 4 }
--    fxsDiagTestControlTable             OBJECT IDENTIFIER ::= { fxs-card 5 }
--    fxsCommandControlTable              OBJECT IDENTIFIER ::= { fxs-card 6 }
--    fxsPerPortEnableTable               OBJECT IDENTIFIER ::= { fxs-card 7 }
--======================================================================--

--
--      FXS All Port Config Control Table
--

        fxsAllPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS All Port Configuration Control Table"
            ::= { fxs-card 1 }

        fxsAllPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxsAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS all port configuration control entry"
            INDEX { fxsAllPortConfigControlIndex }
            ::= { fxsAllPortConfigControlTable 1 }

            FxsAllPortConfigControlEntry ::= SEQUENCE {
            fxsAllPortConfigControlIndex    LargeSlotIndex,
            fxsAllPortConfigControlA-u-law  INTEGER,
            fxsAllPortConfigControlImpedance    INTEGER,
--             fxsAllPortConfigControlTx-gain
--               DisplayString,
--             fxsAllPortConfigControlRx-gain
--               DisplayString,
            fxsAllPortConfigControlRing-cadence INTEGER,
            fxsAllPortConfigControlRing-Freq    INTEGER,
            fxsAllPortConfigControlMetering-pulse   INTEGER,
            fxsAllPortConfigControlMetering-freq    INTEGER,
            fxsAllPortConfigControlMetering-level   INTEGER
        }

        fxsAllPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsAllPortConfigControlEntry 1 }

        fxsAllPortConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { fxsAllPortConfigControlEntry 2 }

        fxsAllPortConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { fxsAllPortConfigControlEntry 3 }

--       fxsAllPortConfigControlTx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " TX-GAIN "
--           ::= { fxsAllPortConfigControlEntry 4 }

--       fxsAllPortConfigControlRx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " RX-GAIN "
--           ::= { fxsAllPortConfigControlEntry 5 }

        fxsAllPortConfigControlRing-cadence   OBJECT-TYPE
            SYNTAX  INTEGER {
                    cadence-1-on-2-off(1),
                    cadence-2-on-4-off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ring Cadence "
            ::= { fxsAllPortConfigControlEntry 6 }

        fxsAllPortConfigControlRing-Freq   OBJECT-TYPE
            SYNTAX  INTEGER {
                    freq-20-hz(1),
                    freq-25-hz(2),
                    freq-16-7-hz(3),
                    freq-50-hz(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ring Frequency "
            ::= { fxsAllPortConfigControlEntry 7 }

        fxsAllPortConfigControlMetering-pulse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Pulse "
            ::= { fxsAllPortConfigControlEntry 8 }

        fxsAllPortConfigControlMetering-freq   OBJECT-TYPE
            SYNTAX  INTEGER {
                    freq-16k-hz(1),
                    freq-12k-hz(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Frequency "
            ::= { fxsAllPortConfigControlEntry 9 }

        fxsAllPortConfigControlMetering-level   OBJECT-TYPE
            SYNTAX  INTEGER {
                    level-2-4-vrms(1),
                    level-1-vrms(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Level "
            ::= { fxsAllPortConfigControlEntry 10 }



--
--      FXS All Port Signaling Config Control Table
--

        fxsAllPortSigConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS All Port Signaling Configuration Control Table"
            ::= { fxs-card 2 }

        fxsAllPortSigConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxsAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS all port signaling configuration control entry"
            INDEX { fxsAllPortSigConfigControlIndex ,
        fxsAllPortSigConfigControlItemIndex ,
        fxsAllPortSigConfigControlSigBitIndex }
            ::= { fxsAllPortSigConfigControlTable 1 }

            FxsAllPortSigConfigControlEntry ::= SEQUENCE {
            fxsAllPortSigConfigControlIndex LargeSlotIndex,
            fxsAllPortSigConfigControlItemIndex INTEGER,
            fxsAllPortSigConfigControlSigBitIndex   INTEGER,
            fxsAllPortSigConfigControlSigBit        INTEGER
        }

        fxsAllPortSigConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsAllPortSigConfigControlEntry 1 }

        fxsAllPortSigConfigControlItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-on-hook(1),
                    tx-off-hook(2),
                    tx-ring-gnd(3),
                    plar-tx-off-hook(4),
                    rx-ring-on(5),
                    rx-batt-rev-and-pulse-on(6),
                    rx-oos-alarm(7),
                    rx-tip-open(8),
                    rx-plar-rx-ring-on(9),
                    tx-plar-on-hook(10)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "on-hook, off-hook, ring-gnd, ring-on, batt-rev-pulse-on, oos-on, tip-open"
            ::= { fxsAllPortSigConfigControlEntry 2 }

        fxsAllPortSigConfigControlSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { fxsAllPortSigConfigControlEntry 3 }

        fxsAllPortSigConfigControlSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { fxsAllPortSigConfigControlEntry 4 }



--
--      FXS Per Port Config Control Table
--

        fxsPerPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per Port Configuration Control Table"
            ::= { fxs-card 3 }

        fxsPerPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxsPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per Port Configuration control entry"
            INDEX { fxsPerPortConfigControlIndex ,
        fxsPerPortConfigControlPortIndex }
            ::= { fxsPerPortConfigControlTable 1 }

            FxsPerPortConfigControlEntry ::= SEQUENCE {
            fxsPerPortConfigControlIndex    LargeSlotIndex,
            fxsPerPortConfigControlPortIndex    TwelvePortID,
            fxsPerPortConfigControlPLAR         INTEGER,
            fxsPerPortConfigControlTx-gain      DisplayString,
            fxsPerPortConfigControlRx-gain      DisplayString
        }

        fxsPerPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsPerPortConfigControlEntry 1 }

        fxsPerPortConfigControlPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxsPerPortConfigControlEntry 2 }

        fxsPerPortConfigControlPLAR   OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2),
                    a60(3),
                    a30(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port PLAR setting "
            ::= { fxsPerPortConfigControlEntry 3 }

        fxsPerPortConfigControlTx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { fxsPerPortConfigControlEntry 4 }

        fxsPerPortConfigControlRx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { fxsPerPortConfigControlEntry 5 }


--
--      FXS Port Status Table
--

        fxsPortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Port Status Table"
            ::= { fxs-card 4 }

        fxsPortStatusEntry  OBJECT-TYPE
            SYNTAX  FxsPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Port Status entry"
            INDEX { fxsPortStatusIndex ,
        fxsPortStatusItemIndex ,
        fxsPortStatusPortIndex }
            ::= { fxsPortStatusTable 1 }

            FxsPortStatusEntry ::= SEQUENCE {
            fxsPortStatusIndex          LargeSlotIndex,
            fxsPortStatusItemIndex      INTEGER,
            fxsPortStatusPortIndex      TwelvePortID,
            fxsPortStatusStatus         INTEGER
        }

        fxsPortStatusIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsPortStatusEntry 1 }

        fxsPortStatusItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    metering-pulse(2),
                    tip-open(3),
                    ring-gnd(4),
                    plar-on(5),
                    ringing(6),
                    alarm-on(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "off-hook, ring-on, metering-pulse, tip-open, ring-gnd, plar-on, alarm-on"
            ::= { fxsPortStatusEntry 2 }

        fxsPortStatusPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " port index 1-12 "
            ::= { fxsPortStatusEntry 3 }

        fxsPortStatusStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Status "
            ::= { fxsPortStatusEntry 4 }


--
--      FXS Line Diagnostic Control Table
--

        fxsDiagTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Diagnostic Control Table."
            ::= { fxs-card 5 }

        fxsDiagTestControlEntry  OBJECT-TYPE
            SYNTAX  FxsDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of FXS diagnostic control table."
            INDEX { fxsDiagTestControlIndex }
            ::= { fxsDiagTestControlTable 1 }

            FxsDiagTestControlEntry ::= SEQUENCE {
            fxsDiagTestControlIndex     LargeSlotIndex,
            fxsDiagTestControlType      INTEGER,
            fxsDiagTestControlRemainTime    INTEGER,
            fxsDiagTestControlTone      INTEGER,
            fxsDiagTestControlToneResult DisplayString
        }

        fxsDiagTestControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsDiagTestControlEntry 1 }

        fxsDiagTestControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    ring-test(2),
--                      metering-pulse-test(3),
                    battery-reverse(4),
-- fxs dtmf
                    tone-test(5),
                    loopback(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Test Button"
            ::= { fxsDiagTestControlEntry 2 }

        fxsDiagTestControlRemainTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remain time (sec)"
            ::= { fxsDiagTestControlEntry 3 }

        fxsDiagTestControlTone  OBJECT-TYPE
            SYNTAX  INTEGER {
                    n1(2),
                    n2(3),
                    n3(4),
                    n4(5),
                    n5(6),
                    n6(7),
                    n7(8),
                    n8(9),
                    n9(10),
                    n0(11),
                    asterisk(12),
                    pound(13),
                    a(14),
                    b(15),
                    c(16),
                    d(1)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Test Tone"
            ::= { fxsDiagTestControlEntry 4 }

        fxsDiagTestControlToneResult  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS Test Tone Result"
            ::= { fxsDiagTestControlEntry 5 }

--
--  FXS Command Control Table
--

        fxsCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { fxs-card 6 }

        fxsCommandControlEntry  OBJECT-TYPE
            SYNTAX  FxsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { fxsCommandControlIndex }
            ::= { fxsCommandControlTable 1 }

            FxsCommandControlEntry ::= SEQUENCE {
            fxsCommandControlIndex      LargeSlotIndex,
            fxsCommandControlReset      INTEGER,
            fxsCommandControlLoadDefault    INTEGER
        }

        fxsCommandControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsCommandControlEntry 1 }

        fxsCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default FXS CONF"
            ::= { fxsCommandControlEntry 2 }

        fxsCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: FXS Card Reset"
            ::= { fxsCommandControlEntry 3 }

--
--      FXS Per Port Enable/Disable Control Table
--

        fxsPerPortEnableTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsPerPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per Port Enable Table"
            ::= { fxs-card 7 }

        fxsPerPortEnableEntry  OBJECT-TYPE
            SYNTAX  FxsPerPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per Port Enable entry"
            INDEX { fxsPerPortEnableIndex ,
        fxsPerPortEnablePortIndex }
            ::= { fxsPerPortEnableTable 1 }

            FxsPerPortEnableEntry ::= SEQUENCE {
            fxsPerPortEnableIndex      LargeSlotIndex,
            fxsPerPortEnablePortIndex  TwelvePortID,
            fxsPerPortEnable           INTEGER
        }

        fxsPerPortEnableIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsPerPortEnableEntry 1 }

        fxsPerPortEnablePortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxsPerPortEnableEntry 2 }

        fxsPerPortEnable   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS port enable/disable"
            ::= { fxsPerPortEnableEntry 3 }

--
--  FXS SetupMode Control Table
--

        fxsSetupModeSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Setup Mode control table."
            ::= { fxs-card 8 }

        fxsSetupModeSetEntry  OBJECT-TYPE
            SYNTAX  FxsSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Setup Mode control table."
            INDEX { fxsSetupModeSetIndex }
            ::= { fxsSetupModeSetTable 1 }

            FxsSetupModeSetEntry ::= SEQUENCE {
            fxsSetupModeSetIndex      LargeSlotIndex,
            fxsSetupModeSetSigMode      INTEGER
        }

        fxsSetupModeSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsSetupModeSetEntry 1 }

        fxsSetupModeSetSigMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    perCard(1),
                    perPort(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SigMode Mode"
            ::= { fxsSetupModeSetEntry 2 }

 --    FXS Per Port Signaling Config Control Table


        fxsPortSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per Port Signaling Configuration Control Table"
            ::= { fxs-card 9}

        fxsPortSigSetEntry  OBJECT-TYPE
            SYNTAX  FxsPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXS Per port signaling configuration control entry"
            INDEX { fxsPortSigSetIndex ,
                    fxsPortSigSetPort ,
                    fxsPortSigSetItemIndex }
            ::= { fxsPortSigSetTable 1 }

            FxsPortSigSetEntry ::= SEQUENCE {
            fxsPortSigSetIndex LargeSlotIndex,
            fxsPortSigSetPort      TwelvePortID,
            fxsPortSigSetItemIndex INTEGER,
            fxsPortSigSetSigBit        DisplayString
        }

        fxsPortSigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsPortSigSetEntry 1 }

        fxsPortSigSetPort   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxsPortSigSetEntry 2 }

        fxsPortSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    txOnHook(1),
                    txOffHook(2),
                    txRingGnd(3),
                    plarTxOnHook(4),
                    plarTxOffHook(5),
                    rxRingOn(6),
                    rxBattRevAndPulseOn(7),
                    rxOosAlarm(8),
                    rxTipOpen(9),
                    rxPlarRxRingOn(10)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FXS signaling setup "
            ::= { fxsPortSigSetEntry 3 }

        fxsPortSigSetSigBit   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { fxsPortSigSetEntry 4 }

--
-- FXS Line Diagnostic Control Table
--

        fxsBertControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "FXS Bert Control Table."
            ::= { fxs-card 10 }

        fxsBertControlEntry  OBJECT-TYPE
            SYNTAX  FxsBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of FXS Bert control table."
            INDEX { fxsBertControlSlot }
            ::= { fxsBertControlTable 1 }

        FxsBertControlEntry ::= SEQUENCE {
            fxsBertControlSlot          LargeSlotIndex,
            fxsBertControlMode           INTEGER,
            fxsBertControlPort           INTEGER,
            fxsBertControlType           INTEGER,
--            fxsBertControlSpilt          INTEGER,
            fxsBertControlPattern        DisplayString,
            fxsBertControlPeriod         INTEGER,
            fxsBertControlStatus         INTEGER,
            fxsBertControlSync           INTEGER,
            fxsBertControlError          INTEGER,
            fxsBertControlTime           INTEGER,
            fxsBertControlES             INTEGER,
            fxsBertControlSES            INTEGER,
            fxsBertControlUS             INTEGER
       }

        fxsBertControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsBertControlEntry 1 }

        fxsBertControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    bert(2),
                    loopback(3),
                    reset(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Mode Select"
            ::= { fxsBertControlEntry 2 }

        fxsBertControlPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    p9(9),
                    p10(10),
                    p11(11),
                    p12(12)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { fxsBertControlEntry 3 }

        fxsBertControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    --off(1),
                    prbs2exp20of1(2),
                    prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5),
                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { fxsBertControlEntry 4 }

--        fxsBertControlSpilt  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    sendAIS(1),
--                    no(2)
--                }
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert Spilt Mode"
--            ::= { fxsBertControlEntry 5 }

        fxsBertControlPattern  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert User Pattern"
            ::= { fxsBertControlEntry 6 }

        fxsBertControlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { fxsBertControlEntry 7 }

        fxsBertControlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bert(2),
                    loopback(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { fxsBertControlEntry 8 }

        fxsBertControlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= {fxsBertControlEntry 9 }

        fxsBertControlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { fxsBertControlEntry 10 }

        fxsBertControlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { fxsBertControlEntry 11 }

        fxsBertControlES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Error Second"
            ::= { fxsBertControlEntry 12 }

        fxsBertControlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert SES"
            ::= { fxsBertControlEntry 13 }

        fxsBertControlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Unsync Second"
            ::= { fxsBertControlEntry 14 }                                    


--
-- FXS Self Test Control Table
--

        fxsSelfTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxsSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "FXS SelfTest Control Table."
            ::= { fxs-card 11 }

        fxsSelfTestControlEntry  OBJECT-TYPE
            SYNTAX  FxsSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of FXS SelfTest control table."
            INDEX { fxsSelfTestSlot }
            ::= { fxsSelfTestControlTable 1 }

        FxsSelfTestControlEntry ::= SEQUENCE {
            fxsSelfTestSlot          LargeSlotIndex,
            fxsSelfTestP1           INTEGER,
            fxsSelfTestP2           INTEGER,
            fxsSelfTestP3           INTEGER,
            fxsSelfTestP4           INTEGER,
            fxsSelfTestP5           INTEGER,
            fxsSelfTestP6           INTEGER,
            fxsSelfTestP7           INTEGER,
            fxsSelfTestP8           INTEGER,
            fxsSelfTestP9           INTEGER,
            fxsSelfTestP10           INTEGER,
            fxsSelfTestP11           INTEGER,
            fxsSelfTestP12           INTEGER,
            fxsSelfTestConfirm           INTEGER,
            fxsSelfTestStatus           INTEGER,
            fxsSelfTestResult           DisplayString,
            fxsSelfTestTestType1           INTEGER,
            fxsSelfTestTestRes1           DisplayString,
            fxsSelfTestTestType2           INTEGER,
            fxsSelfTestTestRes2           DisplayString,
            fxsSelfTestTestType3           INTEGER,
            fxsSelfTestTestRes3           DisplayString
       }

        fxsSelfTestSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxsSelfTestControlEntry 1 }

        fxsSelfTestP1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 2 }

        fxsSelfTestP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 3 }

        fxsSelfTestP3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 4 }

        fxsSelfTestP4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 5 }

        fxsSelfTestP5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 6 }

        fxsSelfTestP6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 7 }

        fxsSelfTestP7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 8 }

        fxsSelfTestP8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 9 }

        fxsSelfTestP9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 10 }

        fxsSelfTestP10  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxsSelfTestControlEntry 11 }

        fxsSelfTestP11  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 12 }


        fxsSelfTestP12  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 13 }

        fxsSelfTestConfirm           OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxsSelfTestControlEntry 14 }

        fxsSelfTestStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    testing(2),
                    finish(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxsSelfTestControlEntry 15 }

        fxsSelfTestResult           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxsSelfTestControlEntry 16 }

        fxsSelfTestTestType1           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    dcfeedTest(2),
                    ringingTest(3),
                    audioTest(4)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxsSelfTestControlEntry 17 }

        fxsSelfTestTestRes1           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxsSelfTestControlEntry 18 }

        fxsSelfTestTestType2           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    dcfeedTest(2),
                    ringingTest(3),
                    audioTest(4)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxsSelfTestControlEntry 19 }

        fxsSelfTestTestRes2           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxsSelfTestControlEntry 20 }

        fxsSelfTestTestType3           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    dcfeedTest(2),
                    ringingTest(3),
                    audioTest(4)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxsSelfTestControlEntry 21 }

        fxsSelfTestTestRes3           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxsSelfTestControlEntry 22 }
            
        fxsTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 12FXS"
            ::= { fxs-card 100 }




--======================================================================--
--======================================================================--
--  rtr-card MIB
--======================================================================--
--======================================================================--

--
--    RTR Control Table
--    the IP address table

--    The IP address table contains this entity's IP addressing information.

        rtrNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "RTR NI Configuration Control Table"
            ::= { rtr-card 1 }

        rtrNiControlEntry  OBJECT-TYPE
            SYNTAX  RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "RTR NI configuration control entry"
            INDEX { rtrPortNiIndex ,
        rtrNetindex }
            ::= { rtrNiControlTable 1 }

            RtrNiControlEntry ::= SEQUENCE {
            rtrPortNiIndex              SmallSlotIndex,
            rtrNetindex                 INTEGER ,
            rtrIPAddr                   IpAddress,
            rtrSubnetMask               IpAddress,
            rtrFrame                    INTEGER,
            rtrRIP1                     INTEGER,
            rtrRIP2                     INTEGER,
            rtrMode                     INTEGER
        }

        rtrPortNiIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrNiControlEntry 1 }

        rtrNetindex OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    lan2(2),
                    wan1(3),
                    wan2(4),
                    wan3(5),
                    wan4(6),
                    wan5(7),
                    wan6(8),
                    wan7(9),
                    wan8(10),
                    wan9(11),
                    wan10(12),
                    wan11(13),
                    wan12(14),
                    wan13(15),
                    wan14(16),
                    wan15(17),
                    wan16(18),
                    wan17(19),
                    wan18(20),
                    wan19(21),
                    wan20(22),
                    wan21(23),
                    wan22(24),
                    wan23(25),
                    wan24(26),
                    wan25(27),
                    wan26(28),
                    wan27(29),
                    wan28(30),
                    wan29(31),
                    wan30(32),
                    wan31(33),
                    wan32(34)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " RTR Ni index"
            ::= { rtrNiControlEntry 2}

        rtrIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR IP Address"
            ::= { rtrNiControlEntry 3}

        rtrSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR  net mask"
            ::= { rtrNiControlEntry 4}

        rtrFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    ethernet(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Layer2 frame"
            ::= { rtrNiControlEntry 5}

        rtrRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP1"
            ::= { rtrNiControlEntry 6}

        rtrRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP2"
            ::= { rtrNiControlEntry 7}

        rtrMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR mode"
            ::= { rtrNiControlEntry 8}

--
-- Route Table
--
        rtrRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "RTR Route Control Table."
            ::= { rtr-card 2 }

        rtrRouteControlEntry  OBJECT-TYPE
            SYNTAX  RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "RTR Route  control entry."
            INDEX { rtrPortRouteIndex ,
        rtrEntry }
            ::= { rtrRouteControlTable 1 }

            RtrRouteControlEntry ::= SEQUENCE {
            rtrPortRouteIndex           SmallSlotIndex,
            rtrEntry                    INTEGER (1..16),
            rtrNetAddr                  IpAddress,
            rtrNetMask                  IpAddress,
            rtrGatewayAddr              IpAddress,
            rtrNIAddr                   IpAddress,
            rtrMetric                   INTEGER
        }

        rtrPortRouteIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrRouteControlEntry 1 }

        rtrEntry OBJECT-TYPE
            SYNTAX  INTEGER  (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " RTR routeentry"
            ::= { rtrRouteControlEntry 2}

        rtrNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net Address"
            ::= { rtrRouteControlEntry 3}

        rtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net mask"
            ::= { rtrRouteControlEntry 4}

        rtrGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route gateway Address"
            ::= { rtrRouteControlEntry 5}

        rtrNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route NI Address"
            ::= { rtrRouteControlEntry 6}


        rtrMetric OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Route metric"
            ::= { rtrRouteControlEntry 7}

--
--  RTR Frac Map Table
--

        rtrFracCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrFracCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Assignment Table."
            ::= { rtr-card 3 }

        rtrFracCtrlEntry  OBJECT-TYPE
            SYNTAX  RtrFracCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Index."
            INDEX { rtrPortFracIndex ,
        rtrTSIndex }
            ::= { rtrFracCtrlTable 1 }

            RtrFracCtrlEntry ::= SEQUENCE  {
            rtrPortFracIndex            SmallSlotIndex,
            rtrTSIndex                  INTEGER (1..32),
            rtrInterface                INTEGER
        }

        rtrPortFracIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrFracCtrlEntry 1 }

        rtrTSIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { rtrFracCtrlEntry 2 }


        rtrInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    wan2(3),
                    wan3(4),
                    wan4(5),
                    wan5(6),
                    wan6(7),
                    wan7(8),
                    wan8(9),
                    wan9(10),
                    wan10(11),
                    wan11(12),
                    wan12(13),
                    wan13(14),
                    wan14(15),
                    wan15(16),
                    wan16(17),
                    wan17(18),
                    wan18(19),
                    wan19(20),
                    wan20(21),
                    wan21(22),
                    wan22(23),
                    wan23(24),
                    wan24(25),
                    wan25(26),
                    wan26(27),
                    wan27(28),
                    wan28(29),
                    wan29(30),
                    wan30(31),
                    wan31(32),
                    wan32(33)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frac ni if index."
            ::= { rtrFracCtrlEntry 3 }

--
--  Command Control Table
--

        rtrCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { rtr-card 4}

        rtrCommandControlEntry  OBJECT-TYPE
            SYNTAX  RtrCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { rtrCommandControlIndex }
            ::= { rtrCommandControlTable 1 }

            RtrCommandControlEntry ::= SEQUENCE {
            rtrCommandControlIndex      SmallSlotIndex,
            rtrPortReset                INTEGER,
            rtrPortLoadDefault          INTEGER
        }

        rtrCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrCommandControlEntry 1 }

        rtrPortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset RTR Port"
            ::= { rtrCommandControlEntry 2 }

        rtrPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default RTR Port"
            ::= { rtrCommandControlEntry 3 }


--
--  SYSTEM Information Table
--
        rtrSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { rtr-card 5}

        rtrSystemInformationEntry  OBJECT-TYPE
            SYNTAX  RtrSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { rtrSystemInfoIndex }
            ::= { rtrSystemInformationTable 1 }

            RtrSystemInformationEntry ::= SEQUENCE {
            rtrSystemInfoIndex          SmallSlotIndex,
            rtrPROMVersion              DisplayString
        }

        rtrSystemInfoIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrSystemInformationEntry 1 }

        rtrPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " RTR EPROM Version"
            ::= { rtrSystemInformationEntry 2 }

--
--  Ethernet CRC Setup Table
--

        rtrCRCSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrCRCSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Ethernet CRC Setup table."
            ::= { rtr-card 6}

        rtrCRCSetupEntry  OBJECT-TYPE
            SYNTAX  RtrCRCSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet CRC Setup table."
            INDEX { rtrPortIndex }
            ::= { rtrCRCSetupTable 1 }

            RtrCRCSetupEntry ::= SEQUENCE {
            rtrPortIndex                SmallSlotIndex,
            rtrCRCSetup                 INTEGER
        }

        rtrPortIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrCRCSetupEntry 1 }

        rtrCRCSetup OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR CRC Status and Setup"
            ::= { rtrCRCSetupEntry 2}


--
--  RTR Alarm Setup Table
--

        rtrAlarmSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RtrAlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Setup Table "
            ::= { rtr-card 7 }

        rtrAlarmSetupEntry  OBJECT-TYPE
            SYNTAX  RtrAlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { rtrAlmSlotIndex }
            ::= { rtrAlarmSetupTable 1 }

            RtrAlarmSetupEntry ::= SEQUENCE {
            rtrAlmSlotIndex             SmallSlotIndex,
            rtrLan1LinkAlarm            AlarmSeverity,
            rtrLan2LinkAlarm            AlarmSeverity
        }

        rtrAlmSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { rtrAlarmSetupEntry 1 }

        rtrLan1LinkAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan 1 Alarm"
            ::= { rtrAlarmSetupEntry 2 }

        rtrLan2LinkAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan 2 Alarm"
            ::= { rtrAlarmSetupEntry 3 }


        rtrTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of RTR"
            ::= { rtr-card 100 }


--======================================================================--
--======================================================================--
--  atm-card MIB
--======================================================================--
-- ATM/FR
--
-- afr-system           OBJECT IDENTIFIER ::= { afr-card   1  }
--    afr-sys-command              OBJECT IDENTIFIER ::= { afr-system   1  }
--       afrCommandControlTable       OBJECT-TYPE ::= { afr-sys-command 1 }
--       afrSystemInformationTable    OBJECT-TYPE ::= { afr-sys-command 2 }
--
--    afr-e1-alm-control           OBJECT IDENTIFIER ::= { afr-system   2  }
--       afrE1AlarmControlTable       OBJECT-TYPE ::= { afr-e1-alm-control 1 }
--       afrE1ThresholdControlTable   OBJECT-TYPE ::= { afr-e1-alm-control 2 }
--       afrE1AlarmQueueTable         OBJECT-TYPE ::= { afr-e1-alm-control 3 }
--       afrE1AlarmHistoryTable       OBJECT-TYPE ::= { afr-e1-alm-control 4 }
--
--    afr-t1-alm-control           OBJECT IDENTIFIER ::= { afr-system   3  }
--       afrT1AlarmControlTable       OBJECT-TYPE ::= { afr-t1-alm-control 1 }
--       afrT1ThresholdControlTable   OBJECT-TYPE ::= { afr-t1-alm-control 2 }
--       afrT1AlarmQueueTable         OBJECT-TYPE ::= { afr-t1-alm-control 3 }
--       afrT1AlarmHistoryTable       OBJECT-TYPE ::= { afr-t1-alm-control 4 }
--
--    afr-if                       OBJECT IDENTIFIER ::= { afr-card   2  }
--       afrFrChMapTable              OBJECT-TYPE ::= { afr-if 1 }
--       afrFrMgmtTable               OBJECT-TYPE ::= { afr-if 2 }
--       afrVcTable                   OBJECT-TYPE ::= { afr-if 3 }
--       afrFrStatTable               OBJECT-TYPE ::= { afr-if 4 }
--       afrAtmStatTable              OBJECT-TYPE ::= { afr-if 5 }
--       afrFrStatusTable             OBJECT-TYPE ::= { afr-if 6 }
--       afrAtmStatusTable            OBJECT-TYPE ::= { afr-if 7 }
--       afrCsuChannelMapTable        OBJECT-TYPE ::= { afr-if 8 }
--       afrDLCITable                 OBJECT-TYPE ::= { afr-if 9 }
--
--    afr-e1-if                    OBJECT IDENTIFIER ::= { afr-card   3  }
--       afrE1LineControlTable        OBJECT-TYPE ::= { afr-e1-if 1 }
--       afrE1UserCurrentPerfTable    OBJECT-TYPE ::= { afr-e1-if 2 }
--       afrE1UserIntervalPerfTable   OBJECT-TYPE ::= { afr-e1-if 3 }
--       afrE1UserTotalPerfTable      OBJECT-TYPE ::= { afr-e1-if 4 }
--       afrE1UserSevenDaysPerfTable  OBJECT-TYPE ::= { afr-e1-if 5 }
--       afrE1LineCurrentPerfTable    OBJECT-TYPE ::= { afr-e1-if 10 }
--       afrE1LineIntervalPerfTable   OBJECT-TYPE ::= { afr-e1-if 11 }
--       afrE1LineTotalPerfTable      OBJECT-TYPE ::= { afr-e1-if 12 }
--       afrE1LineSevenDaysPerfTable  OBJECT-TYPE ::= { afr-e1-if 13 }
--       afrE1LineAvailabilityTable   OBJECT-TYPE ::= { afr-e1-if 14 }
--       afrE1LineDiagControlTable    OBJECT-TYPE ::= { afr-e1-if 15 }
--
--    afr-t1-if                    OBJECT IDENTIFIER ::= { afr-card   4  }
--       afrT1LineControlTable        OBJECT-TYPE ::= { afr-t1-if 1 }
--       afrT1UserCurrentPerfTable    OBJECT-TYPE ::= { afr-t1-if 2 }
--       afrT1UserIntervalPerfTable   OBJECT-TYPE ::= { afr-t1-if 3 }
--       afrT1UserTotalPerfTable      OBJECT-TYPE ::= { afr-t1-if 4 }
--       afrT1LineCurrentPerfTable    OBJECT-TYPE ::= { afr-t1-if 8 }
--       afrT1LineIntervalPerfTable   OBJECT-TYPE ::= { afr-t1-if 9 }
--       afrT1LineTotalPerfTable      OBJECT-TYPE ::= { afr-t1-if 10 }
--       afrT1LineAvailabilityTable   OBJECT-TYPE ::= { afr-t1-if 11 }
--       afrT1LineDiagControlTable    OBJECT-TYPE ::= { afr-t1-if 12 }
--======================================================================--

--
--  ATM Command Control Table
--

    afr-system          OBJECT IDENTIFIER ::= { afr-card   1  }
    afr-sys-command     OBJECT IDENTIFIER ::= { afr-system   1  }
    afr-e1-alm-control  OBJECT IDENTIFIER ::= { afr-system   2  }
    afr-t1-alm-control  OBJECT IDENTIFIER ::= { afr-system   3  }
    afr-if              OBJECT IDENTIFIER ::= { afr-card   2  }
    afr-e1-if           OBJECT IDENTIFIER ::= { afr-card   3  }
    afr-t1-if           OBJECT IDENTIFIER ::= { afr-card   4  }


        afrCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { afr-sys-command 1 }

        afrCommandControlEntry  OBJECT-TYPE
            SYNTAX  AfrCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { afrCommandControlIndex }
            ::= { afrCommandControlTable 1 }

            AfrCommandControlEntry ::= SEQUENCE {
            afrCommandControlIndex      SmallSlotIndex,
            afrAlarmQueueReset          INTEGER,
            afrUserPerfReset            INTEGER,
            afrAlarmHistoryReset        INTEGER,
            afrAtmStatReset             INTEGER,
            afrFrStatReset              INTEGER,
            afrPortReset                INTEGER,
            afrPortLoadDefault          INTEGER
        }

        afrCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrCommandControlEntry 1 }

        afrAlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { afrCommandControlEntry 2 }

        afrUserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { afrCommandControlEntry 3 }

        afrAlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { afrCommandControlEntry 4 }

        afrAtmStatReset    OBJECT-TYPE
            SYNTAX  INTEGER  (0..128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset ATM Statistic History
                yyy for pvc, 0 for all"

            ::= { afrCommandControlEntry 5 }

        afrFrStatReset    OBJECT-TYPE
            SYNTAX  INTEGER  (0..31128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset FRAMERELAY Statistic History
                xxyyy, xx for channel, yyy for pvc, 0 for all"
            ::= { afrCommandControlEntry 6 }

        afrPortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Port"
            ::= { afrCommandControlEntry 7 }

        afrPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-Default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default "
            ::= { afrCommandControlEntry 8 }


--
--  ATM SYSTEM Information Table
--

        afrSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { afr-sys-command 2 }

        afrSystemInformationEntry  OBJECT-TYPE
            SYNTAX  AfrSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { afrSystemInfoIndex }
            ::= { afrSystemInformationTable 1 }

            AfrSystemInformationEntry ::= SEQUENCE {
            afrSystemInfoIndex          SmallSlotIndex,
            afrPROMVersion              DisplayString
        }

        afrSystemInfoIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrSystemInformationEntry 1 }

        afrPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ATM PROM Version"
            ::= { afrSystemInformationEntry 2 }

--
--  ATM E1 Alarm Control Table
--

        afrE1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-e1-alm-control 1 }

        afrE1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  AfrE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the alarm control table."
            INDEX { afrE1AlarmControlIndex }
            ::= { afrE1AlarmControlTable 1 }

            AfrE1AlarmControlEntry ::= SEQUENCE {
            afrE1AlarmControlIndex      SmallSlotIndex,
            afrE1RAI-Line               AlarmSeverity,
            afrE1AIS-Line               AlarmSeverity,
            afrE1LOS-Line               AlarmSeverity,
            afrE1LOF-Line               AlarmSeverity,
            afrE1BPV-Line               AlarmSeverity,
            afrE1ESS-Line               AlarmSeverity,
            afrE1UAS-Line               AlarmSeverity,
            afrE1CSS-Line               AlarmSeverity,
            afrE1ATM-LOS                AlarmSeverity,
            afrE1ATM-AIS                AlarmSeverity,
            afrE1ATM-RDI                AlarmSeverity,
            afrE1ATM-LOC                AlarmSeverity,
            afrE1FR-LKD                 AlarmSeverity
        }

        afrE1AlarmControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1AlarmControlEntry 1 }

        afrE1RAI-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { afrE1AlarmControlEntry 2 }

        afrE1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { afrE1AlarmControlEntry 3 }

        afrE1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { afrE1AlarmControlEntry 4 }

        afrE1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { afrE1AlarmControlEntry 5 }

        afrE1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { afrE1AlarmControlEntry 6 }

        afrE1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { afrE1AlarmControlEntry 7 }

        afrE1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { afrE1AlarmControlEntry 8 }

        afrE1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { afrE1AlarmControlEntry 9 }

        afrE1ATM-LOS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM Loss Of Sync(delination)
                This alarm is only available when ATM protocol is
                active"
            ::= { afrE1AlarmControlEntry 10 }

        afrE1ATM-AIS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM AIS State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrE1AlarmControlEntry 11 }

        afrE1ATM-RDI  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM RDI State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrE1AlarmControlEntry 12 }

        afrE1ATM-LOC  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM LOC State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrE1AlarmControlEntry 13 }

        afrE1FR-LKD  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frame Relay Link Down"
            ::= { afrE1AlarmControlEntry 14 }


--
--  Threshold Control Table
--

        afrE1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-e1-alm-control 2 }

        afrE1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  AfrE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { afrE1ThresholdControlIndex }
            ::= { afrE1ThresholdControlTable 1 }

            AfrE1ThresholdControlEntry ::= SEQUENCE {
            afrE1ThresholdControlIndex  SmallSlotIndex,
            afrE1ThresholdBPV-Line      INTEGER,
            afrE1ThresholdESS-Line      INTEGER,
            afrE1ThresholdUAS-Line      INTEGER,
            afrE1ThresholdCSS-Line      INTEGER
        }

        afrE1ThresholdControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1ThresholdControlEntry 1 }

        afrE1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line "
            ::= { afrE1ThresholdControlEntry 2 }

        afrE1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { afrE1ThresholdControlEntry 3 }

        afrE1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { afrE1ThresholdControlEntry 4 }

        afrE1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { afrE1ThresholdControlEntry 5 }


--
--  Alarm Queue Table
--

        afrE1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { afr-e1-alm-control 3 }

        afrE1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  AfrE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { afrE1PortAlarmQIndex ,
        afrE1AlarmQueueIndex }
            ::= { afrE1AlarmQueueTable 1 }

            AfrE1AlarmQueueEntry ::= SEQUENCE {
            afrE1PortAlarmQIndex        SmallSlotIndex,
            afrE1AlarmQueueIndex        INTEGER (1..40),
            afrE1AlarmQueueString       DisplayString (SIZE(0..255))
        }

        afrE1PortAlarmQIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1AlarmQueueEntry 1 }

        afrE1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { afrE1AlarmQueueEntry 2 }

        afrE1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { afrE1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        afrE1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { afr-e1-alm-control 4 }

        afrE1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  AfrE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { afrE1PortAlarmHIndex ,
        afrE1AlarmHistoryIndex }
            ::= { afrE1AlarmHistoryTable 1 }

            AfrE1AlarmHistoryEntry ::= SEQUENCE {
            afrE1PortAlarmHIndex        SmallSlotIndex,
            afrE1AlarmHistoryIndex      INTEGER,
            afrE1Threshold              INTEGER,
            afrE1CurrentState           INTEGER,
            afrE1CurrentCount           INTEGER,
            afrE1Alarm                  AlarmSeverity
        }

        afrE1PortAlarmHIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1AlarmHistoryEntry 1 }

        afrE1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    atm-los(9),
                    atm-ais(10),
                    atm-rdi(11),
                    atm-loc(12),
                    fr-lkd(13)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index
                atm-los, atm-ais, atm-rdi, and atm-loc are
                only available when the ATM is selected"
            ::= { afrE1AlarmHistoryEntry 2 }

        afrE1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { afrE1AlarmHistoryEntry 3 }

        afrE1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { afrE1AlarmHistoryEntry 4 }

        afrE1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { afrE1AlarmHistoryEntry 5 }

        afrE1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { afrE1AlarmHistoryEntry 6 }




--
--  ATM T1 Alarm Control Table
--

        afrT1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-t1-alm-control 1 }

        afrT1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  AfrT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the alarm control table."
            INDEX { afrT1AlarmControlIndex }
            ::= { afrT1AlarmControlTable 1 }

            AfrT1AlarmControlEntry ::= SEQUENCE {
            afrT1AlarmControlIndex      SmallSlotIndex,
            afrT1YEL-Line               AlarmSeverity,
            afrT1AIS-Line               AlarmSeverity,
            afrT1LOS-Line               AlarmSeverity,
            afrT1LOF-Line               AlarmSeverity,
            afrT1BPV-Line               AlarmSeverity,
            afrT1ESS-Line               AlarmSeverity,
            afrT1UAS-Line               AlarmSeverity,
            afrT1CSS-Line               AlarmSeverity,
            afrT1atm-los                AlarmSeverity,
            afrT1atm-ais                AlarmSeverity,
            afrT1atm-rdi                AlarmSeverity,
            afrT1atm-loc                AlarmSeverity,
            afrT1fr-lkd                 AlarmSeverity
        }

        afrT1AlarmControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1AlarmControlEntry 1 }

        afrT1YEL-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { afrT1AlarmControlEntry 2 }

        afrT1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { afrT1AlarmControlEntry 3 }

        afrT1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { afrT1AlarmControlEntry 4 }

        afrT1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { afrT1AlarmControlEntry 5 }

        afrT1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { afrT1AlarmControlEntry 6 }

        afrT1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { afrT1AlarmControlEntry 7 }

        afrT1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { afrT1AlarmControlEntry 8 }

        afrT1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { afrT1AlarmControlEntry 9 }

        afrT1atm-los  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM Loss Of Sync(delination)
                This alarm is only available when ATM protocol is
                active"
            ::= { afrT1AlarmControlEntry 10 }

        afrT1atm-ais  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM AIS State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrT1AlarmControlEntry 11 }

        afrT1atm-rdi  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM RDI State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrT1AlarmControlEntry 12 }

        afrT1atm-loc  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM LOC State
                This alarm is only available when ATM protocol is
                active"
            ::= { afrT1AlarmControlEntry 13 }

        afrT1fr-lkd  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frame Relay Link Down"
            ::= { afrT1AlarmControlEntry 14 }


--
--  ATM T1 Threshold Control Table
--

        afrT1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-t1-alm-control 2 }

        afrT1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  AfrT1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { afrT1ThresholdControlIndex }
            ::= { afrT1ThresholdControlTable 1 }

            AfrT1ThresholdControlEntry ::= SEQUENCE {
            afrT1ThresholdControlIndex  SmallSlotIndex,
            afrT1ThresholdBPV-Line      INTEGER,
            afrT1ThresholdESS-Line      INTEGER,
            afrT1ThresholdUAS-Line      INTEGER,
            afrT1ThresholdCSS-Line      INTEGER
        }

        afrT1ThresholdControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1ThresholdControlEntry 1 }

        afrT1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line "
            ::= { afrT1ThresholdControlEntry 2 }

        afrT1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { afrT1ThresholdControlEntry 3 }

        afrT1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { afrT1ThresholdControlEntry 4 }

        afrT1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { afrT1ThresholdControlEntry 5 }


--
--  ATM T1 Alarm Queue Table
--

        afrT1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { afr-t1-alm-control 3 }

        afrT1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  AfrT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { afrT1PortAlarmQIndex ,
        afrT1AlarmQueueIndex }
            ::= { afrT1AlarmQueueTable 1 }

            AfrT1AlarmQueueEntry ::= SEQUENCE {
            afrT1PortAlarmQIndex        SmallSlotIndex,
            afrT1AlarmQueueIndex        INTEGER (1..40),
            afrT1AlarmQueueString       DisplayString (SIZE(0..255))
        }

        afrT1PortAlarmQIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1AlarmQueueEntry 1 }

        afrT1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { afrT1AlarmQueueEntry 2 }

        afrT1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { afrT1AlarmQueueEntry 3 }

--
--  ATM T1 Alarm History Table
--

        afrT1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { afr-t1-alm-control 4 }

        afrT1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  AfrT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { afrT1PortAlarmHIndex ,
        afrT1AlarmHistoryIndex }
            ::= { afrT1AlarmHistoryTable 1 }

            AfrT1AlarmHistoryEntry ::= SEQUENCE {
            afrT1PortAlarmHIndex        SmallSlotIndex,
            afrT1AlarmHistoryIndex      INTEGER,
            afrT1Threshold              INTEGER,
            afrT1CurrentState           INTEGER,
            afrT1CurrentCount           INTEGER,
            afrT1Alarm                  AlarmSeverity
        }

        afrT1PortAlarmHIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1AlarmHistoryEntry 1 }

        afrT1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    atm-los(9),
                    atm-ais(10),
                    atm-rdi(11),
                    atm-loc(12),
                    fr-lkd(13)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index
                atm-los, atm-ais, atm-rdi, and atm-loc are
                only available when the ATM is selected"
            ::= { afrT1AlarmHistoryEntry 2 }

        afrT1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { afrT1AlarmHistoryEntry 3 }

        afrT1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { afrT1AlarmHistoryEntry 4 }

        afrT1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { afrT1AlarmHistoryEntry 5 }

        afrT1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { afrT1AlarmHistoryEntry 6 }

--
--  ATM Frme Relay channel Map Table
--

        afrFrChMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrFrChMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Assignment Table."
            ::= { afr-if 1 }

        afrFrChMapEntry  OBJECT-TYPE
            SYNTAX  AfrFrChMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Index."
            INDEX { afrchmapIndex ,
        afrTimeSlotIndex }
            ::= { afrFrChMapTable 1 }

            AfrFrChMapEntry ::= SEQUENCE  {
            afrchmapIndex               SmallSlotIndex,
            afrTimeSlotIndex            INTEGER,
            afrMapToFR                  INTEGER
        }

        afrchmapIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrFrChMapEntry 1 }

        afrTimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { afrFrChMapEntry 2 }


        afrMapToFR  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR index."
            ::= { afrFrChMapEntry 3 }


--
--  ATM Fr Mgmt Table
--

        afrFrMgmtTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrFrMgmtEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR management Table."
            ::= { afr-if 2 }

        afrFrMgmtEntry  OBJECT-TYPE
            SYNTAX  AfrFrMgmtEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR management Index."
            INDEX { afrFrMgmtIndex ,
        afrFrIndex }
            ::= { afrFrMgmtTable 1 }

            AfrFrMgmtEntry ::= SEQUENCE  {
            afrFrMgmtIndex              SmallSlotIndex,
            afrFrIndex                  INTEGER,
            frActive                    INTEGER,
            frProtocol                  INTEGER,
            frDirection                 INTEGER,
            frT391                      INTEGER,
            frT392                      INTEGER,
            frN391                      INTEGER,
            frN392                      INTEGER,
            frN393                      INTEGER
        }

        afrFrMgmtIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrFrMgmtEntry 1 }

        afrFrIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ch1(1),
                    ch2(2),
                    ch3(3),
                    ch4(4),
                    ch5(5),
                    ch6(6),
                    ch7(7),
                    ch8(8),
                    ch9(9),
                    ch10(10),
                    ch11(11),
                    ch12(12),
                    ch13(13),
                    ch14(14),
                    ch15(15),
                    ch16(16),
                    ch17(17),
                    ch18(18),
                    ch19(19),
                    ch20(20),
                    ch21(21),
                    ch22(22),
                    ch23(23),
                    ch24(24),
                    ch25(25),
                    ch26(26),
                    ch27(27),
                    ch28(28),
                    ch29(29),
                    ch30(30),
                    ch31(31),
                    ch-line(33)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CH1~CH31: logical FR index.
                When Frame Relay is active on T1/E1 port, CH-LINE
                identifies the frame relay channel on the T1/E1 port."
            ::= { afrFrMgmtEntry 2 }


        frActive  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When afrFrIndex is 33, this field is read only"
            ::= { afrFrMgmtEntry 3 }

        frProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fr-ansi(1),
                    fr-itu(3),
                    hdlc(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " FR Protocol"
            ::= { afrFrMgmtEntry 4 }

        frDirection  OBJECT-TYPE
            SYNTAX  INTEGER {
                    network(1),
                    user(2),
                    bidirection(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Direction"
            ::= { afrFrMgmtEntry 5 }

        frT391  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR T391"
            ::= { afrFrMgmtEntry 6 }

        frT392  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR T392"
            ::= { afrFrMgmtEntry 7 }

        frN391  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR N391"
            ::= { afrFrMgmtEntry 8 }

        frN392  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR N392"
            ::= { afrFrMgmtEntry 9 }

        frN393  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR N393"
            ::= { afrFrMgmtEntry 10 }


--
--  ATM VC Table
--

        afrVcTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrVcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FrameRelay-to-ATM virtual connection table
                This table is only available when ATM is active"
            ::= { afr-if 3 }

        afrVcEntry  OBJECT-TYPE
            SYNTAX  AfrVcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VC management Index."
            INDEX { afrVcTabIndex ,
        afrVcVcIndex }
            ::= { afrVcTable 1 }

            AfrVcEntry ::= SEQUENCE  {
            afrVcTabIndex               SmallSlotIndex,
            afrVcVcIndex                INTEGER,
            vcChannel                   INTEGER,
            vcDLCI                      INTEGER,
            vcVPI                       INTEGER,
            vcVCI                       INTEGER,
            vcBR                        INTEGER,
            vcALBR                      INTEGER,
            vcInterworking              INTEGER,
            vcTranslation               INTEGER,
            vcDECLP                     INTEGER
        }

        afrVcTabIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrVcEntry 1 }

        afrVcVcIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VC index."
            ::= { afrVcEntry 2 }

        vcChannel  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR channel index."
            ::= { afrVcEntry 3 }

        vcDLCI  OBJECT-TYPE
            SYNTAX  INTEGER (16..991)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FR DLCI"
            ::= { afrVcEntry 4 }

        vcVPI  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM VPI"
            ::= { afrVcEntry 5 }

        vcVCI  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ATM VCI"
            ::= { afrVcEntry 6 }

        vcBR  OBJECT-TYPE
            SYNTAX  INTEGER (1..1920)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bit Rate"
            ::= { afrVcEntry 7 }

        vcALBR  OBJECT-TYPE
            SYNTAX  INTEGER (1..1920)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "allocated Bit Rate"
            ::= { afrVcEntry 8 }


        vcInterworking  OBJECT-TYPE
            SYNTAX  INTEGER {
                    network(1),
                    svc-mode1(2),
                    svc-mode2(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "interworking mode"
            ::= { afrVcEntry 9 }

        vcTranslation  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    null(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "translation mode"
            ::= { afrVcEntry 10 }

        vcDECLP  OBJECT-TYPE
            SYNTAX  INTEGER {
                    map(1),
                    zero(2),
                    one(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DECLP mode"
            ::= { afrVcEntry 11 }


--
--  ATM Fr STAT Table
--

        afrFrStatTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrFrStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR statistics Table."
            ::= { afr-if 4 }

        afrFrStatEntry  OBJECT-TYPE
            SYNTAX  AfrFrStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR statistics Index."
            INDEX { afrFrstatIndex ,
        afrFrstatFrIndex ,
        afrFrstatPVCIndex }
            ::= { afrFrStatTable 1 }

            AfrFrStatEntry ::= SEQUENCE  {
            afrFrstatIndex              SmallSlotIndex,
            afrFrstatFrIndex            INTEGER,
            afrFrstatPVCIndex           INTEGER,
            afrFrstatDLCI               INTEGER,
            afrFrstatRX-Bytes           INTEGER,
            afrFrstatRX-Frames          INTEGER,
            afrFrstatRX-Discards        INTEGER,
            afrFrstatRX-Drops           INTEGER,
            afrFrstatTX-Bytes           INTEGER,
            afrFrstatTX-Frames          INTEGER,
            afrFrstatTX-Discards        INTEGER,
            afrFrstatTX-Drops           INTEGER
        }

        afrFrstatIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrFrStatEntry 1 }

        afrFrstatFrIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ch1(1),
                    ch2(2),
                    ch3(3),
                    ch4(4),
                    ch5(5),
                    ch6(6),
                    ch7(7),
                    ch8(8),
                    ch9(9),
                    ch10(10),
                    ch11(11),
                    ch12(12),
                    ch13(13),
                    ch14(14),
                    ch15(15),
                    ch16(16),
                    ch17(17),
                    ch18(18),
                    ch19(19),
                    ch20(20),
                    ch21(21),
                    ch22(22),
                    ch23(23),
                    ch24(24),
                    ch25(25),
                    ch26(26),
                    ch27(27),
                    ch28(28),
                    ch29(29),
                    ch30(30),
                    ch31(31),
                    ch-line(33)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CH1~CH31: logical FR index.
                When Frame Relay is active on T1/E1 port, CH-LINE
                identifies the frame relay channel on the T1/E1 port."
            ::= { afrFrStatEntry 2 }


        afrFrstatPVCIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PVC index."
            ::= { afrFrStatEntry 3 }

        afrFrstatDLCI  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FR DLCI"
            ::= { afrFrStatEntry 4 }

        afrFrstatRX-Bytes  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RX-Bytes"
            ::= { afrFrStatEntry 5 }

        afrFrstatRX-Frames  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RX-Frames"
            ::= { afrFrStatEntry 6 }

        afrFrstatRX-Discards  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RX-Discards"
            ::= { afrFrStatEntry 7 }

        afrFrstatRX-Drops  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RX-Drops"
            ::= { afrFrStatEntry 8 }


        afrFrstatTX-Bytes  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TX-Bytes"
            ::= { afrFrStatEntry 9 }

        afrFrstatTX-Frames  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TX-Frames"
            ::= { afrFrStatEntry 10 }

        afrFrstatTX-Discards  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TX-Discards"
            ::= { afrFrStatEntry 11 }

        afrFrstatTX-Drops  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TX-Drops"
            ::= { afrFrStatEntry 12 }


--
--  ATM VC STAT Table
--

        afrAtmStatTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrAtmStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ATM statistics Table
                This table is only available when ATM is active"
            ::= { afr-if 5 }

        afrAtmStatEntry  OBJECT-TYPE
            SYNTAX  AfrAtmStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VC statistics Index."
            INDEX { afrAtmStatTabIndex ,
        afrAtmStatVcIndex }
            ::= { afrAtmStatTable 1 }

            AfrAtmStatEntry ::= SEQUENCE  {
            afrAtmStatTabIndex          SmallSlotIndex,
            afrAtmStatVcIndex           INTEGER,
            afrAtmStatVPI               INTEGER,
            afrAtmStatVCI               INTEGER,
            afrAtmStatRX-Frames         INTEGER,
            afrAtmStatTX-Frames         INTEGER,
            afrAtmStatCongestion        INTEGER,
--             afrAtmStatBAD-HEC
--               INTEGER,
            afrAtmStatBAD-CRC           INTEGER,
            afrAtmStatBAD-Length        INTEGER
        }

        afrAtmStatTabIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrAtmStatEntry 1 }

        afrAtmStatVcIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VC index."
            ::= { afrAtmStatEntry 2 }

        afrAtmStatVPI  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VPI"
            ::= { afrAtmStatEntry 3 }

        afrAtmStatVCI  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VCI"
            ::= { afrAtmStatEntry 4 }

        afrAtmStatRX-Frames  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RX-Frames"
            ::= { afrAtmStatEntry 5 }

        afrAtmStatTX-Frames  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TX-Frames"
            ::= { afrAtmStatEntry 6 }

        afrAtmStatCongestion  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "congestion"
            ::= { afrAtmStatEntry 7 }

--       afrAtmStatBAD-HEC  OBJECT-TYPE
--           SYNTAX  INTEGER
--           ACCESS  read-only
--           STATUS  mandatory
--           DESCRIPTION
--              "bad header CRC"
--           ::= { afrAtmStatEntry 8 }

        afrAtmStatBAD-CRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bad CRC"
            ::= { afrAtmStatEntry 9 }

        afrAtmStatBAD-Length  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bad length "
            ::= { afrAtmStatEntry 10 }


--
--  ATM Fr STATUS Table
--

        afrFrStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrFrStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR status Table."
            ::= { afr-if 6 }

        afrFrStatusEntry  OBJECT-TYPE
            SYNTAX  AfrFrStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FR status Index."
            INDEX { afrFrStatusIndex ,
        afrFrStatusFrIndex }
            ::= { afrFrStatusTable 1 }

            AfrFrStatusEntry ::= SEQUENCE  {
            afrFrStatusIndex            SmallSlotIndex,
            afrFrStatusFrIndex          INTEGER,
            afrFrStatusStatus           INTEGER
        }

        afrFrStatusIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrFrStatusEntry 1 }

        afrFrStatusFrIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ch1(1),
                    ch2(2),
                    ch3(3),
                    ch4(4),
                    ch5(5),
                    ch6(6),
                    ch7(7),
                    ch8(8),
                    ch9(9),
                    ch10(10),
                    ch11(11),
                    ch12(12),
                    ch13(13),
                    ch14(14),
                    ch15(15),
                    ch16(16),
                    ch17(17),
                    ch18(18),
                    ch19(19),
                    ch20(20),
                    ch21(21),
                    ch22(22),
                    ch23(23),
                    ch24(24),
                    ch25(25),
                    ch26(26),
                    ch27(27),
                    ch28(28),
                    ch29(29),
                    ch30(30),
                    ch31(31),
                    ch-line(33)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CH1~CH31: logical FR index.
                When Frame Relay is active on T1/E1 port, CH-LINE
                identifies the frame relay channel on the T1/E1 port."
            ::= { afrFrStatusEntry 2 }


        afrFrStatusStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2),
                    inactive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FR status"
            ::= { afrFrStatusEntry 3 }


--
--  ATM VC STATUS Table
--

        afrAtmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrAtmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ATM VC status Table.
                This table is only available when ATM is active"
            ::= { afr-if 7 }

        afrAtmStatusEntry  OBJECT-TYPE
            SYNTAX  AfrAtmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VC status Index."
            INDEX { afrAtmStatusTabIndex ,
        afrAtmStatusVcIndex }
            ::= { afrAtmStatusTable 1 }

            AfrAtmStatusEntry ::= SEQUENCE  {
            afrAtmStatusTabIndex        SmallSlotIndex,
            afrAtmStatusVcIndex         INTEGER,
            afrAtmStatusActive          INTEGER,
            afrAtmStatusAIS             INTEGER,
            afrAtmStatusRDI             INTEGER,
            afrAtmStatusLOC             INTEGER
        }

        afrAtmStatusTabIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrAtmStatusEntry 1 }

        afrAtmStatusVcIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VC index."
            ::= { afrAtmStatusEntry 2 }

        afrAtmStatusActive  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VC active"
            ::= { afrAtmStatusEntry 3 }

        afrAtmStatusAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { afrAtmStatusEntry 4 }

        afrAtmStatusRDI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RDI"
            ::= { afrAtmStatusEntry 5 }

        afrAtmStatusLOC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOC"
            ::= { afrAtmStatusEntry 6 }


--
-- E1 Line Control Table
--

        afrE1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { afr-e1-if 1 }

        afrE1LineControlEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { afrE1csuLineControlIndex }
            ::= { afrE1LineControlTable 1 }

            AfrE1LineControlEntry ::= SEQUENCE  {
            afrE1csuLineControlIndex    SmallSlotIndex,
            afrE1csuLineFrame           INTEGER,
            afrE1csuLineCoding          INTEGER,
            afrE1csuInterface           INTEGER,
            afrE1csuFDL                 INTEGER,
            afrE1csuFDLSabit            INTEGER,
            afrE1csuAIS                 INTEGER,
            afrE1csuRAI                 INTEGER,
            afrE1csuCRC                 INTEGER,
            afrE1csuCAS                 INTEGER,
            afrE1csuProtocol            INTEGER
        }

        afrE1csuLineControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineControlEntry 1 }

        afrE1csuLineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { afrE1LineControlEntry 2 }

        afrE1csuLineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { afrE1LineControlEntry 3 }

        afrE1csuInterface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twisted-Pair(1),
                    coaxial-Cable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that E1 line use 75/120 Ohm Cable."
            ::= { afrE1LineControlEntry 4 }

        afrE1csuFDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link ON/OFF"
            ::= { afrE1LineControlEntry 5 }

        afrE1csuFDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    sa4-5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link use Sax bit"
            ::= { afrE1LineControlEntry 6 }

        afrE1csuAIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 line Alarm Indication Signal."
            ::= { afrE1LineControlEntry 7 }

        afrE1csuRAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2),
                    on-A(3),
                    on-B(4),
                    on-C(5),
                    on-D(6),
                    on-E(7),
                    on-F(8),
                    on-H(9),
                    on-J(10),
                    on-K(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { afrE1LineControlEntry 8 }

        afrE1csuCRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Cycle Redundancy Check ON/OFF"
            ::= { afrE1LineControlEntry 9 }

        afrE1csuCAS OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Line CAS ON/OFF"
            ::= { afrE1LineControlEntry 11 }

        afrE1csuProtocol  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    atm(1),
                    frameRelay(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Protocol running on E1 port
                Notice:
                To activate new selected protocol, the plug-in card will
                automatically reboot itself when protocol on T1 port is
                changed. (All configurations stored in this card will be
                returned to default.)"
            ::= { afrE1LineControlEntry 16 }

--
-- ATM E1  User Current Performance Table
--

        afrE1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { afr-e1-if 2 }

        afrE1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { afrE1csuUserCurrentPerfIndex }
            ::= { afrE1UserCurrentPerfTable 1 }

            AfrE1UserCurrentPerfEntry ::= SEQUENCE  {
            afrE1csuUserCurrentPerfIndex    SmallSlotIndex,
            afrE1csuUserCurrentPerfES       INTEGER,
            afrE1csuUserCurrentPerfSES      INTEGER,
            afrE1csuUserCurrentPerfBES      INTEGER,
            afrE1csuUserCurrentPerfUAS      INTEGER,
            afrE1csuUserCurrentPerfCSS      INTEGER,
            afrE1csuUserCurrentPerfBPV      INTEGER,
            afrE1csuUserCurrentPerfDM       INTEGER
        }

        afrE1csuUserCurrentPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1UserCurrentPerfEntry 1 }

        afrE1csuUserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1UserCurrentPerfEntry 2 }

        afrE1csuUserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1UserCurrentPerfEntry 3 }

        afrE1csuUserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1UserCurrentPerfEntry 4 }

        afrE1csuUserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1UserCurrentPerfEntry 5 }

        afrE1csuUserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { afrE1UserCurrentPerfEntry 6 }

        afrE1csuUserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1UserCurrentPerfEntry 7 }

        afrE1csuUserCurrentPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1UserCurrentPerfEntry 8 }


--
--  ATM E1 User Interval Performance Table
--

        afrE1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { afr-e1-if 3 }

        afrE1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { afrE1csuUserIntervalPerfIndex ,
        afrE1csuUserIntervalPerfNumber }
            ::= { afrE1UserIntervalPerfTable 1 }

            AfrE1UserIntervalPerfEntry ::= SEQUENCE  {
            afrE1csuUserIntervalPerfIndex   SmallSlotIndex,
            afrE1csuUserIntervalPerfNumber  INTEGER  (1..96),
            afrE1csuUserIntervalPerfES      INTEGER,
            afrE1csuUserIntervalPerfSES     INTEGER,
            afrE1csuUserIntervalPerfBES     INTEGER,
            afrE1csuUserIntervalPerfUAS     INTEGER,
            afrE1csuUserIntervalPerfCSS     INTEGER,
            afrE1csuUserIntervalPerfBPV     INTEGER,
            afrE1csuUserIntervalPerfDM      INTEGER
        }

        afrE1csuUserIntervalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1UserIntervalPerfEntry 1 }

        afrE1csuUserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { afrE1UserIntervalPerfEntry 2 }

        afrE1csuUserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1UserIntervalPerfEntry 3 }

        afrE1csuUserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1UserIntervalPerfEntry 4 }

        afrE1csuUserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1UserIntervalPerfEntry 5 }

        afrE1csuUserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1UserIntervalPerfEntry 6 }

        afrE1csuUserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1UserIntervalPerfEntry 7 }

        afrE1csuUserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1UserIntervalPerfEntry 8 }

        afrE1csuUserIntervalPerfDM   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        afrE1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { afr-e1-if 4 }

        afrE1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { afrE1csuUserTotalPerfIndex }
            ::= { afrE1UserTotalPerfTable 1 }

            AfrE1UserTotalPerfEntry ::= SEQUENCE  {
            afrE1csuUserTotalPerfIndex  SmallSlotIndex,
            afrE1csuUserTotalPerfES     INTEGER,
            afrE1csuUserTotalPerfSES    INTEGER,
            afrE1csuUserTotalPerfBES    INTEGER,
            afrE1csuUserTotalPerfUAS    INTEGER,
            afrE1csuUserTotalPerfCSS    INTEGER,
            afrE1csuUserTotalPerfBPV    INTEGER,
            afrE1csuUserTotalPerfDM     INTEGER
        }

        afrE1csuUserTotalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1UserTotalPerfEntry 1 }

        afrE1csuUserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1UserTotalPerfEntry 2 }

        afrE1csuUserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1UserTotalPerfEntry 3 }

        afrE1csuUserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1UserTotalPerfEntry 4 }

        afrE1csuUserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1UserTotalPerfEntry 5 }

        afrE1csuUserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1UserTotalPerfEntry 6 }

        afrE1csuUserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1UserTotalPerfEntry 7 }

        afrE1csuUserTotalPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        afrE1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { afr-e1-if 5 }

        afrE1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { afrE1csuUser7DaysPerfIndex ,
        afrE1csuUserDaysIndex }
            ::= { afrE1UserSevenDaysPerfTable 1 }

            AfrE1UserSevenDaysPerfEntry ::= SEQUENCE  {
            afrE1csuUser7DaysPerfIndex  SmallSlotIndex,
            afrE1csuUserDaysIndex       INTEGER (1..7),
            afrE1csuUserDateStrIndex    DisplayString (SIZE (0..255) ),
            afrE1csuUserSevenDaysPerfES INTEGER,
            afrE1csuUserSevenDaysPerfSES    INTEGER,
            afrE1csuUserSevenDaysPerfBES    INTEGER,
            afrE1csuUserSevenDaysPerfUAS    INTEGER,
            afrE1csuUserSevenDaysPerfCSS    INTEGER,
            afrE1csuUserSevenDaysPerfDM     INTEGER
        }

        afrE1csuUser7DaysPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1UserSevenDaysPerfEntry 1 }

        afrE1csuUserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { afrE1UserSevenDaysPerfEntry 2 }

        afrE1csuUserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { afrE1UserSevenDaysPerfEntry 3 }

        afrE1csuUserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 4 }

        afrE1csuUserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 5 }

        afrE1csuUserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 6 }

        afrE1csuUserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 7 }

        afrE1csuUserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 8 }

        afrE1csuUserSevenDaysPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1UserSevenDaysPerfEntry 9 }




--
--  Line Current Performance Table
--

        afrE1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { afr-e1-if 10 }

        afrE1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { afrE1csuLineCurrentPerfIndex }
            ::= { afrE1LineCurrentPerfTable 1 }

            AfrE1LineCurrentPerfEntry ::= SEQUENCE  {
            afrE1csuLineCurrentPerfIndex    SmallSlotIndex,
            afrE1csuLineCurrentPerfES       INTEGER,
            afrE1csuLineCurrentPerfSES      INTEGER,
            afrE1csuLineCurrentPerfBES      INTEGER,
            afrE1csuLineCurrentPerfUAS      INTEGER,
            afrE1csuLineCurrentPerfCSS      INTEGER,
            afrE1csuLineCurrentPerfBPV      INTEGER,
            afrE1csuLineCurrentPerfDM       INTEGER
        }

        afrE1csuLineCurrentPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineCurrentPerfEntry 1 }

        afrE1csuLineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { afrE1LineCurrentPerfEntry 2 }

        afrE1csuLineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1LineCurrentPerfEntry 3 }

        afrE1csuLineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1LineCurrentPerfEntry 4 }

        afrE1csuLineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1LineCurrentPerfEntry 5 }

        afrE1csuLineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1LineCurrentPerfEntry 6 }

        afrE1csuLineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1LineCurrentPerfEntry 7 }

        afrE1csuLineCurrentPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1LineCurrentPerfEntry 8 }


--
--  Line Interval Performance Table
--

        afrE1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { afr-e1-if 11 }

        afrE1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { afrE1csuLineIntervalPerfIndex ,
        afrE1csuLineIntervalPerfNumber }
            ::= { afrE1LineIntervalPerfTable 1 }

            AfrE1LineIntervalPerfEntry ::= SEQUENCE {
            afrE1csuLineIntervalPerfIndex   SmallSlotIndex,
            afrE1csuLineIntervalPerfNumber  INTEGER  (1..96),
            afrE1csuLineIntervalPerfES      INTEGER,
            afrE1csuLineIntervalPerfSES     INTEGER,
            afrE1csuLineIntervalPerfBES     INTEGER,
            afrE1csuLineIntervalPerfUAS     INTEGER,
            afrE1csuLineIntervalPerfCSS     INTEGER,
            afrE1csuLineIntervalPerfBPV     INTEGER,
            afrE1csuLineIntervalPerfDM      INTEGER
        }

        afrE1csuLineIntervalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineIntervalPerfEntry 1 }

        afrE1csuLineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { afrE1LineIntervalPerfEntry 2 }

        afrE1csuLineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1LineIntervalPerfEntry 3 }

        afrE1csuLineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1LineIntervalPerfEntry 4 }

        afrE1csuLineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1LineIntervalPerfEntry 5 }

        afrE1csuLineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1LineIntervalPerfEntry 6 }

        afrE1csuLineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1LineIntervalPerfEntry 7 }

        afrE1csuLineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1LineIntervalPerfEntry 8 }

        afrE1csuLineIntervalPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1LineIntervalPerfEntry 9 }


--
--  Line Total Performance Table
--

        afrE1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { afr-e1-if 12 }

        afrE1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { afrE1csuLineTotalPerfIndex }
            ::= { afrE1LineTotalPerfTable 1 }

            AfrE1LineTotalPerfEntry ::= SEQUENCE  {
            afrE1csuLineTotalPerfIndex  SmallSlotIndex,
            afrE1csuLineTotalPerfES     INTEGER,
            afrE1csuLineTotalPerfSES    INTEGER,
            afrE1csuLineTotalPerfBES    INTEGER,
            afrE1csuLineTotalPerfUAS    INTEGER,
            afrE1csuLineTotalPerfCSS    INTEGER,
            afrE1csuLineTotalPerfBPV    INTEGER,
            afrE1csuLineTotalPerfDM     INTEGER
        }

        afrE1csuLineTotalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineTotalPerfEntry 1 }

        afrE1csuLineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1LineTotalPerfEntry 2 }

        afrE1csuLineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1LineTotalPerfEntry 3 }

        afrE1csuLineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1LineTotalPerfEntry 4 }

        afrE1csuLineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1LineTotalPerfEntry 5 }

        afrE1csuLineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1LineTotalPerfEntry 6 }

        afrE1csuLineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrE1LineTotalPerfEntry 7 }

        afrE1csuLineTotalPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        afrE1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { afr-e1-if 13 }

        afrE1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { afrE1csuLine7DaysPerfIndex ,
        afrE1csuLineDaysIndex }
            ::= { afrE1LineSevenDaysPerfTable 1 }

            AfrE1LineSevenDaysPerfEntry ::= SEQUENCE  {
            afrE1csuLine7DaysPerfIndex  SmallSlotIndex,
            afrE1csuLineDaysIndex       INTEGER (1..7),
            afrE1csuLineDateStrIndex    DisplayString (SIZE (0..255) ),
            afrE1csuLineSevenDaysPerfES INTEGER,
            afrE1csuLineSevenDaysPerfSES    INTEGER,
            afrE1csuLineSevenDaysPerfBES    INTEGER,
            afrE1csuLineSevenDaysPerfUAS    INTEGER,
            afrE1csuLineSevenDaysPerfCSS    INTEGER,
            afrE1csuLineSevenDaysPerfDM     INTEGER
        }

        afrE1csuLine7DaysPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineSevenDaysPerfEntry 1 }

        afrE1csuLineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { afrE1LineSevenDaysPerfEntry 2 }

        afrE1csuLineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { afrE1LineSevenDaysPerfEntry 3 }

        afrE1csuLineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 4 }

        afrE1csuLineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 5 }

        afrE1csuLineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 6 }

        afrE1csuLineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 7 }

        afrE1csuLineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 8 }

        afrE1csuLineSevenDaysPerfDM  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { afrE1LineSevenDaysPerfEntry 9 }


--
--  Line Availability Table
--

        afrE1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { afr-e1-if 14 }

        afrE1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { afrE1csuPortAvailabilityIndex }
            ::= { afrE1LineAvailabilityTable 1 }

            AfrE1LineAvailabilityEntry ::= SEQUENCE {
            afrE1csuPortAvailabilityIndex   SmallSlotIndex,
            afrE1csuAvailableSeconds        DisplayString,
            afrE1csuUnavailableSeconds      DisplayString,
            afrE1csuLineAvailability        DisplayString
        }

        afrE1csuPortAvailabilityIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineAvailabilityEntry 1 }

        afrE1csuAvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { afrE1LineAvailabilityEntry 2 }

        afrE1csuUnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { afrE1LineAvailabilityEntry 3 }

        afrE1csuLineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { afrE1LineAvailabilityEntry 4 }

--
-- Line Diagnostic Control Table
--

        afrE1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-e1-if 15 }

        afrE1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  AfrE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { afrE1csuLineDiagControlIndex }
            ::= { afrE1LineDiagControlTable 1 }

            AfrE1LineDiagControlEntry ::= SEQUENCE {
            afrE1csuLineDiagControlIndex    SmallSlotIndex,
            afrE1csuLoopbackType            INTEGER,
            afrE1csuLoopbackStatus          INTEGER,
            afrE1csuPRBSControl             INTEGER,
            afrE1csuPRBSStatus              INTEGER,
            afrE1csuPRBSElapseSeconds       INTEGER,
            afrE1csuPRBSErrorSeconds        INTEGER,
            afrE1csuPRBSErrorCounts         INTEGER,
            afrE1csuInbandLoopbackPeriod    INTEGER
        }

        afrE1csuLineDiagControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrE1LineDiagControlEntry 1 }

        afrE1csuLoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payLoadLoopback(3),
                    lineLoopback(4),
                    remotePayLoadLB-Active(5),
                    remoteLineLB-Active(6),
                    remotePayLoadLb-Deactive(7),
                    remoteLineLB-Deactive(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu Loopback Type"
            ::= { afrE1LineDiagControlEntry 2 }

        afrE1csuLoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    lb-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu Loopback Status"
            ::= { afrE1LineDiagControlEntry 3 }

        afrE1csuPRBSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-DEACTIVE(1),
                    prbs-ACTIVE-FULL(2),
                    prbs-RESET-ERROR-COUNT(3),
                    prbs-INJECT-ERROR(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu PRBS Control"
            ::= { afrE1LineDiagControlEntry 4 }

        afrE1csuPRBSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-SYNC(1),
                    prbs-UNSYNC(2),
                    prbs-NOT-ACTIVE(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu PRBS Status"
            ::= { afrE1LineDiagControlEntry 5 }

        afrE1csuPRBSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu PRBS Elapse Seconds"
            ::= { afrE1LineDiagControlEntry 6 }

        afrE1csuPRBSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu PRBS Error Seconds"
            ::= { afrE1LineDiagControlEntry 7 }

        afrE1csuPRBSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-e1csu PRBS Error Counts"
            ::= { afrE1LineDiagControlEntry 8 }

        afrE1csuInbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of E1 inband local, payload, or line loopback"
            ::= { afrE1LineDiagControlEntry 9 }



--
-- ATM T1 Line Control Table
--

        afrT1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { afr-t1-if 1 }

        afrT1LineControlEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { afrT1csuLineControlIndex }
            ::= { afrT1LineControlTable 1 }

            AfrT1LineControlEntry ::= SEQUENCE  {
            afrT1csuLineControlIndex    SmallSlotIndex,
            afrT1csuLineFrame           INTEGER,
            afrT1csuLineCoding          INTEGER,
            afrT1csuInterface           INTEGER,
            afrT1csuLineBuildOut        INTEGER,
            afrT1csuEQUalizer           INTEGER,
            afrT1csuAIS                 INTEGER,
            afrT1csuYEL                 INTEGER,
            afrT1csuInband              INTEGER,
            afrT1csuProtocol            INTEGER
        }

        afrT1csuLineControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineControlEntry 1 }

        afrT1csuLineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esf-T1-403(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { afrT1LineControlEntry 2 }

        afrT1csuLineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { afrT1LineControlEntry 3 }

        afrT1csuInterface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    long-Haul(1),
                    short-Haul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that T1 line use Long/Short haul."
            ::= { afrT1LineControlEntry 4 }

        afrT1csuLineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo-0-0dB(1),
                    lbo-7-5dB(2),
                    lbo-15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line build out."
            ::= { afrT1LineControlEntry 5 }

        afrT1csuEQUalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ-0-133Ft(1),
                    equ-133-266Ft(2),
                    equ-266-399Ft(3),
                    equ-399-533Ft(4),
                    equ-533-655Ft(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line equalizer."
            ::= { afrT1LineControlEntry 6 }

        afrT1csuAIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line Alarm Indication Signal."
            ::= { afrT1LineControlEntry 7 }

        afrT1csuYEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2),
                    on-A(3),
                    on-B(4),
                    on-C(5),
                    on-D(6),
                    on-E(7),
                    on-F(8),
                    on-H(9),
                    on-J(10),
                    on-K(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { afrT1LineControlEntry 8 }

        afrT1csuInband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line inband ON/OFF"
            ::= { afrT1LineControlEntry 9 }

        afrT1csuProtocol  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    atm(1),
                    frameRelay(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Protocol running on T1 port
                Notice:
                To activate new selected protocol, the plug-in card will
                automatically reboot itself when protocol on T1 port is
                changed. (All configurations stored in this card will be
                returned to default.)"
            ::= { afrT1LineControlEntry 16 }

--
--  User Current Performance Table
--

        afrT1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { afr-t1-if 2 }

        afrT1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { afrT1csuUserCurrentPerfIndex }
            ::= { afrT1UserCurrentPerfTable 1 }

            AfrT1UserCurrentPerfEntry ::= SEQUENCE  {
            afrT1csuUserCurrentPerfIndex    SmallSlotIndex,
            afrT1csuUserCurrentPerfES       INTEGER,
            afrT1csuUserCurrentPerfSES      INTEGER,
            afrT1csuUserCurrentPerfBES      INTEGER,
            afrT1csuUserCurrentPerfUAS      INTEGER,
            afrT1csuUserCurrentPerfCSS      INTEGER,
            afrT1csuUserCurrentPerfBPV      INTEGER,
            afrT1csuUserCurrentPerfLOFC     INTEGER
        }

        afrT1csuUserCurrentPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1UserCurrentPerfEntry 1 }

        afrT1csuUserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrT1UserCurrentPerfEntry 2 }

        afrT1csuUserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1UserCurrentPerfEntry 3 }

        afrT1csuUserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1UserCurrentPerfEntry 4 }

        afrT1csuUserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1UserCurrentPerfEntry 5 }

        afrT1csuUserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { afrT1UserCurrentPerfEntry 6 }

        afrT1csuUserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1UserCurrentPerfEntry 7 }

        afrT1csuUserCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1UserCurrentPerfEntry 8 }


--
--  User Interval Performance Table
--

        afrT1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { afr-t1-if 3 }

        afrT1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { afrT1csuUserIntervalPerfIndex ,
        afrT1csuUserIntervalPerfNumber }
            ::= { afrT1UserIntervalPerfTable 1 }

            AfrT1UserIntervalPerfEntry ::= SEQUENCE  {
            afrT1csuUserIntervalPerfIndex   SmallSlotIndex,
            afrT1csuUserIntervalPerfNumber  INTEGER  (1..96),
            afrT1csuUserIntervalPerfES      INTEGER,
            afrT1csuUserIntervalPerfSES     INTEGER,
            afrT1csuUserIntervalPerfBES     INTEGER,
            afrT1csuUserIntervalPerfUAS     INTEGER,
            afrT1csuUserIntervalPerfCSS     INTEGER,
            afrT1csuUserIntervalPerfBPV     INTEGER,
            afrT1csuUserIntervalPerfLOFC    INTEGER
        }

        afrT1csuUserIntervalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1UserIntervalPerfEntry 1 }

        afrT1csuUserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { afrT1UserIntervalPerfEntry 2 }

        afrT1csuUserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrT1UserIntervalPerfEntry 3 }

        afrT1csuUserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1UserIntervalPerfEntry 4 }

        afrT1csuUserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1UserIntervalPerfEntry 5 }

        afrT1csuUserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1UserIntervalPerfEntry 6 }

        afrT1csuUserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrT1UserIntervalPerfEntry 7 }

        afrT1csuUserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1UserIntervalPerfEntry 8 }

        afrT1csuUserIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        afrT1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { afr-t1-if 4 }

        afrT1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { afrT1csuUserTotalPerfIndex }
            ::= { afrT1UserTotalPerfTable 1 }

            AfrT1UserTotalPerfEntry ::= SEQUENCE  {
            afrT1csuUserTotalPerfIndex  SmallSlotIndex,
            afrT1csuUserTotalPerfES     INTEGER,
            afrT1csuUserTotalPerfSES    INTEGER,
            afrT1csuUserTotalPerfBES    INTEGER,
            afrT1csuUserTotalPerfUAS    INTEGER,
            afrT1csuUserTotalPerfCSS    INTEGER,
            afrT1csuUserTotalPerfBPV    INTEGER,
            afrT1csuUserTotalPerfLOFC   INTEGER
        }

        afrT1csuUserTotalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1UserTotalPerfEntry 1 }

        afrT1csuUserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrT1UserTotalPerfEntry 2 }

        afrT1csuUserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1UserTotalPerfEntry 3 }

        afrT1csuUserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1UserTotalPerfEntry 4 }

        afrT1csuUserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1UserTotalPerfEntry 5 }

        afrT1csuUserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrT1UserTotalPerfEntry 6 }

        afrT1csuUserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1UserTotalPerfEntry 7 }

        afrT1csuUserTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1UserTotalPerfEntry 8 }


--
--  Line Current Performance Table
--

        afrT1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { afr-t1-if 8 }

        afrT1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { afrT1csuLineCurrentPerfIndex }
            ::= { afrT1LineCurrentPerfTable 1 }

            AfrT1LineCurrentPerfEntry ::= SEQUENCE  {
            afrT1csuLineCurrentPerfIndex    SmallSlotIndex,
            afrT1csuLineCurrentPerfES       INTEGER,
            afrT1csuLineCurrentPerfSES      INTEGER,
            afrT1csuLineCurrentPerfBES      INTEGER,
            afrT1csuLineCurrentPerfUAS      INTEGER,
            afrT1csuLineCurrentPerfCSS      INTEGER,
            afrT1csuLineCurrentPerfBPV      INTEGER,
            afrT1csuLineCurrentPerfLOFC     INTEGER
        }

        afrT1csuLineCurrentPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineCurrentPerfEntry 1 }

        afrT1csuLineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { afrT1LineCurrentPerfEntry 2 }

        afrT1csuLineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1LineCurrentPerfEntry 3 }

        afrT1csuLineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1LineCurrentPerfEntry 4 }

        afrT1csuLineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1LineCurrentPerfEntry 5 }

        afrT1csuLineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrT1LineCurrentPerfEntry 6 }

        afrT1csuLineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1LineCurrentPerfEntry 7 }

        afrT1csuLineCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1LineCurrentPerfEntry 8 }


--
--  Line Interval Performance Table
--

        afrT1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { afr-t1-if 9 }

        afrT1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { afrT1csuLineIntervalPerfIndex ,
        afrT1csuLineIntervalPerfNumber }
            ::= { afrT1LineIntervalPerfTable 1 }

            AfrT1LineIntervalPerfEntry ::= SEQUENCE {
            afrT1csuLineIntervalPerfIndex   SmallSlotIndex,
            afrT1csuLineIntervalPerfNumber  INTEGER  (1..96),
            afrT1csuLineIntervalPerfES      INTEGER,
            afrT1csuLineIntervalPerfSES     INTEGER,
            afrT1csuLineIntervalPerfBES     INTEGER,
            afrT1csuLineIntervalPerfUAS     INTEGER,
            afrT1csuLineIntervalPerfCSS     INTEGER,
            afrT1csuLineIntervalPerfBPV     INTEGER,
            afrT1csuLineIntervalPerfLOFC    INTEGER
        }

        afrT1csuLineIntervalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineIntervalPerfEntry 1 }

        afrT1csuLineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index "
            ::= { afrT1LineIntervalPerfEntry 2 }

        afrT1csuLineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrT1LineIntervalPerfEntry 3 }

        afrT1csuLineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1LineIntervalPerfEntry 4 }

        afrT1csuLineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1LineIntervalPerfEntry 5 }

        afrT1csuLineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1LineIntervalPerfEntry 6 }

        afrT1csuLineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrT1LineIntervalPerfEntry 7 }

        afrT1csuLineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1LineIntervalPerfEntry 8 }

        afrT1csuLineIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1LineIntervalPerfEntry 9 }


--
--  Line Total Performance Table
--

        afrT1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { afr-t1-if 10 }

        afrT1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance entry"
            INDEX { afrT1csuLineTotalPerfIndex }
            ::= { afrT1LineTotalPerfTable 1 }

            AfrT1LineTotalPerfEntry ::= SEQUENCE  {
            afrT1csuLineTotalPerfIndex  SmallSlotIndex,
            afrT1csuLineTotalPerfES     INTEGER,
            afrT1csuLineTotalPerfSES    INTEGER,
            afrT1csuLineTotalPerfBES    INTEGER,
            afrT1csuLineTotalPerfUAS    INTEGER,
            afrT1csuLineTotalPerfCSS    INTEGER,
            afrT1csuLineTotalPerfBPV    INTEGER,
            afrT1csuLineTotalPerfLOFC   INTEGER
        }

        afrT1csuLineTotalPerfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineTotalPerfEntry 1 }

        afrT1csuLineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { afrT1LineTotalPerfEntry 2 }

        afrT1csuLineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { afrT1LineTotalPerfEntry 3 }

        afrT1csuLineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { afrT1LineTotalPerfEntry 4 }

        afrT1csuLineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { afrT1LineTotalPerfEntry 5 }

        afrT1csuLineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { afrT1LineTotalPerfEntry 6 }

        afrT1csuLineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { afrT1LineTotalPerfEntry 7 }

        afrT1csuLineTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { afrT1LineTotalPerfEntry 8 }


--
--  Line Availability Table
--

        afrT1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { afr-t1-if 11 }

        afrT1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { afrT1csuPortAvailabilityIndex }
            ::= { afrT1LineAvailabilityTable 1 }

            AfrT1LineAvailabilityEntry ::= SEQUENCE {
            afrT1csuPortAvailabilityIndex   SmallSlotIndex,
            afrT1csuAvailableSeconds        DisplayString,
            afrT1csuUnavailableSeconds      DisplayString,
            afrT1csuLineAvailability        DisplayString
        }

        afrT1csuPortAvailabilityIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineAvailabilityEntry 1 }

        afrT1csuAvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { afrT1LineAvailabilityEntry 2 }

        afrT1csuUnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { afrT1LineAvailabilityEntry 3 }

        afrT1csuLineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { afrT1LineAvailabilityEntry 4 }



--
-- ATM T1 line Diagnostic Control Table
--

        afrT1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrT1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { afr-t1-if 12 }

        afrT1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  AfrT1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { afrT1csuLineDiagControlIndex }
            ::= { afrT1LineDiagControlTable 1 }

            AfrT1LineDiagControlEntry ::= SEQUENCE {
            afrT1csuLineDiagControlIndex    SmallSlotIndex,
            afrT1csuLoopbackType            INTEGER,
            afrT1csuLoopbackStatus          INTEGER,
            afrT1csuQRSSControl             INTEGER,
            afrT1csuQRSSStatus              INTEGER,
            afrT1csuQRSSElapseSeconds       INTEGER,
            afrT1csuQRSSErrorSeconds        INTEGER,
            afrT1csuQRSSErrorCounts         INTEGER,
            afrT1csuInbandLoopbackPeriod    INTEGER
        }

        afrT1csuLineDiagControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrT1LineDiagControlEntry 1 }

        afrT1csuLoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payLoadLoopback(3),
                    lineLoopback(4),
                    remoteLineLB-Inband-Active(5),
                    remotePayLoadLB-ATT-Active(6),
                    remotePayLoadLB-ANSI-Active(7),
                    remoteLineLB-ANSI-Active(8),
                    remoteLineLB-Inband-Deactive(9),
                    remotePayLoadLB-ATT-Deactive(10),
                    remotePayLoadLB-ANSI-Deactive(11),
                    remoteLineLB-ANSI-Deactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu Loopback Type"
            ::= { afrT1LineDiagControlEntry 2 }

        afrT1csuLoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    lb-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu Loopback Status"
            ::= { afrT1LineDiagControlEntry 3 }

        afrT1csuQRSSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-DEACTIVE(1),
                    qrss-ACTIVE-FULL(2),
                    qrss-RESET-ERROR-COUNT(3),
                    qrss-INJECT-ERROR(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu QRSS Control"
            ::= { afrT1LineDiagControlEntry 4 }

        afrT1csuQRSSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-SYNC(1),
                    qrss-UNSYNC(2),
                    qrss-NOT-ACTIVE(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu QRSS Status"
            ::= { afrT1LineDiagControlEntry 5 }

        afrT1csuQRSSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu QRSS Elapse Seconds"
            ::= { afrT1LineDiagControlEntry 6 }

        afrT1csuQRSSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu QRSS Error Seconds"
            ::= { afrT1LineDiagControlEntry 7 }

        afrT1csuQRSSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "atm-t1csu QRSS Error Counts"
            ::= { afrT1LineDiagControlEntry 8 }

        afrT1csuInbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of T1 inband local, payload, or line loopback"
            ::= { afrT1LineDiagControlEntry 9 }


--
--  ATM CSU DS0 Map Table
--

        afrCsuChannelMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrCsuChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Channel map on T1/E1"
            ::= { afr-if 8 }

        afrCsuChannelMapEntry  OBJECT-TYPE
            SYNTAX  AfrCsuChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of channel map table"
            INDEX { afrCsuChannelMapTableIndex ,
        afrCsuChannelMapEntryIndex }
            ::= { afrCsuChannelMapTable 1 }

            AfrCsuChannelMapEntry ::= SEQUENCE  {
            afrCsuChannelMapTableIndex  SmallSlotIndex,
            afrCsuChannelMapEntryIndex  INTEGER,
            afrCsuChannelMapTo          INTEGER
        }

        afrCsuChannelMapTableIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrCsuChannelMapEntry 1 }

        afrCsuChannelMapEntryIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index.
                T1: 1~24
                E1: 1~31"
            ::= { afrCsuChannelMapEntry 2 }


        afrCsuChannelMapTo  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(0),
                    map(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "0: this time slot is idle
                1: this time slot carries user data"
            ::= { afrCsuChannelMapEntry 3 }

--
--  FR-to-FR DLCI mapping table
--

        afrDLCITable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrDLCIEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FrameRelay-to-FrameRelay DLCI mapping table
                This table is only available when FR on T1/E1 is active"
            ::= { afr-if 9 }

        afrDLCIEntry  OBJECT-TYPE
            SYNTAX  AfrDLCIEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VC management Index."
            INDEX { afrDlciTableIndex ,
        afrDlciEntryIndex }
            ::= { afrDLCITable 1 }

            AfrDLCIEntry ::= SEQUENCE  {
            afrDlciTableIndex           SmallSlotIndex,
            afrDlciEntryIndex           INTEGER,
            logicalChannel              INTEGER,
            logicalDLCI                 INTEGER,
            dlci                        INTEGER,
            cir                         INTEGER,
            allocatedBandwidth          INTEGER,
            bc                          INTEGER,
            be                          INTEGER
        }

        afrDlciTableIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrDLCIEntry 1 }

        afrDlciEntryIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Entry index."
            ::= { afrDLCIEntry 2 }

        logicalChannel  OBJECT-TYPE
            SYNTAX  INTEGER (1..31)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Which logical frame relay channel"
            ::= { afrDLCIEntry 3 }

        logicalDLCI  OBJECT-TYPE
            SYNTAX  INTEGER (1..1023)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DLCI in this logical frame relay channel"
            ::= { afrDLCIEntry 4 }

        dlci  OBJECT-TYPE
            SYNTAX  INTEGER (1..1023)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DLCI in T1/E1 channel"
            ::= { afrDLCIEntry 5 }

        cir  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Information Rate"
            ::= { afrDLCIEntry 6 }

        allocatedBandwidth  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Really allocated bandwidth for this virtual connection.
                In normal case, AllocatedBandwidth is same as CIR"
            ::= { afrDLCIEntry 7 }

        bc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Burst size"
            ::= { afrDLCIEntry 8 }

        be  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Excess Burst size"
            ::= { afrDLCIEntry 9 }


--
--  ATM LINE STAT Table
--

        afrAtmLineStatTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AfrAtmLineStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ATM Line statistics Table
                This table is only available when ATM is active"
            ::= { afr-if 10 }

        afrAtmLineStatEntry  OBJECT-TYPE
            SYNTAX  AfrAtmLineStatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VC statistics Index."
            INDEX { afrAtmLineStatTabIndex }
            ::= { afrAtmLineStatTable 1 }

            AfrAtmLineStatEntry ::= SEQUENCE  {
            afrAtmLineStatTabIndex      SmallSlotIndex,
            afrAtmLINE-STAT             INTEGER,
            afrAtmBAD-HEC               INTEGER
        }


        afrAtmLineStatTabIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { afrAtmLineStatEntry 1 }


        afrAtmBAD-HEC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bad header CRC"
            ::= { afrAtmLineStatEntry 2 }

        afrAtmLINE-STAT  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ATM Line Sync/unsync"
            ::= { afrAtmLineStatEntry 3 }


        afrTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of ATM/FR"
            ::= { afr-card 100 }


--======================================================================--
--======================================================================--
--  fxo-card MIB
--======================================================================--
-- FXO Card

--    fxoAllPortConfigControlTable        OBJECT IDENTIFIER ::= { fxo-card 1 }
--    fxoAllPortSigConfigControlTable     OBJECT IDENTIFIER ::= { fxo-card 2 }
--    fxoPerPortConfigControlTable        OBJECT IDENTIFIER ::= { fxo-card 3 }
--    fxoPortStatusTable                  OBJECT IDENTIFIER ::= { fxo-card 4 }
--    fxoDiagTestControlTable             OBJECT IDENTIFIER ::= { fxo-card 5 }
--    fxoCommandControlTable              OBJECT IDENTIFIER ::= { fxo-card 6 }
--======================================================================--

            FXOPulseDecodeLevel ::= INTEGER   {
        na(0),
--                      neg-18-dbm(18),
        neg-19-dbm(19),
        neg-20-dbm(20),
        neg-21-dbm(21),
        neg-22-dbm(22),
        neg-23-dbm(23),
        neg-24-dbm(24),
        neg-25-dbm(25),
        neg-26-dbm(26),
        neg-27-dbm(27),
        neg-28-dbm(28),
        neg-29-dbm(29),
        neg-30-dbm(30),
        neg-31-dbm(31),
        neg-32-dbm(32),
        neg-33-dbm(33),
        neg-34-dbm(34),
        neg-35-dbm(35),
        neg-36-dbm(36),
        neg-37-dbm(37),
        neg-38-dbm(38),
        neg-39-dbm(39),
        neg-40-dbm(40),
        neg-41-dbm(41),
        neg-42-dbm(42),
        neg-43-dbm(43),
        neg-44-dbm(44),
        neg-45-dbm(45),
        neg-46-dbm(46),
        neg-47-dbm(47)
    }

--
--      FXO All Port Config Control Table
--

        fxoAllPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO All Port Configuration Control Table"
            ::= { fxo-card 1 }

        fxoAllPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxoAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO all port configuration control entry"
            INDEX { fxoAllPortConfigControlIndex }
            ::= { fxoAllPortConfigControlTable 1 }

            FxoAllPortConfigControlEntry ::= SEQUENCE {
            fxoAllPortConfigControlIndex    LargeSlotIndex,
            fxoAllPortConfigControlA-u-law  INTEGER,
            fxoAllPortConfigControlImpedance    INTEGER,
--             fxoAllPortConfigControlTx-gain
--               DisplayString,
--             fxoAllPortConfigControlRx-gain
--               DisplayString,
            fxoAllPortConfigControlTrunk-condition  INTEGER,
            fxoAllPortConfigControlLine-polarity    INTEGER,
            fxoAllPortConfigControlMetering-pulse-frequency INTEGER,
            fxoAllPortConfigControlPulse-detect-mode        INTEGER
        }

        fxoAllPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoAllPortConfigControlEntry 1 }

        fxoAllPortConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { fxoAllPortConfigControlEntry 2 }

        fxoAllPortConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { fxoAllPortConfigControlEntry 3 }

--       fxoAllPortConfigControlTx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " TX-GAIN "
--           ::= { fxoAllPortConfigControlEntry 4 }

--       fxoAllPortConfigControlRx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " RX-GAIN "
--           ::= { fxoAllPortConfigControlEntry 5 }

        fxoAllPortConfigControlTrunk-condition   OBJECT-TYPE
            SYNTAX  INTEGER {
                    on-hook(1),
                    off-hook(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Trunk Condition "
            ::= { fxoAllPortConfigControlEntry 6 }

        fxoAllPortConfigControlLine-polarity   OBJECT-TYPE
            SYNTAX  INTEGER {
                    reverse(1),
                    normal(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Line Polarity "
            ::= { fxoAllPortConfigControlEntry 7 }

        fxoAllPortConfigControlMetering-pulse-frequency   OBJECT-TYPE
            SYNTAX  INTEGER {
                    freq-16k-hz(1),
                    freq-12k-hz(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Pulse Frequency "
            ::= { fxoAllPortConfigControlEntry 8 }

        fxoAllPortConfigControlPulse-detect-mode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    packet(1),
                    normal(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Pulse Detect Mode "
            ::= { fxoAllPortConfigControlEntry 9 }



--
--      FXO All Port Signaling Config Control Table
--

        fxoAllPortSigConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO All Port Signaling Configuration Control Table"
            ::= { fxo-card 2 }

        fxoAllPortSigConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxoAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO all port signaling configuration control entry"
            INDEX { fxoAllPortSigConfigControlIndex ,
        fxoAllPortSigConfigControlItemIndex ,
        fxoAllPortSigConfigControlSigBitIndex }
            ::= { fxoAllPortSigConfigControlTable 1 }

            FxoAllPortSigConfigControlEntry ::= SEQUENCE {
            fxoAllPortSigConfigControlIndex LargeSlotIndex,
            fxoAllPortSigConfigControlItemIndex INTEGER,
            fxoAllPortSigConfigControlSigBitIndex   INTEGER,
            fxoAllPortSigConfigControlSigBit        INTEGER
        }

        fxoAllPortSigConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoAllPortSigConfigControlEntry 1 }

        fxoAllPortSigConfigControlItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ringing(1),
                    no-ring(2),
                    batt-rev(3),
                    pulse-on(4),
                    tip-open(5),
                    off-hook(6),
                    oos-alarm(7),
                    ring-gnd(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ringing, no-ring, batt-rev, pulse-on, tip-open, off-hook, oos-on, ring-gnd "
            ::= { fxoAllPortSigConfigControlEntry 2 }

        fxoAllPortSigConfigControlSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { fxoAllPortSigConfigControlEntry 3 }

        fxoAllPortSigConfigControlSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { fxoAllPortSigConfigControlEntry 4 }



--
--      FXO Per Port Config Control Table
--

        fxoPerPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Configuration Control Table"
            ::= { fxo-card 3 }

        fxoPerPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  FxoPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Configuration control entry"
            INDEX { fxoPerPortConfigControlIndex ,
        fxoPerPortConfigControlPortIndex }
            ::= { fxoPerPortConfigControlTable 1 }

            FxoPerPortConfigControlEntry ::= SEQUENCE {
            fxoPerPortConfigControlIndex    LargeSlotIndex,
            fxoPerPortConfigControlPortIndex    TwelvePortID,
            fxoPerPortConfigControlPulse-Decode-Level   FXOPulseDecodeLevel,
            fxoPerPortConfigControlDetected-Pulse-Decode-Level  FXOPulseDecodeLevel,
            fxoPerPortConfigControlTx-gain                      DisplayString,
            fxoPerPortConfigControlRx-gain                      DisplayString
        }

        fxoPerPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoPerPortConfigControlEntry 1 }

        fxoPerPortConfigControlPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxoPerPortConfigControlEntry 2 }

        fxoPerPortConfigControlPulse-Decode-Level   OBJECT-TYPE
            SYNTAX  FXOPulseDecodeLevel
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port Pulse Decode Level setting "
            ::= { fxoPerPortConfigControlEntry 3 }

        fxoPerPortConfigControlDetected-Pulse-Decode-Level   OBJECT-TYPE
            SYNTAX  FXOPulseDecodeLevel
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Detected Pulse Decode Level by Pulse Decode Level Scan "
            ::= { fxoPerPortConfigControlEntry 4 }

        fxoPerPortConfigControlTx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { fxoPerPortConfigControlEntry 5 }

        fxoPerPortConfigControlRx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { fxoPerPortConfigControlEntry 6 }


--
--      FXO Port Status Table
--

        fxoPortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Port Status Table"
            ::= { fxo-card 4 }

        fxoPortStatusEntry  OBJECT-TYPE
            SYNTAX  FxoPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Port Status entry"
            INDEX { fxoPortStatusIndex ,
        fxoPortStatusItemIndex ,
        fxoPortStatusPortIndex }
            ::= { fxoPortStatusTable 1 }

            FxoPortStatusEntry ::= SEQUENCE {
            fxoPortStatusIndex          LargeSlotIndex,
            fxoPortStatusItemIndex      INTEGER,
            fxoPortStatusPortIndex      TwelvePortID,
            fxoPortStatusStatus         INTEGER
        }

        fxoPortStatusIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoPortStatusEntry 1 }

        fxoPortStatusItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ringing(1),
                    off-hook(2),
                    tip-open(3),
                    line-broken(4),
                    ring-gnd(5),
                    batt-rev(6),
                    pulse-on(7),
                    alarm-on(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ringing, off-hook, tip-open, line-broken, ring-gnd, batt-rev, pulse-on, alarm-on"
            ::= { fxoPortStatusEntry 2 }

        fxoPortStatusPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " port index 1-12 "
            ::= { fxoPortStatusEntry 3 }

        fxoPortStatusStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Status "
            ::= { fxoPortStatusEntry 4 }


--
--      FXO Line Diagnostic Control Table
--

        fxoDiagTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Diagnostic Control Table."
            ::= { fxo-card 5 }

        fxoDiagTestControlEntry  OBJECT-TYPE
            SYNTAX  FxoDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of FXO diagnostic control table."
            INDEX { fxoDiagTestControlIndex }
            ::= { fxoDiagTestControlTable 1 }

            FxoDiagTestControlEntry ::= SEQUENCE {
            fxoDiagTestControlIndex     LargeSlotIndex,
            fxoDiagTestControlType      INTEGER,
            fxoDiagTestControlRemainTime    INTEGER
        }

        fxoDiagTestControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoDiagTestControlEntry 1 }

        fxoDiagTestControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    off-hook-test(2),
                    pulse-decode-level-scan(3),
                    apply-detected-pulse-decode-level(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXO Test Button"
            ::= { fxoDiagTestControlEntry 2 }

        fxoDiagTestControlRemainTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remain time (sec)"
            ::= { fxoDiagTestControlEntry 3 }



--
--  FXO Command Control Table
--

        fxoCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { fxo-card 6 }

        fxoCommandControlEntry  OBJECT-TYPE
            SYNTAX  FxoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { fxoCommandControlIndex }
            ::= { fxoCommandControlTable 1 }

            FxoCommandControlEntry ::= SEQUENCE {
            fxoCommandControlIndex      LargeSlotIndex,
            fxoCommandControlReset      INTEGER,
            fxoCommandControlLoadDefault    INTEGER
        }

        fxoCommandControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoCommandControlEntry 1 }

        fxoCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default FXO CONF"
            ::= { fxoCommandControlEntry 2 }

        fxoCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: FXO Card Reset"
            ::= { fxoCommandControlEntry 3 }


  --    FXO Per Port Signaling Config Control Table


        fxoNewPerPortSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoNewPerPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Signaling Configuration Control Table"
            ::= { fxo-card 7 }

        fxoNewPerPortSigSetEntry  OBJECT-TYPE
            SYNTAX  FxoNewPerPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per port signaling configuration control entry"
            INDEX { fxoNewPerPortSigSetIndex ,
        fxoNewPerPortSigSetPort ,
        fxoNewPerPortSigSetItemIndex }
            ::= { fxoNewPerPortSigSetTable 1 }

            FxoNewPerPortSigSetEntry ::= SEQUENCE {
            fxoNewPerPortSigSetIndex LargeSlotIndex,
            fxoNewPerPortSigSetPort      TwelvePortID,
            fxoNewPerPortSigSetItemIndex INTEGER,
            fxoNewPerPortSigSetSigBit        DisplayString
        }

        fxoNewPerPortSigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoNewPerPortSigSetEntry 1 }

        fxoNewPerPortSigSetPort   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxoNewPerPortSigSetEntry 2 }

        fxoNewPerPortSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ringing(1),
                    no-ring(2),
                    batt-rev(3),
                    pulse-on(4),
                    tip-open(5),
                    off-hook(6),
                    oos-alarm(7),
                    ring-gnd(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ringing, no-ring, batt-rev, pulse-on, tip-open, off-hook, oos-on, ring-gnd "
            ::= { fxoNewPerPortSigSetEntry 3 }

        fxoNewPerPortSigSetSigBit   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { fxoNewPerPortSigSetEntry 4 }

--
--  FXO SigMode Control Table
--

        fxoNewSigModeControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoNewSigModeControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The SigMode control table."
            ::= { fxo-card 8 }

        fxoNewSigModeControlEntry  OBJECT-TYPE
            SYNTAX  FxoNewSigModeControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the SigMode control table."
            INDEX { fxoNewSigModeControlIndex }
            ::= { fxoNewSigModeControlTable 1 }

            FxoNewSigModeControlEntry ::= SEQUENCE {
            fxoNewSigModeControlIndex      LargeSlotIndex,
            fxoNewSigModeControlMode      INTEGER
        }

        fxoNewSigModeControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoNewSigModeControlEntry 1 }

        fxoNewSigModeControlMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    perCard(1),
                    perPort(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SigMode Mode"
            ::= { fxoNewSigModeControlEntry 2 }


--
--      FXO NEW Per Port Config Control Table
--

        fxoNewPerPortSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoNewPerPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO New Per Port Configuration Control Table"
            ::= { fxo-card 9 }

        fxoNewPerPortSetEntry  OBJECT-TYPE
            SYNTAX  FxoNewPerPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Configuration control entry"
            INDEX { fxoNewPerPortSetIndex ,
        fxoNewPerPortSetPortIndex }
            ::= { fxoNewPerPortSetTable 1 }

            FxoNewPerPortSetEntry ::= SEQUENCE {
            fxoNewPerPortSetIndex    LargeSlotIndex,
            fxoNewPerPortSetPortIndex    TwelvePortID,
            fxoNewPerPortSetTrunk     INTEGER,
            fxoNewPerPortSetPolarity  INTEGER
        }

        fxoNewPerPortSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoNewPerPortSetEntry 1 }

        fxoNewPerPortSetPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxoNewPerPortSetEntry 2 }

        fxoNewPerPortSetTrunk       OBJECT-TYPE
            SYNTAX  INTEGER {
                    onHook(1),
                    offHook(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port Trunk Condition "
            ::= { fxoNewPerPortSetEntry 3 }

        fxoNewPerPortSetPolarity   OBJECT-TYPE
            SYNTAX  INTEGER {
                    reverse(1),
                    normal(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per Port Line polarity "
            ::= { fxoNewPerPortSetEntry 4 }


--
--      FXOA Per Port Diag InfoTable
--

        fxoNewInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoNewInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "E&M Diag Info Table"
            ::= { fxo-card 10 }

        fxoNewInfoEntry  OBJECT-TYPE
            SYNTAX  FxoNewInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Diag Infoentry"
            INDEX { fxoNewInfoIndex ,
        fxoNewInfoPortIndex }
            ::= { fxoNewInfoTable 1 }

            FxoNewInfoEntry ::= SEQUENCE {
            fxoNewInfoIndex              LargeSlotIndex,
            fxoNewInfoPortIndex        TwelvePortID,
            fxoNewInfoRing            EMOffOn,
            fxoNewInfoOffHook           EMOffOn,
            fxoNewInfoLine               EMOffOn,
            fxoNewInfoRingGND              EMOffOn,
            fxoNewInfoBattRev              EMOffOn,
            fxoNewInfoPulseOn              EMOffOn,
            fxoNewInfoAlarm              EMOffOn,
            fxoNewInfoTx               DisplayString,
            fxoNewInfoRx              DisplayString,
            fxoNewInfoVoltage         DisplayString
        }

        fxoNewInfoIndex OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoNewInfoEntry 1 }

        fxoNewInfoPortIndex    OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxoNewInfoEntry 2 }


        fxoNewInfoRing    OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ring "
            ::= { fxoNewInfoEntry 3}

        fxoNewInfoOffHook   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " off hook "
            ::= { fxoNewInfoEntry 4}

        fxoNewInfoLine     OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " line broken "
            ::= { fxoNewInfoEntry 5}

        fxoNewInfoRingGND   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ring ground "
            ::= { fxoNewInfoEntry 6}

        fxoNewInfoBattRev      OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Battery reverse "
            ::= { fxoNewInfoEntry 7}


        fxoNewInfoPulseOn     OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Pulse On "
            ::= { fxoNewInfoEntry 8}


        fxoNewInfoAlarm       OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm"
            ::= { fxoNewInfoEntry 9}


        fxoNewInfoTx       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { fxoNewInfoEntry 10 }

        fxoNewInfoRx       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { fxoNewInfoEntry 11}

        fxoNewInfoVoltage       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port Line Voltage"
            ::= { fxoNewInfoEntry 12}



--
-- FXOA Line Diagnostic Control Table
--

        fxoNewDiagSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoNewDiagSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXOA Diagnostic Control Table."
            ::= { fxo-card 11 }

        fxoNewDiagSetEntry  OBJECT-TYPE
            SYNTAX  FxoNewDiagSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of FXO diagnostic control table."
            INDEX { fxoNewDiagSetSlot }
            ::= { fxoNewDiagSetTable 1 }

            FxoNewDiagSetEntry ::= SEQUENCE {
            fxoNewDiagSetSlot          LargeSlotIndex,
            fxoNewDiagSetTest           INTEGER,
            fxoNewDiagSetPeriod          INTEGER,
            fxoNewDiagSetRemain           INTEGER

    }

        fxoNewDiagSetSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoNewDiagSetEntry 1 }

        fxoNewDiagSetTest    OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    offHookTest(2),
                    ringTest(3),
                    battRevTest(4),
                    pulseOnTest(5),
                    tipOpenTest(6),
                    loopback(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { fxoNewDiagSetEntry 2 }


        fxoNewDiagSetPeriod    OBJECT-TYPE
            SYNTAX  INTEGER {
                    sec10(1),
                    sec60(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M  Test Button"
            ::= { fxoNewDiagSetEntry 3 }

        fxoNewDiagSetRemain    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { fxoNewDiagSetEntry 4 }


--
--      FXO Per Port Enable/Disable Control Table
--

        fxoPortEnableTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Enable Table"
            ::= { fxo-card 12 }

        fxoPortEnableEntry  OBJECT-TYPE
            SYNTAX  FxoPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FXO Per Port Enable entry"
            INDEX { fxoPortEnableIndex ,
        fxoPortEnablePort }
            ::= { fxoPortEnableTable 1 }

            FxoPortEnableEntry ::= SEQUENCE {
            fxoPortEnableIndex      LargeSlotIndex,
            fxoPortEnablePort       TwelvePortID,
            fxoPortEnable           INTEGER
        }

        fxoPortEnableIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoPortEnableEntry 1 }

        fxoPortEnablePort   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { fxoPortEnableEntry 2 }

        fxoPortEnable   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " port enable/disable"
            ::= { fxoPortEnableEntry 3 }

--
-- FXOA Line Diagnostic Control Table
--

        fxoBertControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "FXOA Bert Control Table."
            ::= { fxo-card 13 }

        fxoBertControlEntry  OBJECT-TYPE
            SYNTAX  FxoBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of FXO Bert control table."
            INDEX { fxoBertControlSlot }
            ::= { fxoBertControlTable 1 }

        FxoBertControlEntry ::= SEQUENCE {
            fxoBertControlSlot          LargeSlotIndex,
            fxoBertControlMode           INTEGER,
            fxoBertControlPort           INTEGER,
            fxoBertControlType           INTEGER,
--            fxoBertControlSpilt          INTEGER,
            fxoBertControlPattern        DisplayString,
            fxoBertControlPeriod         INTEGER,
            fxoBertControlStatus         INTEGER,
            fxoBertControlSync           INTEGER,
            fxoBertControlError          INTEGER,
            fxoBertControlTime           INTEGER,
            fxoBertControlES             INTEGER,
            fxoBertControlSES            INTEGER,
            fxoBertControlUS             INTEGER
       }

        fxoBertControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoBertControlEntry 1 }

        fxoBertControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    bert(2),
                    loopback(3),
                    reset(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Mode Select"
            ::= { fxoBertControlEntry 2 }

        fxoBertControlPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    p9(9),
                    p10(10),
                    p11(11),
                    p12(12)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { fxoBertControlEntry 3 }

        fxoBertControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    --off(1),
                    prbs2exp20of1(2),
                    prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5),
                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { fxoBertControlEntry 4 }

--        fxoBertControlSpilt  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    sendAIS(1),
--                    no(2)
--                }
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert Spilt Mode"
--            ::= { fxoBertControlEntry 5 }

        fxoBertControlPattern  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert User Pattern"
            ::= { fxoBertControlEntry 6 }

        fxoBertControlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { fxoBertControlEntry 7 }

        fxoBertControlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bert(2),
                    loopback(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { fxoBertControlEntry 8 }

        fxoBertControlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { fxoBertControlEntry 9 }

        fxoBertControlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { fxoBertControlEntry 10 }

        fxoBertControlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { fxoBertControlEntry 11 }

        fxoBertControlES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Error Second"
            ::= { fxoBertControlEntry 12 }

        fxoBertControlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert SES"
            ::= { fxoBertControlEntry 13 }

        fxoBertControlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Unsync Second"
            ::= { fxoBertControlEntry 14 }                                    


--
-- FXOA Self Test Control Table
--

        fxoSelfTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FxoSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "FXO SelfTest Control Table."
            ::= { fxo-card 14 }

        fxoSelfTestControlEntry  OBJECT-TYPE
            SYNTAX  FxoSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of FXO SelfTest control table."
            INDEX { fxoSelfTestSlot }
            ::= { fxoSelfTestControlTable 1 }

        FxoSelfTestControlEntry ::= SEQUENCE {
            fxoSelfTestSlot          LargeSlotIndex,
            fxoSelfTestP1           INTEGER,
            fxoSelfTestP2           INTEGER,
            fxoSelfTestP3           INTEGER,
            fxoSelfTestP4           INTEGER,
            fxoSelfTestP5           INTEGER,
            fxoSelfTestP6           INTEGER,
            fxoSelfTestP7           INTEGER,
            fxoSelfTestP8           INTEGER,
            fxoSelfTestP9           INTEGER,
            fxoSelfTestP10           INTEGER,
            fxoSelfTestP11           INTEGER,
            fxoSelfTestP12           INTEGER,
            fxoSelfTestConfirm           INTEGER,
            fxoSelfTestStatus           INTEGER,
            fxoSelfTestResult           DisplayString,
            fxoSelfTestTestType1           INTEGER,
            fxoSelfTestTestRes1           DisplayString,
            fxoSelfTestTestType2           INTEGER,
            fxoSelfTestTestRes2           DisplayString,
            fxoSelfTestTestType3           INTEGER,
            fxoSelfTestTestRes3           DisplayString
       }

        fxoSelfTestSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fxoSelfTestControlEntry 1 }

        fxoSelfTestP1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 2 }

        fxoSelfTestP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 3 }

        fxoSelfTestP3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 4 }

        fxoSelfTestP4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 5 }

        fxoSelfTestP5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 6 }

        fxoSelfTestP6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 7 }

        fxoSelfTestP7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 8 }

        fxoSelfTestP8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 9 }

        fxoSelfTestP9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 10 }

        fxoSelfTestP10  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { fxoSelfTestControlEntry 11 }

        fxoSelfTestP11  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 12 }


        fxoSelfTestP12  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 13 }

        fxoSelfTestConfirm           OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { fxoSelfTestControlEntry 14 }

        fxoSelfTestStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    testing(2),
                    finish(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxoSelfTestControlEntry 15 }

        fxoSelfTestResult           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxoSelfTestControlEntry 16 }

        fxoSelfTestTestType1           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    onHookVoltTest(2),
                    offHookVoltTest(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxoSelfTestControlEntry 17 }

        fxoSelfTestTestRes1           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxoSelfTestControlEntry 18 }

        fxoSelfTestTestType2           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    onHookVoltTest(2),
                    offHookVoltTest(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxoSelfTestControlEntry 19 }

        fxoSelfTestTestRes2           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxoSelfTestControlEntry 20 }

        fxoSelfTestTestType3           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    onHookVoltTest(2),
                    offHookVoltTest(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { fxoSelfTestControlEntry 21 }

        fxoSelfTestTestRes3           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { fxoSelfTestControlEntry 22 }

        fxoTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of FXO"
            ::= { fxo-card 100 }


--======================================================================--
--======================================================================--
--  mag-card MIB
--======================================================================--
-- Magneto Card

--    magAllPortConfigControlTable        OBJECT IDENTIFIER ::= { mag-card 1 }
--    magAllPortSigConfigControlTable     OBJECT IDENTIFIER ::= { mag-card 2 }
--    magPerPortConfigControlTable        OBJECT IDENTIFIER ::= { mag-card 3 }
--    magPortStatusTable                  OBJECT IDENTIFIER ::= { mag-card 4 }
--    magDiagTestControlTable             OBJECT IDENTIFIER ::= { mag-card 5 }
--    magCommandControlTable              OBJECT IDENTIFIER ::= { mag-card 6 }
--======================================================================--

--
--      MAG All Port Config Control Table
--

        magAllPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG All Port Configuration Control Table"
            ::= { mag-card 1 }

        magAllPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  MagAllPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG all port configuration control entry"
            INDEX { magAllPortConfigControlIndex }
            ::= { magAllPortConfigControlTable 1 }

            MagAllPortConfigControlEntry ::= SEQUENCE {
            magAllPortConfigControlIndex    LargeSlotIndex,
            magAllPortConfigControlRing-Mode    INTEGER,
            magAllPortConfigControlA-u-law      INTEGER,
            magAllPortConfigControlImpedance    INTEGER,
            magAllPortConfigControlTx-gain      DisplayString,
            magAllPortConfigControlRx-gain      DisplayString,
            magAllPortConfigControlRing-cadence INTEGER
        }

        magAllPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magAllPortConfigControlEntry 1 }

        magAllPortConfigControlRing-Mode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ring-across-l1-l2-only(2),
                    ring-across-l1-gnd-only(3),
                    ring-across-l1-l2-and-l1-gnd(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Ring Mode "
            ::= { magAllPortConfigControlEntry 2 }

        magAllPortConfigControlA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { magAllPortConfigControlEntry 3 }

        magAllPortConfigControlImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { magAllPortConfigControlEntry 4 }

        magAllPortConfigControlTx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TX-GAIN "
            ::= { magAllPortConfigControlEntry 5 }

        magAllPortConfigControlRx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RX-GAIN "
            ::= { magAllPortConfigControlEntry 6 }

        magAllPortConfigControlRing-cadence   OBJECT-TYPE
            SYNTAX  INTEGER {
                    cadence-1-on-2-off(1),
                    cadence-2-on-4-off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ring Cadence "
            ::= { magAllPortConfigControlEntry 7 }


--
--      MAG All Port Signaling Config Control Table
--

        magAllPortSigConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG All Port Signaling Configuration Control Table"
            ::= { mag-card 2 }

        magAllPortSigConfigControlEntry  OBJECT-TYPE
            SYNTAX  MagAllPortSigConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG all port signaling configuration control entry"
            INDEX { magAllPortSigConfigControlIndex ,
        magAllPortSigConfigControlItemIndex ,
        magAllPortSigConfigControlSigBitIndex }
            ::= { magAllPortSigConfigControlTable 1 }

            MagAllPortSigConfigControlEntry ::= SEQUENCE {
            magAllPortSigConfigControlIndex LargeSlotIndex,
            magAllPortSigConfigControlItemIndex INTEGER,
            magAllPortSigConfigControlSigBitIndex   INTEGER,
            magAllPortSigConfigControlSigBit        INTEGER
        }

        magAllPortSigConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magAllPortSigConfigControlEntry 1 }

        magAllPortSigConfigControlItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ring-l1-l2(1),
                    tx-ring-l1-gnd(2),
                    plar-tx-ring-l1-l2(3),
                    plar-tx-ring-l1-gnd(4),
                    no-tx-ring(5),
                    rx-ring-l1-l2(6),
                    rx-ring-l1-gnd(7),
                    plar-rx-ring-l1-l2(8),
                    plar-rx-ring-l1-gnd(9),
                    oos-alarm(10)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { magAllPortSigConfigControlEntry 2 }

        magAllPortSigConfigControlSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { magAllPortSigConfigControlEntry 3 }

        magAllPortSigConfigControlSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { magAllPortSigConfigControlEntry 4 }



--
--      MAG Per Port Config Control Table
--

        magPerPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Per Port Configuration Control Table"
            ::= { mag-card 3 }

        magPerPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  MagPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Per Port Configuration control entry"
            INDEX { magPerPortConfigControlIndex ,
        magPerPortConfigControlPortIndex }
            ::= { magPerPortConfigControlTable 1 }

            MagPerPortConfigControlEntry ::= SEQUENCE {
            magPerPortConfigControlIndex    LargeSlotIndex,
            magPerPortConfigControlPortIndex    TwelvePortID,
            magPerPortConfigControlPLAR         INTEGER
        }

        magPerPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magPerPortConfigControlEntry 1 }

        magPerPortConfigControlPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { magPerPortConfigControlEntry 2 }

        magPerPortConfigControlPLAR   OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port PLAR setting "
            ::= { magPerPortConfigControlEntry 3 }


--
--      MAG Port Status Table
--

        magPortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Port Status Table"
            ::= { mag-card 4 }

        magPortStatusEntry  OBJECT-TYPE
            SYNTAX  MagPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Port Status entry"
            INDEX { magPortStatusIndex ,
        magPortStatusItemIndex ,
        magPortStatusPortIndex }
            ::= { magPortStatusTable 1 }

            MagPortStatusEntry ::= SEQUENCE {
            magPortStatusIndex          LargeSlotIndex,
            magPortStatusItemIndex      INTEGER,
            magPortStatusPortIndex      TwelvePortID,
            magPortStatusStatus         INTEGER
        }

        magPortStatusIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magPortStatusEntry 1 }

        magPortStatusItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-ring-l1-l2(1),
                    tx-ring-l1-gnd(2),
                    rx-ring-l1-l2(3),
                    rx-ring-l1-gnd(4),
                    plar-on(5),
                    alarm-on(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { magPortStatusEntry 2 }

        magPortStatusPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " port index 1-12 "
            ::= { magPortStatusEntry 3 }

        magPortStatusStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Status "
            ::= { magPortStatusEntry 4 }


--
--      MAG Line Diagnostic Control Table
--

        magDiagTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Diagnostic Control Table."
            ::= { mag-card 5 }

        magDiagTestControlEntry  OBJECT-TYPE
            SYNTAX  MagDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of MAG diagnostic control table."
            INDEX { magDiagTestControlIndex }
            ::= { magDiagTestControlTable 1 }

            MagDiagTestControlEntry ::= SEQUENCE {
            magDiagTestControlIndex     LargeSlotIndex,
            magDiagTestControlType      INTEGER,
            magDiagTestControlRemainTime    INTEGER
        }

        magDiagTestControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magDiagTestControlEntry 1 }

        magDiagTestControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    rx-ring-l1-l2-test(2),
                    rx-ring-l1-gnd-test(3),
                    tx-ring-test(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MAG Test"
            ::= { magDiagTestControlEntry 2 }

        magDiagTestControlRemainTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remain time (sec)"
            ::= { magDiagTestControlEntry 3 }



--
--  MAG Command Control Table
--

        magCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { mag-card 6 }

        magCommandControlEntry  OBJECT-TYPE
            SYNTAX  MagCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { magCommandControlIndex }
            ::= { magCommandControlTable 1 }

            MagCommandControlEntry ::= SEQUENCE {
            magCommandControlIndex      LargeSlotIndex,
            magCommandControlReset      INTEGER,
            magCommandControlLoadDefault    INTEGER
        }

        magCommandControlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magCommandControlEntry 1 }

        magCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default MAG CONF"
            ::= { magCommandControlEntry 2 }

        magCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: MAG Card Reset"
            ::= { magCommandControlEntry 3 }


--
--      MAG-A All Port Config Control Table
--

        magaAllPortSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaAllPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A All Port Configuration Control Table"
            ::= { mag-card 7 }

        magaAllPortSetEntry  OBJECT-TYPE
            SYNTAX  MagaAllPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A all port configuration control entry"
            INDEX { magaAllPortSetIndex }
            ::= { magaAllPortSetTable 1 }

            MagaAllPortSetEntry ::= SEQUENCE {
            magaAllPortSetIndex    LargeSlotIndex,
            magaAllPortSetAuLaw  INTEGER,
            magaAllPortSetImpedance    INTEGER
        }

        magaAllPortSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaAllPortSetEntry 1 }

        magaAllPortSetAuLaw   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { magaAllPortSetEntry 2 }

        magaAllPortSetImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { magaAllPortSetEntry 3 }


--
--      MAG-A All Port Signaling Config Control Table
--

        magaSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A All Port Signaling Configuration Control Table"
            ::= { mag-card 8 }

        magaSigSetEntry  OBJECT-TYPE
            SYNTAX  MagaSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " MAG-A all port signaling configuration control entry"
            INDEX { magaSigSetIndex ,
        magaSigSetItemIndex ,
        magaSigSetSigBitIndex }
            ::= { magaSigSetTable 1 }

            MagaSigSetEntry ::= SEQUENCE {
            magaSigSetIndex         LargeSlotIndex,
            magaSigSetItemIndex     INTEGER,
            magaSigSetSigBitIndex   INTEGER,
            magaSigSetSigBit        INTEGER
        }

        magaSigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaSigSetEntry 1 }

        magaSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    crankStop(1),
                    crankStart(2),
                    crankStartPLAR(3),
                    noRing(4),
                    ringing(5),
                    plarRinging(6),
                    oosAlarm(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "MAG-A signaling setup "
            ::= { magaSigSetEntry 2 }

        magaSigSetSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { magaSigSetEntry 3 }

        magaSigSetSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { magaSigSetEntry 4 }



--
--      MAG-A Per Port Config Control Table
--

        magaPortSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A Per Port Configuration Control Table"
            ::= { mag-card 9 }

        magaPortSetEntry  OBJECT-TYPE
            SYNTAX  MagaPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A Per Port Configuration control entry"
            INDEX { magaPortSetIndex ,
        magaPortSetPortIndex }
            ::= { magaPortSetTable 1 }

            MagaPortSetEntry ::= SEQUENCE {
            magaPortSetIndex    LargeSlotIndex,
            magaPortSetPortIndex    TwelvePortID ,
            magaPortSetTxGain      DisplayString,
            magaPortSetRxGain      DisplayString,
            magaPortSetPLAR         INTEGER,
            magaPortStopWatch       INTEGER,
            magaPortPLARStopWatch       INTEGER,
            magaPortSetRingerLine      INTEGER
        }

        magaPortSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaPortSetEntry 1 }

        magaPortSetPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { magaPortSetEntry 2 }

        magaPortSetTxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { magaPortSetEntry 3 }

        magaPortSetRxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { magaPortSetEntry 4 }

        magaPortSetPLAR   OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port PLAR setting "
            ::= { magaPortSetEntry 5 }

        magaPortStopWatch OBJECT-TYPE
            SYNTAX INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " StopWatch N/A, 0.7s, 1.0s, 1.5s, 2.0s  "
            ::= { magaPortSetEntry 6 }

        magaPortPLARStopWatch OBJECT-TYPE
            SYNTAX INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " StopWatch Plar N/A, 0.7s, 1.0s, 1.5s, 2.0s "
            ::= { magaPortSetEntry 7 }

        magaPortSetRingerLine    OBJECT-TYPE
            SYNTAX INTEGER {
                    l1-l2(1),
                    l1-gnd(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ringer Across Line "
            ::= { magaPortSetEntry 8 }

--
--      MAG-A Per Port Diag InfoTable
--

        magaDiagInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A Diag Info Table"
            ::= { mag-card 10 }

        magaDiagInfoEntry  OBJECT-TYPE
            SYNTAX  MagaDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A Diag Infoentry"
            INDEX { magaDiagInfoIndex ,
        magaDiagInfoPort }
            ::= { magaDiagInfoTable 1 }

        MagaDiagInfoEntry ::= SEQUENCE {
            magaDiagInfoIndex              LargeSlotIndex,
            magaDiagInfoPort        TwelvePortID ,
            magaDiagInfoAuLaw           INTEGER,
            magaDiagInfoIMP             INTEGER,
            magaDiagInfoCrank            EMOffOn,
            magaDiagInfoRingSig           EMOffOn,
            magaDiagInfoAIS               EMOffOn,
            magaDiagInfoOOS              EMOffOn,
            magaDiagInfoRingerLine        INTEGER,
            magaDiagInfoRingDuration       INTEGER,
            magaDiagInfoPlar      INTEGER,
            magaDiagInfoInputPW           INTEGER,
            magaDiagInfoPWStatus           INTEGER,
            magaDiagInfoRingerGen           INTEGER,
            magaDiagInfoRingerStatus           INTEGER,
            magaDiagInfoTx               DisplayString,
            magaDiagInfoRx              DisplayString
        }

        magaDiagInfoIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaDiagInfoEntry 1 }

        magaDiagInfoPort        OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { magaDiagInfoEntry 2 }

        magaDiagInfoAuLaw           OBJECT-TYPE
            SYNTAX  INTEGER {
                    aLaw(1),
                    uLaw(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " A u Law"
            ::= { magaDiagInfoEntry 3}

        magaDiagInfoIMP             OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp900(1),
                    imp600(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Impedance"
            ::= { magaDiagInfoEntry 4}

        magaDiagInfoCrank            OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Crank "
            ::= { magaDiagInfoEntry 5}

        magaDiagInfoRingSig           OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Ring Signal "
            ::= { magaDiagInfoEntry 6}

        magaDiagInfoAIS               OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " AIS alarm"
            ::= { magaDiagInfoEntry 7}

        magaDiagInfoOOS              OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OOS alarm "
            ::= { magaDiagInfoEntry 8}

        magaDiagInfoRingerLine        OBJECT-TYPE
            SYNTAX  INTEGER {
                    l1-l2(1),
                    l1-gnd(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { magaDiagInfoEntry 9}

        magaDiagInfoRingDuration       OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Ring Duration"
            ::= { magaDiagInfoEntry 10}

        magaDiagInfoPlar      OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " PLAR "
            ::= { magaDiagInfoEntry 11}

        magaDiagInfoInputPW           OBJECT-TYPE
            SYNTAX  INTEGER {
                    plusMinus48v(1),
                    plusMinus24v(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " INPUT POWER"
            ::= { magaDiagInfoEntry 12}

        magaDiagInfoPWStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { magaDiagInfoEntry 13}

        magaDiagInfoRingerGen           OBJECT-TYPE
            SYNTAX  INTEGER {
                    vac-76-and-16-7Hz(1),
                    vac-76-and-20-0Hz(2),
                    vac-76-and-50-0Hz(3),
                    vac-76-and-25-0Hz(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " RingerGen"
            ::= { magaDiagInfoEntry 14}

        magaDiagInfoRingerStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { magaDiagInfoEntry 15}

        magaDiagInfoTx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { magaDiagInfoEntry 16 }

        magaDiagInfoRx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { magaDiagInfoEntry 17}

--
-- MAG-A Line Diagnostic Control Table
--

        magaDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG-A Diagnostic Control Table."
            ::= { mag-card 11 }

        magaDiagControlEntry  OBJECT-TYPE
            SYNTAX  MagaDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of MAG-A diagnostic control table."
            INDEX { magaDiagControlSlot }
            ::= { magaDiagControlTable 1 }

        MagaDiagControlEntry ::= SEQUENCE {
            magaDiagControlSlot          LargeSlotIndex,
            magaDiagControlTest           INTEGER,
            magaDiagControlRemain           INTEGER

    }

        magaDiagControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaDiagControlEntry 1 }

        magaDiagControlTest  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    crank-test(2),
                    ring-test(3),
                    channel-swap(4),
                    loopback(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MAG-A  Test Button"
            ::= { magaDiagControlEntry 2 }

        magaDiagControlRemain  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { magaDiagControlEntry 3 }


--
--      MAGA Per Port Enable/Disable Control Table
--

        magaPortEnableTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagaPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAGA Per Port Enable Table"
            ::= { mag-card 12 }

        magaPortEnableEntry  OBJECT-TYPE
            SYNTAX  MagaPortEnableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAGA Per Port Enable entry"
            INDEX { magaPortEnableIndex ,
        magaPortEnablePort }
            ::= { magaPortEnableTable 1 }

            MagaPortEnableEntry ::= SEQUENCE {
            magaPortEnableIndex      LargeSlotIndex,
            magaPortEnablePort       TwelvePortID,
            magaPortEnable           INTEGER
        }

        magaPortEnableIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magaPortEnableEntry 1 }

        magaPortEnablePort   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { magaPortEnableEntry 2 }

        magaPortEnable   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " port enable/disable"
            ::= { magaPortEnableEntry 3 }

--    MAG Per Port Signaling Config Control Table


        magPortSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Per Port Signaling Configuration Control Table"
            ::= { mag-card 13}

        magPortSigSetEntry  OBJECT-TYPE
            SYNTAX  MagPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MAG Per port signaling configuration control entry"
            INDEX { magPortSigSetIndex ,
        magPortSigSetPort ,
        magPortSigSetItemIndex }
            ::= { magPortSigSetTable 1 }

            MagPortSigSetEntry ::= SEQUENCE {
            magPortSigSetIndex LargeSlotIndex,
            magPortSigSetPort      TwelvePortID,
            magPortSigSetItemIndex INTEGER,
            magPortSigSetSigBit        DisplayString
        }

        magPortSigSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magPortSigSetEntry 1 }

        magPortSigSetPort   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { magPortSigSetEntry 2 }

        magPortSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    crankStop(1),
                    crankStart(2),
                    crankStartPLAR(3),
                    noRing(4),
                    ringing(5),
                    plarRinging(6),
                    oosAlarm(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " MAG-A signaling setup "
            ::= { magPortSigSetEntry 3 }

        magPortSigSetSigBit   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { magPortSigSetEntry 4 }

--
--  MAG SetupMode Control Table
--

        magSetupModeSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Setup Mode control table."
            ::= { mag-card 14 }

        magSetupModeSetEntry  OBJECT-TYPE
            SYNTAX  MagSetupModeSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Setup Mode control table."
            INDEX { magSetupModeSetIndex }
            ::= { magSetupModeSetTable 1 }

            MagSetupModeSetEntry ::= SEQUENCE {
            magSetupModeSetIndex      LargeSlotIndex,
            magSetupModeSetSigMode      INTEGER
        }

        magSetupModeSetIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magSetupModeSetEntry 1 }

        magSetupModeSetSigMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    perCard(1),
                    perPort(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SigMode Mode"
            ::= { magSetupModeSetEntry 2 }


--
-- MAG-A Bert Control Table
--

        magBertControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "MAG-A Bert Control Table."
            ::= { mag-card 15 }

        magBertControlEntry  OBJECT-TYPE
            SYNTAX  MagBertControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of MAG-A Bert control table."
            INDEX { magBertControlSlot }
            ::= { magBertControlTable 1 }

        MagBertControlEntry ::= SEQUENCE {
            magBertControlSlot          LargeSlotIndex,
            magBertControlMode           INTEGER,
            magBertControlPort           INTEGER,
            magBertControlType           INTEGER,
--            magBertControlSpilt          INTEGER,
            magBertControlPattern        DisplayString,
            magBertControlPeriod         INTEGER,
            magBertControlStatus         INTEGER,
            magBertControlSync           INTEGER,
            magBertControlError          INTEGER,
            magBertControlTime           INTEGER,
            magBertControlES             INTEGER,
            magBertControlSES            INTEGER,
            magBertControlUS             INTEGER
       }

        magBertControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magBertControlEntry 1 }

        magBertControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    bert(2),
                    loopback(3),
                    reset(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Mode Select"
            ::= { magBertControlEntry 2 }

        magBertControlPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    p1(1),
                    p2(2),
                    p3(3),
                    p4(4),
                    p5(5),
                    p6(6),
                    p7(7),
                    p8(8),
                    p9(9),
                    p10(10),
                    p11(11),
                    p12(12)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { magBertControlEntry 3 }

        magBertControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1), --//RIKER2021 SilverCreek
                    prbs2exp20of1(2),
                    prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5),
                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { magBertControlEntry 4 }

--        magBertControlSpilt  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    sendAIS(1),
--                    no(2)
--                }
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert Spilt Mode"
--            ::= { magBertControlEntry 5 }

        magBertControlPattern  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert User Pattern"
            ::= { magBertControlEntry 6 }

        magBertControlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { magBertControlEntry 7 }

        magBertControlStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bert(2),
                    loopback(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { magBertControlEntry 8 }

        magBertControlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { magBertControlEntry 9 }

        magBertControlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { magBertControlEntry 10 }

        magBertControlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { magBertControlEntry 11 }

        magBertControlES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Error Second"
            ::= { magBertControlEntry 12 }

        magBertControlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert SES"
            ::= { magBertControlEntry 13 }

        magBertControlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bert Unsync Second"
            ::= { magBertControlEntry 14 }                                    


--
-- MAG-A Self Test Control Table
--

        magSelfTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MagSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "MAG-A SelfTest Control Table."
            ::= { mag-card 16 }

        magSelfTestControlEntry  OBJECT-TYPE
            SYNTAX  MagSelfTestControlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of MAG-A SelfTest control table."
            INDEX { magSelfTestSlot }
            ::= { magSelfTestControlTable 1 }

        MagSelfTestControlEntry ::= SEQUENCE {
            magSelfTestSlot          LargeSlotIndex,
            magSelfTestP1           INTEGER,
            magSelfTestP2           INTEGER,
            magSelfTestP3           INTEGER,
            magSelfTestP4           INTEGER,
            magSelfTestP5           INTEGER,
            magSelfTestP6           INTEGER,
            magSelfTestP7           INTEGER,
            magSelfTestP8           INTEGER,
            magSelfTestP9           INTEGER,
            magSelfTestP10           INTEGER,
            magSelfTestP11           INTEGER,
            magSelfTestP12           INTEGER,
            magSelfTestConfirm           INTEGER,
            magSelfTestStatus           INTEGER,
            magSelfTestResult           DisplayString,
            magSelfTestTestType1           INTEGER,
            magSelfTestTestRes1           DisplayString,
            magSelfTestTestType2           INTEGER,
            magSelfTestTestRes2           DisplayString,
            magSelfTestTestType3           INTEGER,
            magSelfTestTestRes3           DisplayString
       }

        magSelfTestSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { magSelfTestControlEntry 1 }

        magSelfTestP1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 2 }

        magSelfTestP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 3 }

        magSelfTestP3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 4 }

        magSelfTestP4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 5 }

        magSelfTestP5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 6 }

        magSelfTestP6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 7 }

        magSelfTestP7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 8 }

        magSelfTestP8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 9 }

        magSelfTestP9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 10 }

        magSelfTestP10  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Port Select"
            ::= { magSelfTestControlEntry 11 }

        magSelfTestP11  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 12 }


        magSelfTestP12  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 13 }

        magSelfTestConfirm           OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                " Port Select"
            ::= { magSelfTestControlEntry 14 }

        magSelfTestStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    testing(2),
                    finish(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { magSelfTestControlEntry 15 }

        magSelfTestResult           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { magSelfTestControlEntry 16 }

        magSelfTestTestType1           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    powerTest(2)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { magSelfTestControlEntry 17 }

        magSelfTestTestRes1           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { magSelfTestControlEntry 18 }

        magSelfTestTestType2           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    powerTest(2)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { magSelfTestControlEntry 19 }

        magSelfTestTestRes2           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { magSelfTestControlEntry 20 }

        magSelfTestTestType3           OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    powerTest(2)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port Select"
            ::= { magSelfTestControlEntry 21 }

        magSelfTestTestRes3           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Test Result"
            ::= { magSelfTestControlEntry 22 }



        magTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 12MAG"
            ::= { mag-card 100 }


--======================================================================--
--======================================================================--
--  quad-e1-card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        qe1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { qe1-card 1 }

        qe1LineControlEntry  OBJECT-TYPE
            SYNTAX  QE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1LineControlTable 1 }

            QE1LineControlEntry ::= SEQUENCE  {
            qe1Index                    LargeSlotIndex,
            qe1PortIndex                FourPortID,
            qe1LineFrame                INTEGER,
            qe1LineCoding               INTEGER,
            qe1Interface                INTEGER,
            qe1FDL                      INTEGER,
            qe1FDLSabit                 INTEGER,
            qe1AIS                      INTEGER,
            qe1RAI                      INTEGER,
            qe1CRC                      INTEGER,
            qe1IdleCode                 INTEGER,
            qe1CASMode                  INTEGER,
            qe1SignallingMode           INTEGER,
            qe1CGA                      INTEGER,
            qe1OutOfService             INTEGER,
            qe1Protect                  INTEGER,
            qe1Master                   INTEGER,
            qe1SSMSabit                 INTEGER,
            qe1PortEnable               INTEGER
        }

        qe1Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qe1LineControlEntry 1 }

        qe1PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { qe1LineControlEntry 2 }

        qe1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { qe1LineControlEntry 3 }

        qe1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { qe1LineControlEntry 4 }

        qe1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twisted-pair(1),
                    coaxial-cable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that QE1 line use 75/120 Ohm Cable."
            ::= { qe1LineControlEntry 5 }

        qe1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fdl(1),
                    off(2),
                    hdlc(3),
                    ssm(4),
                    ssmHdlc(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 Facility Data Link ON/OFF"
            ::= { qe1LineControlEntry 6 }

        qe1FDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    sa4-5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 Facility Data Link use Sax bit"
            ::= { qe1LineControlEntry 7 }

        qe1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 line Alarm Indication Signal."
            ::= { qe1LineControlEntry 8 }

        qe1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { qe1LineControlEntry 9 }

        qe1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 Cycle Redundancy Check ON/OFF"
            ::= { qe1LineControlEntry 10 }

        qe1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { qe1LineControlEntry 11 }

        qe1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { qe1LineControlEntry 12 }

        qe1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1),
                    cd01(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS or CD01"
            ::= { qe1LineControlEntry 13 }

        qe1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { qe1LineControlEntry 14 }

        qe1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { qe1LineControlEntry 15 }

        qe1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { qe1LineControlEntry 16 }

        qe1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { qe1LineControlEntry 17 }

        qe1SSMSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    na(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 SSM Sax bit"
            ::= { qe1LineControlEntry 18 }

        qe1PortEnable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE1 port enable/disable"
            ::= { qe1LineControlEntry 19 }

--
--  User Current Performance Table
--

        qe1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { qe1-card 2 }

        qe1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  QE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1UserCurrentPerfTable 1 }

            QE1UserCurrentPerfEntry ::= SEQUENCE  {
            qe1UserCurrentPerfES        INTEGER,
            qe1UserCurrentPerfSES       INTEGER,
            qe1UserCurrentPerfBES       INTEGER,
            qe1UserCurrentPerfUAS       INTEGER,
            qe1UserCurrentPerfCSS       INTEGER,
            qe1UserCurrentPerfBPV       INTEGER,
            qe1UserCurrentPerfDMs       INTEGER,
            qe1UserCurr15MinTimeElapsed INTEGER,
            qe1UserValid15MinInterval   INTEGER
        }

        qe1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1UserCurrentPerfEntry 2 }

        qe1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1UserCurrentPerfEntry 3 }

        qe1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1UserCurrentPerfEntry 4 }

        qe1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1UserCurrentPerfEntry 5 }

        qe1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { qe1UserCurrentPerfEntry 6 }

        qe1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1UserCurrentPerfEntry 7 }

        qe1UserCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1UserCurrentPerfEntry 8 }

        qe1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { qe1UserCurrentPerfEntry 11 }

        qe1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { qe1UserCurrentPerfEntry 12 }


--
--  User Interval Performance Table
--

        qe1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { qe1-card 3 }

        qe1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  QE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { qe1Index , qe1PortIndex ,
        qe1UserIntervalPerfNumber }
            ::= { qe1UserIntervalPerfTable 1 }

            QE1UserIntervalPerfEntry ::= SEQUENCE  {
            qe1UserIntervalPerfNumber   INTEGER  (1..96),
            qe1UserIntervalPerfES       INTEGER,
            qe1UserIntervalPerfSES      INTEGER,
            qe1UserIntervalPerfBES      INTEGER,
            qe1UserIntervalPerfUAS      INTEGER,
            qe1UserIntervalPerfCSS      INTEGER,
            qe1UserIntervalPerfBPV      INTEGER,
            qe1UserIntervalPerfDMs      INTEGER
        }

        qe1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { qe1UserIntervalPerfEntry 2 }

        qe1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1UserIntervalPerfEntry 3 }

        qe1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1UserIntervalPerfEntry 4 }

        qe1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1UserIntervalPerfEntry 5 }

        qe1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1UserIntervalPerfEntry 6 }

        qe1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1UserIntervalPerfEntry 7 }

        qe1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1UserIntervalPerfEntry 8 }

        qe1UserIntervalPerfDMs   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        qe1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { qe1-card 4 }

        qe1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  QE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1UserTotalPerfTable 1 }

            QE1UserTotalPerfEntry ::= SEQUENCE  {
            qe1UserTotalPerfES          INTEGER,
            qe1UserTotalPerfSES         INTEGER,
            qe1UserTotalPerfBES         INTEGER,
            qe1UserTotalPerfUAS         INTEGER,
            qe1UserTotalPerfCSS         INTEGER,
            qe1UserTotalPerfBPV         INTEGER,
            qe1UserTotalPerfDMs         INTEGER
        }

        qe1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1UserTotalPerfEntry 2 }

        qe1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1UserTotalPerfEntry 3 }

        qe1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1UserTotalPerfEntry 4 }

        qe1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1UserTotalPerfEntry 5 }

        qe1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1UserTotalPerfEntry 6 }

        qe1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1UserTotalPerfEntry 7 }

        qe1UserTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        qe1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { qe1-card 5 }

        qe1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  QE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { qe1Index , qe1PortIndex ,
        qe1UserDaysIndex }
            ::= { qe1UserSevenDaysPerfTable 1 }

            QE1UserSevenDaysPerfEntry ::= SEQUENCE  {
            qe1UserDaysIndex            INTEGER (1..7),
            qe1UserDateStrIndex         DisplayString (SIZE (0..255) ),
            qe1UserSevenDaysPerfES      INTEGER,
            qe1UserSevenDaysPerfSES     INTEGER,
            qe1UserSevenDaysPerfBES     INTEGER,
            qe1UserSevenDaysPerfUAS     INTEGER,
            qe1UserSevenDaysPerfCSS     INTEGER,
            qe1UserSevenDaysPerfDMs     INTEGER,
            qe1UserSevenDaysPerfBPV     INTEGER
        }

        qe1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { qe1UserSevenDaysPerfEntry 2 }

        qe1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { qe1UserSevenDaysPerfEntry 3 }

        qe1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 4 }

        qe1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 5 }

        qe1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 6 }

        qe1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 7 }

        qe1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 8 }

        qe1UserSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 9 }

        qe1UserSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1UserSevenDaysPerfEntry 10 }


--
--  Line Current Performance Table
--

        qe1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { qe1-card 10 }

        qe1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  QE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1LineCurrentPerfTable 1 }

            QE1LineCurrentPerfEntry ::= SEQUENCE  {
            qe1LineCurrentPerfES        INTEGER,
            qe1LineCurrentPerfSES       INTEGER,
            qe1LineCurrentPerfBES       INTEGER,
            qe1LineCurrentPerfUAS       INTEGER,
            qe1LineCurrentPerfCSS       INTEGER,
            qe1LineCurrentPerfBPV       INTEGER,
            qe1LineCurrentPerfDMs       INTEGER,
            qe1LineCurr15MinTimeElapsed INTEGER,
            qe1LineValid15MinInterval   INTEGER
        }

        qe1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { qe1LineCurrentPerfEntry 2 }

        qe1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1LineCurrentPerfEntry 3 }

        qe1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1LineCurrentPerfEntry 4 }

        qe1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1LineCurrentPerfEntry 5 }

        qe1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1LineCurrentPerfEntry 6 }

        qe1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1LineCurrentPerfEntry 7 }

        qe1LineCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1LineCurrentPerfEntry 8 }

        qe1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { qe1LineCurrentPerfEntry 11 }

        qe1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { qe1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        qe1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { qe1-card 11 }

        qe1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  QE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { qe1Index , qe1PortIndex ,
        qe1LineIntervalPerfNumber }
            ::= { qe1LineIntervalPerfTable 1 }

            QE1LineIntervalPerfEntry ::= SEQUENCE {
            qe1LineIntervalPerfNumber   INTEGER  (1..96),
            qe1LineIntervalPerfES       INTEGER,
            qe1LineIntervalPerfSES      INTEGER,
            qe1LineIntervalPerfBES      INTEGER,
            qe1LineIntervalPerfUAS      INTEGER,
            qe1LineIntervalPerfCSS      INTEGER,
            qe1LineIntervalPerfBPV      INTEGER,
            qe1LineIntervalPerfDMs      INTEGER,
            qe1LineIntvAvailable        INTEGER
        }

        qe1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { qe1LineIntervalPerfEntry 2 }

        qe1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1LineIntervalPerfEntry 3 }

        qe1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1LineIntervalPerfEntry 4 }

        qe1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1LineIntervalPerfEntry 5 }

        qe1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1LineIntervalPerfEntry 6 }

        qe1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1LineIntervalPerfEntry 7 }

        qe1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1LineIntervalPerfEntry 8 }

        qe1LineIntervalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1LineIntervalPerfEntry 9 }

        qe1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { qe1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        qe1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { qe1-card 12 }

        qe1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  QE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1LineTotalPerfTable 1 }

            QE1LineTotalPerfEntry ::= SEQUENCE  {
            qe1LineTotalPerfES          INTEGER,
            qe1LineTotalPerfSES         INTEGER,
            qe1LineTotalPerfBES         INTEGER,
            qe1LineTotalPerfUAS         INTEGER,
            qe1LineTotalPerfCSS         INTEGER,
            qe1LineTotalPerfBPV         INTEGER,
            qe1LineTotalPerfDMs         INTEGER
        }

        qe1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1LineTotalPerfEntry 2 }

        qe1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1LineTotalPerfEntry 3 }

        qe1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1LineTotalPerfEntry 4 }

        qe1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1LineTotalPerfEntry 5 }

        qe1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1LineTotalPerfEntry 6 }

        qe1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1LineTotalPerfEntry 7 }

        qe1LineTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        qe1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { qe1-card 13 }

        qe1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  QE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { qe1Index , qe1PortIndex ,
        qe1LineDaysIndex }
            ::= { qe1LineSevenDaysPerfTable 1 }

            QE1LineSevenDaysPerfEntry ::= SEQUENCE  {
            qe1LineDaysIndex            INTEGER (1..7),
            qe1LineDateStrIndex         DisplayString (SIZE (0..255) ),
            qe1LineSevenDaysPerfES      INTEGER,
            qe1LineSevenDaysPerfSES     INTEGER,
            qe1LineSevenDaysPerfBES     INTEGER,
            qe1LineSevenDaysPerfUAS     INTEGER,
            qe1LineSevenDaysPerfCSS     INTEGER,
            qe1LineSevenDaysPerfDMs     INTEGER,
            qe1LineSevenDaysPerfBPV     INTEGER
        }

        qe1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { qe1LineSevenDaysPerfEntry 2 }

        qe1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { qe1LineSevenDaysPerfEntry 3 }

        qe1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 4 }

        qe1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 5 }

        qe1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 6 }

        qe1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 7 }

        qe1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 8 }

        qe1LineSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 9 }

        qe1LineSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qe1LineSevenDaysPerfEntry 10 }


--
--  Alarm Queue Table
--

        qe1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { qe1-card 14 }

        qe1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  QE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { qe1Index , qe1PortIndex ,
        qe1AlarmQueueIndex }
            ::= { qe1AlarmQueueTable 1 }

            QE1AlarmQueueEntry ::= SEQUENCE {
            qe1AlarmQueueIndex          INTEGER (1..40),
            qe1AlarmQueueString         DisplayString (SIZE(0..255))
        }

        qe1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { qe1AlarmQueueEntry 2 }

        qe1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { qe1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        qe1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { qe1-card 15 }

        qe1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  QE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { qe1Index , qe1PortIndex ,
        qe1AlarmHistoryIndex }
            ::= { qe1AlarmHistoryTable 1 }

            QE1AlarmHistoryEntry ::= SEQUENCE {
            qe1AlarmHistoryIndex        INTEGER,
            qe1Threshold                INTEGER,
            qe1CurrentState             INTEGER,
            qe1CurrentCount             INTEGER,
            qe1Alarm                    AlarmSeverity
        }

        qe1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    tpca(9)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { qe1AlarmHistoryEntry 2 }

        qe1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { qe1AlarmHistoryEntry 3 }

        qe1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    portDisabled(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { qe1AlarmHistoryEntry 4 }

        qe1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { qe1AlarmHistoryEntry 5 }

        qe1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { qe1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        qe1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { qe1-card 16 }

        qe1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  QE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1LineAvailabilityTable 1 }

            QE1LineAvailabilityEntry ::= SEQUENCE {
            qe1AvailableSeconds         DisplayString,
            qe1UnavailableSeconds       DisplayString,
            qe1LineAvailability         DisplayString
        }

        qe1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { qe1LineAvailabilityEntry 2 }

        qe1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { qe1LineAvailabilityEntry 3 }

        qe1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { qe1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        qe1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qe1-card 17 }

        qe1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  QE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1AlarmControlTable 1 }

            QE1AlarmControlEntry ::= SEQUENCE {
            qe1RAI-Line                 AlarmSeverity,
            qe1AIS-Line                 AlarmSeverity,
            qe1LOS-Line                 AlarmSeverity,
            qe1LOF-Line                 AlarmSeverity,
            qe1BPV-Line                 AlarmSeverity,
            qe1ESS-Line                 AlarmSeverity,
            qe1UAS-Line                 AlarmSeverity,
            qe1CSS-Line                 AlarmSeverity,
            qe1TCPA                     AlarmSeverity
        }

        qe1RAI-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { qe1AlarmControlEntry 2 }

        qe1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { qe1AlarmControlEntry 3 }

        qe1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { qe1AlarmControlEntry 4 }

        qe1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { qe1AlarmControlEntry 5 }

        qe1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { qe1AlarmControlEntry 6 }

        qe1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { qe1AlarmControlEntry 7 }

        qe1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { qe1AlarmControlEntry 8 }

        qe1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { qe1AlarmControlEntry 9 }
-- RIKER 2013 NFS-13000027
        qe1TCPA  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold Crossing Performance Alarm"
            ::= { qe1AlarmControlEntry 10 }



--
--  Threshold Control Table
--

        qe1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qe1-card 18 }

        qe1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  QE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1ThresholdControlTable 1 }

            QE1ThresholdControlEntry ::= SEQUENCE {
            qe1ThresholdBPV-Line        INTEGER,
            qe1ThresholdESS-Line        INTEGER,
            qe1ThresholdUAS-Line        INTEGER,
            qe1ThresholdCSS-Line        INTEGER,
            qe1ThresholdTCPA            INTEGER
        }

        qe1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line: 10exp-N "
            ::= { qe1ThresholdControlEntry 2 }

        qe1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { qe1ThresholdControlEntry 3 }

        qe1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { qe1ThresholdControlEntry 4 }

        qe1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { qe1ThresholdControlEntry 5 }
-- RIKER 2013 NFS-13000027
        qe1ThresholdTCPA  OBJECT-TYPE
            SYNTAX  INTEGER (1..2048)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of TCPA "
            ::= { qe1ThresholdControlEntry 6 }


--
-- Line Diagnostic Control Table
--

        qe1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qe1-card 19 }

        qe1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  QE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1LineDiagControlTable 1 }

            QE1LineDiagControlEntry ::= SEQUENCE {
            qe1LoopbackType             INTEGER,
            qe1LoopbackStatus           INTEGER,
            qe1PRBSControl              INTEGER,
            qe1PRBSStatus               INTEGER,
            qe1PRBSElapseSeconds        INTEGER,
            qe1PRBSErrorSeconds         INTEGER,
            qe1PRBSErrorCounts          INTEGER,
            qe1InbandLoopbackPeriod     INTEGER,
            qe1remBERTControl           INTEGER,
            qe1remBERTStatus            INTEGER,
            qe1remBERTCounter           INTEGER,
            qe1remBERTElapsed           INTEGER,
            qe1remBERTErrorSeconds      INTEGER,
            qe1remBERTPatternUnsyncSeconds  INTEGER,
            qe1PatternSend              INTEGER,
            qe1PatternMap               DisplayString
        }

        qe1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-PLB-Active(5),
                    remote-LLB-Active(6),
                    remote-PLB-Deactive(7),
                    remote-LLB-Deactive(8),
                    remote-DTE1-Active(9),
                    remote-DTE1-Deactive(10),
                    remote-DTE2-Active(11),
                    remote-DTE2-Deactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qe1 Loopback Type"
            ::= { qe1LineDiagControlEntry 2 }

        qe1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qe1 Loopback Status"
            ::= { qe1LineDiagControlEntry 3 }

        qe1PRBSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-deactive(1),
                    prbs-active-full(2),
                    prbs-reset-error-count(3),
                    prbs-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qe1 PRBS Control"
            ::= { qe1LineDiagControlEntry 4 }

        qe1PRBSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-sync(1),
                    prbs-unsync(2),
                    prbs-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qe1 PRBS Status"
            ::= { qe1LineDiagControlEntry 5 }

        qe1PRBSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qe1 PRBS Elapse Seconds"
            ::= { qe1LineDiagControlEntry 6 }

        qe1PRBSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qe1 PRBS Error Seconds"
            ::= { qe1LineDiagControlEntry 7 }

        qe1PRBSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qe1 PRBS Error Counts"
            ::= { qe1LineDiagControlEntry 8 }

        qe1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of QE1 inband local, payload, or line loopback"
            ::= { qe1LineDiagControlEntry 9 }

        qe1remBERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0), --//RIKER2021 SilverCreek
                    bert-off(1),
                    bert-full(2),
                    bert-dte1(3),
                    bert-dte2(4),
                    bert-inject-error(5),
                    bert-reset(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "remBert Control"
            ::= { qe1LineDiagControlEntry 11 }

        qe1remBERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0), --//RIKER2021 SilverCreek
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Status"
            ::= { qe1LineDiagControlEntry 13 }

        qe1remBERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Counter"
            ::= { qe1LineDiagControlEntry 14 }

        qe1remBERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Elapsed Time"
            ::= { qe1LineDiagControlEntry 15 }

        qe1remBERTErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Error Seconds"
            ::= { qe1LineDiagControlEntry 16 }

        qe1remBERTPatternUnsyncSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Pattern Unsync Seconds"
            ::= { qe1LineDiagControlEntry 17 }

        qe1PatternSend  OBJECT-TYPE
            SYNTAX  INTEGER {
                    pat1kHzMilliwattOff(1),
                    pat1kHzMilliwattUlaw(2),
                    pat1kHzMilliwattAlaw(3),
                    oldVersionNotSupport(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qe1 Pattern"
            ::= { qe1LineDiagControlEntry 18 }

        qe1PatternMap  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (31))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MAP has 31 chars, i=idle, 1=map. Ex:
                1111iiiiiiiiiiiiiiiiiiiiiiiiiii => send PATTERN in TS1~4"
            ::= { qe1LineDiagControlEntry 19 }


--
--  Port Status Table
--

        qe1PortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Qe1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status table."
            ::= { qe1-card 23 }

        qe1PortStatusEntry  OBJECT-TYPE
            SYNTAX  Qe1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status entry"
            INDEX { qe1PSSlotIndex , qe1PSPortIndex }
            ::= { qe1PortStatusTable 1 }

        Qe1PortStatusEntry ::= SEQUENCE {
            qe1PSSlotIndex              LargeSlotIndex,
            qe1PSPortIndex              FourPortID,
            qe1PortLOS                  INTEGER,
            qe1PortLOF                  INTEGER,
            qe1PortRcvAIS               INTEGER,
            qe1PortRcvRAI               INTEGER,
            qe1PortXmtAIS               INTEGER,
            qe1PortXmtRAI               INTEGER,
            qe1PortBPVcount             Integer32,
            qe1PortEScount              Integer32
        }

        qe1PSSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "slot index"
            ::= { qe1PortStatusEntry 1 }

        qe1PSPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port index"
            ::= { qe1PortStatusEntry 2 }

        qe1PortLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOS State"
            ::= { qe1PortStatusEntry 3 }

        qe1PortLOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    loFAS(2),
                    loCAS(3),
                    loFASandCAS(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOF State"
            ::= { qe1PortStatusEntry 4 }

        qe1PortRcvAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received AIS State"
            ::= { qe1PortStatusEntry 5 }

        qe1PortRcvRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received RAI State"
            ::= { qe1PortStatusEntry 6 }

        qe1PortXmtAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit AIS State"
            ::= { qe1PortStatusEntry 7 }

        qe1PortXmtRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit RAI State"
            ::= { qe1PortStatusEntry 8 }

        qe1PortBPVcount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BPV count"
            ::= { qe1PortStatusEntry 9 }

        qe1PortEScount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ES count"
            ::= { qe1PortStatusEntry 10 }


--
--  Command Control Table
--

        qe1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qe1-card 20 }

        qe1CommandControlEntry  OBJECT-TYPE
            SYNTAX  QE1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qe1Index , qe1PortIndex }
            ::= { qe1CommandControlTable 1 }

            QE1CommandControlEntry ::= SEQUENCE {
            qe1AlarmQueueReset          INTEGER,
            qe1UserPerfReset            INTEGER,
            qe1AlarmHistoryReset        INTEGER,
            qe1PortReset                INTEGER,
            qe1PortLoadDefault          INTEGER
        }

        qe1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { qe1CommandControlEntry 2 }

        qe1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { qe1CommandControlEntry 3 }

        qe1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { qe1CommandControlEntry 4 }

        qe1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset QE1 Port"
            ::= { qe1CommandControlEntry 5 }

        qe1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QE1 Port"
            ::= { qe1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        qe1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { qe1-card 21 }

        qe1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  QE1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { qe1Index }
            ::= { qe1SystemInformationTable 1 }

            QE1SystemInformationEntry ::= SEQUENCE {
            qe1PROMVersion              DisplayString,
            qe1HardwareVersion          DisplayString
        }

        qe1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " qe1 PROM Version"
            ::= { qe1SystemInformationEntry 2 }

        qe1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " qe1 Hardware Version"
            ::= { qe1SystemInformationEntry 3 }





--
--  QE1 Customer Information Table
--

        qe1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { qe1-card 99 }

        qe1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  QE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { qe1CISlotIndex , qe1CIPortIndex }
            ::= { qe1CustomerInfoTable 1 }

            QE1CustomerInfoEntry ::= SEQUENCE {
            qe1CISlotIndex              LargeSlotIndex,
            qe1CIPortIndex              FourPortID,
            qe1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        qe1CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qe1CustomerInfoEntry 1 }

        qe1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { qe1CustomerInfoEntry 2 }

        qe1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { qe1CustomerInfoEntry 3 }


--
--  Remote Link Identification Table
--

        qe1RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QE1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Table"
            ::= { qe1-card 22 }

        qe1RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  QE1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification entry"
            INDEX { qe1Index ,
        qe1PortIndex }
            ::= { qe1RemoteLinkIDTable 1 }

            QE1RemoteLinkIDEntry ::= SEQUENCE {
            qe1RemoteLinkIDType         INTEGER,
            qe1RemoteLinkIDRack         INTEGER,
            qe1RemoteLinkIDSlotNumber   INTEGER,
            qe1RemoteLinkIDPort         INTEGER,
            qe1RemoteLinkIDSerialNumber INTEGER,
            qe1RemoteLinkIDBackupSlotNUM    INTEGER,
            qe1RemoteLinkIDBackupPort       INTEGER
        }

        qe1RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type of remote site."
            ::= { qe1RemoteLinkIDEntry 3 }

        qe1RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { qe1RemoteLinkIDEntry 4 }

        qe1RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { qe1RemoteLinkIDEntry 5 }

        qe1RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { qe1RemoteLinkIDEntry 6 }

        qe1RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { qe1RemoteLinkIDEntry 7 }

        qe1RemoteLinkIDBackupSlotNUM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Slot Number"
            ::= { qe1RemoteLinkIDEntry 8 }

        qe1RemoteLinkIDBackupPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Port"
            ::= { qe1RemoteLinkIDEntry 9 }


--======================================================================--

    remote-e1500-2s             OBJECT IDENTIFIER  ::= { qe1-card 31 }

--======================================================================--
--
--      Far End Current Performance Table
--

        re1CurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 current performance table."
            ::= { remote-e1500-2s 1 }

        re1CurrentPerfEntry  OBJECT-TYPE
            SYNTAX  RE1CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the remote E1 current performance table."
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1CurrentPerfTable 1 }

            RE1CurrentPerfEntry ::= SEQUENCE  {
            re1SlotIndex                LargeSlotIndex,
            re1PortIndex                FourPortID,
            re1CurrentES                INTEGER,
            re1CurrentSES               INTEGER,
            re1CurrentBES               INTEGER,
            re1CurrentUAS               INTEGER,
            re1CurrentCSS               INTEGER,
            re1CurrentDM                INTEGER
        }

        re1SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { re1CurrentPerfEntry 1 }

        re1PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { re1CurrentPerfEntry 2 }

        re1CurrentES     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { re1CurrentPerfEntry 3 }

        re1CurrentSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { re1CurrentPerfEntry 4 }

        re1CurrentBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { re1CurrentPerfEntry 5 }

        re1CurrentUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { re1CurrentPerfEntry 6 }

        re1CurrentCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { re1CurrentPerfEntry 7 }

        re1CurrentDM   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { re1CurrentPerfEntry 8 }


--
--      Far End Interval Performance Table
--

        re1IntervalPerfTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1IntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 interval performance table."
            ::= { remote-e1500-2s 2 }

        re1IntervalPerfEntry        OBJECT-TYPE
            SYNTAX  RE1IntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the remote E1 interval performance table."
            INDEX { re1SlotIndex , re1PortIndex , re1IntervalIndex }
            ::= { re1IntervalPerfTable 1 }

            RE1IntervalPerfEntry ::= SEQUENCE {
            re1IntervalIndex            INTEGER  (1..96),
            re1IntervalES               INTEGER,
            re1IntervalSES              INTEGER,
            re1IntervalBES              INTEGER,
            re1IntervalUAS              INTEGER,
            re1IntervalCSS              INTEGER,
            re1IntervalDM               INTEGER
        }

        re1IntervalIndex        OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FarInterval Index "
            ::= { re1IntervalPerfEntry 3 }

        re1IntervalES   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { re1IntervalPerfEntry 4 }

        re1IntervalSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { re1IntervalPerfEntry 5 }

        re1IntervalBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { re1IntervalPerfEntry 6 }

        re1IntervalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { re1IntervalPerfEntry 7 }

        re1IntervalCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { re1IntervalPerfEntry 8 }

        re1IntervalDM   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { re1IntervalPerfEntry 9 }


--
--      Far End Total Performance
--

        re1TotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 Total performance table."
            ::= { remote-e1500-2s 3 }

        re1TotalPerfEntry  OBJECT-TYPE
            SYNTAX  RE1TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the remote E1 total performance table."
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1TotalPerfTable 1 }

            RE1TotalPerfEntry ::= SEQUENCE  {
            re1TotalES                  INTEGER,
            re1TotalSES                 INTEGER,
            re1TotalBES                 INTEGER,
            re1TotalUAS                 INTEGER,
            re1TotalCSS                 INTEGER,
            re1TotalDM                  INTEGER
        }

        re1TotalES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { re1TotalPerfEntry 3 }

        re1TotalSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { re1TotalPerfEntry 4 }

        re1TotalBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { re1TotalPerfEntry 5 }

        re1TotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { re1TotalPerfEntry 6 }

        re1TotalCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { re1TotalPerfEntry 7 }

        re1TotalDM   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { re1TotalPerfEntry 8 }


--
--      Far End Seven Day Performance Table
--

        re1SevenDayPerfTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1SevenDayPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 7 days performance table."
            ::= { remote-e1500-2s 4 }

        re1SevenDayPerfEntry        OBJECT-TYPE
            SYNTAX  RE1SevenDayPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the remote E1 7 days performance table."
            INDEX { re1SlotIndex , re1PortIndex , re1SevenDayIndex }
            ::= { re1SevenDayPerfTable 1 }

            RE1SevenDayPerfEntry ::= SEQUENCE {
            re1SevenDayIndex            INTEGER  (1..7),
            re1SevenDayDate             DisplayString (SIZE (0..255) ),
            re1SevenDayES               INTEGER,
            re1SevenDaySES              INTEGER,
            re1SevenDayBES              INTEGER,
            re1SevenDayUAS              INTEGER,
            re1SevenDayCSS              INTEGER,
            re1SevenDayDM               INTEGER

    }

        re1SevenDayIndex   OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU SevenDay Index "
            ::= { re1SevenDayPerfEntry 3 }

        re1SevenDayDate     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU SevenDay String "
            ::= { re1SevenDayPerfEntry 4 }

        re1SevenDayES   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { re1SevenDayPerfEntry 5 }

        re1SevenDaySES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { re1SevenDayPerfEntry 6 }

        re1SevenDayBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { re1SevenDayPerfEntry 7 }

        re1SevenDayUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { re1SevenDayPerfEntry 8 }

        re1SevenDayCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { re1SevenDayPerfEntry 9 }

        re1SevenDayDM   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { re1SevenDayPerfEntry 10 }


--
--      Remote Line Control
--

        re1LineControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote line control table."
            ::= { remote-e1500-2s 5 }

        re1LineControlEntry        OBJECT-TYPE
            SYNTAX  RE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the remote E1 line control table."
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1LineControlTable 1 }

            RE1LineControlEntry ::= SEQUENCE {
            re1ActiveMAP                INTEGER,
            re1MAP1SwitchTime           DisplayString,
            re1MAP2SwitchTime           DisplayString,
            re1LineCRCFrameFormat       INTEGER,
            re1LineCoding               INTEGER,
            re1RaiAlarmTx               INTEGER,
            re1FDL                      INTEGER,
            re1IdleCode                 INTEGER,
            re1LineFrame                INTEGER,
            re1LineEbit                 INTEGER,
            re1LineCAS                  INTEGER

    }

        re1ActiveMAP    OBJECT-TYPE
            SYNTAX  INTEGER   {
                    map1(1),
                    map2(2),
                    swmap(3),
                    swmap2(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Active MAP1 or MAP2 or SWMAP1"
            ::= { re1LineControlEntry 3 }

        re1MAP1SwitchTime  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map1 Switch Time.Format= hh:mm"
            ::= { re1LineControlEntry 4 }

        re1MAP2SwitchTime  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map2 Switch Time.Format= hh:mm"
            ::= { re1LineControlEntry 5 }

        re1LineCRCFrameFormat OBJECT-TYPE
            SYNTAX  INTEGER   {
                    crc-on(1),
                    crc-off(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line CRC Frame Format"
            ::= { re1LineControlEntry 6 }

        re1LineCoding   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    hdb3(1),
                    ami(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { re1LineControlEntry 7 }

        re1RaiAlarmTx   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Remote Alarm Indication Tx ON/OFF"
            ::= { re1LineControlEntry 8 }

        re1FDL   OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fdl(1),
                    off(2),
                    hdlc(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line FDL ON/OFF"
            ::= { re1LineControlEntry 9 }

        re1IdleCode     OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { re1LineControlEntry 10 }

        re1LineFrame    OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Frame Type "
            ::= { re1LineControlEntry 11 }

        re1LineEbit     OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line E-bit option "
            ::= { re1LineControlEntry 12 }

        re1LineCAS      OBJECT-TYPE
            SYNTAX  INTEGER   {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line CAS Type "
            ::= { re1LineControlEntry 13 }


--
--      Remote Channel Map
--

        re1ChannelMapTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote channel map table"
            ::= { remote-e1500-2s 6 }

        re1ChannelMapEntry        OBJECT-TYPE
            SYNTAX  RE1ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex , re1MapIndex , re1ChannelIndex }
            ::= { re1ChannelMapTable 1 }

            RE1ChannelMapEntry ::= SEQUENCE {
            re1MapIndex                 INTEGER,
            re1ChannelIndex             INTEGER (1..32),
            re1MapTo                    INTEGER
        }

        re1MapIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    map1(1),
                    map2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CSU Map Index "
            ::= { re1ChannelMapEntry 3 }

        re1ChannelIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Channel Index "
            ::= { re1ChannelMapEntry 4 }

        re1MapTo   OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    dte1(2),
                    dte2(3),
                    dte3(4),
                    dte4(5),
                    dropandinsert(6),
                    s(7),
                    inband(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Channel map to"
            ::= { re1ChannelMapEntry 5 }


--
--      Remote DTE Control
--

        re1DTEControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1DTEControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 - DTE control table"
            ::= { remote-e1500-2s 7 }

        re1DTEControlEntry        OBJECT-TYPE
            SYNTAX  RE1DTEControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex , re1DTEIndex }
            ::= { re1DTEControlTable 1 }

            RE1DTEControlEntry ::= SEQUENCE {
            re1DTEIndex                 INTEGER,
            re1DTERate                  INTEGER,
            re1DTEClockPolarity         INTEGER,
            re1DTEDataPolarity          INTEGER,
            re1DTEInterfaceType         INTEGER,
            re1DTERTSMode               INTEGER,
            re1DTETerminalTimingMode    INTEGER,
            re1DTEV54                   INTEGER,
            re1DTEV54RL                 INTEGER,
            re1DTEV54LL                 INTEGER
        }

        re1DTEIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte1(1),
                    dte2(2),
                    dte3(3),
                    dte4(4),
                    not-exist(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Index (1..4)"
            ::= { re1DTEControlEntry 3 }

        re1DTERate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate-64k(1),
                    rate-56k(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Rate "
            ::= { re1DTEControlEntry 4 }

        re1DTEClockPolarity   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Clock Polarity "
            ::= { re1DTEControlEntry 5 }

        re1DTEDataPolarity   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Data Polarity "
            ::= { re1DTEControlEntry 6 }

        re1DTEInterfaceType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    eia530-rs449(1),
                    v35(2),
                    x21(3),
                    rs232(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Interface Type "
            ::= { re1DTEControlEntry 7 }

        re1DTERTSMode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS Permanent "
            ::= { re1DTEControlEntry 8 }

        re1DTETerminalTimingMode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Terminal Timing Mode "
            ::= { re1DTEControlEntry 9 }

        re1DTEV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    ansi(2),
                    itu(3),
                    na(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " V.54 Setup "
            ::= { re1DTEControlEntry 10 }

        re1DTEV54RL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Remote Loopback Setup "
            ::= { re1DTEControlEntry 11 }

        re1DTEV54LL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Local Loopback Setup "
            ::= { re1DTEControlEntry 12 }


--
--      Remote System Control
--

        re1SystemControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1SystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 - System control table"
            ::= { remote-e1500-2s 8 }

        re1SystemControlEntry        OBJECT-TYPE
            SYNTAX  RE1SystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1SystemControlTable 1 }

            RE1SystemControlEntry ::= SEQUENCE {
            re1MasterClock              INTEGER,
            re1SecondClock              INTEGER,
            re1ClockIndicator           INTEGER,
            re1DeviceName               DisplayString,
            re1PortConfiguration        DisplayString,
            re1SerialNumber             INTEGER,
            re1MainboardVersion         INTEGER,
            re1FirmwareVersion          DisplayString
        }

        re1MasterClock   OBJECT-TYPE
            SYNTAX  INTEGER {
                    line(1),
                    internal(2),
                    dropinsert(3),
                    dte1(4),
                    dte2(5),
                    dte3(6),
                    dte4(7),
                    external56k(8),
                    external64k(9),
                    external112k(10),
                    external128k(11),
                    external168k(12),
                    external192k(13),
                    external224k(14),
                    external256k(15),
                    external280k(16),
                    external320k(17),
                    external336k(18),
                    external384k(19),
                    external392k(20),
                    external448k(21),
                    external504k(22),
                    external512k(23),
                    external560k(24),
                    external576k(25),
                    external616k(26),
                    external640k(27),
                    external672k(28),
                    external704k(29),
                    external728k(30),
                    external768k(31),
                    external784k(32),
                    external832k(33),
                    external840k(34),
                    external896k(35),
                    external952k(36),
                    external960k(37),
                    external1008k(38),
                    external1024k(39),
                    external1064k(40),
                    external1088k(41),
                    external1120k(42),
                    external1152k(43),
                    external1176k(44),
                    external1216k(45),
                    external1232k(46),
                    external1280k(47),
                    external1288k(48),
                    external1344k(49),
                    external1400k(50),
                    external1408k(51),
                    external1456k(52),
                    external1472k(53),
                    external1512k(54),
                    external1536k(55),
                    external1568k(56),
                    external1600k(57),
                    external1624k(58),
                    external1664k(59),
                    external1680k(60),
                    external1728k(61),
                    external1736k(62),
                    external1792k(63),
                    external1848k(64),
                    external1856k(65),
                    external1904k(66),
                    external1920k(67),
                    external1960k(68),
                    external1984k(69),
                    external2016k(70),
                    external2048k(71),
                    external8192k(72)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CSU Master Clock Setting"
            ::= { re1SystemControlEntry 3 }

        re1SecondClock   OBJECT-TYPE
            SYNTAX  INTEGER {
                    line(1),
                    internal(2),
                    dropinsert(3),
                    dte1(4),
                    dte2(5),
                    dte3(6),
                    dte4(7),
                    external56k(8),
                    external64k(9),
                    external112k(10),
                    external128k(11),
                    external168k(12),
                    external192k(13),
                    external224k(14),
                    external256k(15),
                    external280k(16),
                    external320k(17),
                    external336k(18),
                    external384k(19),
                    external392k(20),
                    external448k(21),
                    external504k(22),
                    external512k(23),
                    external560k(24),
                    external576k(25),
                    external616k(26),
                    external640k(27),
                    external672k(28),
                    external704k(29),
                    external728k(30),
                    external768k(31),
                    external784k(32),
                    external832k(33),
                    external840k(34),
                    external896k(35),
                    external952k(36),
                    external960k(37),
                    external1008k(38),
                    external1024k(39),
                    external1064k(40),
                    external1088k(41),
                    external1120k(42),
                    external1152k(43),
                    external1176k(44),
                    external1216k(45),
                    external1232k(46),
                    external1280k(47),
                    external1288k(48),
                    external1344k(49),
                    external1400k(50),
                    external1408k(51),
                    external1456k(52),
                    external1472k(53),
                    external1512k(54),
                    external1536k(55),
                    external1568k(56),
                    external1600k(57),
                    external1624k(58),
                    external1664k(59),
                    external1680k(60),
                    external1728k(61),
                    external1736k(62),
                    external1792k(63),
                    external1848k(64),
                    external1856k(65),
                    external1904k(66),
                    external1920k(67),
                    external1960k(68),
                    external1984k(69),
                    external2016k(70),
                    external2048k(71),
                    external8192k(72)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CSU Remote Second Clock Setting"
            ::= { re1SystemControlEntry 4 }

        re1ClockIndicator   OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    second(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Remote Clock Indicator"
            ::= { re1SystemControlEntry 5 }

        re1DeviceName    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CSU Device Name "
            ::= { re1SystemControlEntry 6 }

        re1PortConfiguration    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Port Configuration"
            ::= { re1SystemControlEntry 7 }

        re1SerialNumber    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Serial Number "
            ::= { re1SystemControlEntry 8 }

        re1MainboardVersion    OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(65),
                    b(66),
                    c(67),
                    d(68),
                    e(69),
                    f(70),
                    g(71),
                    h(73),
                    i(74),
                    j(75)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Mainboard Version"
            ::= { re1SystemControlEntry 9 }

        re1FirmwareVersion    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Firmware Version"
            ::= { re1SystemControlEntry 10 }


--
--      Remote Alarm Control
--

        re1AlarmControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote alarm control table"
            ::= { remote-e1500-2s 9 }

        re1AlarmControlEntry        OBJECT-TYPE
            SYNTAX  RE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex , re1AlarmControlIndex }
            ::= { re1AlarmControlTable 1 }

            RE1AlarmControlEntry ::= SEQUENCE {
            re1AlarmControlIndex        INTEGER,
            re1Alarm-dialout            INTEGER
        }

        re1AlarmControlIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    alarm-master-clcok-loss(1),
                    alarm-rai-line(2),
                    alarm-ais-line(3),
                    alarm-los-line(4),
                    alarm-lof-line(5),
                    alarm-bpv-line(6),
                    alarm-es-line(7),
                    alarm-uas-line(8),
                    alarm-css-line(9),
                    alarm-dte1-dte(10),
                    alarm-dte2-dte(11),
                    alarm-lan-alm-router1(12),
                    alarm-lan-alm-router2(13),
                    alarm-yel-DI(14),
                    alarm-ais-DI(15),
                    alarm-los-DI(16),
                    alarm-lof-DI(17),
                    alarm-bpv-DI(18),
                    alarm-es-DI(19),
                    alarm-uas-DI(20),
                    alarm-rai-dte1-e1(21),
                    alarm-ais-dte1-e1(22),
                    alarm-los-dte1-e1(23),
                    alarm-lof-dte1-e1(24),
                    alarm-bpv-dte1-e1(25),
                    alarm-es-dte1-e1(26),
                    alarm-uas-dte1-e1(27),
                    alarm-css-dte1-e1(28),
                    alarm-rai-dte2-e1(29),
                    alarm-ais-dte2-e1(30),
                    alarm-los-dte2-e1(31),
                    alarm-lof-dte2-e1(32),
                    alarm-bpv-dte2-e1(33),
                    alarm-es-dte2-e1(34),
                    alarm-uas-dte2-e1(35),
                    alarm-css-dte2-e1(36)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Alarm Control Index "
            ::= { re1AlarmControlEntry 3 }

        re1Alarm-dialout   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(5),
                    enable(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Remote Alarm Control "
            ::= { re1AlarmControlEntry 4 }


--
--      Remote Threshold Control
--

        re1ThresholdControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote alarm threshold control table"
            ::= { remote-e1500-2s 10 }

        re1ThresholdControlEntry        OBJECT-TYPE
            SYNTAX  RE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1ThresholdControlTable 1 }

            RE1ThresholdControlEntry ::= SEQUENCE {
            re1ThresholdBPV-Line        INTEGER,
            re1ThresholdES-Line         INTEGER,
            re1ThresholdUAS-Line        INTEGER,
            re1ThresholdCSS-Line        INTEGER,
            re1ThresholdBPV-DTE1-E1     INTEGER,
            re1ThresholdES-DTE1-E1      INTEGER,
            re1ThresholdUAS-DTE1-E1     INTEGER,
            re1ThresholdCSS-DTE1-E1     INTEGER,
            re1ThresholdBPV-DTE2-E1     INTEGER,
            re1ThresholdES-DTE2-E1      INTEGER,
            re1ThresholdUAS-DTE2-E1     INTEGER,
            re1ThresholdCSS-DTE2-E1     INTEGER,
            re1ThresholdBPV-Drop-Insert INTEGER,
            re1ThresholdES-Drop-Insert  INTEGER,
            re1ThresholdUAS-Drop-Insert INTEGER
        }

        re1ThresholdBPV-Line    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line "
            ::= { re1ThresholdControlEntry 3 }

        re1ThresholdES-Line    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ES-Line "
            ::= { re1ThresholdControlEntry 4 }

        re1ThresholdUAS-Line    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { re1ThresholdControlEntry 5 }

        re1ThresholdCSS-Line    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CSS-Line "
            ::= { re1ThresholdControlEntry 6 }

        re1ThresholdBPV-DTE1-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-EQU1 "
            ::= { re1ThresholdControlEntry 7 }

        re1ThresholdES-DTE1-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ES-EQU1 "
            ::= { re1ThresholdControlEntry 8 }

        re1ThresholdUAS-DTE1-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-EQU1 "
            ::= { re1ThresholdControlEntry 9 }

        re1ThresholdCSS-DTE1-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-EQU1 "
            ::= { re1ThresholdControlEntry 10 }

        re1ThresholdBPV-DTE2-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-EQU2 "
            ::= { re1ThresholdControlEntry 11 }

        re1ThresholdES-DTE2-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ES-EQU2 "
            ::= { re1ThresholdControlEntry 12 }

        re1ThresholdUAS-DTE2-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-EQU2 "
            ::= { re1ThresholdControlEntry 13 }

        re1ThresholdCSS-DTE2-E1    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-EQU2 "
            ::= { re1ThresholdControlEntry 14 }

        re1ThresholdBPV-Drop-Insert    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of D&I "
            ::= { re1ThresholdControlEntry 15 }

        re1ThresholdES-Drop-Insert    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of D&I "
            ::= { re1ThresholdControlEntry 16 }

        re1ThresholdUAS-Drop-Insert    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(65535)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of D&I "
            ::= { re1ThresholdControlEntry 17 }


--
--      REMOTE Model Type Table
--

        re1ModelTypeTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1ModelTypeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote model type table"
            ::= { remote-e1500-2s 11 }

        re1ModelTypeEntry        OBJECT-TYPE
            SYNTAX  RE1ModelTypeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1ModelTypeTable 1 }

            RE1ModelTypeEntry ::= SEQUENCE {
            re1ModelType                INTEGER
        }

        re1ModelType      OBJECT-TYPE
            SYNTAX  INTEGER {
                    loop-E-1201-1(1),
                    loop-E-1201-2(2),
                    loop-E-1201-3(3),
                    loop-E-1201-4(4),
                    loop-E-1202-1(5),
                    loop-E-1202-2(6),
                    loop-E-1202-3(7),
                    loop-E-1202-4(8),
                    loop-E-1300(9),
                    loop-E-1500(10),
                    loop-E-1700(11),
                    loop-E-1500-IR(16),
                    loop-E-1500-2S(20),
                    loop-T-2500-2S(21),
                    fdl-off(253),
                    unsync(254),
                    unknow(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSU Remote Mode Type"
            ::= { re1ModelTypeEntry 1 }


--
--      Remote Alarm History Performance Table
--

        re1AlarmHistoryTable       OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote alarm status table"
            ::= { remote-e1500-2s 12 }

        re1AlarmHistoryEntry          OBJECT-TYPE
            SYNTAX  RE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex , re1AlarmHistoryIndex }
            ::= { re1AlarmHistoryTable 1 }

            RE1AlarmHistoryEntry ::= SEQUENCE {
            re1AlarmHistoryIndex        INTEGER,
--                      re1StartTime
--                              DisplayString (SIZE (0..255) ),
            re1Threshold                INTEGER,
            re1CurrentState             INTEGER,
            re1CurrentCount             INTEGER,
            re1Alarm                    INTEGER,
            re1Trap                     INTEGER,
            re1Bell                     INTEGER
        }

        re1AlarmHistoryIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-clcok(1),
                    rai-line(2),
                    ais-line(3),
                    los-line(4),
                    lof-line(5),
                    bpv-line(6),
                    es-line(7),
                    uas-line(8),
                    css-line(9),
                    dte1-dte(10),
                    dte2-dte(11),
                    lan-alm-router1(12),
                    lan-alm-router2(13),
                    yel-DI(14),
                    ais-DI(15),
                    los-DI(16),
                    lof-DI(17),
                    bpv-DI(18),
                    es-DI(19),
                    uas-DI(20),
                    rai-dte1-e1(21),
                    ais-dte1-e1(22),
                    los-dte1-e1(23),
                    lof-dte1-e1(24),
                    bpv-dte1-e1(25),
                    es-dte1-e1(26),
                    uas-dte1-e1(27),
                    css-dte1-e1(28),
                    rai-dte2-e1(29),
                    ais-dte2-e1(30),
                    los-dte2-e1(31),
                    lof-dte2-e1(32),
                    bpv-dte2-e1(33),
                    es-dte2-e1(34),
                    uas-dte2-e1(35),
                    css-dte2-e1(36)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { re1AlarmHistoryEntry 3 }

--      re1StartTime   OBJECT-TYPE
--              SYNTAX  DisplayString (SIZE (0..255) )
--              ACCESS  read-only
--              STATUS  mandatory
--              DESCRIPTION
--                      "Alarm History Start Time"
--              ::= { re1AlarmHistoryEntry 4 }

        re1Threshold   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { re1AlarmHistoryEntry 5 }

        re1CurrentState OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { re1AlarmHistoryEntry 6 }

        re1CurrentCount OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { re1AlarmHistoryEntry 7 }

        re1Alarm         OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { re1AlarmHistoryEntry 8 }

        re1Trap OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Trap State "
            ::= { re1AlarmHistoryEntry 9 }

        re1Bell OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Bell State"
            ::= { re1AlarmHistoryEntry 10 }


--
-- Remote E1 Card Control Table
--

        re1E1CardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1E1CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote E1 card control table."
            ::= { remote-e1500-2s 13 }

        re1E1CardControlEntry  OBJECT-TYPE
            SYNTAX  RE1E1CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { re1SlotIndex , re1PortIndex , re1E1CardIndex }
            ::= { re1E1CardControlTable 1 }

            RE1E1CardControlEntry ::= SEQUENCE  {
            re1E1CardIndex              INTEGER,
            re1E1LineFrame              INTEGER,
            re1E1LineCoding             INTEGER,
               --re1E1FDL
                 --INTEGER,
               --re1E1FDLSabit
                 --INTEGER,
            re1E1RAI                    INTEGER,
            re1E1CRC                    INTEGER,
            re1E1IdleCode               INTEGER,
            re1E1Ebit                   INTEGER,
            re1E1CASMode                INTEGER
        }

        re1E1CardIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte1(1),
                    dte2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte1 & dte2, total 2 ports."
            ::= { re1E1CardControlEntry 3 }

        re1E1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { re1E1CardControlEntry 4 }

        re1E1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    hdb3(1),
                    ami(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { re1E1CardControlEntry 5 }

--         re1E1FDL  OBJECT-TYPE
  --           SYNTAX  INTEGER   {
    --                    on(1),
      --                  off(2)
        --             }
          --   ACCESS  read-write
            -- STATUS  mandatory
--             DESCRIPTION
  --              "E1 Facility Data Link ON/OFF"
    --         ::= { re1E1CardControlEntry 6 }

         --re1E1FDLSabit  OBJECT-TYPE
           --  SYNTAX  INTEGER   {
             --           sa4(1),
               --         sa5(2),
                 --       sa6(3),
                   --     sa7(4),
                     --   sa8(5),
                       -- sa4-sa5(6)
--                     }
  --           ACCESS  read-write
    --         STATUS  mandatory
      --       DESCRIPTION
        --        "E1 Facility Data Link use Sax bit"
          --   ::= { re1E1CardControlEntry 7 }

        re1E1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { re1E1CardControlEntry 8 }

        re1E1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Cycle Redundancy Check ON/OFF"
            ::= { re1E1CardControlEntry 9 }

        re1E1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { re1E1CardControlEntry 10 }

        re1E1Ebit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E-bit "
            ::= { re1E1CardControlEntry 11 }

        re1E1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { re1E1CardControlEntry 12 }



--
--      Remote COD Control
--

        re1CODControlTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1CODEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote co-direction control table"
            ::= { remote-e1500-2s 14 }

        re1CODEntry        OBJECT-TYPE
            SYNTAX  RE1CODEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex , re1CODIndex }
            ::= { re1CODControlTable 1 }

            RE1CODEntry ::= SEQUENCE {
            re1CODIndex                 INTEGER,
            re1CODRate                  INTEGER,
            re1CODInterfaceType         INTEGER
        }

        re1CODIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte1(1),
                    dte2(2),
                    dte3(3),
                    dte4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Index (1..4)"
            ::= { re1CODEntry 3 }

        re1CODRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate-64k(1)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Rate "
            ::= { re1CODEntry 4 }

        re1CODInterfaceType   OBJECT-TYPE
            SYNTAX  INTEGER {
                    g703(1)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interface Type "
            ::= { re1CODEntry 5 }


--
--      REMOTE D&I Control MIBs
--

        re1DropInsertTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1DropInsertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote drop and insert table"
            ::= { remote-e1500-2s 15 }

        re1DropInsertEntry        OBJECT-TYPE
            SYNTAX  RE1DropInsertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1DropInsertTable 1 }

            RE1DropInsertEntry ::= SEQUENCE {
            re1DICRCFrameFormat         INTEGER,
            re1DILineCode               INTEGER
        }

        re1DICRCFrameFormat   OBJECT-TYPE
            SYNTAX  INTEGER {
                    crc-on(1),
                    crc-off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " D&I CRC Frame Format "
            ::= { re1DropInsertEntry 3 }

        re1DILineCode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdb3(1),
                    ami(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " D&I Line Code "
            ::= { re1DropInsertEntry 4 }


--
--      REMOTE Channel Map Setup
--
        re1MapSetupTable        OBJECT-TYPE
            SYNTAX  SEQUENCE OF RE1MapSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote channel map setup table"
            ::= { remote-e1500-2s 16 }

        re1MapSetupEntry        OBJECT-TYPE
            SYNTAX  RE1MapSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { re1SlotIndex , re1PortIndex }
            ::= { re1MapSetupTable 1 }

            RE1MapSetupEntry ::= SEQUENCE {
            re1Map1                     DisplayString (SIZE(31)),
            re1Map2                     DisplayString (SIZE(31))
        }

        re1Map1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(31))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mpa 1"
            ::= { re1MapSetupEntry 3 }

        re1Map2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(31))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mpa 2"
            ::= { re1MapSetupEntry 4 }


        qe1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of QE1"
            ::= { qe1-card 100 }




--======================================================================--
--======================================================================--
--  quad-t1-card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        qt1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { qt1-card 1 }

        qt1LineControlEntry  OBJECT-TYPE
            SYNTAX  QT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1LineControlTable 1 }

            QT1LineControlEntry ::= SEQUENCE  {
            qt1Index                    LargeSlotIndex,
            qt1PortIndex                FourPortID,
            qt1LineFrame                INTEGER,
            qt1LineCoding               INTEGER,
            qt1Interface                INTEGER,
            qt1LineBuildOut             INTEGER,
            qt1Equalizer                INTEGER,
            qt1AIS                      INTEGER,
            qt1YEL                      INTEGER,
            qt1Inband                   INTEGER,
            qt1IdleCode                 INTEGER,
            qt1CASMode                  INTEGER,
            qt1SignallingMode           INTEGER,
            qt1CGA                      INTEGER,
            qt1OutOfService             INTEGER,
            qt1FDL                      INTEGER,
            qt1Protect                  INTEGER,
            qt1Master                   INTEGER,
            qt1PortEnable               INTEGER
        }

        qt1Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qt1LineControlEntry 1 }

        qt1PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { qt1LineControlEntry 2 }

        qt1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esf-t1-403(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { qt1LineControlEntry 3 }

        qt1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { qt1LineControlEntry 4 }

        qt1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    long-haul(1),
                    short-haul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that QT1 line use Long/Short haul."
            ::= { qt1LineControlEntry 5 }

        qt1LineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo-0-0dB(1),
                    lbo-7-5dB(2),
                    lbo-15dB(3)
--                        lbo-0.0dB(1),
--                        lbo-7.5dB(2),
--                        lbo-15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 line build out."
            ::= { qt1LineControlEntry 6 }

        qt1Equalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ-0-110Ft(1),
                    equ-110-220ft(2),
                    equ-220-330ft(3),
                    equ-330-440ft(4),
                    equ-440-550ft(5),
                    equ-550-660ft(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 line equalizer."
            ::= { qt1LineControlEntry 7 }

        qt1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 line Alarm Indication Signal."
            ::= { qt1LineControlEntry 8 }

        qt1YEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { qt1LineControlEntry 9 }

        qt1Inband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 line inband ON/OFF"
            ::= { qt1LineControlEntry 10 }

        qt1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { qt1LineControlEntry 11 }

        qt1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { qt1LineControlEntry 12 }

        qt1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS"
            ::= { qt1LineControlEntry 13 }

        qt1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { qt1LineControlEntry 14 }

        qt1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { qt1LineControlEntry 15 }

        qt1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 Facility Data Link ON/OFF"
            ::= { qt1LineControlEntry 16 }

        qt1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { qt1LineControlEntry 17 }

        qt1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { qt1LineControlEntry 18 }

        qt1PortEnable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QT1 port enable/disable"
            ::= { qt1LineControlEntry 19 }


--
--  User Current Performance Table
--

        qt1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { qt1-card 2 }

        qt1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  QT1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1UserCurrentPerfTable 1 }

            QT1UserCurrentPerfEntry ::= SEQUENCE  {
            qt1UserCurrentPerfES        INTEGER,
            qt1UserCurrentPerfSES       INTEGER,
            qt1UserCurrentPerfBES       INTEGER,
            qt1UserCurrentPerfUAS       INTEGER,
            qt1UserCurrentPerfCSS       INTEGER,
            qt1UserCurrentPerfBPV       INTEGER,
            qt1UserCurrentPerfLOFC      INTEGER,
            qt1UserCurr15MinTimeElapsed INTEGER,
            qt1UserValid15MinInterval   INTEGER
        }

        qt1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1UserCurrentPerfEntry 2 }

        qt1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1UserCurrentPerfEntry 3 }

        qt1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1UserCurrentPerfEntry 4 }

        qt1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1UserCurrentPerfEntry 5 }

        qt1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { qt1UserCurrentPerfEntry 6 }

        qt1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1UserCurrentPerfEntry 7 }

        qt1UserCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1UserCurrentPerfEntry 8 }

        qt1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { qt1UserCurrentPerfEntry 11 }

        qt1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { qt1UserCurrentPerfEntry 12 }


--
--  User Interval Performance Table
--

        qt1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { qt1-card 3 }

        qt1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  QT1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1UserIntervalPerfNumber }
            ::= { qt1UserIntervalPerfTable 1 }

            QT1UserIntervalPerfEntry ::= SEQUENCE  {
            qt1UserIntervalPerfNumber   INTEGER  (1..96),
            qt1UserIntervalPerfES       INTEGER,
            qt1UserIntervalPerfSES      INTEGER,
            qt1UserIntervalPerfBES      INTEGER,
            qt1UserIntervalPerfUAS      INTEGER,
            qt1UserIntervalPerfCSS      INTEGER,
            qt1UserIntervalPerfBPV      INTEGER,
            qt1UserIntervalPerfLOFC     INTEGER
        }

        qt1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { qt1UserIntervalPerfEntry 2 }

        qt1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1UserIntervalPerfEntry 3 }

        qt1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1UserIntervalPerfEntry 4 }

        qt1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1UserIntervalPerfEntry 5 }

        qt1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1UserIntervalPerfEntry 6 }

        qt1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1UserIntervalPerfEntry 7 }

        qt1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1UserIntervalPerfEntry 8 }

        qt1UserIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        qt1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { qt1-card 4 }

        qt1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  QT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1UserTotalPerfTable 1 }

            QT1UserTotalPerfEntry ::= SEQUENCE  {
            qt1UserTotalPerfES          INTEGER,
            qt1UserTotalPerfSES         INTEGER,
            qt1UserTotalPerfBES         INTEGER,
            qt1UserTotalPerfUAS         INTEGER,
            qt1UserTotalPerfCSS         INTEGER,
            qt1UserTotalPerfBPV         INTEGER,
            qt1UserTotalPerfLOFC        INTEGER
        }

        qt1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1UserTotalPerfEntry 2 }

        qt1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1UserTotalPerfEntry 3 }

        qt1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1UserTotalPerfEntry 4 }

        qt1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1UserTotalPerfEntry 5 }

        qt1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1UserTotalPerfEntry 6 }

        qt1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1UserTotalPerfEntry 7 }

        qt1UserTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        qt1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { qt1-card 22 }

        qt1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  QT1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1UserDaysIndex }
            ::= { qt1UserSevenDaysPerfTable 1 }

            QT1UserSevenDaysPerfEntry ::= SEQUENCE  {
            qt1UserDaysIndex            INTEGER (1..7),
            qt1UserDateStrIndex         DisplayString (SIZE (0..255) ),
            qt1UserSevenDaysPerfES      INTEGER,
            qt1UserSevenDaysPerfSES     INTEGER,
            qt1UserSevenDaysPerfBES     INTEGER,
            qt1UserSevenDaysPerfUAS     INTEGER,
            qt1UserSevenDaysPerfCSS     INTEGER
--            qt1UserSevenDaysPerfLOFC    INTEGER




    }

        qt1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { qt1UserSevenDaysPerfEntry 2 }

        qt1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { qt1UserSevenDaysPerfEntry 3 }

        qt1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1UserSevenDaysPerfEntry 4 }

        qt1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1UserSevenDaysPerfEntry 5 }

        qt1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1UserSevenDaysPerfEntry 6 }

        qt1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1UserSevenDaysPerfEntry 7 }

        qt1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1UserSevenDaysPerfEntry 8 }

--        qt1UserSevenDaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { qt1UserSevenDaysPerfEntry 9 }


--
--  Line Current Performance Table
--

        qt1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { qt1-card 8 }

        qt1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  QT1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1LineCurrentPerfTable 1 }

            QT1LineCurrentPerfEntry ::= SEQUENCE  {
            qt1LineCurrentPerfES        INTEGER,
            qt1LineCurrentPerfSES       INTEGER,
            qt1LineCurrentPerfBES       INTEGER,
            qt1LineCurrentPerfUAS       INTEGER,
            qt1LineCurrentPerfCSS       INTEGER,
            qt1LineCurrentPerfBPV       INTEGER,
            qt1LineCurrentPerfLOFC      INTEGER,
            qt1LineCurr15MinTimeElapsed INTEGER,
            qt1LineValid15MinInterval   INTEGER
        }

        qt1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { qt1LineCurrentPerfEntry 2 }

        qt1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1LineCurrentPerfEntry 3 }

        qt1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1LineCurrentPerfEntry 4 }

        qt1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1LineCurrentPerfEntry 5 }

        qt1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1LineCurrentPerfEntry 6 }

        qt1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1LineCurrentPerfEntry 7 }

        qt1LineCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1LineCurrentPerfEntry 8 }

        qt1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { qt1LineCurrentPerfEntry 11 }

        qt1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { qt1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        qt1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { qt1-card 9 }

        qt1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  QT1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1LineIntervalPerfNumber }
            ::= { qt1LineIntervalPerfTable 1 }

            QT1LineIntervalPerfEntry ::= SEQUENCE {
            qt1LineIntervalPerfNumber   INTEGER  (1..96),
            qt1LineIntervalPerfES       INTEGER,
            qt1LineIntervalPerfSES      INTEGER,
            qt1LineIntervalPerfBES      INTEGER,
            qt1LineIntervalPerfUAS      INTEGER,
            qt1LineIntervalPerfCSS      INTEGER,
            qt1LineIntervalPerfBPV      INTEGER,
            qt1LineIntervalPerfLOFC     INTEGER,
            qt1LineIntvAvailable        INTEGER
        }

        qt1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index "
            ::= { qt1LineIntervalPerfEntry 2 }

        qt1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1LineIntervalPerfEntry 3 }

        qt1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1LineIntervalPerfEntry 4 }

        qt1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1LineIntervalPerfEntry 5 }

        qt1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1LineIntervalPerfEntry 6 }

        qt1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1LineIntervalPerfEntry 7 }

        qt1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1LineIntervalPerfEntry 8 }

        qt1LineIntervalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1LineIntervalPerfEntry 9 }

        qt1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { qt1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        qt1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { qt1-card 10 }

        qt1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  QT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance entry"
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1LineTotalPerfTable 1 }

            QT1LineTotalPerfEntry ::= SEQUENCE  {
            qt1LineTotalPerfES          INTEGER,
            qt1LineTotalPerfSES         INTEGER,
            qt1LineTotalPerfBES         INTEGER,
            qt1LineTotalPerfUAS         INTEGER,
            qt1LineTotalPerfCSS         INTEGER,
            qt1LineTotalPerfBPV         INTEGER,
            qt1LineTotalPerfLOFC        INTEGER
        }

        qt1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1LineTotalPerfEntry 2 }

        qt1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1LineTotalPerfEntry 3 }

        qt1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1LineTotalPerfEntry 4 }

        qt1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1LineTotalPerfEntry 5 }

        qt1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1LineTotalPerfEntry 6 }

        qt1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { qt1LineTotalPerfEntry 7 }

        qt1LineTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { qt1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        qt1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { qt1-card 21 }

        qt1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  QT1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1LineDaysIndex }
            ::= { qt1LineSevenDaysPerfTable 1 }

            QT1LineSevenDaysPerfEntry ::= SEQUENCE  {
            qt1LineDaysIndex            INTEGER (1..7),
            qt1LineDateStrIndex         DisplayString (SIZE (0..255) ),
            qt1LineSevenDaysPerfES      INTEGER,
            qt1LineSevenDaysPerfSES     INTEGER,
            qt1LineSevenDaysPerfBES     INTEGER,
            qt1LineSevenDaysPerfUAS     INTEGER,
            qt1LineSevenDaysPerfCSS     INTEGER
--            qt1LineSevenDaysPerfLOFC    INTEGER




    }

        qt1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { qt1LineSevenDaysPerfEntry 2 }

        qt1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { qt1LineSevenDaysPerfEntry 3 }

        qt1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { qt1LineSevenDaysPerfEntry 4 }

        qt1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { qt1LineSevenDaysPerfEntry 5 }

        qt1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { qt1LineSevenDaysPerfEntry 6 }

        qt1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { qt1LineSevenDaysPerfEntry 7 }

        qt1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { qt1LineSevenDaysPerfEntry 8 }

--        qt1LineSevenDaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { qt1LineSevenDaysPerfEntry 9 }


--
--  Alarm Queue Table
--

        qt1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue Table"
            ::= { qt1-card 11 }

        qt1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  QT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1AlarmQueueIndex }
            ::= { qt1AlarmQueueTable 1 }

            QT1AlarmQueueEntry ::= SEQUENCE {
            qt1AlarmQueueIndex          INTEGER (1..40),
            qt1AlarmQueueString         DisplayString (SIZE(0..255))
        }

        qt1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { qt1AlarmQueueEntry 2 }

        qt1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { qt1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        qt1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { qt1-card 12 }

        qt1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  QT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { qt1Index , qt1PortIndex ,
        qt1AlarmHistoryIndex }
            ::= { qt1AlarmHistoryTable 1 }

            QT1AlarmHistoryEntry ::= SEQUENCE {
            qt1AlarmHistoryIndex        INTEGER,
            qt1Threshold                INTEGER,
            qt1CurrentState             INTEGER,
            qt1CurrentCount             INTEGER,
            qt1Alarm                    AlarmSeverity
        }

        qt1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yel-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    tpca(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { qt1AlarmHistoryEntry 2 }

        qt1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { qt1AlarmHistoryEntry 3 }

        qt1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { qt1AlarmHistoryEntry 4 }

        qt1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { qt1AlarmHistoryEntry 5 }

        qt1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { qt1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        qt1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { qt1-card 13 }

        qt1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  QT1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1LineAvailabilityTable 1 }

            QT1LineAvailabilityEntry ::= SEQUENCE {
            qt1AvailableSeconds         DisplayString,
            qt1UnavailableSeconds       DisplayString,
            qt1LineAvailability         DisplayString
        }

        qt1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { qt1LineAvailabilityEntry 2 }

        qt1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { qt1LineAvailabilityEntry 3 }

        qt1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { qt1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        qt1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qt1-card 14 }

        qt1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  QT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1AlarmControlTable 1 }

            QT1AlarmControlEntry ::= SEQUENCE {
            qt1YEL-Line                 AlarmSeverity,
            qt1AIS-Line                 AlarmSeverity,
            qt1LOS-Line                 AlarmSeverity,
            qt1LOF-Line                 AlarmSeverity,
            qt1BPV-Line                 AlarmSeverity,
            qt1ESS-Line                 AlarmSeverity,
            qt1UAS-Line                 AlarmSeverity,
            qt1CSS-Line                 AlarmSeverity,
            qt1TCPA                     AlarmSeverity
        }

        qt1YEL-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-Line State"
            ::= { qt1AlarmControlEntry 2 }

        qt1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { qt1AlarmControlEntry 3 }

        qt1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { qt1AlarmControlEntry 4 }

        qt1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { qt1AlarmControlEntry 5 }

        qt1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { qt1AlarmControlEntry 6 }

        qt1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { qt1AlarmControlEntry 7 }

        qt1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { qt1AlarmControlEntry 8 }

        qt1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { qt1AlarmControlEntry 9 }
-- RIKER 2013 NFS-13000027
        qt1TCPA  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold Crossing Performance Alarm"
            ::= { qt1AlarmControlEntry 10 }


--
--  Threshold Control Table
--

        qt1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qt1-card 15 }

        qt1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  QT1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1ThresholdControlTable 1 }

            QT1ThresholdControlEntry ::= SEQUENCE {
            qt1ThresholdBPV-Line        INTEGER,
            qt1ThresholdESS-Line        INTEGER,
            qt1ThresholdUAS-Line        INTEGER,
            qt1ThresholdCSS-Line        INTEGER,
            qt1ThresholdTCPA            INTEGER
        }

        qt1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line: 10exp-N"
            ::= { qt1ThresholdControlEntry 2 }

        qt1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { qt1ThresholdControlEntry 3 }

        qt1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { qt1ThresholdControlEntry 4 }

        qt1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { qt1ThresholdControlEntry 5 }
-- RIKER 2013 NFS-13000027
        qt1ThresholdTCPA  OBJECT-TYPE
            SYNTAX  INTEGER (1..1544)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of TCPA "
            ::= { qt1ThresholdControlEntry 6 }


--
-- Line Diagnostic Control Table
--

        qt1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { qt1-card 16 }

        qt1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  QT1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1LineDiagControlTable 1 }

            QT1LineDiagControlEntry ::= SEQUENCE {
            qt1LoopbackType             INTEGER,
            qt1LoopbackStatus           INTEGER,
            qt1QRSSControl              INTEGER,
            qt1QRSSStatus               INTEGER,
            qt1QRSSElapseSeconds        INTEGER,
            qt1QRSSErrorSeconds         INTEGER,
            qt1QRSSErrorCounts          INTEGER,
            qt1InbandLoopbackPeriod     INTEGER,
            qt1PatternSend              INTEGER,
            qt1PatternMap               DisplayString
        }

        qt1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-LLB-Inband-Active(5),
                    remote-PLB-ATT-Active(6),
                    remote-PLB-ANSI-Active(7),
                    remote-LLB-ANSI-Active(8),
                    remote-LLB-Inband-Deactive(9),
                    remote-PLB-ATT-Deactive(10),
                    remote-PLB-ANSI-Deactive(11),
                    remote-LLB-ANSI-Deactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qt1 Loopback Type"
            ::= { qt1LineDiagControlEntry 2 }

        qt1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qt1 Loopback Status"
            ::= { qt1LineDiagControlEntry 3 }

        qt1QRSSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-deactive(1),
                    qrss-active-full(2),
                    qrss-reset-error-count(3),
                    qrss-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qt1 QRSS Control"
            ::= { qt1LineDiagControlEntry 4 }

        qt1QRSSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrss-sync(1),
                    qrss-unsync(2),
                    qrss-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qt1 QRSS Status"
            ::= { qt1LineDiagControlEntry 5 }

        qt1QRSSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qt1 QRSS Elapse Seconds"
            ::= { qt1LineDiagControlEntry 6 }

        qt1QRSSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qt1 QRSS Error Seconds"
            ::= { qt1LineDiagControlEntry 7 }

        qt1QRSSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "qt1 QRSS Error Counts"
            ::= { qt1LineDiagControlEntry 8 }

        qt1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of QT1 inband local, payload, or line loopback"
            ::= { qt1LineDiagControlEntry 9 }

        qt1PatternSend  OBJECT-TYPE
            SYNTAX  INTEGER {
                    pat1kHzMilliwattOff(1),
                    pat1kHzMilliwattUlaw(2),
                    oldVersionNotSupport(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qt1 Pattern"
            ::= { qt1LineDiagControlEntry 18 }

        qt1PatternMap  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (24))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MAP has 24 chars, i=idle, 1=map. Ex:
                1111iiiiiiiiiiiiiiiiiiiiii => send PATTERN in TS1~4"
            ::= { qt1LineDiagControlEntry 19 }


--
--  Port Status Table
--

        qt1PortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Qt1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status table."
            ::= { qt1-card 23 }

        qt1PortStatusEntry  OBJECT-TYPE
            SYNTAX  Qt1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status entry"
            INDEX { qt1PSSlotIndex , qt1PSPortIndex }
            ::= { qt1PortStatusTable 1 }

        Qt1PortStatusEntry ::= SEQUENCE {
            qt1PSSlotIndex              LargeSlotIndex,
            qt1PSPortIndex              FourPortID,
            qt1PortLOS                  INTEGER,
            qt1PortLOF                  INTEGER,
            qt1PortRcvAIS               INTEGER,
            qt1PortRcvYEL               INTEGER,
            qt1PortXmtAIS               INTEGER,
            qt1PortXmtYEL               INTEGER,
            qt1PortBPVcount             Integer32,
            qt1PortEScount              Integer32
        }

        qt1PSSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "slot index"
            ::= { qt1PortStatusEntry 1 }

        qt1PSPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port index"
            ::= { qt1PortStatusEntry 2 }

        qt1PortLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOS State"
            ::= { qt1PortStatusEntry 3 }

        qt1PortLOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOF State"
            ::= { qt1PortStatusEntry 4 }

        qt1PortRcvAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received AIS State"
            ::= { qt1PortStatusEntry 5 }

        qt1PortRcvYEL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received YEL State"
            ::= { qt1PortStatusEntry 6 }

        qt1PortXmtAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit AIS State"
            ::= { qt1PortStatusEntry 7 }

        qt1PortXmtYEL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit YEL State"
            ::= { qt1PortStatusEntry 8 }

        qt1PortBPVcount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BPV count"
            ::= { qt1PortStatusEntry 9 }

        qt1PortEScount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ES count"
            ::= { qt1PortStatusEntry 10 }


--
--  Command Control Table
--

        qt1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qt1-card 17 }

        qt1CommandControlEntry  OBJECT-TYPE
            SYNTAX  QT1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qt1Index , qt1PortIndex }
            ::= { qt1CommandControlTable 1 }

            QT1CommandControlEntry ::= SEQUENCE {
            qt1AlarmQueueReset          INTEGER,
            qt1UserPerfReset            INTEGER,
            qt1AlarmHistoryReset        INTEGER,
            qt1PortReset                INTEGER,
            qt1PortLoadDefault          INTEGER
        }

        qt1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { qt1CommandControlEntry 2 }

        qt1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { qt1CommandControlEntry 3 }

        qt1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { qt1CommandControlEntry 4 }

        qt1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset QT1 Port"
            ::= { qt1CommandControlEntry 5 }

        qt1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QT1 Port"
            ::= { qt1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        qt1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { qt1-card 18 }

        qt1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  QT1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { qt1Index }
            ::= { qt1SystemInformationTable 1 }

            QT1SystemInformationEntry ::= SEQUENCE {
            qt1PROMVersion              DisplayString,
            qt1HardwareVersion          DisplayString
        }

        qt1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " qt1 PROM Version"
            ::= { qt1SystemInformationEntry 2 }

        qt1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " qt1 Hardware Version"
            ::= { qt1SystemInformationEntry 3 }


--
--  QT1 Customer Information Table
--

        qt1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QT1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { qt1-card 99 }

        qt1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  QT1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { qt1CISlotIndex , qt1CIPortIndex }
            ::= { qt1CustomerInfoTable 1 }

            QT1CustomerInfoEntry ::= SEQUENCE {
            qt1CISlotIndex              LargeSlotIndex,
            qt1CIPortIndex              FourPortID,
            qt1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        qt1CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qt1CustomerInfoEntry 1 }

        qt1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { qt1CustomerInfoEntry 2 }

        qt1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { qt1CustomerInfoEntry 3 }


        qt1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of QT1"
            ::= { qt1-card 100 }


--======================================================================--
--======================================================================--
--  g703 Card MIB
--======================================================================--
--======================================================================--


--
--  Alarm History Table
--

        g703AlmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " G.703 Alarm History Table"
            ::= { g703-card 1 }

        g703AlmHistoryEntry  OBJECT-TYPE
            SYNTAX  G703AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX {
        g703AlmHistorySlotIndex ,
        g703AlmHistoryPortIndex }
            ::= { g703AlmHistoryTable 1 }

            G703AlmHistoryEntry ::= SEQUENCE {
            g703AlmHistorySlotIndex     LargeSlotIndex,
            g703AlmHistoryPortIndex     EightPortID,
            g703AlmHistoryState         INTEGER,
            g703AlmHistoryCount         INTEGER,
            g703AlmHistoryEnable        AlarmSeverity
        }

        g703AlmHistorySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { g703AlmHistoryEntry 1 }

        g703AlmHistoryPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.703 port 1-8"
            ::= { g703AlmHistoryEntry 2 }

        g703AlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { g703AlmHistoryEntry 3 }

        g703AlmHistoryCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { g703AlmHistoryEntry 4 }

        g703AlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { g703AlmHistoryEntry 5 }

--
--  Alarm Control Table
--

        g703AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "G.703 Alarm Control Table."
            ::= { g703-card 2 }

        g703AlarmControlEntry  OBJECT-TYPE
            SYNTAX  G703AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.703 Alarm Control Table."
            INDEX {
        g703AlarmSlotIndex ,
        g703AlarmPortIndex }
            ::= { g703AlarmControlTable 1 }

            G703AlarmControlEntry ::= SEQUENCE {
            g703AlarmSlotIndex          LargeSlotIndex,
            g703AlarmPortIndex          EightPortID,
            g703AlarmType               INTEGER,
            g703AlarmSetup              AlarmSeverity
        }

        g703AlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { g703AlarmControlEntry 1 }

        g703AlarmPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.703 port 1-8"
            ::= { g703AlarmControlEntry 2 }

        g703AlarmType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    los(1)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type"
            ::= { g703AlarmControlEntry 3 }

        g703AlarmSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { g703AlarmControlEntry 4 }

--
-- Line Diagnostic Control Table
--

        g703LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "G.703 Diagnostic Control Table."
            ::= { g703-card 3 }

        g703LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  G703LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of G.703 diagnostic control table."
            INDEX {
        g703Index ,
        g703PortIndex
    }
            ::= { g703LineDiagControlTable 1 }

            G703LineDiagControlEntry ::= SEQUENCE {
            g703Index                   LargeSlotIndex,
            g703PortIndex               EightPortID,
            g703LoopbackType            INTEGER,
            g703BertControl             INTEGER,
            g703BertStatus              INTEGER,
            g703ElapseSeconds           INTEGER,
            g703ErrorSeconds            INTEGER,
            g703ErrorBits               INTEGER
        }

        g703Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { g703LineDiagControlEntry 1 }

        g703PortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 8, Total 8 ports"
            ::= { g703LineDiagControlEntry 2 }

        g703LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-Loopback(2),
                    payLoad-Loopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G703 Loopback Type"
            ::= { g703LineDiagControlEntry 3 }

        g703BertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-OFF(1),
                    bert-ON(2),
                    reset(3),
                    inject-Error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT control"
            ::= { g703LineDiagControlEntry 4 }

        g703BertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-Sync(1),
                    bert-Unsync(2),
                    bert-Not-Active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT status"
            ::= { g703LineDiagControlEntry 5 }

        g703ElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Elapse seconds"
            ::= { g703LineDiagControlEntry 6 }

        g703ErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error seconds"
            ::= { g703LineDiagControlEntry 7 }

        g703ErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error bits"
            ::= { g703LineDiagControlEntry 8 }
--
--  G703 Status Table
--

        g703StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703Status
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.703 status table."
            ::= { g703-card 4 }

        g703StatusEntry  OBJECT-TYPE
            SYNTAX  G703Status
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.703 status table."
            INDEX {
        g703Index ,
        g703PortIndex
    }
            ::= { g703StatusTable 1 }

            G703Status ::= SEQUENCE {
            statusLOS                   INTEGER
        }

        statusLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.703 LOS status "
            ::= { g703StatusEntry 2 }

--
--  SYSTEM Information Table
--

        g703SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703SystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { g703-card 5 }

        g703SystemInfoEntry  OBJECT-TYPE
            SYNTAX  G703SystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX {
        g703Index
    }
            ::= { g703SystemInformationTable 1 }

            G703SystemInformation ::= SEQUENCE {
            fpgaVersion                 DisplayString
        }

        fpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.703 FPGA Version"
            ::= { g703SystemInfoEntry 2 }

--
--  Command Control Table
--

        g703CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF G703CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { g703-card 6 }

        g703CommandControlEntry  OBJECT-TYPE
            SYNTAX  G703CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { g703Index }
            ::= { g703CommandControlTable 1 }

            G703CommandControlEntry ::= SEQUENCE {
            g703AlarmHistoryReset       INTEGER
        }

        g703AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { g703CommandControlEntry 1 }


        g703TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of G703"
            ::= { g703-card 100 }


--======================================================================--
--======================================================================--
--  G.SHDSL-4 MIB
--======================================================================--
--======================================================================--


--
--  GDSL4 SYSTEM Table
--

        gdsl4SystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4SystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system control table."
            ::= { gdsl4-card 1 }

        gdsl4SystemEntry  OBJECT-TYPE
            SYNTAX  Gdsl4SystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4SysHTUIndex }
            ::= { gdsl4SystemTable 1 }

            Gdsl4SystemEntry ::= SEQUENCE {
            gdsl4Index                  LargeSlotIndex,
            gdsl4PortIndex              FourPortID,
            gdsl4SysHTUIndex            INTEGER,
            gdsl4Mode                   INTEGER,
            gdsl4ServiceType            INTEGER,
            gdsl4ClockSource            INTEGER,
            gdsl4Model                  INTEGER

    }

        gdsl4Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4SystemEntry 1 }

        gdsl4PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1~4."
            ::= { gdsl4SystemEntry 2 }

        gdsl4SysHTUIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote"
            ::= { gdsl4SystemEntry 3 }

        gdsl4Mode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL mode (Master or Slave)"
            ::= { gdsl4SystemEntry 4 }

        gdsl4ServiceType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    one-pair(1),
                    two-pairs(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Service Configuration"
            ::= { gdsl4SystemEntry 5 }

        gdsl4ClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    line(1),
                    system(2),
                    dte(3),
                    e1t1(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " System Master Clock Source"
            ::= { gdsl4SystemEntry 6 }

        gdsl4Model  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rack(1),
                    h3300-3s(2),
                    h3300(3),
                    h3310(4),
                    h3304(5),
                    h3310-e1-brg(8),
                    h3310-brg(9),
                    other(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.shdsl model"
            ::= { gdsl4SystemEntry 7 }


--
--  GDSL4 Line Configuartion for Loop-1, Loop-2
--

        gdsl4LineConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Line Configuration table."
            ::= { gdsl4-card 2 }

        gdsl4LineConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl4LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL Line Configuration table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4LineLoopNumber }
            ::= { gdsl4LineConfigTable 1 }

            Gdsl4LineConfigEntry ::= SEQUENCE {
            gdsl4LineLoopNumber         INTEGER,
            gdsl4LineRate               INTEGER,
            gdsl4LineCode               INTEGER,
            gdsl4LineNx64               INTEGER,
            gdsl4CAS                    INTEGER,
            gdsl4OOS                    INTEGER
        }

        gdsl4LineLoopNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..2)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Unit Loop Number"
            ::= { gdsl4LineConfigEntry 2 }

        gdsl4LineRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0Kbps(0),
                    r72Kbps(1),
                    r136Kbps(2),
                    r200Kbps(3),
                    r264Kbps(4),
                    r328Kbps(5),
                    r392Kbps(6),
                    r456Kbps(7),
                    r520Kbps(8),
                    r584Kbps(9),
                    r648Kbps(10),
                    r712Kbps(11),
                    r776Kbps(12),
                    r840Kbps(13),
                    r904Kbps(14),
                    r968Kbps(15),
                    r1032Kbps(16),
                    r1096Kbps(17),
                    r1160Kbps(18),
                    r1224Kbps(19),
                    r1288Kbps(20),
                    r1352Kbps(21),
                    r1416Kbps(22),
                    r1480Kbps(23),
                    r1544Kbps(24),
                    r1608Kbps(25),
                    r1672Kbps(26),
                    r1736Kbps(27),
                    r1800Kbps(28),
                    r1864Kbps(29),
                    r1928Kbps(30),
                    r1992Kbps(31),
                    r2056Kbps(32)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "To describe G.SHDSL Line Rate of specified loop,
                for an example: 776Kbps"
            ::= { gdsl4LineConfigEntry 3 }

        gdsl4LineCode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    code-2b1q(1),
                    code-cap(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Line Coding"
            ::= { gdsl4LineConfigEntry 4 }

        gdsl4LineNx64  OBJECT-TYPE
            SYNTAX  INTEGER (3..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of N*64 Kbps"
            ::= { gdsl4LineConfigEntry 5 }

        gdsl4CAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1-cas(1),
                    off(2),
                    t1-d4-cas(3),
                    t1-esf-cas(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL CAS"
            ::= { gdsl4LineConfigEntry 6 }

        gdsl4OOS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    b0001(1),
                    b0010(2),
                    b0011(3),
                    b0100(4),
                    b0101(5),
                    b0110(6),
                    b0111(7),
                    b1000(8),
                    b1001(9),
                    b1010(10),
                    b1011(11),
                    b1100(12),
                    b1101(13),
                    b1110(14),
                    b1111(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OOS"
            ::= { gdsl4LineConfigEntry 7 }


--
--  GDSL4 AI Configuartion
--

        gdsl4AIConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4AIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Application Interface Configuration table."
            ::= { gdsl4-card 3 }

        gdsl4AIConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl4AIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL AI Configuration table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4AiNumber }
            ::= { gdsl4AIConfigTable 1 }

            Gdsl4AIConfigEntry ::= SEQUENCE {
            gdsl4AiNumber               INTEGER,
            gdsl4DteReady               INTEGER,
            gdsl4DteRate                INTEGER,
            gdsl4DteClockPolarity       INTEGER,
            gdsl4DteDataPolarity        INTEGER,
            gdsl4DteRTS                 INTEGER,
            gdsl4DteTTM                 INTEGER,
            gdsl4DteV54                 INTEGER,
            gdsl4DteInterface           INTEGER,
            gdsl4DS1Ready               INTEGER,
            gdsl4DS1Framing             INTEGER,
            gdsl4DS1Code                INTEGER,
            gdsl4DS1CAS                 INTEGER,
            gdsl4DS1Idle                INTEGER,
            gdsl4T1Interf               INTEGER,
            gdsl4T1EquLbo               INTEGER,
            gdsl4DS1Map                 DisplayString (SIZE(32)),
            gdsl4E1T1Mode               INTEGER,
            gdsl4AISetResponse          INTEGER
        }

        gdsl4AiNumber  OBJECT-TYPE
            SYNTAX  INTEGER  {
--                      local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote unit"
            ::= { gdsl4AIConfigEntry 2 }

        gdsl4DteReady   OBJECT-TYPE
            SYNTAX  INTEGER  {
                    dte-ready(1),
                    dte-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE port is present or not"
            ::= { gdsl4AIConfigEntry 3 }

        gdsl4DteRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte64K(1),
                    dte128K(2),
                    dte192K(3),
                    dte256K(4),
                    dte320K(5),
                    dte384K(6),
                    dte448K(7),
                    dte512K(8),
                    dte576K(9),
                    dte640K(10),
                    dte704K(11),
                    dte768K(12),
                    dte832K(13),
                    dte896K(14),
                    dte960K(15),
                    dte1024K(16),
                    dte1088K(17),
                    dte1152K(18),
                    dte1216K(19),
                    dte1280K(20),
                    dte1344K(21),
                    dte1408K(22),
                    dte1472K(23),
                    dte1536K(24),
                    dte1600K(25),
                    dte1664K(26),
                    dte1728K(27),
                    dte1792K(28),
                    dte1856K(29),
                    dte1920K(30),
                    dte1984K(31),
                    dte2048K(32),
                    none(33)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Base Rate"
            ::= { gdsl4AIConfigEntry 4 }

        gdsl4DteClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clock-normal(1),
                    clock-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Clock Polarity"
            ::= { gdsl4AIConfigEntry 5 }

        gdsl4DteDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-normal(1),
                    data-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Data Polarity"
            ::= { gdsl4AIConfigEntry 6 }

        gdsl4DteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rts-active(1),
                    rts-permanent(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE RTS Mode"
            ::= { gdsl4AIConfigEntry 7 }

        gdsl4DteTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttm-off(1),
                    ttm-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE TTM Mode"
            ::= { gdsl4AIConfigEntry 8 }

        gdsl4DteV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v54-off(1),
                    v54-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE V.54 Loopback Mode"
            ::= { gdsl4AIConfigEntry 9 }

        gdsl4DteInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    eia530-rs449(2),
                    x21(3),
                    rs232(4),
                    router(7),
                    subrate(8),
                    dte-e1(9),
                    dte-t1(10),
                    bridge(12),
                    n64-v35(17),
                    n64-eia530(18),
                    n64-x21(19),
                    n64-e1(25),
                    none(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Interface Type"
            ::= { gdsl4AIConfigEntry 10 }

        gdsl4DS1Ready  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ds1-ready(1),
                    ds1-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL DS1 unit is present or not"
            ::= { gdsl4AIConfigEntry 11 }

        gdsl4DS1Framing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unframe(1),
                    d4(2),
                    esf(3),
                    esf-t1-403(9),
                    crc-off(4),
                    crc-on(5),
                    cas-crc-off(6),
                    cas-crc-on(7),
                    none(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Framing"
            ::= { gdsl4AIConfigEntry 12 }

        gdsl4DS1Code  OBJECT-TYPE
            SYNTAX  INTEGER {
                    b8zs(1),
                    ami(2),
                    hdb3(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Coding"
            ::= { gdsl4AIConfigEntry 13 }

        gdsl4DS1CAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2),
                    none(3),
                    auto(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 CAS"
            ::= { gdsl4AIConfigEntry 14 }

        gdsl4DS1Idle  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Idle code"
            ::= { gdsl4AIConfigEntry 15 }

        gdsl4T1Interf  OBJECT-TYPE
            SYNTAX  INTEGER {
                    short-haul(1),
                    long-haul(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL T1 Interface"
            ::= { gdsl4AIConfigEntry 16 }

        gdsl4T1EquLbo  OBJECT-TYPE
            SYNTAX  INTEGER {
                    equ-0-133-feet(1),
                    equ-133-266-feet(2),
                    equ-266-399-feet(3),
                    equ-399-533-feet(4),
                    equ-533-655-feet(5),
                    none(6),
                    lbo-0db(11),
                    lbo-75db(12),
                    lbo-15db(13),
                    lbo-225db(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL T1 EQU/LBO"
            ::= { gdsl4AIConfigEntry 17 }

        gdsl4DS1Map  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(32))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Map"
            ::= { gdsl4AIConfigEntry 19 }

        gdsl4E1T1Mode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1(1),
                    t1(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL E1/T1 Mode"
            ::= { gdsl4AIConfigEntry 20 }

        gdsl4AISetResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    ok(2),
                    fail(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Config Set response"
            ::= { gdsl4AIConfigEntry 99 }


--
--  GDSL4 Current Performance Table
--

        gdsl4CurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4CurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl4-card 4 }

        gdsl4CurrPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl4CurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4CurrPerfTypeIndex }
            ::= { gdsl4CurrPerfTable 1 }

            Gdsl4CurrPerfEntry ::= SEQUENCE  {
            gdsl4CurrPerfTypeIndex      INTEGER,
            gdsl4CurrES                 INTEGER,
            gdsl4CurrSES                INTEGER,
            gdsl4CurrUAS                INTEGER,
            gdsl4Curr15MinTimeElapsed   INTEGER,
            gdsl4Valid15MinInterval     INTEGER
        }

        gdsl4CurrPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl4CurrPerfEntry 2 }

        gdsl4CurrES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl4CurrPerfEntry 3 }

        gdsl4CurrSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl4CurrPerfEntry 4 }

        gdsl4CurrUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl4CurrPerfEntry 5 }

        gdsl4Curr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { gdsl4CurrPerfEntry 6 }

        gdsl4Valid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { gdsl4CurrPerfEntry 7 }


--
--  GDSL4 Total Performance Table
--

        gdsl4TotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl4-card 5 }

        gdsl4TotalPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl4TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4TotalPerfTypeIndex }
            ::= { gdsl4TotalPerfTable 1 }

            Gdsl4TotalPerfEntry ::= SEQUENCE  {
            gdsl4TotalPerfTypeIndex     INTEGER,
            gdsl4TotalES                INTEGER,
            gdsl4TotalSES               INTEGER,
            gdsl4TotalUAS               INTEGER
        }

        gdsl4TotalPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl4TotalPerfEntry 2 }

        gdsl4TotalES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl4TotalPerfEntry 3 }

        gdsl4TotalSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl4TotalPerfEntry 4 }

        gdsl4TotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl4TotalPerfEntry 5 }

--
--  Interval Performance Table
--

        gdsl4IntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4IntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl4-card 6 }

        gdsl4IntvPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl4IntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4IntvPerfTypeIndex ,
        gdsl4IntvPerfPeriod }
            ::= { gdsl4IntvPerfTable 1 }

            Gdsl4IntvPerfEntry ::= SEQUENCE  {
            gdsl4IntvPerfTypeIndex      INTEGER,
            gdsl4IntvPerfPeriod         INTEGER,
            gdsl4IntvES                 INTEGER,
            gdsl4IntvSES                INTEGER,
            gdsl4IntvUAS                INTEGER,
            gdsl4IntvAvailable          INTEGER
        }

        gdsl4IntvPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl4IntvPerfEntry 2 }

        gdsl4IntvPerfPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Interval Period Number"
            ::= { gdsl4IntvPerfEntry 3 }

        gdsl4IntvES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl4IntvPerfEntry 4 }

        gdsl4IntvSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl4IntvPerfEntry 5 }

        gdsl4IntvUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl4IntvPerfEntry 6 }

        gdsl4IntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { gdsl4IntvPerfEntry 7 }


--
-- GDSL4 FRACTIONAL TABLE
--

        gdsl4FracTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4FracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl4FracUnitIndex.gdsl4FracNumber"
            ::= { gdsl4-card 7 }

        gdsl4FracEntry   OBJECT-TYPE
            SYNTAX  Gdsl4FracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4FracNumber }
            ::= { gdsl4FracTable 1 }

            Gdsl4FracEntry ::= SEQUENCE {
            gdsl4FracNumber             INTEGER  (1..32),
            gdsl4FracIfIndex            INTEGER
        }

        gdsl4FracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "gdsl4FracNumber "
            ::= { gdsl4FracEntry 2 }

        gdsl4FracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-dte(3),
                    chan-x(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "gdsl4FracIfIndex "
            ::= { gdsl4FracEntry 3 }

--
-- Diagnostic Control Table
--

        gdsl4DiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4DiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl4-card 8 }

        gdsl4DiagEntry  OBJECT-TYPE
            SYNTAX  Gdsl4DiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4DiagTable 1 }

            Gdsl4DiagEntry ::= SEQUENCE {
            gdsl4LocalGshdslLoopback    INTEGER,
            gdsl4RemoteGshdslLoopback   INTEGER,
            gdsl4RemoteDteLoopback      INTEGER,
            gdsl4BERTControl            INTEGER,
            gdsl4BERTReset              INTEGER,
            gdsl4BERTStatus             INTEGER,
            gdsl4BERTCounter            INTEGER,
            gdsl4BERTElapsed            INTEGER,
            gdsl4InbandLoopbackPeriod   INTEGER

    }

        gdsl4LocalGshdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    gshdsl-to-line(2),
                    gshdsl-to-local(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { gdsl4DiagEntry 2 }

        gdsl4RemoteGshdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-gshdsl-to-line(2),
                    slave-gshdsl-to-local(3),
                    slave-gshdsl-to-bridge(4),

                    slave-gshdsl-to-dte1(82),
                    slave-gshdsl-to-dte2(83),
                    slave-gshdsl-to-dte3(84)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { gdsl4DiagEntry 4 }

        gdsl4RemoteDteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-t1-to-line(2),
                    slave-t1-to-local(3),
                    slave-e1-to-line(4),
                    slave-e1-to-local(5),
                    slave-dte-to-line(6),
                    slave-dte-to-local(7),
                    slave-router-to-line(8),
                    other(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE/T1/E1 Loopback Type"
            ::= { gdsl4DiagEntry 5 }

        gdsl4BERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
--                      bert-2-15-1(2),
                    bert-on(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Control"
            ::= { gdsl4DiagEntry 6 }

        gdsl4BERTReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-no-action(1),
                    bert-restart(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Restart"
            ::= { gdsl4DiagEntry 7 }

        gdsl4BERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { gdsl4DiagEntry 8 }

        gdsl4BERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Counter"
            ::= { gdsl4DiagEntry 9 }

        gdsl4BERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Elapsed Time"
            ::= { gdsl4DiagEntry 10 }

        gdsl4InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of loopback"
            ::= { gdsl4DiagEntry 11 }


--
--  Alarm Queue Table
--

        gdsl4AlmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4AlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl4AlmQueueUnitIndex "
            ::= { gdsl4-card 9 }

        gdsl4AlmQueueEntry  OBJECT-TYPE
            SYNTAX  Gdsl4AlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4AlmQueueNumber }
            ::= { gdsl4AlmQueueTable 1 }

            Gdsl4AlmQueueEntry ::= SEQUENCE {
            gdsl4AlmQueueNumber         INTEGER (1..40),
            gdsl4AlmQueueString         DisplayString (SIZE(0..80))
        }

        gdsl4AlmQueueNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Latest Alarm Queue number (1-40)"
            ::= { gdsl4AlmQueueEntry 2 }

        gdsl4AlmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { gdsl4AlmQueueEntry 3 }

--
--  Alarm Status Table
--

        gdsl4AlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: xdslAlmStatusUnitIndex "
            ::= { gdsl4-card 10 }

        gdsl4AlmStatusEntry  OBJECT-TYPE
            SYNTAX  Gdsl4AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4AlmStatusNumber }
            ::= { gdsl4AlmStatusTable 1 }

            Gdsl4AlmStatusEntry ::= SEQUENCE {
            gdsl4AlmStatusNumber        INTEGER (1..40),
            gdsl4AlmStatusString        DisplayString,
            gdsl4AlmStatusThreshold     INTEGER,
            gdsl4AlmStatusState         INTEGER,
            gdsl4AlmStatusCount         INTEGER,
            gdsl4AlmStatusEnable        AlarmSeverity
        }

        gdsl4AlmStatusNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Index "
            ::= { gdsl4AlmStatusEntry 2 }

        gdsl4AlmStatusString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { gdsl4AlmStatusEntry 3 }

        gdsl4AlmStatusThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm Threshold Value "
            ::= { gdsl4AlmStatusEntry 4 }

        gdsl4AlmStatusState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { gdsl4AlmStatusEntry 5 }

        gdsl4AlmStatusCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { gdsl4AlmStatusEntry 6 }

        gdsl4AlmStatusEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { gdsl4AlmStatusEntry 7 }

--
--  Gdsl4 Status Config Table
--

        gdsl4StatusConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4StatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Gdsl Status Config Configuration "
            ::= { gdsl4-card 11 }

        gdsl4StatusConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl4StatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4StatusConfigTable 1 }

            Gdsl4StatusConfigTableEntry ::= SEQUENCE {
            gdsl4DS1SYNC                INTEGER,
            gdsl4DS1TxAIS               INTEGER,
            gdsl4DS1TxRAI               INTEGER,
            gdsl4DS1RxAIS               INTEGER,
            gdsl4DS1RxRAI               INTEGER,
            gdsl4DS1LOS                 INTEGER,
            gdsl4DS1LOF                 INTEGER,
            gdsl4dteDSR                 INTEGER,
            gdsl4dteCTS                 INTEGER,
            gdsl4dteDCD                 INTEGER,
            gdsl4dteDTR                 INTEGER,
            gdsl4dteRTS                 INTEGER,
            gdsl4PortCAS                INTEGER,
            gdsl4LAN1Status             INTEGER,
            gdsl4WAN1Status             INTEGER

    }

        gdsl4DS1SYNC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line status."
            ::= { gdsl4StatusConfigEntry 1 }

        gdsl4DS1TxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Gshdsl DS1 line Tx Alarm Indication Signal."
            ::= { gdsl4StatusConfigEntry 2 }

        gdsl4DS1TxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Tx Remote Alarm Indication."
            ::= { gdsl4StatusConfigEntry 3 }

        gdsl4DS1RxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Rx Alarm Indication Signal."
            ::= { gdsl4StatusConfigEntry 4 }

        gdsl4DS1RxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Rx Remote Alarm Indication."
            ::= { gdsl4StatusConfigEntry 5 }

        gdsl4DS1LOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line LOS Status."
            ::= { gdsl4StatusConfigEntry 6 }

        gdsl4DS1LOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line LOF Status."
            ::= { gdsl4StatusConfigEntry 7 }

        gdsl4dteDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DSR Status."
            ::= { gdsl4StatusConfigEntry 8 }

        gdsl4dteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line CTS Status."
            ::= { gdsl4StatusConfigEntry 9 }

        gdsl4dteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DCD Status."
            ::= { gdsl4StatusConfigEntry 10 }

        gdsl4dteDTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DTR Status."
            ::= { gdsl4StatusConfigEntry 11 }

        gdsl4dteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line RTS Status."
            ::= { gdsl4StatusConfigEntry 12 }

        gdsl4PortCAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    loss(1),
                    sync(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl CAS Status."
            ::= { gdsl4StatusConfigEntry 13 }

        gdsl4LAN1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LAN1 Status."
            ::= { gdsl4StatusConfigEntry 14 }

        gdsl4WAN1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " WAN1 Status."
            ::= { gdsl4StatusConfigEntry 15 }


--
--  GDSL4 Info Table
--

        gdsl4InfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl4InfoUnitIndex "
            ::= { gdsl4-card 12 }

        gdsl4InfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl4InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4InfoTable 1 }

            Gdsl4InfoEntry ::= SEQUENCE {
            gdsl4MasterNoiseMarginString    DisplayString (SIZE(0..80)),
            gdsl4MasterMaxNMRString         DisplayString (SIZE(0..80)),
            gdsl4MasterMinNMRString         DisplayString (SIZE(0..80)),
            gdsl4SlaveNoiseMarginString     DisplayString (SIZE(0..80)),
            gdsl4SlaveMaxNMRString          DisplayString (SIZE(0..80)),
            gdsl4SlaveMinNMRString          DisplayString (SIZE(0..80))
        }

        gdsl4MasterNoiseMarginString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Noise Margin String"
            ::= { gdsl4InfoEntry 2 }

        gdsl4MasterMaxNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Max Noise Margin String"
            ::= { gdsl4InfoEntry 3 }

        gdsl4MasterMinNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Min Margin String"
            ::= { gdsl4InfoEntry 4 }

        gdsl4SlaveNoiseMarginString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Noise Margin String"
            ::= { gdsl4InfoEntry 5 }

        gdsl4SlaveMaxNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Max Noise Margin String"
            ::= { gdsl4InfoEntry 6 }

        gdsl4SlaveMinNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Min Margin String"
            ::= { gdsl4InfoEntry 7 }

--
--  Command Control Table
--

        gdsl4CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { gdsl4-card 13 }

        gdsl4CommandControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl4CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4CommandControlTable 1 }

            Gdsl4CommandControlEntry ::= SEQUENCE {
            gdsl4ClearAlarmQueue        INTEGER,
            gdsl4ClearPerformance       INTEGER,
            gdsl4ClearAlarmHistory      INTEGER,
            gdsl4UnitReset              INTEGER,
            gdsl4UnitLoadDefault        INTEGER,
            gdsl4FarEndReset            INTEGER,
            gdsl4CardMode               INTEGER
        }

        gdsl4ClearAlarmQueue    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm Queue "
            ::= { gdsl4CommandControlEntry 2 }

        gdsl4ClearPerformance    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear User Performance"
            ::= { gdsl4CommandControlEntry 3 }

        gdsl4ClearAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm History"
            ::= { gdsl4CommandControlEntry 4 }

        gdsl4UnitReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset G.SHDSL-4"
            ::= { gdsl4CommandControlEntry 5 }

        gdsl4UnitLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default G.SHDSL-4"
            ::= { gdsl4CommandControlEntry 6 }

        gdsl4FarEndReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Far End System"
            ::= { gdsl4CommandControlEntry 7 }

        gdsl4CardMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1Mode(1),
                    t1Mode(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Set card to E1 or T1 mode, will reset card"
            ::= { gdsl4CommandControlEntry 8 }


--
--  SYSTEM Information Table
--

        gdsl4SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { gdsl4-card 14 }

        gdsl4SystemInformationEntry  OBJECT-TYPE
            SYNTAX  Gdsl4SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { gdsl4Index }
            ::= { gdsl4SystemInformationTable 1 }

            Gdsl4SystemInformationEntry ::= SEQUENCE {
            gdsl4SoftwareVersion        DisplayString,
            gdsl4HardwareVersion        DisplayString
        }

        gdsl4SoftwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-4 Software Version"
            ::= { gdsl4SystemInformationEntry 2 }

        gdsl4HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-4 Hardware Version"
            ::= { gdsl4SystemInformationEntry 3 }


--
--  G.SHDSL-4 Customer Information Table
--

        gdsl4CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { gdsl4-card 99 }

        gdsl4CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl4CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { gdsl4CISlotIndex , gdsl4CIPortIndex }
            ::= { gdsl4CustomerInfoTable 1 }

            Gdsl4CustomerInfoEntry ::= SEQUENCE {
            gdsl4CISlotIndex            LargeSlotIndex,
            gdsl4CIPortIndex            FourPortID,
            gdsl4CICustomerInfo         DisplayString (SIZE(0..64))
        }

        gdsl4CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4CustomerInfoEntry 1 }

        gdsl4CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { gdsl4CustomerInfoEntry 2 }

        gdsl4CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { gdsl4CustomerInfoEntry 3 }


--
--  Daughter Card Information Table
--

        gdsl4DaughterCardInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4DaughterCardInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Daughter Card Information table."
            ::= { gdsl4-card 15 }

        gdsl4DaughterCardInfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl4DaughterCardInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the daughter card information table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4DaughterCardInfoTable 1 }

            Gdsl4DaughterCardInfoEntry ::= SEQUENCE {
            gdsl4DaughterCard           INTEGER
        }

        gdsl4DaughterCard  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-daughter-card(1),
                    sealing-current-single(2),
                    sealing-current-daul(3),
                    line-power-single(4),
                    line-power-daul(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-4 Daughter Card "
            ::= { gdsl4DaughterCardInfoEntry 2 }

--
--  GDSL4 ADVANCE SYSTEM Table
--

        gdsl4AdvanceSystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4AdvanceSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system control table."
            ::= { gdsl4-card 16 }

        gdsl4AdvanceSystemEntry  OBJECT-TYPE
            SYNTAX  Gdsl4AdvanceSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Advance system table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4SysHTUIndex }
            ::= { gdsl4AdvanceSystemTable 1 }

            Gdsl4AdvanceSystemEntry ::= SEQUENCE {
            gdsl4AnnexType              INTEGER,
            gdsl4ClockMode              INTEGER,
            gdsl4PSDMask                INTEGER,
            gdsl4PBOMode                INTEGER
        }

        gdsl4AnnexType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    type-A(1),
                    type-B(2),
                    not-support(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL Annex Type"
            ::= { gdsl4AdvanceSystemEntry 4 }

        gdsl4ClockMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    plesiochronous(1),
                    synchronous(2),
                    hybrid(3),
                    not-support(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Clock Mode"
            ::= { gdsl4AdvanceSystemEntry 5 }

        gdsl4PSDMask  OBJECT-TYPE
            SYNTAX  INTEGER {
                    symmetric(1),
                    asymmetric(2),
                    not-support(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL PSD Mask"
            ::= { gdsl4AdvanceSystemEntry 6 }

        gdsl4PBOMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    automatic(1),
                    pbo-0-db(2),
                    pbo-1-db(3),
                    pbo-2-db(4),
                    pbo-3-db(5),
                    pbo-4-db(6),
                    pbo-5-db(7),
                    pbo-6-db(8),
                    pbo-7-db(9),
                    pbo-8-db(10),
                    pbo-9-db(11),
                    pbo-10-db(12),
                    pbo-11-db(13),
                    pbo-12-db(14),
                    pbo-13-db(15),
                    pbo-14-db(16),
                    pbo-15-db(17),
                    pbo-16-db(18),
                    pbo-17-db(19),
                    pbo-18-db(20),
                    pbo-19-db(21),
                    pbo-20-db(22),
                    pbo-21-db(23),
                    pbo-22-db(24),
                    pbo-23-db(25),
                    pbo-24-db(26),
                    pbo-25-db(27),
                    pbo-26-db(28),
                    pbo-27-db(29),
                    pbo-28-db(30),
                    pbo-29-db(31),
                    pbo-30-db(32),
                    pbo-31-db(33),
                    not-support(34)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL PBO Mode"
            ::= { gdsl4AdvanceSystemEntry 7 }

--
--  GDSL4 Remote Link Identification Table
--

        gdsl4RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Remote Link Identification Table."
            ::= { gdsl4-card 17 }

        gdsl4RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL Remote Link Identification table."
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4RemoteLinkIDTable 1 }

            Gdsl4RemoteLinkIDEntry ::= SEQUENCE {
            gdsl4RemoteLinkIDType       INTEGER,
            gdsl4RemoteLinkIDRack       INTEGER,
            gdsl4RemoteLinkIDSlotNumber INTEGER,
            gdsl4RemoteLinkIDPort       INTEGER,
            gdsl4RemoteLinkIDSerialNumber   INTEGER
        }

        gdsl4RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type of remote site."
            ::= { gdsl4RemoteLinkIDEntry 3 }

        gdsl4RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { gdsl4RemoteLinkIDEntry 4 }

        gdsl4RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { gdsl4RemoteLinkIDEntry 5 }

        gdsl4RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { gdsl4RemoteLinkIDEntry 6 }

        gdsl4RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { gdsl4RemoteLinkIDEntry 7 }

--
--  Seven Days Performance Table
--
        gdsl4SevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= { gdsl4-card 18 }

        gdsl4SevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl4SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance entry"
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4DaysPerfTypeIndex ,
        gdsl4DaysIndex }
            ::= { gdsl4SevenDaysPerfTable 1 }

            Gdsl4SevenDaysPerfEntry ::= SEQUENCE  {
            gdsl4DaysPerfTypeIndex      INTEGER,
            gdsl4DaysIndex              INTEGER (1..7),
            gdsl4DateStrIndex           DisplayString (SIZE (0..255) ),
            gdsl4SevenDaysPerfES        INTEGER,
            gdsl4SevenDaysPerfSES       INTEGER,
            gdsl4SevenDaysPerfUAS       INTEGER
        }

        gdsl4DaysPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl4SevenDaysPerfEntry 3 }

        gdsl4DaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { gdsl4SevenDaysPerfEntry 4 }

        gdsl4DateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { gdsl4SevenDaysPerfEntry 5 }

        gdsl4SevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl4SevenDaysPerfEntry 6 }

        gdsl4SevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl4SevenDaysPerfEntry 7 }

        gdsl4SevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl4SevenDaysPerfEntry 8 }

--
--  GDSL4 Remote Fractional TABLE
--

    gdsl4RemoteFracTable  OBJECT IDENTIFIER ::= { gdsl4-card 19 }

--
-- GDSL4 Remote Fractional Config TABLE
--

        gdsl4RemoteFracConfigTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemoteFracConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Config Table"
            ::= { gdsl4RemoteFracTable 1 }

        gdsl4RemoteFracConfigEntry   OBJECT-TYPE
            SYNTAX  Gdsl4RemoteFracConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Config Entry "
            INDEX { gdsl4Index ,
        gdsl4PortIndex ,
        gdsl4RemoteFracNumber }
            ::= { gdsl4RemoteFracConfigTable 1 }

            Gdsl4RemoteFracConfigEntry ::= SEQUENCE {
            gdsl4RemoteFracNumber       INTEGER,
            gdsl4RemoteFracIfIndex      INTEGER
        }

        gdsl4RemoteFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Number "
            ::= { gdsl4RemoteFracConfigEntry 3 }

        gdsl4RemoteFracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-x(3),
                    chan-dte(4),
                    chan-ethernet(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional IfIndex"
            ::= { gdsl4RemoteFracConfigEntry 4 }

--
-- GDSL4 Set Remote Fractional TABLE
--

        gdsl4SetRemoteFracTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4SetRemoteFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Set Remote Fractional Table"
            ::= { gdsl4RemoteFracTable 2 }

        gdsl4SetRemoteFracEntry   OBJECT-TYPE
            SYNTAX  Gdsl4SetRemoteFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Set Remote Fractional Entry "
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4SetRemoteFracTable 1 }

            Gdsl4SetRemoteFracEntry ::= SEQUENCE {
            gdsl4StartFracNumber        INTEGER,
            gdsl4FracNumbers            INTEGER,
            gdsl4E1T1ClearStartFracNumber   INTEGER,
            gdsl4SetFracIfIndex             INTEGER
        }

        gdsl4StartFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Start Fractional Number "
            ::= { gdsl4SetRemoteFracEntry 3 }

        gdsl4FracNumbers   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of Fractional"
            ::= { gdsl4SetRemoteFracEntry 4 }

        gdsl4E1T1ClearStartFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote E1/T1 Clear Start Fractional Number"
            ::= { gdsl4SetRemoteFracEntry 5 }

        gdsl4SetFracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-x(3),
                    chan-dte(4),
                    chan-ethernet(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Fractional IfIndex"
            ::= { gdsl4SetRemoteFracEntry 6 }

--
-- Remote Bert Control Table
--

        gdsl4RemoteBertTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemoteBertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl4-card 20 }

        gdsl4RemoteBertEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemoteBertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { gdsl4Index ,
        gdsl4PortIndex }
            ::= { gdsl4RemoteBertTable 1 }

            Gdsl4RemoteBertEntry ::= SEQUENCE {
            gdsl4RemBertPatternType     INTEGER,
            gdsl4RemBertTestChannel     INTEGER,
            gdsl4RemBertTestControl     INTEGER,
            gdsl4RemBertStatus          INTEGER,
            gdsl4RemBertErrSecond       INTEGER,
            gdsl4RemBertErrCounter      INTEGER,
            gdsl4RemBertElapsedSecond   INTEGER,
            gdsl4RemBertUnsyncSecond    INTEGER
        }

        gdsl4RemBertPatternType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
--                      off(1),
                    bert-2-15-1(2),
                    bert-qrss(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Pattern Type"
            ::= { gdsl4RemoteBertEntry 3 }

        gdsl4RemBertTestChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
                    full(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Test Channel Type"
            ::= { gdsl4RemoteBertEntry 4 }

        gdsl4RemBertTestControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
                    disable(1),
                    enable(2),
                    reset(3),
                    insert-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Test Control"
            ::= { gdsl4RemoteBertEntry 5 }

        gdsl4RemBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-unsync(1),
                    bert-sync(2),
                    bert-not-active(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Status"
            ::= { gdsl4RemoteBertEntry 6 }

        gdsl4RemBertErrSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Error Seconds"
            ::= { gdsl4RemoteBertEntry 7 }

        gdsl4RemBertErrCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Error Counter"
            ::= { gdsl4RemoteBertEntry 8 }

        gdsl4RemBertElapsedSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Elapsed Time"
            ::= { gdsl4RemoteBertEntry 9 }

        gdsl4RemBertUnsyncSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Unsync Time"
            ::= { gdsl4RemoteBertEntry 10 }


--
--  G.shdsl card Remote Router Table
--
    gdsl4RouterConfig     OBJECT IDENTIFIER ::= { gdsl4-card 21 }
--
--  G.shdsl card remote NI Control Table
--

        gdsl4RtrNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Table"
            ::= { gdsl4RouterConfig 1 }

        gdsl4RouterNiControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Entry"
            INDEX { gdsl4RtrNiUnitIndex ,
        gdsl4RtrNiPortIndex ,
        gdsl4RtrNiIndex }
            ::= { gdsl4RtrNiControlTable 1 }

            Gdsl4RtrNiControlEntry ::= SEQUENCE {
            gdsl4RtrNiUnitIndex         LargeSlotIndex,
            gdsl4RtrNiPortIndex         FourPortID,
            gdsl4RtrNiIndex             INTEGER,
            gdsl4RtrIPAddr              IpAddress,
            gdsl4RtrSubnetMask          IpAddress,
            gdsl4RtrFrame               INTEGER,
            gdsl4RtrRIP1                INTEGER,
            gdsl4RtrRIP2                INTEGER,
            gdsl4RtrMode                INTEGER
        }

        gdsl4RtrNiUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RouterNiControlEntry 1 }

        gdsl4RtrNiPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RouterNiControlEntry 2 }

        gdsl4RtrNiIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Ni index"
            ::= { gdsl4RouterNiControlEntry 3 }

        gdsl4RtrIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR IP Address"
            ::= { gdsl4RouterNiControlEntry 4 }

        gdsl4RtrSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR net mask"
            ::= { gdsl4RouterNiControlEntry 5 }

        gdsl4RtrFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    ethernet(4),
                    na(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Layer2 frame"
            ::= { gdsl4RouterNiControlEntry 6 }

        gdsl4RtrRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP1"
            ::= { gdsl4RouterNiControlEntry 7 }

        gdsl4RtrRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP2"
            ::= { gdsl4RouterNiControlEntry 8 }

        gdsl4RtrMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR mode"
            ::= { gdsl4RouterNiControlEntry 9 }

--
--  G.shdsl card remote Route Table
--

        gdsl4RtrRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Table"
            ::= { gdsl4RouterConfig 2 }

        gdsl4RouterRouteControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Entry"
            INDEX { gdsl4RtrRUnitIndex ,
        gdsl4RtrRPortIndex ,
        gdsl4RtrEntry }
            ::= { gdsl4RtrRouteControlTable 1 }

            Gdsl4RtrRouteControlEntry ::= SEQUENCE {
            gdsl4RtrRUnitIndex          LargeSlotIndex,
            gdsl4RtrRPortIndex          FourPortID,
            gdsl4RtrEntry               INTEGER (1..16),
            gdsl4RtrNetAddr             IpAddress,
            gdsl4RtrNetMask             IpAddress,
            gdsl4RtrGatewayAddr         IpAddress,
            gdsl4RtrNIAddr              IpAddress,
            gdsl4RtrMetric              INTEGER,
            gdsl4RtrInterface           INTEGER
        }

        gdsl4RtrRUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RouterRouteControlEntry 1 }

        gdsl4RtrRPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RouterRouteControlEntry 2 }

        gdsl4RtrEntry  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Route Entry"
            ::= { gdsl4RouterRouteControlEntry 3 }


        gdsl4RtrNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net Address"
            ::= { gdsl4RouterRouteControlEntry 4 }

        gdsl4RtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net mask"
            ::= { gdsl4RouterRouteControlEntry 5 }

        gdsl4RtrGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route gateway Address"
            ::= { gdsl4RouterRouteControlEntry 6 }

        gdsl4RtrNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route NI Address"
            ::= { gdsl4RouterRouteControlEntry 7 }


        gdsl4RtrMetric OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Route metric"
            ::= { gdsl4RouterRouteControlEntry 8 }

        gdsl4RtrInterface OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    lan(2),
                    wan(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Router Interface"
            ::= { gdsl4RouterRouteControlEntry 9 }

--
--  G.shdsl card remote Router Command
--
        gdsl4RtrCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Table"
            ::= { gdsl4RouterConfig 3 }

        gdsl4RtrCommandEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Entry"
            INDEX { gdsl4RtrCmdUnitIndex ,
        gdsl4RtrCmdPortIndex }
            ::= { gdsl4RtrCommandTable 1 }

            Gdsl4RtrCmdEntry ::= SEQUENCE {
            gdsl4RtrCmdUnitIndex        LargeSlotIndex,
            gdsl4RtrCmdPortIndex        FourPortID,
            gdsl4RtrCommand             INTEGER,
            gdsl4CRCtransparency        INTEGER
        }

        gdsl4RtrCmdUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RtrCommandEntry 1 }

        gdsl4RtrCmdPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RtrCommandEntry 2 }

        gdsl4RtrCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1),
                    load-default(2),
                    none(3),
                    re-get-map-cfg(11),
                    re-get-ni-cfg(12),
                    re-get-rtr-cfg(13),
                    re-get-crc-cfg(14),
                    re-get-all-cfg(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Command(reset or load-default)"
            ::= { gdsl4RtrCommandEntry 3 }

        gdsl4CRCtransparency OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CRC transparency"
            ::= { gdsl4RtrCommandEntry 4 }


--
--  G.shdsl card remote Router Map
--
        gdsl4RtrMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Table"
            ::= { gdsl4RouterConfig 4 }

        gdsl4RtrMapEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Entry"
            INDEX { gdsl4RtrMapUnitIndex ,
        gdsl4RtrMapPortIndex ,
        gdsl4RtrMapTsIndex }
            ::= { gdsl4RtrMapTable 1 }

            Gdsl4RtrMappingEntry ::= SEQUENCE {
            gdsl4RtrMapUnitIndex        LargeSlotIndex,
            gdsl4RtrMapPortIndex        FourPortID,
            gdsl4RtrMapTsIndex          TimeslotID,
            gdsl4RtrCh                  INTEGER
        }

        gdsl4RtrMapUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RtrMapEntry 1 }

        gdsl4RtrMapPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RtrMapEntry 2 }

        gdsl4RtrMapTsIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Timeslot 1~32, total 32 timeslots."
            ::= { gdsl4RtrMapEntry 3 }

        gdsl4RtrCh  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "channel map data"
            ::= { gdsl4RtrMapEntry 4 }


--
--  G.shdsl card remote Bridge Config
--

    gdsl4RemoteBridgeConfig OBJECT IDENTIFIER ::= { gdsl4-card 22 }

--  G.shdsl card remote Bridge: config table
        gdsl4RemBridgeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge Table"
            ::= { gdsl4RemoteBridgeConfig 1 }

        gdsl4RemBridgeEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge Entry"
            INDEX { gdsl4RBSlotIndex ,
        gdsl4RBPortIndex }
            ::= { gdsl4RemBridgeTable 1 }

            Gdsl4RemBridgeEntry ::= SEQUENCE {
            gdsl4RBSlotIndex            LargeSlotIndex,
            gdsl4RBPortIndex            FourPortID,
            gdsl4RemBrgAgeTime          INTEGER (10..1000000),
            gdsl4RemBrgCRC              INTEGER,
            gdsl4RemBrgLanSpeed         INTEGER
--            gdsl4RemBrgLan2Speed        INTEGER




    }

        gdsl4RBSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RemBridgeEntry 1 }

        gdsl4RBPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RemBridgeEntry 2 }

        gdsl4RemBrgAgeTime  OBJECT-TYPE
            SYNTAX  INTEGER (10..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: Age time 10~1000000 seconds."
            ::= { gdsl4RemBridgeEntry 3 }

        gdsl4RemBrgCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: CRC"
            ::= { gdsl4RemBridgeEntry 4 }

        gdsl4RemBrgLanSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    half-duplex-10M(1),
                    full-duplex-10M(2),
                    half-duplex-100M(3),
                    full-duplex-100M(4),
                    auto-negotiation(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: LAN1 speed"
            ::= { gdsl4RemBridgeEntry 5 }

--        gdsl4RemBrgLan2Speed  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    no(0),
--                    half-duplex-10M(1),
--                    full-duplex-10M(2),
--                    half-duplex-100M(3),
--                    full-duplex-100M(4),
--                    auto-negotiation(5)
--                }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                "Remote Bridge: LAN2 speed"
--            ::= { gdsl4RemBridgeEntry 6 }


--  G.shdsl card remote VLAN: VLAN State Table
        gdsl4RemVlanStateTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemVlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN State Table"
            ::= { gdsl4RemoteBridgeConfig 2 }

        gdsl4RemVlanStateEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemVlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN State Entry"
            INDEX { gdsl4RVSSlotIndex ,
        gdsl4RVSPortIndex }
            ::= { gdsl4RemVlanStateTable 1 }

            Gdsl4RemVlanStateEntry ::= SEQUENCE {
            gdsl4RVSSlotIndex           LargeSlotIndex,
            gdsl4RVSPortIndex           FourPortID,
            gdsl4RemVlanEnable          INTEGER,
            gdsl4RemVlanMgmtVID         INTEGER (1..4095),
            gdsl4RemVlanRegenCRC        INTEGER
        }

        gdsl4RVSSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RemVlanStateEntry 1 }

        gdsl4RVSPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RemVlanStateEntry 2 }

        gdsl4RemVlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: disable or enable"
            ::= { gdsl4RemVlanStateEntry 3 }

        gdsl4RemVlanMgmtVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Magement VID"
            ::= { gdsl4RemVlanStateEntry 4 }

        gdsl4RemVlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: regenate CRC"
            ::= { gdsl4RemVlanStateEntry 5 }


--  G.shdsl card remote Bridge: VLAN Control Table
        gdsl4RemVlanControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemVlanControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Control Table"
            ::= { gdsl4RemoteBridgeConfig 3 }

        gdsl4RemVlanControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemVlanControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Control Entry"
            INDEX { gdsl4RVCSlotIndex ,
        gdsl4RVCPortIndex }
            ::= { gdsl4RemVlanControlTable 1 }

            Gdsl4RemVlanControlEntry ::= SEQUENCE {
            gdsl4RVCSlotIndex           LargeSlotIndex,
            gdsl4RVCPortIndex           FourPortID,
            gdsl4RemVlanVID             INTEGER (1..4095),
            gdsl4RemVlanTAG             INTEGER,
            gdsl4RemVlanMember          INTEGER,
            gdsl4RemVlanCommand         INTEGER,
            gdsl4RemVlanResponse        INTEGER
        }

        gdsl4RVCSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RemVlanControlEntry 1 }

        gdsl4RVCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RemVlanControlEntry 2 }

        gdsl4RemVlanVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl4RemVlanControlEntry 4 }

        gdsl4RemVlanTAG  OBJECT-TYPE
            SYNTAX  INTEGER {
                    untag(1),
                    tag(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: UNTAG or TAG"
            ::= { gdsl4RemVlanControlEntry 5 }

        gdsl4RemVlanMember  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Member is LAN1 or WAN1"
            ::= { gdsl4RemVlanControlEntry 6 }

        gdsl4RemVlanCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    create-vid(1),
                    add-member(2),
                    deactive-vid(3),
                    remove-member(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: command"
            ::= { gdsl4RemVlanControlEntry 11 }

        gdsl4RemVlanResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    vid-created-before(2),
                    vid-not-created-before(3),
                    not-empty(4),
                    no-response(11),
                    not-available(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Set response"
            ::= { gdsl4RemVlanControlEntry 12 }


--  G.shdsl card remote Bridge: VLAN List Table
        gdsl4RemVlanListTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemVlanListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN List Table"
            ::= { gdsl4RemoteBridgeConfig 4 }

        gdsl4RemVlanListEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemVlanListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN List Entry"
            INDEX { gdsl4RVLSlotIndex ,
        gdsl4RVLPortIndex ,
        gdsl4RVLVLanIndex }
            ::= { gdsl4RemVlanListTable 1 }

            Gdsl4RemVlanListEntry ::= SEQUENCE {
            gdsl4RVLSlotIndex           LargeSlotIndex,
            gdsl4RVLPortIndex           FourPortID,
            gdsl4RVLVLanIndex           INTEGER,
            gdsl4RVLVlanVID             INTEGER (1..4095),
            gdsl4RVLVlanTAGmember       DisplayString,
            gdsl4RVLVlanUNTAGmember     DisplayString
        }

        gdsl4RVLSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RemVlanListEntry 1 }

        gdsl4RVLPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RemVlanListEntry 2 }

        gdsl4RVLVLanIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VLAN list index"
            ::= { gdsl4RemVlanListEntry 3 }

        gdsl4RVLVlanVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl4RemVlanListEntry 4 }

        gdsl4RVLVlanTAGmember  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: TAG member"
            ::= { gdsl4RemVlanListEntry 5 }

        gdsl4RVLVlanUNTAGmember  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: UNTAG member"
            ::= { gdsl4RemVlanListEntry 6 }


--  G.shdsl card remote Bridge: VLAN Port Table
        gdsl4RemVlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl4RemVlanPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Port Table"
            ::= { gdsl4RemoteBridgeConfig 5 }

        gdsl4RemVlanPortEntry  OBJECT-TYPE
            SYNTAX  Gdsl4RemVlanPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Port Entry"
            INDEX { gdsl4RVPSlotIndex ,
        gdsl4RVPPortIndex ,
        gdsl4RVPVPIndex }
            ::= { gdsl4RemVlanPortTable 1 }

            Gdsl4RemVlanPortEntry ::= SEQUENCE {
            gdsl4RVPSlotIndex           LargeSlotIndex,
            gdsl4RVPPortIndex           FourPortID,
            gdsl4RVPVPIndex             INTEGER,
            gdsl4RVPVlanPVID            INTEGER (1..4095),
            gdsl4RVPVlanFrameType       INTEGER,
            gdsl4RVPVlanIngressFilter   INTEGER,
            gdsl4RVPSetResponse         INTEGER
        }

        gdsl4RVPSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl4RemVlanPortEntry 1 }

        gdsl4RVPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl4RemVlanPortEntry 2 }

        gdsl4RVPVPIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VLAN Port index"
            ::= { gdsl4RemVlanPortEntry 3 }

        gdsl4RVPVlanPVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl4RemVlanPortEntry 4 }

        gdsl4RVPVlanFrameType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    all(1),
                    tag-only(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Frame Type"
            ::= { gdsl4RemVlanPortEntry 5 }

        gdsl4RVPVlanIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Ingress Filter"
            ::= { gdsl4RemVlanPortEntry 6 }


        gdsl4RVPSetResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    vid-not-created-before(3),
                    no-response(11),
                    not-available(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Set response"
            ::= { gdsl4RemVlanPortEntry 7 }


        gdsl4TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 4GH"
            ::= { gdsl4-card 100 }


--======================================================================--
--======================================================================--
--  G.SHDSL-2 MIB
--======================================================================--
--======================================================================--


--
--  GDSL2 SYSTEM Table
--

        gdsl2SystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2SystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system control table."
            ::= { gdsl2-card 1 }

        gdsl2SystemEntry  OBJECT-TYPE
            SYNTAX  Gdsl2SystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2SysHTUIndex }
            ::= { gdsl2SystemTable 1 }

            Gdsl2SystemEntry ::= SEQUENCE {
            gdsl2Index                  LargeSlotIndex,
            gdsl2PortIndex              G2PortID,
            gdsl2SysHTUIndex            INTEGER,
            gdsl2Mode                   INTEGER,
            gdsl2ServiceType            INTEGER,
            gdsl2ClockSource            INTEGER,
            gdsl2Model                  INTEGER

    }

        gdsl2Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2SystemEntry 1 }

        gdsl2PortIndex  OBJECT-TYPE
            SYNTAX  G2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1/3, total 2 ports."
            ::= { gdsl2SystemEntry 2 }

        gdsl2SysHTUIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote"
            ::= { gdsl2SystemEntry 3 }

        gdsl2Mode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL mode (Master or Slave)"
            ::= { gdsl2SystemEntry 4 }

        gdsl2ServiceType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    one-pair(1),
                    two-pairs(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Service Configuration"
            ::= { gdsl2SystemEntry 5 }

        gdsl2ClockSource  OBJECT-TYPE
            SYNTAX  INTEGER {
                    line(1),
                    system(2),
                    dte(3),
                    e1t1(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " System Master Clock Source"
            ::= { gdsl2SystemEntry 6 }

        gdsl2Model  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rack(1),
                    h3300-3s(2),
                    h3300(3),
                    h3310(4),
                    h3304(5),
                    h3310-e1-brg(8),
                    h3310-brg(9),
                    other(99)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.shdsl model"
            ::= { gdsl2SystemEntry 7 }


--
--  GDSL2 Line Configuartion for Loop-1, Loop-2
--

        gdsl2LineConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Line Configuration table."
            ::= { gdsl2-card 2 }

        gdsl2LineConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl2LineConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL Line Configuration table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2LineLoopIndex }
            ::= { gdsl2LineConfigTable 1 }

            Gdsl2LineConfigEntry ::= SEQUENCE {
            gdsl2LineLoopIndex          INTEGER,
            gdsl2LineRate               INTEGER,
            gdsl2LineCode               INTEGER,
            gdsl2LineLoopNum            INTEGER,
            gdsl2LineNx64               INTEGER,
            gdsl2CAS                    INTEGER,
            gdsl2OOS                    INTEGER
        }

        gdsl2LineLoopIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..2)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Unit Loop Number"
            ::= { gdsl2LineConfigEntry 2 }

        gdsl2LineRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0Kbps(0),
                    r72Kbps(1),
                    r136Kbps(2),
                    r200Kbps(3),
                    r264Kbps(4),
                    r328Kbps(5),
                    r392Kbps(6),
                    r456Kbps(7),
                    r520Kbps(8),
                    r584Kbps(9),
                    r648Kbps(10),
                    r712Kbps(11),
                    r776Kbps(12),
                    r840Kbps(13),
                    r904Kbps(14),
                    r968Kbps(15),
                    r1032Kbps(16),
                    r1096Kbps(17),
                    r1160Kbps(18),
                    r1224Kbps(19),
                    r1288Kbps(20),
                    r1352Kbps(21),
                    r1416Kbps(22),
                    r1480Kbps(23),
                    r1544Kbps(24),
                    r1608Kbps(25),
                    r1672Kbps(26),
                    r1736Kbps(27),
                    r1800Kbps(28),
                    r1864Kbps(29),
                    r1928Kbps(30),
                    r1992Kbps(31),
                    r2056Kbps(32)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "To describe G.SHDSL Line Rate of specified loop,
                for an example: 776Kbps"
            ::= { gdsl2LineConfigEntry 3 }

        gdsl2LineCode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    code-2b1q(1),
                    code-cap(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Line Coding"
            ::= { gdsl2LineConfigEntry 4 }

        gdsl2LineLoopNum OBJECT-TYPE
            SYNTAX INTEGER {
                    loop-one(1),
                    loop-two(2),
                    two-loops(3),
                    one-one(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " gdsl Loop number"
            ::= { gdsl2LineConfigEntry 5 }

        gdsl2LineNx64  OBJECT-TYPE
            SYNTAX  INTEGER (3..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of N*64 Kbps"
            ::= { gdsl2LineConfigEntry 6 }

        gdsl2CAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1-cas(1),
                    off(2),
                    t1-d4-cas(3),
                    t1-esf-cas(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL CAS"
            ::= { gdsl2LineConfigEntry 7 }

        gdsl2OOS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    b0001(1),
                    b0010(2),
                    b0011(3),
                    b0100(4),
                    b0101(5),
                    b0110(6),
                    b0111(7),
                    b1000(8),
                    b1001(9),
                    b1010(10),
                    b1011(11),
                    b1100(12),
                    b1101(13),
                    b1110(14),
                    b1111(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OOS"
            ::= { gdsl2LineConfigEntry 8 }

--
--  GDSL2 AI Configuartion
--

        gdsl2AIConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2AIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Application Interface Configuration table."
            ::= { gdsl2-card 3 }

        gdsl2AIConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl2AIConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL AI Configuration table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2AiNumber }
            ::= { gdsl2AIConfigTable 1 }

            Gdsl2AIConfigEntry ::= SEQUENCE {
            gdsl2AiNumber               INTEGER,
            gdsl2DteReady               INTEGER,
            gdsl2DteRate                INTEGER,
            gdsl2DteClockPolarity       INTEGER,
            gdsl2DteDataPolarity        INTEGER,
            gdsl2DteRTS                 INTEGER,
            gdsl2DteTTM                 INTEGER,
            gdsl2DteV54                 INTEGER,
            gdsl2DteInterface           INTEGER,
            gdsl2DS1Ready               INTEGER,
            gdsl2DS1Framing             INTEGER,
            gdsl2DS1Code                INTEGER,
            gdsl2DS1CAS                 INTEGER,
            gdsl2DS1Idle                INTEGER,
            gdsl2T1Interf               INTEGER,
            gdsl2T1EquLbo               INTEGER,
            gdsl2DS1Map                 DisplayString (SIZE(32)),
            gdsl2E1T1Mode               INTEGER,
            gdsl2AISetResponse          INTEGER

    }

        gdsl2AiNumber  OBJECT-TYPE
            SYNTAX  INTEGER  {
--                      local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Local or Remote unit"
            ::= { gdsl2AIConfigEntry 2 }

        gdsl2DteReady   OBJECT-TYPE
            SYNTAX  INTEGER  {
                    dte-ready(1),
                    dte-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE port is present or not"
            ::= { gdsl2AIConfigEntry 3 }

        gdsl2DteRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte64K(1),
                    dte128K(2),
                    dte192K(3),
                    dte256K(4),
                    dte320K(5),
                    dte384K(6),
                    dte448K(7),
                    dte512K(8),
                    dte576K(9),
                    dte640K(10),
                    dte704K(11),
                    dte768K(12),
                    dte832K(13),
                    dte896K(14),
                    dte960K(15),
                    dte1024K(16),
                    dte1088K(17),
                    dte1152K(18),
                    dte1216K(19),
                    dte1280K(20),
                    dte1344K(21),
                    dte1408K(22),
                    dte1472K(23),
                    dte1536K(24),
                    dte1600K(25),
                    dte1664K(26),
                    dte1728K(27),
                    dte1792K(28),
                    dte1856K(29),
                    dte1920K(30),
                    dte1984K(31),
                    dte2048K(32),
                    none(33)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Base Rate"
            ::= { gdsl2AIConfigEntry 4 }

        gdsl2DteClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clock-normal(1),
                    clock-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Clock Polarity"
            ::= { gdsl2AIConfigEntry 5 }

        gdsl2DteDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-normal(1),
                    data-inverted(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Data Polarity"
            ::= { gdsl2AIConfigEntry 6 }

        gdsl2DteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rts-active(1),
                    rts-permanent(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE RTS Mode"
            ::= { gdsl2AIConfigEntry 7 }

        gdsl2DteTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttm-off(1),
                    ttm-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE TTM Mode"
            ::= { gdsl2AIConfigEntry 8 }

        gdsl2DteV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v54-off(1),
                    v54-on(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE V.54 Loopback Mode"
            ::= { gdsl2AIConfigEntry 9 }

        gdsl2DteInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    eia530-rs449(2),
                    x21(3),
                    rs232(4),
                    router(7),
                    subrate(8),
                    dte-e1(9),
                    dte-t1(10),
                    bridge(12),
                    n64-v35(17),
                    n64-eia530(18),
                    n64-x21(19),
                    n64-e1(25),
                    none(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DTE Interface Type"
            ::= { gdsl2AIConfigEntry 10 }

        gdsl2DS1Ready  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ds1-ready(1),
                    ds1-not-ready(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL DS1 unit is present or not"
            ::= { gdsl2AIConfigEntry 11 }

        gdsl2DS1Framing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unframe(1),
                    d4(2),
                    esf(3),
                    esf-t1-403(9),
                    crc-off(4),
                    crc-on(5),
                    cas-crc-off(6),
                    cas-crc-on(7),
                    none(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Framing"
            ::= { gdsl2AIConfigEntry 12 }

        gdsl2DS1Code  OBJECT-TYPE
            SYNTAX  INTEGER {
                    b8zs(1),
                    ami(2),
                    hdb3(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Coding"
            ::= { gdsl2AIConfigEntry 13 }

        gdsl2DS1CAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    on(1),
                    off(2),
                    none(3),
                    auto(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 CAS"
            ::= { gdsl2AIConfigEntry 14 }

        gdsl2DS1Idle  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Idle code"
            ::= { gdsl2AIConfigEntry 15 }

        gdsl2T1Interf  OBJECT-TYPE
            SYNTAX  INTEGER {
                    short-haul(1),
                    long-haul(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL T1 Interface"
            ::= { gdsl2AIConfigEntry 16 }

        gdsl2T1EquLbo  OBJECT-TYPE
            SYNTAX  INTEGER {
                    equ-0-133-feet(1),
                    equ-133-266-feet(2),
                    equ-266-399-feet(3),
                    equ-399-533-feet(4),
                    equ-533-655-feet(5),
                    none(6),
                    lbo-0db(11),
                    lbo-75db(12),
                    lbo-15db(13),
                    lbo-225db(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL T1 EQU/LBO"
            ::= { gdsl2AIConfigEntry 17 }

        gdsl2DS1Map  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(32))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL DS1 Map"
            ::= { gdsl2AIConfigEntry 19 }

        gdsl2E1T1Mode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1(1),
                    t1(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL E1/T1 Mode"
            ::= { gdsl2AIConfigEntry 20 }

        gdsl2AISetResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    ok(2),
                    fail(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Config Set response"
            ::= { gdsl2AIConfigEntry 99 }


--
--  GDSL2 Current Performance Table
--

        gdsl2CurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2CurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl2-card 4 }

        gdsl2CurrPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl2CurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2CurrPerfTypeIndex }
            ::= { gdsl2CurrPerfTable 1 }

            Gdsl2CurrPerfEntry ::= SEQUENCE  {
            gdsl2CurrPerfTypeIndex      INTEGER,
            gdsl2CurrES                 INTEGER,
            gdsl2CurrSES                INTEGER,
            gdsl2CurrUAS                INTEGER,
            gdsl2Curr15MinTimeElapsed   INTEGER,
            gdsl2Valid15MinInterval     INTEGER
        }

        gdsl2CurrPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl2CurrPerfEntry 2 }

        gdsl2CurrES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl2CurrPerfEntry 3 }

        gdsl2CurrSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl2CurrPerfEntry 4 }

        gdsl2CurrUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl2CurrPerfEntry 5 }

        gdsl2Curr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { gdsl2CurrPerfEntry 6 }

        gdsl2Valid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { gdsl2CurrPerfEntry 7 }


--
--  GDSL2 Total Performance Table
--

        gdsl2TotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl2-card 5 }

        gdsl2TotalPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl2TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2TotalPerfTypeIndex }
            ::= { gdsl2TotalPerfTable 1 }

            Gdsl2TotalPerfEntry ::= SEQUENCE  {
            gdsl2TotalPerfTypeIndex     INTEGER,
            gdsl2TotalES                INTEGER,
            gdsl2TotalSES               INTEGER,
            gdsl2TotalUAS               INTEGER
        }

        gdsl2TotalPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl2TotalPerfEntry 2 }

        gdsl2TotalES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl2TotalPerfEntry 3 }

        gdsl2TotalSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl2TotalPerfEntry 4 }

        gdsl2TotalUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl2TotalPerfEntry 5 }

--
--  Interval Performance Table
--

        gdsl2IntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2IntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl2-card 6 }

        gdsl2IntvPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl2IntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2IntvPerfTypeIndex ,
        gdsl2IntvPerfPeriod }
            ::= { gdsl2IntvPerfTable 1 }

            Gdsl2IntvPerfEntry ::= SEQUENCE  {
            gdsl2IntvPerfTypeIndex      INTEGER,
            gdsl2IntvPerfPeriod         INTEGER,
            gdsl2IntvES                 INTEGER,
            gdsl2IntvSES                INTEGER,
            gdsl2IntvUAS                INTEGER,
            gdsl2IntvAvailable          INTEGER
        }

        gdsl2IntvPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl2IntvPerfEntry 2 }

        gdsl2IntvPerfPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Interval Period Number"
            ::= { gdsl2IntvPerfEntry 3 }

        gdsl2IntvES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl2IntvPerfEntry 4 }

        gdsl2IntvSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl2IntvPerfEntry 5 }

        gdsl2IntvUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl2IntvPerfEntry 6 }

        gdsl2IntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { gdsl2IntvPerfEntry 7 }


--
-- GDSL2 FRACTIONAL TABLE
--

        gdsl2FracTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2FracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl2FracUnitIndex.gdsl2FracNumber"
            ::= { gdsl2-card 7 }

        gdsl2FracEntry   OBJECT-TYPE
            SYNTAX  Gdsl2FracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2FracNumber }
            ::= { gdsl2FracTable 1 }

            Gdsl2FracEntry ::= SEQUENCE {
            gdsl2FracNumber             INTEGER  (1..32),
            gdsl2FracIfIndex            INTEGER
        }

        gdsl2FracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "gdsl2FracNumber "
            ::= { gdsl2FracEntry 2 }

        gdsl2FracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-dte(3),
                    chan-x(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "gdsl2FracIfIndex "
            ::= { gdsl2FracEntry 3 }

--
-- Diagnostic Control Table
--

        gdsl2DiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2DiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl2-card 8 }

        gdsl2DiagEntry  OBJECT-TYPE
            SYNTAX  Gdsl2DiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2DiagTable 1 }

            Gdsl2DiagEntry ::= SEQUENCE {
            gdsl2LocalGshdslLoopback    INTEGER,
            gdsl2RemoteGshdslLoopback   INTEGER,
            gdsl2RemoteDteLoopback      INTEGER,
            gdsl2BERTControl            INTEGER,
            gdsl2BERTReset              INTEGER,
            gdsl2BERTStatus             INTEGER,
            gdsl2BERTCounter            INTEGER,
            gdsl2BERTElapsed            INTEGER,
            gdsl2InbandLoopbackPeriod   INTEGER

    }

        gdsl2LocalGshdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    gshdsl-to-line(2),
                    gshdsl-to-local(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { gdsl2DiagEntry 2 }

        gdsl2RemoteGshdslLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-gshdsl-to-line(2),
                    slave-gshdsl-to-local(3),
                    slave-gshdsl-to-bridge(4),

                    slave-gshdsl-to-dte1(82),
                    slave-gshdsl-to-dte2(83),
                    slave-gshdsl-to-dte3(84)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSU Loopback Type"
            ::= { gdsl2DiagEntry 4 }

        gdsl2RemoteDteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave-no-loopback(1),
                    slave-t1-to-line(2),
                    slave-t1-to-local(3),
                    slave-e1-to-line(4),
                    slave-e1-to-local(5),
                    slave-dte-to-line(6),
                    slave-dte-to-local(7),
                    slave-router-to-line(8),
                    other(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE/T1/E1 Loopback Type"
            ::= { gdsl2DiagEntry 5 }

        gdsl2BERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
--                      bert-2-15-1(2),
                    bert-on(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Control"
            ::= { gdsl2DiagEntry 6 }

        gdsl2BERTReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-no-action(1),
                    bert-restart(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Restart"
            ::= { gdsl2DiagEntry 7 }

        gdsl2BERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { gdsl2DiagEntry 8 }

        gdsl2BERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Counter"
            ::= { gdsl2DiagEntry 9 }

        gdsl2BERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Elapsed Time"
            ::= { gdsl2DiagEntry 10 }

        gdsl2InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of loopback"
            ::= { gdsl2DiagEntry 11 }

--
--  Alarm Queue Table
--

        gdsl2AlmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2AlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl2AlmQueueUnitIndex "
            ::= { gdsl2-card 9 }

        gdsl2AlmQueueEntry  OBJECT-TYPE
            SYNTAX  Gdsl2AlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2AlmQueueNumber }
            ::= { gdsl2AlmQueueTable 1 }

            Gdsl2AlmQueueEntry ::= SEQUENCE {
            gdsl2AlmQueueNumber         INTEGER (1..40),
            gdsl2AlmQueueString         DisplayString (SIZE(0..80))
        }

        gdsl2AlmQueueNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Latest Alarm Queue number (1-40)"
            ::= { gdsl2AlmQueueEntry 2 }

        gdsl2AlmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { gdsl2AlmQueueEntry 3 }

--
--  Alarm Status Table
--

        gdsl2AlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: xdslAlmStatusUnitIndex "
            ::= { gdsl2-card 10 }

        gdsl2AlmStatusEntry  OBJECT-TYPE
            SYNTAX  Gdsl2AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2AlmStatusNumber }
            ::= { gdsl2AlmStatusTable 1 }

            Gdsl2AlmStatusEntry ::= SEQUENCE {
            gdsl2AlmStatusNumber        INTEGER (1..40),
            gdsl2AlmStatusString        DisplayString,
            gdsl2AlmStatusThreshold     INTEGER,
            gdsl2AlmStatusState         INTEGER,
            gdsl2AlmStatusCount         INTEGER,
            gdsl2AlmStatusEnable        AlarmSeverity
        }

        gdsl2AlmStatusNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Index "
            ::= { gdsl2AlmStatusEntry 2 }

        gdsl2AlmStatusString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { gdsl2AlmStatusEntry 3 }

        gdsl2AlmStatusThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm Threshold Value "
            ::= { gdsl2AlmStatusEntry 4 }

        gdsl2AlmStatusState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { gdsl2AlmStatusEntry 5 }

        gdsl2AlmStatusCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { gdsl2AlmStatusEntry 6 }

        gdsl2AlmStatusEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { gdsl2AlmStatusEntry 7 }

--
--  Gdsl2 Status Config Table
--

        gdsl2StatusConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2StatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Gdsl Status Config Configuration "
            ::= { gdsl2-card 11 }

        gdsl2StatusConfigEntry  OBJECT-TYPE
            SYNTAX  Gdsl2StatusConfigTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2StatusConfigTable 1 }

            Gdsl2StatusConfigTableEntry ::= SEQUENCE {
            gdsl2DS1SYNC                INTEGER,
            gdsl2DS1TxAIS               INTEGER,
            gdsl2DS1TxRAI               INTEGER,
            gdsl2DS1RxAIS               INTEGER,
            gdsl2DS1RxRAI               INTEGER,
            gdsl2DS1LOS                 INTEGER,
            gdsl2DS1LOF                 INTEGER,
            gdsl2dteDSR                 INTEGER,
            gdsl2dteCTS                 INTEGER,
            gdsl2dteDCD                 INTEGER,
            gdsl2dteDTR                 INTEGER,
            gdsl2dteRTS                 INTEGER,
            gdsl2PortCAS                INTEGER,
            gdsl2LAN1Status             INTEGER,
            gdsl2WAN1Status             INTEGER

    }

        gdsl2DS1SYNC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line status."
            ::= { gdsl2StatusConfigEntry 1 }

        gdsl2DS1TxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Gshdsl DS1 line Tx Alarm Indication Signal."
            ::= { gdsl2StatusConfigEntry 2 }

        gdsl2DS1TxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Tx Remote Alarm Indication."
            ::= { gdsl2StatusConfigEntry 3 }

        gdsl2DS1RxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Rx Alarm Indication Signal."
            ::= { gdsl2StatusConfigEntry 4 }

        gdsl2DS1RxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line Rx Remote Alarm Indication."
            ::= { gdsl2StatusConfigEntry 5 }

        gdsl2DS1LOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line LOS Status."
            ::= { gdsl2StatusConfigEntry 6 }

        gdsl2DS1LOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl DS1 line LOF Status."
            ::= { gdsl2StatusConfigEntry 7 }

        gdsl2dteDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DSR Status."
            ::= { gdsl2StatusConfigEntry 8 }

        gdsl2dteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line CTS Status."
            ::= { gdsl2StatusConfigEntry 9 }

        gdsl2dteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DCD Status."
            ::= { gdsl2StatusConfigEntry 10 }

        gdsl2dteDTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line DTR Status."
            ::= { gdsl2StatusConfigEntry 11 }

        gdsl2dteRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl dte line RTS Status."
            ::= { gdsl2StatusConfigEntry 12 }

        gdsl2PortCAS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    loss(1),
                    sync(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Gshdsl CAS Status."
            ::= { gdsl2StatusConfigEntry 13 }

        gdsl2LAN1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LAN1 Status."
            ::= { gdsl2StatusConfigEntry 14 }

        gdsl2WAN1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " WAN1 Status."
            ::= { gdsl2StatusConfigEntry 15 }


--
--  GDSL2 Info Table
--

        gdsl2InfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: gdsl2InfoUnitIndex "
            ::= { gdsl2-card 12 }

        gdsl2InfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl2InfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2LoopNum }
            ::= { gdsl2InfoTable 1  }

            Gdsl2InfoEntry ::= SEQUENCE {
            gdsl2LoopNum                INTEGER,
            gdsl2MasterNoiseMarginString    DisplayString (SIZE(0..80)),
            gdsl2MasterMaxNMRString         DisplayString (SIZE(0..80)),
            gdsl2MasterMinNMRString         DisplayString (SIZE(0..80)),
            gdsl2SlaveNoiseMarginString     DisplayString (SIZE(0..80)),
            gdsl2SlaveMaxNMRString          DisplayString (SIZE(0..80)),
            gdsl2SlaveMinNMRString          DisplayString (SIZE(0..80))
        }

        gdsl2LoopNum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    loop-1(1),
                    loop-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Loop-1 or Loop-2"
            ::= { gdsl2InfoEntry 2 }

        gdsl2MasterNoiseMarginString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Noise Margin String"
            ::= { gdsl2InfoEntry 3 }

        gdsl2MasterMaxNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Max Noise Margin String"
            ::= { gdsl2InfoEntry 4 }

        gdsl2MasterMinNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Min Margin String"
            ::= { gdsl2InfoEntry 5 }

        gdsl2SlaveNoiseMarginString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Noise Margin String"
            ::= { gdsl2InfoEntry 6 }

        gdsl2SlaveMaxNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Max Noise Margin String"
            ::= { gdsl2InfoEntry 7 }

        gdsl2SlaveMinNMRString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Min Margin String"
            ::= { gdsl2InfoEntry 8 }

--
--  Command Control Table
--

        gdsl2CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { gdsl2-card 13 }

        gdsl2CommandControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl2CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2CommandControlTable 1 }

            Gdsl2CommandControlEntry ::= SEQUENCE {
            gdsl2ClearAlarmQueue        INTEGER,
            gdsl2ClearPerformance       INTEGER,
            gdsl2ClearAlarmHistory      INTEGER,
            gdsl2UnitReset              INTEGER,
            gdsl2UnitLoadDefault        INTEGER,
            gdsl2FarEndReset            INTEGER,
            gdsl2CardMode               INTEGER
        }

        gdsl2ClearAlarmQueue    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm Queue "
            ::= { gdsl2CommandControlEntry 2 }

        gdsl2ClearPerformance    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear User Performance"
            ::= { gdsl2CommandControlEntry 3 }

        gdsl2ClearAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm History"
            ::= { gdsl2CommandControlEntry 4 }

        gdsl2UnitReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset G.SHDSL-2"
            ::= { gdsl2CommandControlEntry 5 }

        gdsl2UnitLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default G.SHDSL-2"
            ::= { gdsl2CommandControlEntry 6 }

        gdsl2FarEndReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Far End System"
            ::= { gdsl2CommandControlEntry 7 }

        gdsl2CardMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    e1Mode(1),
                    t1Mode(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Set card to E1 or T1 mode, will reset card"
            ::= { gdsl2CommandControlEntry 8 }

--
--  SYSTEM Information Table
--

        gdsl2SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { gdsl2-card 14 }

        gdsl2SystemInformationEntry  OBJECT-TYPE
            SYNTAX  Gdsl2SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { gdsl2Index }
            ::= { gdsl2SystemInformationTable 1 }

            Gdsl2SystemInformationEntry ::= SEQUENCE {
            gdsl2SoftwareVersion        DisplayString,
            gdsl2HardwareVersion        DisplayString
        }

        gdsl2SoftwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-2 Software Version"
            ::= { gdsl2SystemInformationEntry 2 }

        gdsl2HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-2 Hardware Version"
            ::= { gdsl2SystemInformationEntry 3 }


--
--  G.SHDSL-2 Customer Information Table
--

        gdsl2CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { gdsl2-card 99 }

        gdsl2CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl2CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { gdsl2CISlotIndex , gdsl2CIPortIndex }
            ::= { gdsl2CustomerInfoTable 1 }

            Gdsl2CustomerInfoEntry ::= SEQUENCE {
            gdsl2CISlotIndex            LargeSlotIndex,
            gdsl2CIPortIndex            INTEGER,
            gdsl2CICustomerInfo         DisplayString (SIZE(0..64))
        }

        gdsl2CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2CustomerInfoEntry 1 }

        gdsl2CIPortIndex    OBJECT-TYPE
            SYNTAX  INTEGER {
                    port-1(1),
                    port-3(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { gdsl2CustomerInfoEntry 2 }

        gdsl2CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { gdsl2CustomerInfoEntry 3 }


--
--  Daughter Card Information Table
--

        gdsl2DaughterCardInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2DaughterCardInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Daughter Card Information table."
            ::= { gdsl2-card 15 }

        gdsl2DaughterCardInfoEntry  OBJECT-TYPE
            SYNTAX  Gdsl2DaughterCardInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the daughter card information table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2DaughterCardInfoTable 1 }

            Gdsl2DaughterCardInfoEntry ::= SEQUENCE {
            gdsl2DaughterCard           INTEGER
        }

        gdsl2DaughterCard  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-daughter-card(1),
                    sealing-current-single(2),
                    sealing-current-daul(3),
                    line-power-single(4),
                    line-power-daul(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL-2 Daughter Card "
            ::= { gdsl2DaughterCardInfoEntry 2 }

--
--  GDSL2 ADVANCE SYSTEM Table
--

        gdsl2AdvanceSystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2AdvanceSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system control table."
            ::= { gdsl2-card 16 }

        gdsl2AdvanceSystemEntry  OBJECT-TYPE
            SYNTAX  Gdsl2AdvanceSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Advance system table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2SysHTUIndex }
            ::= { gdsl2AdvanceSystemTable 1 }

            Gdsl2AdvanceSystemEntry ::= SEQUENCE {
            gdsl2AnnexType              INTEGER,
            gdsl2ClockMode              INTEGER,
            gdsl2PSDMask                INTEGER,
            gdsl2PBOMode                INTEGER
        }

        gdsl2AnnexType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    type-A(1),
                    type-B(2),
                    not-support(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.SHDSL Annex Type"
            ::= { gdsl2AdvanceSystemEntry 4 }

        gdsl2ClockMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    plesiosynchronous(1),
                    synchronous(2),
                    hybrid(3),
                    not-support(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL Clock Mode"
            ::= { gdsl2AdvanceSystemEntry 5 }

        gdsl2PSDMask  OBJECT-TYPE
            SYNTAX  INTEGER {
                    symmetric(1),
                    asymmetric(2),
                    not-support(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL PSD Mask"
            ::= { gdsl2AdvanceSystemEntry 6 }

        gdsl2PBOMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    automatic(1),
                    pbo-0-db(2),
                    pbo-1-db(3),
                    pbo-2-db(4),
                    pbo-3-db(5),
                    pbo-4-db(6),
                    pbo-5-db(7),
                    pbo-6-db(8),
                    pbo-7-db(9),
                    pbo-8-db(10),
                    pbo-9-db(11),
                    pbo-10-db(12),
                    pbo-11-db(13),
                    pbo-12-db(14),
                    pbo-13-db(15),
                    pbo-14-db(16),
                    pbo-15-db(17),
                    pbo-16-db(18),
                    pbo-17-db(19),
                    pbo-18-db(20),
                    pbo-19-db(21),
                    pbo-20-db(22),
                    pbo-21-db(23),
                    pbo-22-db(24),
                    pbo-23-db(25),
                    pbo-24-db(26),
                    pbo-25-db(27),
                    pbo-26-db(28),
                    pbo-27-db(29),
                    pbo-28-db(30),
                    pbo-29-db(31),
                    pbo-30-db(32),
                    pbo-31-db(33),
                    not-support(34)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " G.SHDSL PBO Mode"
            ::= { gdsl2AdvanceSystemEntry 7 }

--
--  GDSL2 Remote Link Identification Table
--

        gdsl2RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The G.SHDSL Remote Link Identification Table."
            ::= { gdsl2-card 17 }

        gdsl2RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the G.SHDSL Remote Link Identification table."
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2RemoteLinkIDTable 1 }

            Gdsl2RemoteLinkIDEntry ::= SEQUENCE {
            gdsl2RemoteLinkIDType       INTEGER,
            gdsl2RemoteLinkIDRack       INTEGER,
            gdsl2RemoteLinkIDSlotNumber INTEGER,
            gdsl2RemoteLinkIDPort       INTEGER,
            gdsl2RemoteLinkIDSerialNumber   INTEGER
        }

        gdsl2RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type of remote site."
            ::= { gdsl2RemoteLinkIDEntry 3 }

        gdsl2RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { gdsl2RemoteLinkIDEntry 4 }

        gdsl2RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { gdsl2RemoteLinkIDEntry 5 }

        gdsl2RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { gdsl2RemoteLinkIDEntry 6 }

        gdsl2RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { gdsl2RemoteLinkIDEntry 7 }

--
--  Seven Days Performance Table
--
        gdsl2SevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= { gdsl2-card 18 }

        gdsl2SevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  Gdsl2SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance entry"
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2DaysPerfTypeIndex ,
        gdsl2DaysIndex }
            ::= { gdsl2SevenDaysPerfTable 1 }

            Gdsl2SevenDaysPerfEntry ::= SEQUENCE  {
            gdsl2DaysPerfTypeIndex      INTEGER,
            gdsl2DaysIndex              INTEGER (1..7),
            gdsl2DateStrIndex           DisplayString (SIZE (0..255) ),
            gdsl2SevenDaysPerfES        INTEGER,
            gdsl2SevenDaysPerfSES       INTEGER,
            gdsl2SevenDaysPerfUAS       INTEGER
        }

        gdsl2DaysPerfTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master-loop-1(1),
                    master-loop-2(2),
                    master-ds1(3),
                    slave-loop-1(4),
                    slave-loop-2(5),
                    slave-ds1(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Performance Type"
            ::= { gdsl2SevenDaysPerfEntry 3 }

        gdsl2DaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { gdsl2SevenDaysPerfEntry 4 }

        gdsl2DateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { gdsl2SevenDaysPerfEntry 5 }

        gdsl2SevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { gdsl2SevenDaysPerfEntry 6 }

        gdsl2SevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { gdsl2SevenDaysPerfEntry 7 }

        gdsl2SevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { gdsl2SevenDaysPerfEntry 8 }

--
--  GDSL2 Remote Fractional TABLE
--

    gdsl2RemoteFracTable  OBJECT IDENTIFIER ::= { gdsl2-card 19 }

--
-- GDSL2 Remote Fractional Config TABLE
--

        gdsl2RemoteFracConfigTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemoteFracConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Config Table"
            ::= { gdsl2RemoteFracTable 1 }

        gdsl2RemoteFracConfigEntry   OBJECT-TYPE
            SYNTAX  Gdsl2RemoteFracConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Config Entry "
            INDEX { gdsl2Index ,
        gdsl2PortIndex ,
        gdsl2RemoteFracNumber }
            ::= { gdsl2RemoteFracConfigTable 1 }

            Gdsl2RemoteFracConfigEntry ::= SEQUENCE {
            gdsl2RemoteFracNumber       INTEGER,
            gdsl2RemoteFracIfIndex      INTEGER
        }

        gdsl2RemoteFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional Number "
            ::= { gdsl2RemoteFracConfigEntry 3 }

        gdsl2RemoteFracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-x(3),
                    chan-dte(4),
                    chan-ethernet(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Fractional IfIndex"
            ::= { gdsl2RemoteFracConfigEntry 4 }

--
-- GDSL2 Set Remote Fractional TABLE
--

        gdsl2SetRemoteFracTable   OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2SetRemoteFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Set Remote Fractional Table"
            ::= { gdsl2RemoteFracTable 2 }

        gdsl2SetRemoteFracEntry   OBJECT-TYPE
            SYNTAX  Gdsl2SetRemoteFracEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Set Remote Fractional Entry "
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2SetRemoteFracTable 1 }

            Gdsl2SetRemoteFracEntry ::= SEQUENCE {
            gdsl2StartFracNumber        INTEGER,
            gdsl2FracNumbers            INTEGER,
            gdsl2E1T1ClearStartFracNumber   INTEGER,
            gdsl2SetFracIfIndex             INTEGER
        }

        gdsl2StartFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Start Fractional Number "
            ::= { gdsl2SetRemoteFracEntry 3 }

        gdsl2FracNumbers   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of Fractional"
            ::= { gdsl2SetRemoteFracEntry 4 }

        gdsl2E1T1ClearStartFracNumber   OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote E1/T1 Clear Start Fractional Number"
            ::= { gdsl2SetRemoteFracEntry 5 }

        gdsl2SetFracIfIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    chan-idle(1),
                    chan-ds1(2),
                    chan-x(3),
                    chan-dte(4),
                    chan-ethernet(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Fractional IfIndex"
            ::= { gdsl2SetRemoteFracEntry 6 }

--
-- Remote Bert Control Table
--

        gdsl2RemoteBertTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemoteBertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { gdsl2-card 20 }

        gdsl2RemoteBertEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemoteBertEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { gdsl2Index ,
        gdsl2PortIndex }
            ::= { gdsl2RemoteBertTable 1 }

            Gdsl2RemoteBertEntry ::= SEQUENCE {
            gdsl2RemBertPatternType     INTEGER,
            gdsl2RemBertTestChannel     INTEGER,
            gdsl2RemBertTestControl     INTEGER,
            gdsl2RemBertStatus          INTEGER,
            gdsl2RemBertErrSecond       INTEGER,
            gdsl2RemBertErrCounter      INTEGER,
            gdsl2RemBertElapsedSecond   INTEGER,
            gdsl2RemBertUnsyncSecond    INTEGER
        }

        gdsl2RemBertPatternType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
--                      off(1),
                    bert-2-15-1(2),
                    bert-qrss(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Pattern Type"
            ::= { gdsl2RemoteBertEntry 3 }

        gdsl2RemBertTestChannel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
                    full(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Test Channel Type"
            ::= { gdsl2RemoteBertEntry 4 }

        gdsl2RemBertTestControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    un-support(0),
                    disable(1),
                    enable(2),
                    reset(3),
                    insert-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Test Control"
            ::= { gdsl2RemoteBertEntry 5 }

        gdsl2RemBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-unsync(1),
                    bert-sync(2),
                    bert-not-active(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Status"
            ::= { gdsl2RemoteBertEntry 6 }

        gdsl2RemBertErrSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Error Seconds"
            ::= { gdsl2RemoteBertEntry 7 }

        gdsl2RemBertErrCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Error Counter"
            ::= { gdsl2RemoteBertEntry 8 }

        gdsl2RemBertElapsedSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Elapsed Time"
            ::= { gdsl2RemoteBertEntry 9 }

        gdsl2RemBertUnsyncSecond  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote BERT Unsync Time"
            ::= { gdsl2RemoteBertEntry 10 }


--
--  G.shdsl card Remote Router Table
--
    gdsl2RouterConfig     OBJECT IDENTIFIER ::= { gdsl2-card 21 }
--
--  G.shdsl card remote NI Control Table
--

        gdsl2RtrNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Table"
            ::= { gdsl2RouterConfig 1 }

        gdsl2RouterNiControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RtrNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router NI Configuration Control Entry"
            INDEX { gdsl2RtrNiUnitIndex ,
        gdsl2RtrNiPortIndex ,
        gdsl2RtrNiIndex }
            ::= { gdsl2RtrNiControlTable 1 }

            Gdsl2RtrNiControlEntry ::= SEQUENCE {
            gdsl2RtrNiUnitIndex         LargeSlotIndex,
            gdsl2RtrNiPortIndex         G2PortID,
            gdsl2RtrNiIndex             INTEGER,
            gdsl2RtrIPAddr              IpAddress,
            gdsl2RtrSubnetMask          IpAddress,
            gdsl2RtrFrame               INTEGER,
            gdsl2RtrRIP1                INTEGER,
            gdsl2RtrRIP2                INTEGER,
            gdsl2RtrMode                INTEGER
        }

        gdsl2RtrNiUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RouterNiControlEntry 1 }

        gdsl2RtrNiPortIndex  OBJECT-TYPE
            SYNTAX  G2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1/3, total 2 ports."
            ::= { gdsl2RouterNiControlEntry 2 }

        gdsl2RtrNiIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Ni index"
            ::= { gdsl2RouterNiControlEntry 3 }

        gdsl2RtrIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR IP Address"
            ::= { gdsl2RouterNiControlEntry 4 }

        gdsl2RtrSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR net mask"
            ::= { gdsl2RouterNiControlEntry 5 }

        gdsl2RtrFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    ethernet(4),
                    na(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Layer2 frame"
            ::= { gdsl2RouterNiControlEntry 6 }

        gdsl2RtrRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP1"
            ::= { gdsl2RouterNiControlEntry 7 }

        gdsl2RtrRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    enabled(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR RIP2"
            ::= { gdsl2RouterNiControlEntry 8 }

        gdsl2RtrMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    router(1),
                    bridge(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR mode"
            ::= { gdsl2RouterNiControlEntry 9 }

--
--  G.shdsl card remote Route Table
--

        gdsl2RtrRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Table"
            ::= { gdsl2RouterConfig 2 }

        gdsl2RouterRouteControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RtrRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Route Control Entry"
            INDEX { gdsl2RtrRUnitIndex ,
        gdsl2RtrRPortIndex ,
        gdsl2RtrEntry }
            ::= { gdsl2RtrRouteControlTable 1 }

            Gdsl2RtrRouteControlEntry ::= SEQUENCE {
            gdsl2RtrRUnitIndex          LargeSlotIndex,
            gdsl2RtrRPortIndex          G2PortID,
            gdsl2RtrEntry               INTEGER (1..16),
            gdsl2RtrNetAddr             IpAddress,
            gdsl2RtrNetMask             IpAddress,
            gdsl2RtrGatewayAddr         IpAddress,
            gdsl2RtrNIAddr              IpAddress,
            gdsl2RtrMetric              INTEGER,
            gdsl2RtrInterface           INTEGER
        }

        gdsl2RtrRUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RouterRouteControlEntry 1 }

        gdsl2RtrRPortIndex  OBJECT-TYPE
            SYNTAX  G2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1/3, total 2 ports."
            ::= { gdsl2RouterRouteControlEntry 2 }

        gdsl2RtrEntry  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Router Route Entry"
            ::= { gdsl2RouterRouteControlEntry 3 }


        gdsl2RtrNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net Address"
            ::= { gdsl2RouterRouteControlEntry 4 }

        gdsl2RtrNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route net mask"
            ::= { gdsl2RouterRouteControlEntry 5 }

        gdsl2RtrGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route gateway Address"
            ::= { gdsl2RouterRouteControlEntry 6 }

        gdsl2RtrNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR route NI Address"
            ::= { gdsl2RouterRouteControlEntry 7 }


        gdsl2RtrMetric OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(255)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Route metric"
            ::= { gdsl2RouterRouteControlEntry 8 }

        gdsl2RtrInterface OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    lan(2),
                    wan(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RTR Router Interface"
            ::= { gdsl2RouterRouteControlEntry 9 }

--
--  G.shdsl card remote Router Command
--
        gdsl2RtrCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Table"
            ::= { gdsl2RouterConfig 3 }

        gdsl2RtrCommandEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RtrCmdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Command Entry"
            INDEX { gdsl2RtrCmdUnitIndex ,
        gdsl2RtrCmdPortIndex }
            ::= { gdsl2RtrCommandTable 1 }

            Gdsl2RtrCmdEntry ::= SEQUENCE {
            gdsl2RtrCmdUnitIndex        LargeSlotIndex,
            gdsl2RtrCmdPortIndex        G2PortID,
            gdsl2RtrCommand             INTEGER,
            gdsl2CRCtransparency        INTEGER
        }

        gdsl2RtrCmdUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RtrCommandEntry 1 }

        gdsl2RtrCmdPortIndex  OBJECT-TYPE
            SYNTAX  G2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1/3, total 2 ports."
            ::= { gdsl2RtrCommandEntry 2 }

        gdsl2RtrCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1),
                    load-default(2),
                    none(3),
                    re-get-map-cfg(11),
                    re-get-ni-cfg(12),
                    re-get-rtr-cfg(13),
                    re-get-crc-cfg(14),
                    re-get-all-cfg(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Router Command(reset or load-default)"
            ::= { gdsl2RtrCommandEntry 3 }

        gdsl2CRCtransparency OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CRC transparency"
            ::= { gdsl2RtrCommandEntry 4 }


--
--  G.shdsl card remote Router Map
--
        gdsl2RtrMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Table"
            ::= { gdsl2RouterConfig 4 }

        gdsl2RtrMapEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RtrMappingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Router Map Entry"
            INDEX { gdsl2RtrMapUnitIndex ,
        gdsl2RtrMapPortIndex ,
        gdsl2RtrMapTsIndex }
            ::= { gdsl2RtrMapTable 1 }

            Gdsl2RtrMappingEntry ::= SEQUENCE {
            gdsl2RtrMapUnitIndex        LargeSlotIndex,
            gdsl2RtrMapPortIndex        G2PortID,
            gdsl2RtrMapTsIndex          TimeslotID,
            gdsl2RtrCh                  INTEGER
        }

        gdsl2RtrMapUnitIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RtrMapEntry 1 }

        gdsl2RtrMapPortIndex  OBJECT-TYPE
            SYNTAX  G2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1/3, total 2 ports."
            ::= { gdsl2RtrMapEntry 2 }

        gdsl2RtrMapTsIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Timeslot 1~32, total 32 timeslots."
            ::= { gdsl2RtrMapEntry 3 }

        gdsl2RtrCh  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "channel map data"
            ::= { gdsl2RtrMapEntry 4 }


--
--  G.shdsl card remote Bridge Config
--

    gdsl2RemoteBridgeConfig OBJECT IDENTIFIER ::= { gdsl2-card 22 }

--  G.shdsl card remote Bridge: config table
        gdsl2RemBridgeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge Table"
            ::= { gdsl2RemoteBridgeConfig 1 }

        gdsl2RemBridgeEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge Entry"
            INDEX { gdsl2RBSlotIndex ,
        gdsl2RBPortIndex }
            ::= { gdsl2RemBridgeTable 1 }

            Gdsl2RemBridgeEntry ::= SEQUENCE {
            gdsl2RBSlotIndex            LargeSlotIndex,
            gdsl2RBPortIndex            FourPortID,
            gdsl2RemBrgAgeTime          INTEGER (10..1000000),
            gdsl2RemBrgCRC              INTEGER,
            gdsl2RemBrgLanSpeed         INTEGER
--            gdsl2RemBrgLan2Speed        INTEGER




    }

        gdsl2RBSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RemBridgeEntry 1 }

        gdsl2RBPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl2RemBridgeEntry 2 }

        gdsl2RemBrgAgeTime  OBJECT-TYPE
            SYNTAX  INTEGER (10..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: Age time 10~1000000 seconds."
            ::= { gdsl2RemBridgeEntry 3 }

        gdsl2RemBrgCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: CRC"
            ::= { gdsl2RemBridgeEntry 4 }

        gdsl2RemBrgLanSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    half-duplex-10M(1),
                    full-duplex-10M(2),
                    half-duplex-100M(3),
                    full-duplex-100M(4),
                    auto-negotiation(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Bridge: LAN1 speed"
            ::= { gdsl2RemBridgeEntry 5 }

--        gdsl2RemBrgLan2Speed  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    no(0),
--                    half-duplex-10M(1),
--                    full-duplex-10M(2),
--                    half-duplex-100M(3),
--                    full-duplex-100M(4),
--                    auto-negotiation(5)
--                }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                "Remote Bridge: LAN2 speed"
--            ::= { gdsl2RemBridgeEntry 6 }


--  G.shdsl card remote VLAN: VLAN State Table
        gdsl2RemVlanStateTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemVlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN State Table"
            ::= { gdsl2RemoteBridgeConfig 2 }

        gdsl2RemVlanStateEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemVlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN State Entry"
            INDEX { gdsl2RVSSlotIndex ,
        gdsl2RVSPortIndex }
            ::= { gdsl2RemVlanStateTable 1 }

            Gdsl2RemVlanStateEntry ::= SEQUENCE {
            gdsl2RVSSlotIndex           LargeSlotIndex,
            gdsl2RVSPortIndex           FourPortID,
            gdsl2RemVlanEnable          INTEGER,
            gdsl2RemVlanMgmtVID         INTEGER (1..4095),
            gdsl2RemVlanRegenCRC        INTEGER
        }

        gdsl2RVSSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RemVlanStateEntry 1 }

        gdsl2RVSPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl2RemVlanStateEntry 2 }

        gdsl2RemVlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: disable or enable"
            ::= { gdsl2RemVlanStateEntry 3 }

        gdsl2RemVlanMgmtVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Magement VID"
            ::= { gdsl2RemVlanStateEntry 4 }

        gdsl2RemVlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: regenate CRC"
            ::= { gdsl2RemVlanStateEntry 5 }


--  G.shdsl card remote Bridge: VLAN Control Table
        gdsl2RemVlanControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemVlanControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Control Table"
            ::= { gdsl2RemoteBridgeConfig 3 }

        gdsl2RemVlanControlEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemVlanControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Control Entry"
            INDEX { gdsl2RVCSlotIndex ,
        gdsl2RVCPortIndex }
            ::= { gdsl2RemVlanControlTable 1 }

            Gdsl2RemVlanControlEntry ::= SEQUENCE {
            gdsl2RVCSlotIndex           LargeSlotIndex,
            gdsl2RVCPortIndex           FourPortID,
            gdsl2RemVlanVID             INTEGER (1..4095),
            gdsl2RemVlanTAG             INTEGER,
            gdsl2RemVlanMember          INTEGER,
            gdsl2RemVlanCommand         INTEGER,
            gdsl2RemVlanResponse        INTEGER
        }

        gdsl2RVCSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RemVlanControlEntry 1 }

        gdsl2RVCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl2RemVlanControlEntry 2 }

        gdsl2RemVlanVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl2RemVlanControlEntry 4 }

        gdsl2RemVlanTAG  OBJECT-TYPE
            SYNTAX  INTEGER {
                    untag(1),
                    tag(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: UNTAG or TAG"
            ::= { gdsl2RemVlanControlEntry 5 }

        gdsl2RemVlanMember  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Member is LAN1 or WAN1"
            ::= { gdsl2RemVlanControlEntry 6 }

        gdsl2RemVlanCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    create-vid(1),
                    add-member(2),
                    deactive-vid(3),
                    remove-member(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: command"
            ::= { gdsl2RemVlanControlEntry 11 }

        gdsl2RemVlanResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    vid-created-before(2),
                    vid-not-created-before(3),
                    not-empty(4),
                    no-response(11),
                    not-available(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Set response"
            ::= { gdsl2RemVlanControlEntry 12 }


--  G.shdsl card remote Bridge: VLAN List Table
        gdsl2RemVlanListTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemVlanListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN List Table"
            ::= { gdsl2RemoteBridgeConfig 4 }

        gdsl2RemVlanListEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemVlanListEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN List Entry"
            INDEX { gdsl2RVLSlotIndex ,
        gdsl2RVLPortIndex ,
        gdsl2RVLVLanIndex }
            ::= { gdsl2RemVlanListTable 1 }

            Gdsl2RemVlanListEntry ::= SEQUENCE {
            gdsl2RVLSlotIndex           LargeSlotIndex,
            gdsl2RVLPortIndex           FourPortID,
            gdsl2RVLVLanIndex           INTEGER,
            gdsl2RVLVlanVID             INTEGER (1..4095),
            gdsl2RVLVlanTAGmember       DisplayString,
            gdsl2RVLVlanUNTAGmember     DisplayString
        }

        gdsl2RVLSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RemVlanListEntry 1 }

        gdsl2RVLPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl2RemVlanListEntry 2 }

        gdsl2RVLVLanIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VLAN list index"
            ::= { gdsl2RemVlanListEntry 3 }

        gdsl2RVLVlanVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl2RemVlanListEntry 4 }

        gdsl2RVLVlanTAGmember  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: TAG member"
            ::= { gdsl2RemVlanListEntry 5 }

        gdsl2RVLVlanUNTAGmember  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: UNTAG member"
            ::= { gdsl2RemVlanListEntry 6 }


--  G.shdsl card remote Bridge: VLAN Port Table
        gdsl2RemVlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Gdsl2RemVlanPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Port Table"
            ::= { gdsl2RemoteBridgeConfig 5 }

        gdsl2RemVlanPortEntry  OBJECT-TYPE
            SYNTAX  Gdsl2RemVlanPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN Port Entry"
            INDEX { gdsl2RVPSlotIndex ,
        gdsl2RVPPortIndex ,
        gdsl2RVPVPIndex }
            ::= { gdsl2RemVlanPortTable 1 }

            Gdsl2RemVlanPortEntry ::= SEQUENCE {
            gdsl2RVPSlotIndex           LargeSlotIndex,
            gdsl2RVPPortIndex           FourPortID,
            gdsl2RVPVPIndex             INTEGER,
            gdsl2RVPVlanPVID            INTEGER (1..4095),
            gdsl2RVPVlanFrameType       INTEGER,
            gdsl2RVPVlanIngressFilter   INTEGER,
            gdsl2RVPSetResponse         INTEGER
        }

        gdsl2RVPSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { gdsl2RemVlanPortEntry 1 }

        gdsl2RVPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~4, total 4 ports."
            ::= { gdsl2RemVlanPortEntry 2 }

        gdsl2RVPVPIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    wan1(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VLAN Port index"
            ::= { gdsl2RemVlanPortEntry 3 }

        gdsl2RVPVlanPVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: VLAN ID"
            ::= { gdsl2RemVlanPortEntry 4 }

        gdsl2RVPVlanFrameType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    all(1),
                    tag-only(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Frame Type"
            ::= { gdsl2RemVlanPortEntry 5 }

        gdsl2RVPVlanIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Ingress Filter"
            ::= { gdsl2RemVlanPortEntry 6 }

        gdsl2RVPSetResponse  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    vid-not-created-before(3),
                    no-response(11),
                    not-available(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote VLAN: Set response"
            ::= { gdsl2RemVlanPortEntry 7 }


        gdsl2TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 2GH"
            ::= { gdsl2-card 100 }




--======================================================================--
--======================================================================--
--  mini quad-e1-card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        mqe1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { mqe1-card 1 }

        mqe1LineControlEntry  OBJECT-TYPE
            SYNTAX  MQE1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1LineControlTable 1 }

        MQE1LineControlEntry ::= SEQUENCE  {
            mqe1Index                   SmallSlotIndex,
            mqe1PortIndex               FourPortID,
            mqe1LineFrame               INTEGER,
            mqe1LineCoding              INTEGER,
            mqe1Interface               INTEGER,
            mqe1FDL                     INTEGER,
            mqe1FDLSabit                INTEGER,
            mqe1AIS                     INTEGER,
            mqe1RAI                     INTEGER,
            mqe1CRC                     INTEGER,
            mqe1IdleCode                INTEGER,
            mqe1CASMode                 INTEGER,
            mqe1SignallingMode          INTEGER,
            mqe1CGA                     INTEGER,
            mqe1OutOfService            INTEGER,
            mqe1Protect                 INTEGER,
            mqe1Master                  INTEGER
        }

        mqe1Index  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { mqe1LineControlEntry 1 }

        mqe1PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqe1LineControlEntry 2 }

        mqe1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { mqe1LineControlEntry 3 }

        mqe1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { mqe1LineControlEntry 4 }

        mqe1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twisted-pair(1),
                    coaxial-cable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that MQE1 line use 75/120 Ohm Cable."
            ::= { mqe1LineControlEntry 5 }

        mqe1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fdl(1),
                    off(2),
                    hdlc(3),
                    ssm(4)
--                        ssm-hdlc(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MQE1 Facility Data Link ON/OFF"
            ::= { mqe1LineControlEntry 6 }

        mqe1FDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    sa4-5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MQE1 Facility Data Link use Sax bit"
            ::= { mqe1LineControlEntry 7 }

        mqe1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MQE1 line Alarm Indication Signal."
            ::= { mqe1LineControlEntry 8 }

        mqe1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { mqe1LineControlEntry 9 }

        mqe1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MQE1 Cycle Redundancy Check ON/OFF"
            ::= { mqe1LineControlEntry 10 }

        mqe1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { mqe1LineControlEntry 11 }

        mqe1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { mqe1LineControlEntry 12 }

        mqe1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1),
                    cd01(2) --//RIKER2021 SilverCreek
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS or CD01"
            ::= { mqe1LineControlEntry 13 }

        mqe1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { mqe1LineControlEntry 14 }

        mqe1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { mqe1LineControlEntry 15 }

        mqe1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { mqe1LineControlEntry 16 }

        mqe1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { mqe1LineControlEntry 17 }

--
--  User Current Performance Table
--

        mqe1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { mqe1-card 2 }

        mqe1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1UserCurrentPerfTable 1 }

            MQE1UserCurrentPerfEntry ::= SEQUENCE  {
            mqe1UserCurrentPerfES       INTEGER,
            mqe1UserCurrentPerfSES      INTEGER,
            mqe1UserCurrentPerfBES      INTEGER,
            mqe1UserCurrentPerfUAS      INTEGER,
            mqe1UserCurrentPerfCSS      INTEGER,
            mqe1UserCurrentPerfBPV      INTEGER,
            mqe1UserCurrentPerfDMs      INTEGER,
            mqe1UserCurr15MinTimeElapsed    INTEGER,
            mqe1UserValid15MinInterval      INTEGER
        }

        mqe1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1UserCurrentPerfEntry 2 }

        mqe1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1UserCurrentPerfEntry 3 }

        mqe1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1UserCurrentPerfEntry 4 }

        mqe1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1UserCurrentPerfEntry 5 }

        mqe1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { mqe1UserCurrentPerfEntry 6 }

        mqe1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1UserCurrentPerfEntry 7 }

        mqe1UserCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1UserCurrentPerfEntry 8 }

        mqe1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { mqe1UserCurrentPerfEntry 11 }

        mqe1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { mqe1UserCurrentPerfEntry 12 }


--
--  User Interval Performance Table
--

        mqe1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { mqe1-card 3 }

        mqe1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1UserIntervalPerfNumber }
            ::= { mqe1UserIntervalPerfTable 1 }

            MQE1UserIntervalPerfEntry ::= SEQUENCE  {
            mqe1UserIntervalPerfNumber  INTEGER  (1..96),
            mqe1UserIntervalPerfES      INTEGER,
            mqe1UserIntervalPerfSES     INTEGER,
            mqe1UserIntervalPerfBES     INTEGER,
            mqe1UserIntervalPerfUAS     INTEGER,
            mqe1UserIntervalPerfCSS     INTEGER,
            mqe1UserIntervalPerfBPV     INTEGER,
            mqe1UserIntervalPerfDMs     INTEGER
        }

        mqe1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { mqe1UserIntervalPerfEntry 2 }

        mqe1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1UserIntervalPerfEntry 3 }

        mqe1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1UserIntervalPerfEntry 4 }

        mqe1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1UserIntervalPerfEntry 5 }

        mqe1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1UserIntervalPerfEntry 6 }

        mqe1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1UserIntervalPerfEntry 7 }

        mqe1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1UserIntervalPerfEntry 8 }

        mqe1UserIntervalPerfDMs   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        mqe1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { mqe1-card 4 }

        mqe1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1UserTotalPerfTable 1 }

            MQE1UserTotalPerfEntry ::= SEQUENCE  {
            mqe1UserTotalPerfES         INTEGER,
            mqe1UserTotalPerfSES        INTEGER,
            mqe1UserTotalPerfBES        INTEGER,
            mqe1UserTotalPerfUAS        INTEGER,
            mqe1UserTotalPerfCSS        INTEGER,
            mqe1UserTotalPerfBPV        INTEGER,
            mqe1UserTotalPerfDMs        INTEGER
        }

        mqe1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1UserTotalPerfEntry 2 }

        mqe1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1UserTotalPerfEntry 3 }

        mqe1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1UserTotalPerfEntry 4 }

        mqe1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1UserTotalPerfEntry 5 }

        mqe1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1UserTotalPerfEntry 6 }

        mqe1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1UserTotalPerfEntry 7 }

        mqe1UserTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        mqe1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { mqe1-card 5 }

        mqe1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1UserDaysIndex }
            ::= { mqe1UserSevenDaysPerfTable 1 }

            MQE1UserSevenDaysPerfEntry ::= SEQUENCE  {
            mqe1UserDaysIndex           INTEGER (1..7),
            mqe1UserDateStrIndex        DisplayString (SIZE (0..255) ),
            mqe1UserSevenDaysPerfES     INTEGER,
            mqe1UserSevenDaysPerfSES    INTEGER,
            mqe1UserSevenDaysPerfBES    INTEGER,
            mqe1UserSevenDaysPerfUAS    INTEGER,
            mqe1UserSevenDaysPerfCSS    INTEGER,
            mqe1UserSevenDaysPerfDMs    INTEGER,
            mqe1UserSevenDaysPerfBPV    INTEGER
        }

        mqe1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { mqe1UserSevenDaysPerfEntry 2 }

        mqe1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { mqe1UserSevenDaysPerfEntry 3 }

        mqe1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 4 }

        mqe1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 5 }

        mqe1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 6 }

        mqe1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 7 }

        mqe1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 8 }

        mqe1UserSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 9 }

        mqe1UserSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1UserSevenDaysPerfEntry 10 }


--
--  Line Current Performance Table
--

        mqe1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { mqe1-card 10 }

        mqe1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1LineCurrentPerfTable 1 }

            MQE1LineCurrentPerfEntry ::= SEQUENCE  {
            mqe1LineCurrentPerfES       INTEGER,
            mqe1LineCurrentPerfSES      INTEGER,
            mqe1LineCurrentPerfBES      INTEGER,
            mqe1LineCurrentPerfUAS      INTEGER,
            mqe1LineCurrentPerfCSS      INTEGER,
            mqe1LineCurrentPerfBPV      INTEGER,
            mqe1LineCurrentPerfDMs      INTEGER,
            mqe1LineCurr15MinTimeElapsed    INTEGER,
            mqe1LineValid15MinInterval      INTEGER
        }

        mqe1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { mqe1LineCurrentPerfEntry 2 }

        mqe1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1LineCurrentPerfEntry 3 }

        mqe1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1LineCurrentPerfEntry 4 }

        mqe1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1LineCurrentPerfEntry 5 }

        mqe1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1LineCurrentPerfEntry 6 }

        mqe1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1LineCurrentPerfEntry 7 }

        mqe1LineCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1LineCurrentPerfEntry 8 }

        mqe1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { mqe1LineCurrentPerfEntry 11 }

        mqe1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { mqe1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        mqe1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { mqe1-card 11 }

        mqe1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1LineIntervalPerfNumber }
            ::= { mqe1LineIntervalPerfTable 1 }

            MQE1LineIntervalPerfEntry ::= SEQUENCE {
            mqe1LineIntervalPerfNumber  INTEGER  (1..96),
            mqe1LineIntervalPerfES      INTEGER,
            mqe1LineIntervalPerfSES     INTEGER,
            mqe1LineIntervalPerfBES     INTEGER,
            mqe1LineIntervalPerfUAS     INTEGER,
            mqe1LineIntervalPerfCSS     INTEGER,
            mqe1LineIntervalPerfBPV     INTEGER,
            mqe1LineIntervalPerfDMs     INTEGER,
            mqe1LineIntvAvailable       INTEGER
        }

        mqe1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { mqe1LineIntervalPerfEntry 2 }

        mqe1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1LineIntervalPerfEntry 3 }

        mqe1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1LineIntervalPerfEntry 4 }

        mqe1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1LineIntervalPerfEntry 5 }

        mqe1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1LineIntervalPerfEntry 6 }

        mqe1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1LineIntervalPerfEntry 7 }

        mqe1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1LineIntervalPerfEntry 8 }

        mqe1LineIntervalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1LineIntervalPerfEntry 9 }

        mqe1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { mqe1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        mqe1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { mqe1-card 12 }

        mqe1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1LineTotalPerfTable 1 }

            MQE1LineTotalPerfEntry ::= SEQUENCE  {
            mqe1LineTotalPerfES         INTEGER,
            mqe1LineTotalPerfSES        INTEGER,
            mqe1LineTotalPerfBES        INTEGER,
            mqe1LineTotalPerfUAS        INTEGER,
            mqe1LineTotalPerfCSS        INTEGER,
            mqe1LineTotalPerfBPV        INTEGER,
            mqe1LineTotalPerfDMs        INTEGER
        }

        mqe1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1LineTotalPerfEntry 2 }

        mqe1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1LineTotalPerfEntry 3 }

        mqe1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1LineTotalPerfEntry 4 }

        mqe1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1LineTotalPerfEntry 5 }

        mqe1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1LineTotalPerfEntry 6 }

        mqe1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1LineTotalPerfEntry 7 }

        mqe1LineTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        mqe1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { mqe1-card 13 }

        mqe1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  MQE1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1LineDaysIndex }
            ::= { mqe1LineSevenDaysPerfTable 1 }

            MQE1LineSevenDaysPerfEntry ::= SEQUENCE  {
            mqe1LineDaysIndex           INTEGER (1..7),
            mqe1LineDateStrIndex        DisplayString (SIZE (0..255) ),
            mqe1LineSevenDaysPerfES     INTEGER,
            mqe1LineSevenDaysPerfSES    INTEGER,
            mqe1LineSevenDaysPerfBES    INTEGER,
            mqe1LineSevenDaysPerfUAS    INTEGER,
            mqe1LineSevenDaysPerfCSS    INTEGER,
            mqe1LineSevenDaysPerfDMs    INTEGER,
            mqe1LineSevenDaysPerfBPV    INTEGER
        }

        mqe1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { mqe1LineSevenDaysPerfEntry 2 }

        mqe1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { mqe1LineSevenDaysPerfEntry 3 }

        mqe1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 4 }

        mqe1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 5 }

        mqe1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 6 }

        mqe1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 7 }

        mqe1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 8 }

        mqe1LineSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 9 }

        mqe1LineSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqe1LineSevenDaysPerfEntry 10 }


--
--  Alarm Queue Table
--

        mqe1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { mqe1-card 14 }

        mqe1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  MQE1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1AlarmQueueIndex }
            ::= { mqe1AlarmQueueTable 1 }

            MQE1AlarmQueueEntry ::= SEQUENCE {
            mqe1AlarmQueueIndex         INTEGER (1..40),
            mqe1AlarmQueueString        DisplayString (SIZE(0..255))
        }

        mqe1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { mqe1AlarmQueueEntry 2 }

        mqe1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { mqe1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        mqe1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { mqe1-card 15 }

        mqe1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  MQE1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { mqe1Index , mqe1PortIndex ,
        mqe1AlarmHistoryIndex }
            ::= { mqe1AlarmHistoryTable 1 }

            MQE1AlarmHistoryEntry ::= SEQUENCE {
            mqe1AlarmHistoryIndex       INTEGER,
            mqe1Threshold               INTEGER,
            mqe1CurrentState            INTEGER,
            mqe1CurrentCount            INTEGER,
            mqe1Alarm                   AlarmSeverity
        }

        mqe1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    tpca(9)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { mqe1AlarmHistoryEntry 2 }

        mqe1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { mqe1AlarmHistoryEntry 3 }

        mqe1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { mqe1AlarmHistoryEntry 4 }

        mqe1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { mqe1AlarmHistoryEntry 5 }

        mqe1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { mqe1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        mqe1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { mqe1-card 16 }

        mqe1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  MQE1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1LineAvailabilityTable 1 }

            MQE1LineAvailabilityEntry ::= SEQUENCE {
            mqe1AvailableSeconds        DisplayString,
            mqe1UnavailableSeconds      DisplayString,
            mqe1LineAvailability        DisplayString
        }

        mqe1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { mqe1LineAvailabilityEntry 2 }

        mqe1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { mqe1LineAvailabilityEntry 3 }

        mqe1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { mqe1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        mqe1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqe1-card 17 }

        mqe1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  MQE1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1AlarmControlTable 1 }

            MQE1AlarmControlEntry ::= SEQUENCE {
            mqe1RAI-Line                AlarmSeverity,
            mqe1AIS-Line                AlarmSeverity,
            mqe1LOS-Line                AlarmSeverity,
            mqe1LOF-Line                AlarmSeverity,
            mqe1BPV-Line                AlarmSeverity,
            mqe1ESS-Line                AlarmSeverity,
            mqe1UAS-Line                AlarmSeverity,
            mqe1CSS-Line                AlarmSeverity,
            mqe1TCPA                    AlarmSeverity
        }

        mqe1RAI-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { mqe1AlarmControlEntry 2 }

        mqe1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { mqe1AlarmControlEntry 3 }

        mqe1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { mqe1AlarmControlEntry 4 }

        mqe1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { mqe1AlarmControlEntry 5 }

        mqe1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { mqe1AlarmControlEntry 6 }

        mqe1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { mqe1AlarmControlEntry 7 }

        mqe1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { mqe1AlarmControlEntry 8 }

        mqe1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { mqe1AlarmControlEntry 9 }
-- RIKER 2013 NFS-13000027
        mqe1TCPA  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold Crossing Performance Alarm"
            ::= { mqe1AlarmControlEntry 10 }


--
--  Threshold Control Table
--

        mqe1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqe1-card 18 }

        mqe1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  MQE1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1ThresholdControlTable 1 }

            MQE1ThresholdControlEntry ::= SEQUENCE {
            mqe1ThresholdBPV-Line       INTEGER,
            mqe1ThresholdESS-Line       INTEGER,
            mqe1ThresholdUAS-Line       INTEGER,
            mqe1ThresholdCSS-Line       INTEGER,
            mqe1ThresholdTCPA           INTEGER
        }

        mqe1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line: 10exp-N"
            ::= { mqe1ThresholdControlEntry 2 }

        mqe1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { mqe1ThresholdControlEntry 3 }

        mqe1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { mqe1ThresholdControlEntry 4 }

        mqe1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { mqe1ThresholdControlEntry 5 }
-- RIKER 2013 NFS-13000027
        mqe1ThresholdTCPA  OBJECT-TYPE
            SYNTAX  INTEGER (1..2048)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of TCPA "
            ::= { mqe1ThresholdControlEntry 6 }


--
-- Line Diagnostic Control Table
--

        mqe1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqe1-card 19 }

        mqe1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  MQE1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1LineDiagControlTable 1 }

            MQE1LineDiagControlEntry ::= SEQUENCE {
            mqe1LoopbackType            INTEGER,
            mqe1LoopbackStatus          INTEGER,
            mqe1PRBSControl             INTEGER,
            mqe1PRBSStatus              INTEGER,
            mqe1PRBSElapseSeconds       INTEGER,
            mqe1PRBSErrorSeconds        INTEGER,
            mqe1PRBSErrorCounts         INTEGER,
            mqe1InbandLoopbackPeriod    INTEGER
        }

        mqe1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-PLB-Active(5),
                    remote-LLB-Active(6),
                    remote-PLB-Deactive(7),
                    remote-LLB-Deactive(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mqe1 Loopback Type"
            ::= { mqe1LineDiagControlEntry 2 }

        mqe1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqe1 Loopback Status"
            ::= { mqe1LineDiagControlEntry 3 }

        mqe1PRBSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-deactive(1),
                    prbs-active-full(2),
                    prbs-reset-error-count(3),
                    prbs-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mqe1 PRBS Control"
            ::= { mqe1LineDiagControlEntry 4 }

        mqe1PRBSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-sync(1),
                    prbs-unsync(2),
                    prbs-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqe1 PRBS Status"
            ::= { mqe1LineDiagControlEntry 5 }

        mqe1PRBSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqe1 PRBS Elapse Seconds"
            ::= { mqe1LineDiagControlEntry 6 }

        mqe1PRBSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqe1 PRBS Error Seconds"
            ::= { mqe1LineDiagControlEntry 7 }

        mqe1PRBSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqe1 PRBS Error Counts"
            ::= { mqe1LineDiagControlEntry 8 }

        mqe1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of MQE1 inband local, payload, or line loopback"
            ::= { mqe1LineDiagControlEntry 9 }

--
--  Command Control Table
--

        mqe1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { mqe1-card 20 }

        mqe1CommandControlEntry  OBJECT-TYPE
            SYNTAX  MQE1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { mqe1Index , mqe1PortIndex }
            ::= { mqe1CommandControlTable 1 }

            MQE1CommandControlEntry ::= SEQUENCE {
            mqe1AlarmQueueReset         INTEGER,
            mqe1UserPerfReset           INTEGER,
            mqe1AlarmHistoryReset       INTEGER,
            mqe1PortReset               INTEGER,
            mqe1PortLoadDefault         INTEGER
        }

        mqe1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { mqe1CommandControlEntry 2 }

        mqe1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { mqe1CommandControlEntry 3 }

        mqe1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { mqe1CommandControlEntry 4 }

        mqe1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset MQE1 Port"
            ::= { mqe1CommandControlEntry 5 }

        mqe1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default MQE1 Port"
            ::= { mqe1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        mqe1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { mqe1-card 21 }

        mqe1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  MQE1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { mqe1Index }
            ::= { mqe1SystemInformationTable 1 }

        MQE1SystemInformationEntry ::= SEQUENCE {
            mqe1PROMVersion             DisplayString,
            mqe1HardwareVersion         DisplayString
        }

        mqe1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " mqe1 PROM Version"
            ::= { mqe1SystemInformationEntry 2 }

        mqe1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " mqe1 Hardware Version"
            ::= { mqe1SystemInformationEntry 3 }

--
--  Remote Link Identification Table
--

        mqe1RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Table"
            ::= { mqe1-card 22 }

        mqe1RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  MQE1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification entry"
            INDEX { mqe1Index ,
        mqe1PortIndex }
            ::= { mqe1RemoteLinkIDTable 1 }

            MQE1RemoteLinkIDEntry ::= SEQUENCE {
            mqe1RemoteLinkIDType        INTEGER,
            mqe1RemoteLinkIDRack        INTEGER,
            mqe1RemoteLinkIDSlotNumber  INTEGER,
            mqe1RemoteLinkIDPort        INTEGER,
            mqe1RemoteLinkIDSerialNumber    INTEGER,
            mqe1RemoteLinkIDBackupSlotNUM   INTEGER,
            mqe1RemoteLinkIDBackupPort      INTEGER
        }

        mqe1RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Type"
            ::= { mqe1RemoteLinkIDEntry 3 }

        mqe1RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { mqe1RemoteLinkIDEntry 4 }

        mqe1RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { mqe1RemoteLinkIDEntry 5 }

        mqe1RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { mqe1RemoteLinkIDEntry 6 }

        mqe1RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { mqe1RemoteLinkIDEntry 7 }

        mqe1RemoteLinkIDBackupSlotNUM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Slot Number"
            ::= { mqe1RemoteLinkIDEntry 8 }

        mqe1RemoteLinkIDBackupPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Port"
            ::= { mqe1RemoteLinkIDEntry 9 }

--
--  QE1 Customer Information Table
--

        mqe1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF MQE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { mqe1-card 99 }

        mqe1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  MQE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { mqe1CISlotIndex , mqe1CIPortIndex }
            ::= { mqe1CustomerInfoTable 1 }

            MQE1CustomerInfoEntry ::= SEQUENCE {
            mqe1CISlotIndex              SmallSlotIndex,
            mqe1CIPortIndex              FourPortID,
            mqe1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        mqe1CISlotIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { mqe1CustomerInfoEntry 1 }

        mqe1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { mqe1CustomerInfoEntry 2 }

        mqe1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { mqe1CustomerInfoEntry 3 }



        mqe1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of MQE1"
            ::= { mqe1-card 100 }


--======================================================================--
--======================================================================--
--  mini quad-t1-card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        mqt1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { mqt1-card 1 }

        mqt1LineControlEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { mqt1LCSlotIndex , mqt1LCPortIndex }
            ::= { mqt1LineControlTable 1 }

        Mqt1LineControlEntry ::= SEQUENCE  {
            mqt1LCSlotIndex              SmallSlotIndex,
            mqt1LCPortIndex              FourPortID,
            mqt1LineFrame                INTEGER,
            mqt1LineCoding               INTEGER,
            mqt1Interface                INTEGER,
            mqt1LineBuildOut             INTEGER,
            mqt1Equalizer                INTEGER,
            mqt1AIS                      INTEGER,
            mqt1YEL                      INTEGER,
            mqt1Inband                   INTEGER,
            mqt1IdleCode                 INTEGER,
            mqt1CASMode                  INTEGER,
            mqt1SignallingMode           INTEGER,
            mqt1CGA                      INTEGER,
            mqt1OutOfService             INTEGER,
            mqt1FDL                      INTEGER,
            mqt1Protect                  INTEGER,
            mqt1Master                   INTEGER
        }

        mqt1LCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineControlEntry 1 }

        mqt1LCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineControlEntry 2 }

        mqt1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esfT1403(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { mqt1LineControlEntry 3 }

        mqt1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { mqt1LineControlEntry 4 }

        mqt1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    longHaul(1),
                    shortHaul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that Mqt1 line use Long/Short haul."
            ::= { mqt1LineControlEntry 5 }

        mqt1LineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo0dB(1),
                    lboNeg7p5dB(2),
                    lboNeg15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mqt1 line build out."
            ::= { mqt1LineControlEntry 6 }

        mqt1Equalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ0to110Ft(1),
                    equ110to220ft(2),
                    equ220to330ft(3),
                    equ330to440ft(4),
                    equ440to550ft(5),
                    equ550to660ft(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mqt1 line equalizer."
            ::= { mqt1LineControlEntry 7 }

        mqt1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mqt1 line Alarm Indication Signal."
            ::= { mqt1LineControlEntry 8 }

        mqt1YEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { mqt1LineControlEntry 9 }

        mqt1Inband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mqt1 line inband ON/OFF"
            ::= { mqt1LineControlEntry 10 }

        mqt1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { mqt1LineControlEntry 11 }

        mqt1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { mqt1LineControlEntry 12 }

        mqt1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS"
            ::= { mqt1LineControlEntry 13 }

        mqt1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { mqt1LineControlEntry 14 }

        mqt1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { mqt1LineControlEntry 15 }

        mqt1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mqt1 Facility Data Link ON/OFF"
            ::= { mqt1LineControlEntry 16 }

        mqt1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { mqt1LineControlEntry 17 }

        mqt1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { mqt1LineControlEntry 18 }



--
--  User Current Performance Table
--

        mqt1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { mqt1-card 2 }

        mqt1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { mqt1UCPSlotIndex , mqt1UCPPortIndex }
            ::= { mqt1UserCurrentPerfTable 1 }

        Mqt1UserCurrentPerfEntry ::= SEQUENCE  {
            mqt1UCPSlotIndex             SmallSlotIndex,
            mqt1UCPPortIndex             FourPortID,
            mqt1UserCurrentPerfES        INTEGER,
            mqt1UserCurrentPerfSES       INTEGER,
            mqt1UserCurrentPerfBES       INTEGER,
            mqt1UserCurrentPerfUAS       INTEGER,
            mqt1UserCurrentPerfCSS       INTEGER,
            mqt1UserCurrentPerfBPV       INTEGER,
            mqt1UserCurrentPerfLOFC      INTEGER,
            mqt1UserCurr15MinTimeElapsed INTEGER,
            mqt1UserValid15MinInterval   INTEGER
        }

        mqt1UCPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1UserCurrentPerfEntry 1 }

        mqt1UCPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1UserCurrentPerfEntry 2 }

        mqt1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1UserCurrentPerfEntry 3 }

        mqt1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1UserCurrentPerfEntry 4 }

        mqt1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1UserCurrentPerfEntry 5 }

        mqt1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1UserCurrentPerfEntry 6 }

        mqt1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { mqt1UserCurrentPerfEntry 7 }

        mqt1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1UserCurrentPerfEntry 8 }

        mqt1UserCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1UserCurrentPerfEntry 9 }

        mqt1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { mqt1UserCurrentPerfEntry 10 }

        mqt1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { mqt1UserCurrentPerfEntry 11 }


--
--  User Interval Performance Table
--

        mqt1UserIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1UserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { mqt1-card 3 }

        mqt1UserIntvPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1UserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { mqt1UIPSlotIndex , mqt1UIPPortIndex , mqt1UserIntvPerfNumber }
            ::= { mqt1UserIntvPerfTable 1 }

        Mqt1UserIntvPerfEntry ::= SEQUENCE  {
            mqt1UIPSlotIndex             SmallSlotIndex,
            mqt1UIPPortIndex             FourPortID,
            mqt1UserIntvPerfNumber   INTEGER  (1..96),
            mqt1UserIntvPerfES       INTEGER,
            mqt1UserIntvPerfSES      INTEGER,
            mqt1UserIntvPerfBES      INTEGER,
            mqt1UserIntvPerfUAS      INTEGER,
            mqt1UserIntvPerfCSS      INTEGER,
            mqt1UserIntvPerfBPV      INTEGER,
            mqt1UserIntvPerfLOFC     INTEGER
        }

        mqt1UIPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1UserIntvPerfEntry 1 }

        mqt1UIPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1UserIntvPerfEntry 2 }

        mqt1UserIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { mqt1UserIntvPerfEntry 3 }

        mqt1UserIntvPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1UserIntvPerfEntry 4 }

        mqt1UserIntvPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1UserIntvPerfEntry 5 }

        mqt1UserIntvPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1UserIntvPerfEntry 6 }

        mqt1UserIntvPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1UserIntvPerfEntry 7 }

        mqt1UserIntvPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1UserIntvPerfEntry 8 }

        mqt1UserIntvPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1UserIntvPerfEntry 9 }

        mqt1UserIntvPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1UserIntvPerfEntry 10 }


--
--  User Total Performance Table
--
        mqt1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { mqt1-card 4 }

        mqt1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { mqt1UTPSlotIndex , mqt1UTPPortIndex }
            ::= { mqt1UserTotalPerfTable 1 }

        Mqt1UserTotalPerfEntry ::= SEQUENCE  {
            mqt1UTPSlotIndex             SmallSlotIndex,
            mqt1UTPPortIndex             FourPortID,
            mqt1UserTotalPerfES          INTEGER,
            mqt1UserTotalPerfSES         INTEGER,
            mqt1UserTotalPerfBES         INTEGER,
            mqt1UserTotalPerfUAS         INTEGER,
            mqt1UserTotalPerfCSS         INTEGER,
            mqt1UserTotalPerfBPV         INTEGER,
            mqt1UserTotalPerfLOFC        INTEGER
        }

        mqt1UTPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1UserTotalPerfEntry 1 }

        mqt1UTPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1UserTotalPerfEntry 2 }

        mqt1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1UserTotalPerfEntry 3 }

        mqt1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1UserTotalPerfEntry 4 }

        mqt1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1UserTotalPerfEntry 5 }

        mqt1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1UserTotalPerfEntry 6 }

        mqt1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1UserTotalPerfEntry 7 }

        mqt1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1UserTotalPerfEntry 8 }

        mqt1UserTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1UserTotalPerfEntry 9 }


--
--  User Seven Days Performance Table
--
        mqt1User7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1User7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { mqt1-card 22 }

        mqt1User7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1User7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance entry"
            INDEX { mqt1USPSlotIndex , mqt1USPPortIndex , mqt1UserDaysIndex }
            ::= { mqt1User7DaysPerfTable 1 }

        Mqt1User7DaysPerfEntry ::= SEQUENCE  {
            mqt1USPSlotIndex             SmallSlotIndex,
            mqt1USPPortIndex             FourPortID,
            mqt1UserDaysIndex            INTEGER (1..7),
            mqt1UserDateStrIndex         DisplayString (SIZE (0..255) ),
            mqt1User7DaysPerfES      INTEGER,
            mqt1User7DaysPerfSES     INTEGER,
            mqt1User7DaysPerfBES     INTEGER,
            mqt1User7DaysPerfUAS     INTEGER,
            mqt1User7DaysPerfCSS     INTEGER
--            mqt1User7DaysPerfLOFC    INTEGER
        }

        mqt1USPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1User7DaysPerfEntry 1 }

        mqt1USPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1User7DaysPerfEntry 2 }

        mqt1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { mqt1User7DaysPerfEntry 3 }

        mqt1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { mqt1User7DaysPerfEntry 4 }

        mqt1User7DaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1User7DaysPerfEntry 5 }

        mqt1User7DaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1User7DaysPerfEntry 6 }

        mqt1User7DaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1User7DaysPerfEntry 7 }

        mqt1User7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1User7DaysPerfEntry 8 }

        mqt1User7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1User7DaysPerfEntry 9 }

--        mqt1User7DaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { mqt1User7DaysPerfEntry 10 }


--
--  Line Current Performance Table
--

        mqt1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { mqt1-card 8 }

        mqt1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { mqt1LCPSlotIndex , mqt1LCPPortIndex }
            ::= { mqt1LineCurrentPerfTable 1 }

        Mqt1LineCurrentPerfEntry ::= SEQUENCE  {
            mqt1LCPSlotIndex             SmallSlotIndex,
            mqt1LCPPortIndex             FourPortID,
            mqt1LineCurrentPerfES        INTEGER,
            mqt1LineCurrentPerfSES       INTEGER,
            mqt1LineCurrentPerfBES       INTEGER,
            mqt1LineCurrentPerfUAS       INTEGER,
            mqt1LineCurrentPerfCSS       INTEGER,
            mqt1LineCurrentPerfBPV       INTEGER,
            mqt1LineCurrentPerfLOFC      INTEGER,
            mqt1LineCurr15MinTimeElapsed INTEGER,
            mqt1LineValid15MinInterval   INTEGER
        }

        mqt1LCPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineCurrentPerfEntry 1 }

        mqt1LCPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineCurrentPerfEntry 2 }

        mqt1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { mqt1LineCurrentPerfEntry 3 }

        mqt1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1LineCurrentPerfEntry 4 }

        mqt1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1LineCurrentPerfEntry 5 }

        mqt1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1LineCurrentPerfEntry 6 }

        mqt1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1LineCurrentPerfEntry 7 }

        mqt1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1LineCurrentPerfEntry 8 }

        mqt1LineCurrentPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1LineCurrentPerfEntry 9 }

        mqt1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { mqt1LineCurrentPerfEntry 10 }

        mqt1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { mqt1LineCurrentPerfEntry 11 }


--
--  Line Interval Performance Table
--

        mqt1LineIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { mqt1-card 9 }

        mqt1LineIntvPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { mqt1LIPSlotIndex , mqt1LIPPortIndex , mqt1LineIntvPerfNumber }
            ::= { mqt1LineIntvPerfTable 1 }

        Mqt1LineIntvPerfEntry ::= SEQUENCE {
            mqt1LIPSlotIndex             SmallSlotIndex,
            mqt1LIPPortIndex             FourPortID,
            mqt1LineIntvPerfNumber   INTEGER  (1..96),
            mqt1LineIntvPerfES       INTEGER,
            mqt1LineIntvPerfSES      INTEGER,
            mqt1LineIntvPerfBES      INTEGER,
            mqt1LineIntvPerfUAS      INTEGER,
            mqt1LineIntvPerfCSS      INTEGER,
            mqt1LineIntvPerfBPV      INTEGER,
            mqt1LineIntvPerfLOFC     INTEGER,
            mqt1LineIntvAvailable        INTEGER
        }

        mqt1LIPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineIntvPerfEntry 1 }

        mqt1LIPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineIntvPerfEntry 2 }

        mqt1LineIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index "
            ::= { mqt1LineIntvPerfEntry 3 }

        mqt1LineIntvPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1LineIntvPerfEntry 4 }

        mqt1LineIntvPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1LineIntvPerfEntry 5 }

        mqt1LineIntvPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1LineIntvPerfEntry 6 }

        mqt1LineIntvPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1LineIntvPerfEntry 7 }

        mqt1LineIntvPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1LineIntvPerfEntry 8 }

        mqt1LineIntvPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1LineIntvPerfEntry 9 }

        mqt1LineIntvPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1LineIntvPerfEntry 10 }

        mqt1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { mqt1LineIntvPerfEntry 11 }


--
--  Line Total Performance Table
--

        mqt1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { mqt1-card 10 }

        mqt1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance entry"
            INDEX { mqt1LTPSlotIndex , mqt1LTPPortIndex }
            ::= { mqt1LineTotalPerfTable 1 }

        Mqt1LineTotalPerfEntry ::= SEQUENCE  {
            mqt1LTPSlotIndex             SmallSlotIndex,
            mqt1LTPPortIndex             FourPortID,
            mqt1LineTotalPerfES          INTEGER,
            mqt1LineTotalPerfSES         INTEGER,
            mqt1LineTotalPerfBES         INTEGER,
            mqt1LineTotalPerfUAS         INTEGER,
            mqt1LineTotalPerfCSS         INTEGER,
            mqt1LineTotalPerfBPV         INTEGER,
            mqt1LineTotalPerfLOFC        INTEGER
        }

        mqt1LTPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineTotalPerfEntry 1 }

        mqt1LTPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineTotalPerfEntry 2 }

        mqt1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1LineTotalPerfEntry 3 }

        mqt1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1LineTotalPerfEntry 4 }

        mqt1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1LineTotalPerfEntry 5 }

        mqt1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1LineTotalPerfEntry 6 }

        mqt1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1LineTotalPerfEntry 7 }

        mqt1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { mqt1LineTotalPerfEntry 8 }

        mqt1LineTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { mqt1LineTotalPerfEntry 9 }


--
--  Line Seven Days Performance Table
--
        mqt1Line7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1Line7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { mqt1-card 21 }

        mqt1Line7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  Mqt1Line7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { mqt1LSPSlotIndex , mqt1LSPPortIndex , mqt1LineDaysIndex }
            ::= { mqt1Line7DaysPerfTable 1 }

        Mqt1Line7DaysPerfEntry ::= SEQUENCE  {
            mqt1LSPSlotIndex             SmallSlotIndex,
            mqt1LSPPortIndex             FourPortID,
            mqt1LineDaysIndex            INTEGER (1..7),
            mqt1LineDateStrIndex         DisplayString (SIZE (0..255) ),
            mqt1Line7DaysPerfES      INTEGER,
            mqt1Line7DaysPerfSES     INTEGER,
            mqt1Line7DaysPerfBES     INTEGER,
            mqt1Line7DaysPerfUAS     INTEGER,
            mqt1Line7DaysPerfCSS     INTEGER
--            mqt1Line7DaysPerfLOFC    INTEGER
        }

        mqt1LSPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1Line7DaysPerfEntry 1 }

        mqt1LSPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1Line7DaysPerfEntry 2 }

        mqt1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { mqt1Line7DaysPerfEntry 3 }

        mqt1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { mqt1Line7DaysPerfEntry 4 }

        mqt1Line7DaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { mqt1Line7DaysPerfEntry 5 }

        mqt1Line7DaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { mqt1Line7DaysPerfEntry 6 }

        mqt1Line7DaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { mqt1Line7DaysPerfEntry 7 }

        mqt1Line7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { mqt1Line7DaysPerfEntry 8 }

        mqt1Line7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { mqt1Line7DaysPerfEntry 9 }

--        mqt1Line7DaysPerfLOFC  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " LOFC Counter "
--            ::= { mqt1Line7DaysPerfEntry 9 }


--
--  Alarm Queue Table
--

        mqt1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue Table"
            ::= { mqt1-card 11 }

        mqt1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  Mqt1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { mqt1AQSlotIndex , mqt1AlarmQueueIndex }
            ::= { mqt1AlarmQueueTable 1 }

        Mqt1AlarmQueueEntry ::= SEQUENCE {
            mqt1AQSlotIndex              SmallSlotIndex,
            mqt1AlarmQueueIndex          INTEGER (1..40),
            mqt1AlarmQueueString         DisplayString (SIZE(0..255))
        }

        mqt1AQSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1AlarmQueueEntry 1 }

        mqt1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { mqt1AlarmQueueEntry 2 }

        mqt1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { mqt1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        mqt1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { mqt1-card 12 }

        mqt1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  Mqt1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { mqt1AHSlotIndex , mqt1AHPortIndex , mqt1AlarmHistoryIndex }
            ::= { mqt1AlarmHistoryTable 1 }

        Mqt1AlarmHistoryEntry ::= SEQUENCE {
            mqt1AHSlotIndex              SmallSlotIndex,
            mqt1AHPortIndex              FourPortID,
            mqt1AlarmHistoryIndex        INTEGER,
            mqt1Threshold                INTEGER,
            mqt1CurrentState             INTEGER,
            mqt1CurrentCount             INTEGER,
            mqt1Alarm                    AlarmSeverity
        }

        mqt1AHSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1AlarmHistoryEntry 1 }

        mqt1AHPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1AlarmHistoryEntry 2 }

        mqt1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yelLine(1),
                    aisLine(2),
                    losLine(3),
                    lofLine(4),
                    bpvLine(5),
                    essLine(6),
                    uasLine(7),
                    cssLine(8),
                    tpca(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { mqt1AlarmHistoryEntry 3 }

        mqt1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { mqt1AlarmHistoryEntry 4 }

        mqt1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { mqt1AlarmHistoryEntry 5 }

        mqt1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { mqt1AlarmHistoryEntry 6 }

        mqt1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { mqt1AlarmHistoryEntry 7 }


--
--  Line Availability Table
--

        mqt1LineAvailTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { mqt1-card 13 }

        mqt1LineAvailEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { mqt1LASlotIndex , mqt1LAPortIndex }
            ::= { mqt1LineAvailTable 1 }

        Mqt1LineAvailEntry ::= SEQUENCE {
            mqt1LASlotIndex              SmallSlotIndex,
            mqt1LAPortIndex              FourPortID,
            mqt1AvailableSeconds         DisplayString,
            mqt1UnavailableSeconds       DisplayString,
            mqt1LineAvailability         DisplayString
        }

        mqt1LASlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineAvailEntry 1 }

        mqt1LAPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineAvailEntry 2 }

        mqt1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { mqt1LineAvailEntry 3 }

        mqt1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { mqt1LineAvailEntry 4 }

        mqt1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { mqt1LineAvailEntry 5 }


--
--  Alarm Control Table
--

        mqt1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqt1-card 14 }

        mqt1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  Mqt1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { mqt1ACSlotIndex , mqt1ACPortIndex }
            ::= { mqt1AlarmControlTable 1 }

        Mqt1AlarmControlEntry ::= SEQUENCE {
            mqt1ACSlotIndex              SmallSlotIndex,
            mqt1ACPortIndex              FourPortID,
            mqt1YELalarm                 AlarmSeverity,
            mqt1AISalarm                 AlarmSeverity,
            mqt1LOSalarm                 AlarmSeverity,
            mqt1LOFalarm                 AlarmSeverity,
            mqt1BPValarm                 AlarmSeverity,
            mqt1ESSalarm                 AlarmSeverity,
            mqt1UASalarm                 AlarmSeverity,
            mqt1CSSalarm                 AlarmSeverity,
            mqt1TCPAalarm                AlarmSeverity
        }

        mqt1ACSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1AlarmControlEntry 1 }

        mqt1ACPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1AlarmControlEntry 2 }

        mqt1YELalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL State"
            ::= { mqt1AlarmControlEntry 3 }

        mqt1AISalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS State"
            ::= { mqt1AlarmControlEntry 4 }

        mqt1LOSalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS State"
            ::= { mqt1AlarmControlEntry 5 }

        mqt1LOFalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF State"
            ::= { mqt1AlarmControlEntry 6 }

        mqt1BPValarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV State"
            ::= { mqt1AlarmControlEntry 7 }

        mqt1ESSalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS State"
            ::= { mqt1AlarmControlEntry 8 }

        mqt1UASalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS State"
            ::= { mqt1AlarmControlEntry 9 }

        mqt1CSSalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS State"
            ::= { mqt1AlarmControlEntry 10 }
-- RIKER 2013 NFS-13000027
        mqt1TCPAalarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold Crossing Performance Alarm"
            ::= { mqt1AlarmControlEntry 11 }


--
--  Threshold Control Table
--

        mqt1ThresholdCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1ThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqt1-card 15 }

        mqt1ThresholdCtrlEntry  OBJECT-TYPE
            SYNTAX  Mqt1ThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { mqt1TCSlotIndex , mqt1TCPortIndex }
            ::= { mqt1ThresholdCtrlTable 1 }

        Mqt1ThresholdCtrlEntry ::= SEQUENCE {
            mqt1TCSlotIndex              SmallSlotIndex,
            mqt1TCPortIndex              FourPortID,
            mqt1ThresholdBPV             INTEGER,
            mqt1ThresholdESS             INTEGER,
            mqt1ThresholdUAS             INTEGER,
            mqt1ThresholdCSS             INTEGER,
            mqt1ThresholdTCPA            INTEGER
        }

        mqt1TCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1ThresholdCtrlEntry 1 }

        mqt1TCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1ThresholdCtrlEntry 2 }

        mqt1ThresholdBPV  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV: 10exp-N"
            ::= { mqt1ThresholdCtrlEntry 3 }

        mqt1ThresholdESS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS "
            ::= { mqt1ThresholdCtrlEntry 4 }

        mqt1ThresholdUAS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS "
            ::= { mqt1ThresholdCtrlEntry 5 }

        mqt1ThresholdCSS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS "
            ::= { mqt1ThresholdCtrlEntry 6 }
-- RIKER 2013 NFS-13000027
        mqt1ThresholdTCPA  OBJECT-TYPE
            SYNTAX  INTEGER (1..1544)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of TCPA "
            ::= { mqt1ThresholdCtrlEntry 7 }


--
-- Line Diagnostic Control Table
--

        mqt1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { mqt1-card 16 }

        mqt1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  Mqt1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { mqt1LDSlotIndex , mqt1LDPortIndex }
            ::= { mqt1LineDiagControlTable 1 }

        Mqt1LineDiagControlEntry ::= SEQUENCE {
            mqt1LDSlotIndex              SmallSlotIndex,
            mqt1LDPortIndex              FourPortID,
            mqt1LoopbackType             INTEGER,
            mqt1LoopbackStatus           INTEGER,
            mqt1QRSSControl              INTEGER,
            mqt1QRSSStatus               INTEGER,
            mqt1QRSSElapseSeconds        INTEGER,
            mqt1QRSSErrorSeconds         INTEGER,
            mqt1QRSSErrorCounts          INTEGER,
            mqt1InbandLoopbackPeriod     INTEGER
        }

        mqt1LDSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1LineDiagControlEntry 1 }

        mqt1LDPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1LineDiagControlEntry 2 }

        mqt1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payloadLoopback(3),
                    lineLoopback(4),
                    remoteLlbInbandActive(5),
                    remotePlbAttActive(6),
                    remotePlbAnsiActive(7),
                    remoteLlbAnsiActive(8),
                    remoteLlbInbandDeactive(9),
                    remotePlbAttDeactive(10),
                    remotePlbAnsiDeactive(11),
                    remoteLlbAnsiDeactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mqt1 Loopback Type"
            ::= { mqt1LineDiagControlEntry 3 }

        mqt1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopbackNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqt1 Loopback Status"
            ::= { mqt1LineDiagControlEntry 4 }

        mqt1QRSSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrssDeactive(1),
                    qrssActiveFull(2),
                    qrssResetErrorCount(3),
                    qrssInjectError(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mqt1 QRSS Control"
            ::= { mqt1LineDiagControlEntry 5 }

        mqt1QRSSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrssSync(1),
                    qrssUnsync(2),
                    qrssNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqt1 QRSS Status"
            ::= { mqt1LineDiagControlEntry 6 }

        mqt1QRSSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqt1 QRSS Elapse Seconds"
            ::= { mqt1LineDiagControlEntry 7 }

        mqt1QRSSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqt1 QRSS Error Seconds"
            ::= { mqt1LineDiagControlEntry 8 }

        mqt1QRSSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "mqt1 QRSS Error Counts"
            ::= { mqt1LineDiagControlEntry 9 }

        mqt1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of Mqt1 inband local, payload, or line loopback"
            ::= { mqt1LineDiagControlEntry 10 }


--
--  Port Status Table
--

        mqt1PortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status table."
            ::= { mqt1-card 23 }

        mqt1PortStatusEntry  OBJECT-TYPE
            SYNTAX  Mqt1PortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "port status entry"
            INDEX { mqt1PSSlotIndex , mqt1PSPortIndex }
            ::= { mqt1PortStatusTable 1 }

        Mqt1PortStatusEntry ::= SEQUENCE {
            mqt1PSSlotIndex              SmallSlotIndex,
            mqt1PSPortIndex              FourPortID,
            mqt1PortLOS                  INTEGER,
            mqt1PortLOF                  INTEGER,
            mqt1PortRcvAIS               INTEGER,
            mqt1PortRcvYEL               INTEGER,
            mqt1PortXmtAIS               INTEGER,
            mqt1PortXmtYEL               INTEGER,
            mqt1PortBPVcount             Integer32,
            mqt1PortEScount              Integer32
        }

        mqt1PSSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "slot index"
            ::= { mqt1PortStatusEntry 1 }

        mqt1PSPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port index"
            ::= { mqt1PortStatusEntry 2 }

        mqt1PortLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOS State"
            ::= { mqt1PortStatusEntry 3 }

        mqt1PortLOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LOF State"
            ::= { mqt1PortStatusEntry 4 }

        mqt1PortRcvAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received AIS State"
            ::= { mqt1PortStatusEntry 5 }

        mqt1PortRcvYEL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Received YEL State"
            ::= { mqt1PortStatusEntry 6 }

        mqt1PortXmtAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit AIS State"
            ::= { mqt1PortStatusEntry 7 }

        mqt1PortXmtYEL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Transmit YEL State"
            ::= { mqt1PortStatusEntry 8 }

        mqt1PortBPVcount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BPV count"
            ::= { mqt1PortStatusEntry 9 }

        mqt1PortEScount  OBJECT-TYPE
            SYNTAX  Integer32
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ES count"
            ::= { mqt1PortStatusEntry 10 }


--
--  Command Control Table
--

        mqt1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { mqt1-card 17 }

        mqt1CommandControlEntry  OBJECT-TYPE
            SYNTAX  Mqt1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { mqt1CCSlotIndex , mqt1CCPortIndex }
            ::= { mqt1CommandControlTable 1 }

        Mqt1CommandControlEntry ::= SEQUENCE {
            mqt1CCSlotIndex              SmallSlotIndex,
            mqt1CCPortIndex              FourPortID,
            mqt1AlarmQueueReset          INTEGER,
            mqt1UserPerfReset            INTEGER,
            mqt1AlarmHistoryReset        INTEGER,
            mqt1PortReset                INTEGER,
            mqt1PortLoadDefault          INTEGER
        }

        mqt1CCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1CommandControlEntry 1 }

        mqt1CCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { mqt1CommandControlEntry 2 }

        mqt1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { mqt1CommandControlEntry 3 }

        mqt1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { mqt1CommandControlEntry 4 }

        mqt1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { mqt1CommandControlEntry 5 }

        mqt1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Mqt1 Port"
            ::= { mqt1CommandControlEntry 6 }

        mqt1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    loadDefault(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Mqt1 Port"
            ::= { mqt1CommandControlEntry 7 }


--
--  SYSTEM Information Table
--

        mqt1SystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { mqt1-card 18 }

        mqt1SystemInfoEntry  OBJECT-TYPE
            SYNTAX  Mqt1SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { mqt1SISlotIndex }
            ::= { mqt1SystemInfoTable 1 }

        Mqt1SystemInfoEntry ::= SEQUENCE {
            mqt1SISlotIndex              SmallSlotIndex,
            mqt1PROMVersion              DisplayString,
            mqt1HardwareVersion          DisplayString
        }

        mqt1SISlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1SystemInfoEntry 1 }

        mqt1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " mqt1 PROM Version"
            ::= { mqt1SystemInfoEntry 2 }

        mqt1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " mqt1 Hardware Version"
            ::= { mqt1SystemInfoEntry 3 }


--
--  Mqt1 Customer Information Table
--

        mqt1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Mqt1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { mqt1-card 99 }

        mqt1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  Mqt1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { mqt1CISlotIndex , mqt1CIPortIndex }
            ::= { mqt1CustomerInfoTable 1 }

        Mqt1CustomerInfoEntry ::= SEQUENCE {
            mqt1CISlotIndex              SmallSlotIndex,
            mqt1CIPortIndex              FourPortID,
            mqt1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        mqt1CISlotIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { mqt1CustomerInfoEntry 1 }

        mqt1CIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { mqt1CustomerInfoEntry 2 }

        mqt1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { mqt1CustomerInfoEntry 3 }


        mqt1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of Mqt1"
            ::= { mqt1-card 100 }


--======================================================================--
--======================================================================--
--  Dry Contact MIB
--======================================================================--
--======================================================================--

--
--  INPUTS SYSTEM Table
--

        dcInputSystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DCInputSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Dry Contact Inputs system control table."
            ::= { dc-card 1 }

        dcInputSystemEntry  OBJECT-TYPE
            SYNTAX  DCInputSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dc inputs system table."
            INDEX { dcIndex , dcInputPairIndex }
            ::= { dcInputSystemTable 1 }

            DCInputSystemEntry ::= SEQUENCE {
            dcIndex                     LargeSlotIndex,
            dcInputPairIndex            INTEGER,
            dcAlarmStatus               INTEGER,
            dcAlarmTrigger              AlarmSeverity,
            dcAlarmMessage              DisplayString (SIZE(0..255))
        }

        dcIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dcInputSystemEntry 1 }

        dcInputPairIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    n1-pair1(1),
                    n1-pair2(2),
                    n1-pair3(3),
                    n1-pair4(4),
                    n2-pair1(5),
                    n2-pair2(6),
                    n2-pair3(7),
                    n2-pair4(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " N1 Pair 1~4 & N2 Pair 1~4."
            ::= { dcInputSystemEntry 2 }

        dcAlarmStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Normal or Alarm."
            ::= { dcInputSystemEntry 3 }

        dcAlarmTrigger  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Send Alarm Trap ON or OFF"
            ::= { dcInputSystemEntry 4 }

        dcAlarmMessage  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Message."
            ::= { dcInputSystemEntry 5 }


--
--  OUTPUTS SYSTEM Table
--

        dcOutputSystemTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DCOutputSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Dry Contact Outputs system control table."
            ::= { dc-card 2 }

        dcOutputSystemEntry  OBJECT-TYPE
            SYNTAX  DCOutputSystemEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dc outputs system table."
            INDEX { dcIndex , dcOutputPairIndex }
            ::= { dcOutputSystemTable 1 }

            DCOutputSystemEntry ::= SEQUENCE {
            dcOutputPairIndex           INTEGER,
            dcRelayStatus               INTEGER,
            dcRelaySetup                INTEGER
        }

        dcOutputPairIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    u1(1),
                    u2(2),
                    u3(3),
                    u4(4),
                    u5(5),
                    u6(6),
                    u7(7),
                    u8(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " U1~U8."
            ::= { dcOutputSystemEntry 2 }

        dcRelayStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    operated(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Normal or Operated."
            ::= { dcOutputSystemEntry 3 }

        dcRelaySetup  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    operated(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Relay Open or Short."
            ::= { dcOutputSystemEntry 4 }

--
--  Command Control Table
--

        dcCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DCCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { dc-card 3 }

        dcCommandControlEntry  OBJECT-TYPE
            SYNTAX  DCCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { dcIndex }
            ::= { dcCommandControlTable 1 }

            DCCommandControlEntry ::= SEQUENCE {
            dcUnitLoadDefault           INTEGER,
            dcChannel                   INTEGER,
            dcCtrlRelayOutput           INTEGER
        }

        dcUnitLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Dry Contact"
            ::= { dcCommandControlEntry 2 }

        dcChannel    OBJECT-TYPE
            SYNTAX  INTEGER {
                    controller(1),
                    ds0x2(2),
                    ds0x16(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Dry Contact Channel"
            ::= { dcCommandControlEntry 3 }

        dcCtrlRelayOutput    OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CTRL relay output"
            ::= { dcCommandControlEntry 4 }

--
--  SYSTEM Information Table
--

        dcSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DCSystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { dc-card 4 }

        dcSystemInfoEntry  OBJECT-TYPE
            SYNTAX  DCSystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX {
        dcIndex
    }
            ::= { dcSystemInformationTable 1 }

            DCSystemInformation ::= SEQUENCE {
            dcFPGAVersion               DisplayString
        }

        dcFPGAVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Dry Contact FPGA Version"
            ::= { dcSystemInfoEntry 2 }

--
--  Input Relay Control Table
--

        dcInputRelayCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DcInputRelayCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { dc-card 5 }

        dcInputRelayCtrlEntry  OBJECT-TYPE
            SYNTAX  DcInputRelayCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Input Relay Control Table."
            INDEX { dcnIndex , dcnInputPairIndex }
            ::= { dcInputRelayCtrlTable 1 }

            DcInputRelayCtrlEntry ::= SEQUENCE {
            dcnIndex                   LargeSlotIndex,
            dcnInputPairIndex          INTEGER,
            dcTrigger                  INTEGER
        }

        dcnIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dcInputRelayCtrlEntry 1 }

        dcnInputPairIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    n1-pair1(1),
                    n1-pair2(2),
                    n1-pair3(3),
                    n1-pair4(4),
                    n2-pair1(5),
                    n2-pair2(6),
                    n2-pair3(7),
                    n2-pair4(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " N1 Pair 1~4 & N2 Pair 1~4."
            ::= { dcInputRelayCtrlEntry 2 }

        dcTrigger    OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal-close(1),
                    normal-open(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Dry Contact normal(0/1)"
            ::= { dcInputRelayCtrlEntry 3 }


        dcTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 8DC"
            ::= { dc-card 100 }




--======================================================================--
--======================================================================--
--  FOM MIB
--======================================================================--
--======================================================================--

--
--  SYSTEM Control Table
--

        fomSystemControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FOMSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 control table."
            ::= { fom-card 1 }

        fomSystemControlEntry  OBJECT-TYPE
            SYNTAX  FOMSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the FOM control table."
            INDEX { fomIndex , fomPortIndex }
            ::= { fomSystemControlTable 1 }

            FOMSystemControlEntry ::= SEQUENCE  {
            fomIndex                    GenSlotID,
            fomPortIndex                FourPortID,
            fomFrame                    INTEGER,
            fomCRC                      INTEGER,
            fomRAI                      INTEGER,
            fomCAS                      INTEGER,
            fomAIS                      INTEGER,
            fomIdleCode                 INTEGER,
            fomSabit                    INTEGER,
            fomSSM                      INTEGER,
            fomOOS                      INTEGER
        }

        fomIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { fomSystemControlEntry 1 }

        fomPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { fomSystemControlEntry 2 }

        fomFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 frame format"
            ::= { fomSystemControlEntry 3 }

        fomCRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 Cycle Redundancy Check OFF/ON"
            ::= { fomSystemControlEntry 4 }

        fomRAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { fomSystemControlEntry 5 }

        fomCAS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { fomSystemControlEntry 6 }

        fomAIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    off(1),
                    unframe(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS OFF/UNFRAME"
            ::= { fomSystemControlEntry 7 }

        fomIdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Idle Code Value"
            ::= { fomSystemControlEntry 8 }

        fomSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    not-support(0),
                    sa4(4),
                    sa5(5),
                    sa6(6),
                    sa7(7),
                    sa8(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Sa bit"
            ::= { fomSystemControlEntry 9 }

        fomSSM  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    not-support(0),
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SSM OFF/ON"
            ::= { fomSystemControlEntry 10 }

        fomOOS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    b0001(1),
                    b0010(2),
                    b0011(3),
                    b0100(4),
                    b0101(5),
                    b0110(6),
                    b0111(7),
                    b1000(8),
                    b1001(9),
                    b1010(10),
                    b1011(11),
                    b1100(12),
                    b1101(13),
                    b1110(14),
                    b1111(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OOS"
            ::= { fomSystemControlEntry 11 }

--
--  FOM Status Table
--

        fomStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The FOM status table."
            ::= { fom-card 2 }

        fomStatusEntry  OBJECT-TYPE
            SYNTAX  FomStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the FOM status table."
            INDEX {
        fomIndex ,
        fomPortIndex ,
        fomStatusNumIndex
    }
            ::= { fomStatusTable 1 }

            FomStatusEntry ::= SEQUENCE {
            fomStatusNumIndex           INTEGER,
            fomType                     INTEGER,
            fomOpticalLOS               INTEGER,
            fomOpticalLOF               INTEGER,
            fomOpticalFE                INTEGER,
            fomOpticalFCS               INTEGER,
            fomOpticalEOC               INTEGER,
            fomE1LOF                    INTEGER,
            fomE1CRC                    INTEGER,
            fomE1RxAIS                  INTEGER,
            fomE1RxRAI                  INTEGER,
            fomE1TxAIS                  INTEGER,
            fomE1TxRAI                  INTEGER,
            fomE1LOS                    INTEGER,
            fomE1BPVCRC                 INTEGER
        }

        fomStatusNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    local(1),
                    remote(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " local or Remote Status "
            ::= { fomStatusEntry 2 }

        fomType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unknown(1),
                    fom-8M-Stand-Alone-With-CPU(2),
                    fom-8M-Stand-Alone-Without-CPU(4),
                    fom-8M-Card(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Type "
            ::= { fomStatusEntry 3 }

        fomOpticalLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical LOS "
            ::= { fomStatusEntry 4 }

        fomOpticalLOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical LOF "
            ::= { fomStatusEntry 5 }

        fomOpticalFE  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical Framing Error Counter "
            ::= { fomStatusEntry 6 }

        fomOpticalFCS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical Frame Checksum Error Counter "
            ::= { fomStatusEntry 7 }

        fomOpticalEOC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical EOC-M Frame Checksum Error Counter "
            ::= { fomStatusEntry 8 }

        fomE1LOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    xx(3),
                    lossOfCas(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 LOF "
            ::= { fomStatusEntry 9 }

        fomE1CRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 CRC Error Counter "
            ::= { fomStatusEntry 10 }

        fomE1RxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FOM E1 line Rx Alarm Indication Signal."
            ::= { fomStatusEntry 11 }

        fomE1RxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    rai(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FOM E1 line Rx Remote Alarm Indication."
            ::= { fomStatusEntry 12 }

        fomE1TxAIS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    ais(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FOM E1 line Tx Alarm Indication Signal."
            ::= { fomStatusEntry 13 }

        fomE1TxRAI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    rai(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FOM E1 line Tx Remote Alarm Indication."
            ::= { fomStatusEntry 14 }

        fomE1LOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    xx(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote O9310 E1 LOS "
            ::= { fomStatusEntry 15 }

        fomE1BPVCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote E1 BPV or CRC Error Counter "
            ::= { fomStatusEntry 16 }

--
-- Diagnostic Control Table
--

        fomDiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { fom-card 3 }

        fomDiagEntry  OBJECT-TYPE
            SYNTAX  FomDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { fomIndex ,
        fomPortIndex }
            ::= { fomDiagTable 1 }

            FomDiagEntry ::= SEQUENCE {
            fomLocalOpticalLoopback     INTEGER,
            fomLocalE1Loopback          INTEGER,
            fomRemoteOpticalLoopback    INTEGER,
            fomRemoteE1Loopback         INTEGER,
            fomBertControl              INTEGER,
            fomBertStatus               INTEGER,
            fomElapseSeconds            INTEGER,
            fomErrorSeconds             INTEGER,
            fomErrorBits                INTEGER,
            fomAccessRemoteLB           INTEGER,
            fomRemoteCallLocalOpticalLB INTEGER,
            fomRemoteCallLocalE1LB      INTEGER
        }

        fomLocalOpticalLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
--                      local-loopback(2),
                    line-loopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom Local Optical Loopback Type"
            ::= { fomDiagEntry 2 }

        fomLocalE1Loopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payLoad-loopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom Local E1 Loopback Type"
            ::= { fomDiagEntry 3 }

        fomRemoteOpticalLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
--                      local-loopback(2),
                    payLoad-loopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom Remote Optical Loopback Type"
            ::= { fomDiagEntry 4 }

        fomRemoteE1Loopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payLoad-loopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom Remote E1 Loopback Type"
            ::= { fomDiagEntry 5 }

        fomBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
                    bert-on(2),
                    reset(3),
                    inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Control"
            ::= { fomDiagEntry 6 }

        fomBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { fomDiagEntry 7 }

        fomElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Elapse seconds"
            ::= { fomDiagEntry 8 }

        fomErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error seconds"
            ::= { fomDiagEntry 9 }

        fomErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error bits"
            ::= { fomDiagEntry 10 }

        fomAccessRemoteLB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FOM Access Remote Loopback Control"
            ::= { fomDiagEntry 11 }

        fomRemoteCallLocalOpticalLB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payLoad-loopback(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Called Local Optical Loopback Type"
            ::= { fomDiagEntry 12 }

        fomRemoteCallLocalE1LB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payLoad-loopback(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Called Local E1 Loopback Type"
            ::= { fomDiagEntry 13 }

--
--  Alarm Status Table
--

    fomAlmStatusTable   OBJECT IDENTIFIER ::= { fom-card 4 }

--
-- FOM Optical Alarm Status Table
--

        fomOpticalAlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical Alarm Status Table "
            ::= { fomAlmStatusTable 1 }

        fomOpticalAlmStatusEntry  OBJECT-TYPE
            SYNTAX  FomOpticalAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { fomIndex ,
        fomOpticalAlmNumber }
            ::= { fomOpticalAlmStatusTable 1 }

            FomOpticalAlmStatusEntry ::= SEQUENCE {
            fomOpticalAlmNumber         INTEGER (1..40),
            fomOpticalAlmString         DisplayString,
            fomOpticalAlmState          INTEGER,
            fomOpticalAlmCount          INTEGER,
            fomOpticalAlmThreshold      INTEGER,
            fomOpticalAlmEnable         AlarmSeverity
        }

        fomOpticalAlmNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom optical Alarm Status Index "
            ::= { fomOpticalAlmStatusEntry 2 }

        fomOpticalAlmString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Fom optical Alarm Type String"
            ::= { fomOpticalAlmStatusEntry 3 }

        fomOpticalAlmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom optical Alarm Current State"
            ::= { fomOpticalAlmStatusEntry 4 }

        fomOpticalAlmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom optical Alarm Count which happened "
            ::= { fomOpticalAlmStatusEntry 5 }

        fomOpticalAlmThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Fom optical Alarm Threshold "
            ::= { fomOpticalAlmStatusEntry 6 }

        fomOpticalAlmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom optical Alarm is enabled or not"
            ::= { fomOpticalAlmStatusEntry 7 }

--
-- FOM E1 Alarm Status Table
--

        fomE1AlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomE1AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 Alarm Status Table "
            ::= { fomAlmStatusTable 2 }

        fomE1AlmStatusEntry  OBJECT-TYPE
            SYNTAX  FomE1AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { fomIndex ,
        fomPortIndex ,
        fomE1AlmNumber }
            ::= { fomE1AlmStatusTable 1 }

            FomE1AlmStatusEntry ::= SEQUENCE {
            fomE1AlmNumber              INTEGER (1..40),
            fomE1AlmString              DisplayString,
            fomE1AlmState               INTEGER,
            fomE1AlmCount               INTEGER,
            fomE1AlmThreshold           INTEGER,
            fomE1AlmEnable              AlarmSeverity
        }

        fomE1AlmNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 Alarm Status Index "
            ::= { fomE1AlmStatusEntry 3 }

        fomE1AlmString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Fom E1 Alarm Type String"
            ::= { fomE1AlmStatusEntry 4 }

        fomE1AlmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 Alarm Current State"
            ::= { fomE1AlmStatusEntry 5 }

        fomE1AlmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 Alarm Count which happened "
            ::= { fomE1AlmStatusEntry 6 }

        fomE1AlmThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Fom E1 Alarm Threshold "
            ::= { fomE1AlmStatusEntry 7 }

        fomE1AlmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Fom E1 Alarm is enabled or not"
            ::= { fomE1AlmStatusEntry 8 }

--
--  Command Control Table
--

        fomCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { fom-card 5 }

        fomCommandControlEntry  OBJECT-TYPE
            SYNTAX  FomCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { fomIndex ,
        fomPortIndex }
            ::= { fomCommandControlTable 1 }

            FomCommandControlEntry ::= SEQUENCE {
            fomClearAlarmHistory        INTEGER,
            fomClearOpticalError        INTEGER,
            fomClearE1CRCError          INTEGER,
            fomClearAllErrorCounters    INTEGER,
            fomUnitLoadDefault          INTEGER,
            fomClearPerformanceData     INTEGER
        }

        fomClearAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm History"
            ::= { fomCommandControlEntry 2 }

        fomClearOpticalError    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    all-counters(1),
                    fe-counter(2),
                    fcs-counter(3),
                    eoc-counter(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Optical Error Counter"
            ::= { fomCommandControlEntry 3 }

        fomClearE1CRCError    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear E1 CRC Error Counter"
            ::= { fomCommandControlEntry 4 }

        fomClearAllErrorCounters    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    local(1),
                    remote(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear All Local or Remote Error Counters"
            ::= { fomCommandControlEntry 5 }

        fomUnitLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Fom"
            ::= { fomCommandControlEntry 6 }

        fomClearPerformanceData    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear performance data"
            ::= { fomCommandControlEntry 7 }

--
--  SYSTEM Information Table
--

        fomSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomSystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= {fom-card 6 }

        fomSystemInfoEntry  OBJECT-TYPE
            SYNTAX  FomSystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX {
        fomIndex
    }
            ::= { fomSystemInformationTable 1 }

            FomSystemInformation ::= SEQUENCE {
            fomFPGAVersion              DisplayString,
            fomPCBVersion               DisplayString,
            fomLinkID                   INTEGER,
            fomRemoteLinkID             INTEGER
        }

        fomFPGAVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom FPGA Version"
            ::= { fomSystemInfoEntry 2 }

        fomPCBVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom PCB Version"
            ::= { fomSystemInfoEntry 3 }

        fomLinkID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Local Link ID or Serial Number "
            ::= { fomSystemInfoEntry 4 }

        fomRemoteLinkID  OBJECT-TYPE
            SYNTAX  INTEGER{
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Remote Link ID or Serial Number "
            ::= { fomSystemInfoEntry 5 }

--
--  FOM Optical Type Table
--

        fomOpticalTypeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalTypeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The FOM Optical Type table."
            ::= { fom-card 7 }

        fomOpticalTypeEntry  OBJECT-TYPE
            SYNTAX  FomOpticalTypeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the FOM Optical Type table."
            INDEX {
        fomIndex }
            ::= { fomOpticalTypeTable 1 }

            FomOpticalTypeEntry ::= SEQUENCE {
            fomOpticalOutline           INTEGER,
            fomOpticalType              INTEGER,
            fomOpticalXMTDistance       INTEGER
        }

        fomOpticalOutline  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sc(1),
                    fc(2),
                    unknown(15)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Optical Outline "
            ::= { fomOpticalTypeEntry 2 }

        fomOpticalType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dual-1310(1),
                    dual-1550(2),
                    single-m(3),
                    single-s(4),
                    unknown(15)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical Type "
            ::= { fomOpticalTypeEntry 3 }

        fomOpticalXMTDistance  OBJECT-TYPE
            SYNTAX  INTEGER {
                    small(1),
                    middle(2),
                    large(3),
                    other(4),
                    unknown(15)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Fom Optical XMT Distance "
            ::= { fomOpticalTypeEntry 4 }

--
--  FOM APSD Setup
--

        fomApsdSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomApsdSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The FOM APSD Setup table."
            ::= { fom-card 8 }

        fomApsdSetupEntry  OBJECT-TYPE
            SYNTAX  FomApsdSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the FOM APSD Setup table."
            INDEX { fomIndex }
            ::= { fomApsdSetupTable 1 }

            FomApsdSetupEntry ::= SEQUENCE {
            fomApsdEnable               INTEGER,
            fomPulseRepeatTime          INTEGER,
            fomManualRestart            INTEGER,
            fomLaserStatus              INTEGER
        }

        fomApsdEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Optical APSD Enable "
            ::= { fomApsdSetupEntry 2 }

        fomPulseRepeatTime  OBJECT-TYPE
            SYNTAX  INTEGER  (100..300)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Laser Pulse repetition time for automatic restart(sec) "
            ::= { fomApsdSetupEntry 3 }

        fomManualRestart  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    start(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Laser Manual Restart "
            ::= { fomApsdSetupEntry 4 }

        fomLaserStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    laser-on(1),
                    laser-off(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Laser Status "
            ::= { fomApsdSetupEntry 5 }

--
--  FOM Current Performance Table
--

    fomCurrentPerfTable OBJECT IDENTIFIER ::= { fom-card 9 }

--
-- FOM Optical Current Performance Table
--
        fomOpticalCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical Current Performance Table"
            ::= { fomCurrentPerfTable 1 }

        fomOpticalCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  FomOpticalCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical current performance entry"
            INDEX { fomIndex }
            ::= { fomOpticalCurrentPerfTable 1 }

            FomOpticalCurrentPerfEntry ::= SEQUENCE  {
            fomOpticalCurrentPerfES     INTEGER,
            fomOpticalCurrentPerfSES    INTEGER,
            fomOpticalCurrentPerfUAS    INTEGER,
            fomOpticalCurr15MinTimeElapsed  INTEGER,
            fomOpticalValid15MinInterval    INTEGER
        }

        fomOpticalCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { fomOpticalCurrentPerfEntry 2 }

        fomOpticalCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomOpticalCurrentPerfEntry 3 }

        fomOpticalCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomOpticalCurrentPerfEntry 4 }

        fomOpticalCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { fomOpticalCurrentPerfEntry 5 }

        fomOpticalValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { fomOpticalCurrentPerfEntry 6 }

--
-- FOM E1 Current Performance Table
--
        fomE1CurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomE1CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 Current Performance Table"
            ::= { fomCurrentPerfTable 2 }

        fomE1CurrentPerfEntry  OBJECT-TYPE
            SYNTAX  FomE1CurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 current performance entry"
            INDEX { fomIndex ,
        fomPortIndex }
            ::= { fomE1CurrentPerfTable 1 }

            FomE1CurrentPerfEntry ::= SEQUENCE  {
            fomE1CurrentPerfES          INTEGER,
            fomE1CurrentPerfSES         INTEGER,
            fomE1CurrentPerfUAS         INTEGER,
            fomE1CurrentPerfCRC         INTEGER,
            fomE1Curr15MinTimeElapsed   INTEGER,
            fomE1Valid15MinInterval     INTEGER
        }

        fomE1CurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { fomE1CurrentPerfEntry 3 }

        fomE1CurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomE1CurrentPerfEntry 4 }

        fomE1CurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomE1CurrentPerfEntry 5 }

        fomE1CurrentPerfCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CRC Error Counter "
            ::= { fomE1CurrentPerfEntry 6 }

        fomE1Curr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { fomE1CurrentPerfEntry 7 }

        fomE1Valid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { fomE1CurrentPerfEntry 8 }

--
--  FOM Interval Performance Table
--

    fomIntervalPerfTable  OBJECT IDENTIFIER ::= { fom-card 10 }

--
--  FOM Optical Interval Performance Table
--

        fomOpticalIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalIntervalPerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical Interval Performance Table"
            ::= { fomIntervalPerfTable 1 }

        fomOpticalIntervalPerEntry  OBJECT-TYPE
            SYNTAX  FomOpticalIntervalPerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical interval performance entry"
            INDEX { fomIndex ,
        fomIntervalPerfNumber }
            ::= { fomOpticalIntervalPerfTable 1 }

            FomOpticalIntervalPerEntry ::= SEQUENCE {
            fomIntervalPerfNumber       INTEGER  (1..96),
            fomOpticalIntervalPerfES    INTEGER,
            fomOpticalIntervalPerfSES   INTEGER,
            fomOpticalIntervalPerfUAS   INTEGER
        }

        fomIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { fomOpticalIntervalPerEntry 2 }

        fomOpticalIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomOpticalIntervalPerEntry 3 }

        fomOpticalIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomOpticalIntervalPerEntry 4 }

        fomOpticalIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomOpticalIntervalPerEntry 5 }

--
--  FOM E1 Interval Performance Table
--

        fomE1IntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomE1IntervalPerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 Interval Performance Table"
            ::= { fomIntervalPerfTable 2 }

        fomE1IntervalPerEntry  OBJECT-TYPE
            SYNTAX  FomE1IntervalPerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 interval performance entry"
            INDEX { fomIndex ,
        fomPortIndex ,
        fomIntervalPerfNumber }
            ::= { fomE1IntervalPerfTable 1 }

            FomE1IntervalPerEntry ::= SEQUENCE {
            fomE1IntervalPerfES         INTEGER,
            fomE1IntervalPerfSES        INTEGER,
            fomE1IntervalPerfUAS        INTEGER,
            fomE1IntervalPerfCRC        INTEGER
        }

        fomE1IntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomE1IntervalPerEntry 4 }

        fomE1IntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomE1IntervalPerEntry 5 }

        fomE1IntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomE1IntervalPerEntry 6 }

        fomE1IntervalPerfCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CRC Error Counter "
            ::= { fomE1IntervalPerEntry 7 }

--
--  FOM Total Performance Table
--

    fomTotalPerfTable   OBJECT IDENTIFIER ::= { fom-card 11 }

--
--  FOM Optical Total Performance Table
--

        fomOpticalTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical Total Performance Table"
            ::= { fomTotalPerfTable 1 }

        fomOpticalTotalPerfEntry  OBJECT-TYPE
            SYNTAX  FomOpticalTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical Total performance table"
            INDEX { fomIndex }
            ::= { fomOpticalTotalPerfTable 1 }

            FomOpticalTotalPerfEntry ::= SEQUENCE  {
            fomOpticalTotalPerfES       INTEGER,
            fomOpticalTotalPerfSES      INTEGER,
            fomOpticalTotalPerfUAS      INTEGER
        }

        fomOpticalTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomOpticalTotalPerfEntry 2 }

        fomOpticalTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomOpticalTotalPerfEntry 3 }

        fomOpticalTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomOpticalTotalPerfEntry 4 }

--
--  FOM E1 Total Performance Table
--

        fomE1TotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomE1TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 Total Performance Table"
            ::= { fomTotalPerfTable 2 }

        fomE1TotalPerfEntry  OBJECT-TYPE
            SYNTAX  FomE1TotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 Total performance table"
            INDEX { fomIndex ,
        fomPortIndex }
            ::= { fomE1TotalPerfTable 1 }

            FomE1TotalPerfEntry ::= SEQUENCE  {
            fomE1TotalPerfES            INTEGER,
            fomE1TotalPerfSES           INTEGER,
            fomE1TotalPerfUAS           INTEGER,
            fomE1TotalPerfCRC           INTEGER
        }

        fomE1TotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomE1TotalPerfEntry 3 }

        fomE1TotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomE1TotalPerfEntry 4 }

        fomE1TotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomE1TotalPerfEntry 5 }

        fomE1TotalPerfCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CRC Error Counter "
            ::= { fomE1TotalPerfEntry 6 }

--
--  FOM Seven Days Performance Table
--

    fomSevenDaysPerfTable   OBJECT IDENTIFIER ::= { fom-card 12 }

--
--  FOM Optical Seven Days Performance Table
--
        fomOpticalSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomOpticalSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical 7 Days Performance Table"
            ::= { fomSevenDaysPerfTable 1 }

        fomOpticalSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  FomOpticalSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical 7 days performance entry"
            INDEX { fomIndex ,
        fomDaysIndex }
            ::= { fomOpticalSevenDaysPerfTable 1 }

            FomOpticalSevenDaysPerfEntry ::= SEQUENCE  {
            fomDaysIndex                INTEGER (1..7),
            fomOpticalDateStrIndex      DisplayString (SIZE (0..255) ),
            fomOpticalSevenDaysPerfES   INTEGER,
            fomOpticalSevenDaysPerfSES  INTEGER,
            fomOpticalSevenDaysPerfUAS  INTEGER
        }

        fomDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { fomOpticalSevenDaysPerfEntry 2 }

        fomOpticalDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { fomOpticalSevenDaysPerfEntry 3 }

        fomOpticalSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomOpticalSevenDaysPerfEntry 4 }

        fomOpticalSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomOpticalSevenDaysPerfEntry 5 }

        fomOpticalSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomOpticalSevenDaysPerfEntry 6 }

--
--  FOM E1 Seven Days Performance Table
--
        fomE1SevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF FomE1SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 7 Days Performance Table"
            ::= { fomSevenDaysPerfTable 2 }

        fomE1SevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  FomE1SevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM E1 7 days performance entry"
            INDEX { fomIndex ,
        fomPortIndex ,
        fomDaysIndex }
            ::= { fomE1SevenDaysPerfTable 1 }

            FomE1SevenDaysPerfEntry ::= SEQUENCE  {
            fomE1DateStrIndex           DisplayString (SIZE (0..255) ),
            fomE1SevenDaysPerfES        INTEGER,
            fomE1SevenDaysPerfSES       INTEGER,
            fomE1SevenDaysPerfUAS       INTEGER,
            fomE1SevenDaysPerfCRC       INTEGER
        }

        fomE1DateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { fomE1SevenDaysPerfEntry 4 }

        fomE1SevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { fomE1SevenDaysPerfEntry 5 }

        fomE1SevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { fomE1SevenDaysPerfEntry 6 }

        fomE1SevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { fomE1SevenDaysPerfEntry 7 }

        fomE1SevenDaysPerfCRC  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CRC Error Counter "
            ::= { fomE1SevenDaysPerfEntry 8 }

--
--  FOM Remote Led Status Table
--
--       fomRemoteLedStatusTable  OBJECT-TYPE
--           SYNTAX  SEQUENCE OF FomRemoteLedStatusEntry
--           ACCESS  not-accessible
--           STATUS  mandatory
--           DESCRIPTION
--              "FOM remote led status Table"
--           ::= { fom-card 13 }
--
--       fomRemoteLedStatusEntry  OBJECT-TYPE
--           SYNTAX  FomRemoteLedStatusEntry
--           ACCESS  not-accessible
--           STATUS  mandatory
--           DESCRIPTION
--              "FOM remote led status entry"
--           INDEX  { fomIndex,
--                    fomRemLedIndex }
--           ::= { fomRemoteLedStatusTable 1 }
--
--       FomRemoteLedStatusEntry ::=
--           SEQUENCE  {
--             fomRemLedIndex
--               INTEGER,
--             fomRemLedName
--               DisplayString,
--             fomRemLedColor
--               INTEGER
--           }
--
--       fomRemLedIndex  OBJECT-TYPE
--           SYNTAX  INTEGER
--           ACCESS  read-only
--           STATUS  mandatory
--           DESCRIPTION
--              "Remote Led Index"
--           ::= { fomRemoteLedStatusEntry 2 }
--
--       fomRemLedName  OBJECT-TYPE
--           SYNTAX  DisplayString
--           ACCESS  read-only
--           STATUS  mandatory
--           DESCRIPTION
--              "Remote Led Name"
--           ::= { fomRemoteLedStatusEntry 3 }
--
--       fomRemLedColor  OBJECT-TYPE
--           SYNTAX  INTEGER {
--                      none(0),
--                      off(1),
--                      red(2),
--                      green(3),
--                      yellow(4),
--                      redFlash(5),
--                      greenFlash(6),
--                      yellowFlash(7),
--                      greenFlashRed(8),
--                      not_available(255)
--                   }
--           ACCESS  read-only
--           STATUS  mandatory
--           DESCRIPTION
--              "Remote Led Color"
--           ::= { fomRemoteLedStatusEntry 4 }


        fomTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of FOM"
            ::= { fom-card 100 }


--======================================================================--
--======================================================================--
--  Router-A MIB
--======================================================================--
--======================================================================--
--
--  Alarm Status Table
--

        r2AlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Table "
            ::= { router-a-card 1 }

        r2AlmStatusEntry  OBJECT-TYPE
            SYNTAX  R2AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { r2Index ,
        r2AlmStatusNumber }
            ::= { r2AlmStatusTable 1 }

            R2AlmStatusEntry ::= SEQUENCE {
            r2Index                     SmallSlotIndex,
            r2AlmStatusNumber           INTEGER (1..40),
            r2AlmStatusString           DisplayString,
            r2AlmStatusState            INTEGER,
            r2AlmStatusCount            INTEGER,
            r2AlmStatusEnable           AlarmSeverity
        }

        r2Index  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2AlmStatusEntry 1 }

        r2AlmStatusNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Index "
            ::= { r2AlmStatusEntry 2 }

        r2AlmStatusString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { r2AlmStatusEntry 3 }

        r2AlmStatusState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { r2AlmStatusEntry 4 }

        r2AlmStatusCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { r2AlmStatusEntry 5 }

        r2AlmStatusEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { r2AlmStatusEntry 6 }

--
--  Command Control Table
--

        r2CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { router-a-card 2 }

        r2CommandControlEntry  OBJECT-TYPE
            SYNTAX  R2CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { r2Index }
            ::= { r2CommandControlTable 1 }

            R2CommandControlEntry ::= SEQUENCE {
            r2ClearAlarmHistory         INTEGER,
            r2LoadDefaultAlarmCfg       INTEGER,
            r2Reset                     INTEGER,
            r2ReturnToDefault           INTEGER,
            r2SaveConfig                INTEGER
        }

        r2ClearAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm History"
            ::= { r2CommandControlEntry 2 }

        r2LoadDefaultAlarmCfg    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Alarm Config"
            ::= { r2CommandControlEntry 3 }

        r2Reset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Card"
            ::= { r2CommandControlEntry 4 }

        r2ReturnToDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    return-to-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Return to default"
            ::= { r2CommandControlEntry 5 }

        r2SaveConfig    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    save-config(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Save config"
            ::= { r2CommandControlEntry 6 }

--
--  R2 Bridge
--

    r2Bridge            OBJECT IDENTIFIER ::= { router-a-card 3 }

--
-- R2 Create and Destroy Bridge
--

        r2CreateDestroyBridge  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2CreateDestroyBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R2 Create and Destroy Bridge Table."
            ::= { r2Bridge 1 }

        r2CreateDestroyBridgeEntry  OBJECT-TYPE
            SYNTAX  R2CreateDestroyBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R2 Create and Destroy Bridge Entry"
            INDEX { r2Index }
            ::= { r2CreateDestroyBridge 1 }

            R2CreateDestroyBridgeEntry ::= SEQUENCE {
            r2BridgeName                DisplayString,
            r2BridgeMacAddr             DisplayString,
            r2BridgeCMD                 INTEGER
        }

        r2BridgeName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Name"
            ::= { r2CreateDestroyBridgeEntry 2 }

        r2BridgeMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management Mac (xx:xx:xx:xx:xx:xx)"
            ::= { r2CreateDestroyBridgeEntry 3 }

        r2BridgeCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    create(1),
                    destroy(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Index"
            ::= { r2CreateDestroyBridgeEntry 4 }

--
-- R2 Bridge Config Table
--

        r2BridgeCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2BridgeCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R2 Bridge Config Table."
            ::= { r2Bridge 2 }

        r2BridgeCFGEntry  OBJECT-TYPE
            SYNTAX  R2BridgeCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R2 Bridge Config Entry"
            INDEX { r2Index ,
        r2BrgGroupID }
            ::= { r2BridgeCFG 1 }

            R2BridgeCFGEntry ::= SEQUENCE {
            r2BrgGroupID                INTEGER,
            r2BrgName                   DisplayString,
            r2BrgManagementAddr         DisplayString,
            r2BrgManagementMac          DisplayString,
            r2BrgMacAgingTime           INTEGER,
            r2BrgCRC                    INTEGER,
            r2BrgManageState            INTEGER,
            r2BrgInboundPolicy          DisplayString,
            r2BrgOutboundPolicy         DisplayString,
            r2BrgSTPState               INTEGER,
            r2BrgSTPProtocolVersion     INTEGER,
            r2BrgSTPHelloTime           INTEGER,
            r2BrgSTPMacAgingTime        INTEGER,
            r2BrgSTPForwardDelay        INTEGER,
            r2BrgSTPPriority            INTEGER,
            r2BrgL2PDUtunneling         INTEGER,
            r2BrgRoutingProtocol        INTEGER
        }

        r2BrgGroupID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group ID"
            ::= { r2BridgeCFGEntry 2 }

        r2BrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Name"
            ::= { r2BridgeCFGEntry 3 }

        r2BrgManagementAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2BridgeCFGEntry 4 }

        r2BrgManagementMac  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management Mac (xx:xx:xx:xx:xx:xx)"
            ::= { r2BridgeCFGEntry 5 }

        r2BrgMacAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER (10..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge MAC Aging Time(10-1000000 Sec)"
            ::= { r2BridgeCFGEntry 6 }

        r2BrgCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Disable/Enable CRC"
            ::= { r2BridgeCFGEntry 7 }

        r2BrgManageState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Indicated whether the mgmt attached with epilogue"
            ::= { r2BridgeCFGEntry 8 }

        r2BrgInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Inbound policy"
            ::= { r2BridgeCFGEntry 9 }

        r2BrgOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Inbound policy"
            ::= { r2BridgeCFGEntry 10 }

        r2BrgSTPState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree disable/enable"
            ::= { r2BridgeCFGEntry 11 }

        r2BrgSTPProtocolVersion  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stp(1),
                    rstp(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Protocol Version"
            ::= { r2BridgeCFGEntry 12 }

        r2BrgSTPHelloTime  OBJECT-TYPE
            SYNTAX  INTEGER (1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Hello Time(1-10 Sec)"
            ::= { r2BridgeCFGEntry 13 }

        r2BrgSTPMacAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER (6..40)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Aging Time(6-40 Sec)"
            ::= { r2BridgeCFGEntry 14 }

        r2BrgSTPForwardDelay OBJECT-TYPE
            SYNTAX  INTEGER (4..30)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Forward Delay Time(4-30 Sec)"
            ::= { r2BridgeCFGEntry 15 }

        r2BrgSTPPriority OBJECT-TYPE
            SYNTAX  INTEGER (0..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Priority (0-65535)"
            ::= { r2BridgeCFGEntry 16 }

        r2BrgL2PDUtunneling  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Disable/Enable BPDU"
            ::= { r2BridgeCFGEntry 17 }

        r2BrgRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ripV1(1),
                    ripV2(2),
                    disable(4),
                    notSupport(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Bridge routing protocol"
            ::= { r2BridgeCFGEntry 18 }


--
-- R2 Bridge STP Info
--

        r2BrgSTPInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2BrgSTPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree information Table."
            ::= { r2Bridge 3 }

        r2BrgSTPInfoEntry  OBJECT-TYPE
            SYNTAX  R2BrgSTPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree information Entry"
            INDEX { r2Index ,
        r2BrgGroupID ,
        r2STPIndex }
            ::= { r2BrgSTPInfo 1 }

            R2BrgSTPInfoEntry ::= SEQUENCE {
            r2STPIndex                  INTEGER,
            r2STPName                   DisplayString,
            r2STPBridgeID               DisplayString,
            r2STPHelloTime              INTEGER,
            r2STPMaxAgingTime           INTEGER,
            r2STPForwardDelay           INTEGER,
            r2STPRootCost               INTEGER
        }

        r2STPIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "STP index"
            ::= { r2BrgSTPInfoEntry 3 }

        r2STPName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning tree Name"
            ::= { r2BrgSTPInfoEntry 4 }

        r2STPBridgeID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning tree Bridge Id"
            ::= { r2BrgSTPInfoEntry 5 }

        r2STPHelloTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Hello Time interval"
            ::= { r2BrgSTPInfoEntry 6 }

        r2STPMaxAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Maximum Aging Time interval"
            ::= { r2BrgSTPInfoEntry 7 }

        r2STPForwardDelay OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Forward Delay Time interval"
            ::= { r2BrgSTPInfoEntry 8 }

        r2STPRootCost OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Post Cost"
            ::= { r2BrgSTPInfoEntry 9 }

--
-- R2 STP Port Info
--

        r2BrgStpPortInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2BrgStpPortInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Port information Table."
            ::= { r2Bridge 4 }

        r2BrgStpPortInfoEntry  OBJECT-TYPE
            SYNTAX  R2BrgStpPortInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Port information Entry"
            INDEX { r2Index ,
        r2BrgGroupID ,
        r2StpPortIndex }
            ::= { r2BrgStpPortInfo 1 }

            R2BrgStpPortInfoEntry ::= SEQUENCE {
            r2StpPortIndex              INTEGER,
            r2StpPortName               DisplayString,
            r2StpState                  INTEGER,
            r2StpPriority               INTEGER,
            r2StpCost                   INTEGER,
            r2StpEdgePort               INTEGER,
            r2StpLinkType               INTEGER,
            r2StpRootPort               INTEGER
        }

        r2StpPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "STP Port Number Index"
            ::= { r2BrgStpPortInfoEntry 3 }

        r2StpPortName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port Name"
            ::= { r2BrgStpPortInfoEntry 4 }

        r2StpState  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    listen(2),
                    learn(3),
                    forward(4),
                    block(5),
                    down(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port state"
            ::= { r2BrgStpPortInfoEntry 5 }

        r2StpPriority  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r2BrgStpPortInfoEntry 6 }

        r2StpCost  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r2BrgStpPortInfoEntry 7 }

        r2StpEdgePort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r2BrgStpPortInfoEntry 8 }

        r2StpLinkType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    shared(1),
                    p-to-p(2),
                    auto(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r2BrgStpPortInfoEntry 9 }

        r2StpRootPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port root status"
            ::= { r2BrgStpPortInfoEntry 10 }

--
-- R2 Bridge Add or Delete Interface Table
--

        r2BrgAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2BrgAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface to bridge group Table."
            ::= { r2Bridge 5 }

        r2BrgAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R2BrgAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface to bridge group Entry"
            INDEX { r2Index }
            ::= { r2BrgAddDelInterface 1 }

            R2BrgAddDelInterfaceEntry ::= SEQUENCE {
            r2BrgAddDelBrgName          DisplayString,
            r2BrgAddDelInterfaceName    DisplayString,
            r2BrgAddDelInterfaceCMD     INTEGER
        }

        r2BrgAddDelBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Name"
            ::= { r2BrgAddDelInterfaceEntry 2 }

        r2BrgAddDelInterfaceName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1-2/wan1-64/wanX pvc1-16)"
            ::= { r2BrgAddDelInterfaceEntry 3 }

        r2BrgAddDelInterfaceCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add interface to Bridge Mode or (delete)add interface
                to router mode"
            ::= { r2BrgAddDelInterfaceEntry 4 }

--
--  R2 Interface Control Table
--

    r2Interface         OBJECT IDENTIFIER ::= { router-a-card 4 }

--
--  R2 LAN
--

    r2IntfLAN           OBJECT IDENTIFIER ::= { r2Interface 1 }

--
-- R2 LAN Config Table
--

        r2LanCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2LanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LAN Config Table."
            ::= { r2IntfLAN 1 }

        r2LanCFGEntry  OBJECT-TYPE
            SYNTAX  R2LanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LAN Config Entry"
            INDEX { r2Index ,
        r2LanIndex }
            ::= { r2LanCFG 1 }

            R2LanCFGEntry ::= SEQUENCE {
            r2LanIndex                  INTEGER,
            r2LanIPAddr                 DisplayString,
            r2LanAliasIPAddr1           DisplayString,
            r2LanAliasIPAddr2           DisplayString,
            r2LanAliasIPAddr3           DisplayString,
            r2LanAliasIPAddr4           DisplayString,
            r2LanAliasIPAddr5           DisplayString,
            r2LanRoutingProtocol        INTEGER,
            r2LanLayer2Protocol         INTEGER,
            r2LanSpeed                  INTEGER,
            r2LanInterfaceMode          INTEGER,
            r2LanInboundPolicy          DisplayString,
            r2LanOutboundPolicy         DisplayString,
            r2LanStatus                 DisplayString
        }

        r2LanIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    lan2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Index"
            ::= { r2LanCFGEntry 2 }

        r2LanIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 3 }

        r2LanAliasIPAddr1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 4 }

        r2LanAliasIPAddr2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 5 }

        r2LanAliasIPAddr3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 6 }

        r2LanAliasIPAddr4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 7 }

        r2LanAliasIPAddr5  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2LanCFGEntry 8 }

        r2LanRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table)"
            ::= { r2LanCFGEntry 9 }

        r2LanLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    ethernet(1),
                    fast-ethernet(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Layer2 Protocol"
            ::= { r2LanCFGEntry 10 }

        r2LanSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    half-duplex-10M(1),
                    full-duplex-10M(2),
                    half-duplex-100M(3),
                    full-duplex-100M(4),
                    auto-negotiation(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Speed(10/100Mb ; half/full)"
            ::= { r2LanCFGEntry 11 }

        r2LanInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Interface Mode"
            ::= { r2LanCFGEntry 12 }

        r2LanInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan inbound policy (off to disable access control)"
            ::= { r2LanCFGEntry 13 }

        r2LanOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan outbound policy (off to disable access control)"
            ::= { r2LanCFGEntry 14 }

        r2LanStatus  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Status"
            ::= { r2LanCFGEntry 15 }

--
-- R2 Add or Delete Lan Alias IP Table
--

        r2AddDelAliasIP  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelAliasIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Lan Alias IP Table."
            ::= { r2IntfLAN 2 }

        r2AddDelAliasIPEntry  OBJECT-TYPE
            SYNTAX  R2AddDelAliasIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Lan Alias IP Entry"
            INDEX { r2Index }
            ::= { r2AddDelAliasIP 1 }

            R2AddDelAliasIPEntry ::= SEQUENCE {
            r2AliasIPLanIndex           INTEGER,
            r2AliasIPAddr               DisplayString,
            r2AliasIPAddrCMD            INTEGER
        }

        r2AliasIPLanIndex  OBJECT-TYPE
            SYNTAX  INTEGER{
                    lan1(1),
                    lan2(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Index"
            ::= { r2AddDelAliasIPEntry 2 }

        r2AliasIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alias IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2AddDelAliasIPEntry 3 }

        r2AliasIPAddrCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Alias IP Address"
            ::= { r2AddDelAliasIPEntry 4 }

--
--  R2 WAN
--

    r2IntfWAN           OBJECT IDENTIFIER ::= { r2Interface 2 }

--
-- R2 WAN Config Table
--

        r2WanCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN(1-64) Config Table."
            ::= { r2IntfWAN 1 }

        r2WanCFGEntry  OBJECT-TYPE
            SYNTAX  R2WanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN(1-64) Config Entry"
            INDEX { r2Index ,
        r2WanIndex }
            ::= { r2WanCFG 1 }

            R2WanCFGEntry ::= SEQUENCE {
            r2WanIndex                  INTEGER,
            r2WanIPAddr                 DisplayString,
            r2WanRoutingProtocol        INTEGER,
            r2WanNatNapt                INTEGER,
            r2WanNumberOfTimeSlots      INTEGER,
            r2WanLayer2Protocol         INTEGER,
            r2WanInterfaceMode          INTEGER,
            r2WanInboundPolicy          DisplayString,
            r2WanOutboundPolicy         DisplayString,
            r2WanStatus                 INTEGER
        }

        r2WanIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN1-WAN2"
            ::= { r2WanCFGEntry 2 }

        r2WanIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2WanCFGEntry 3 }

        r2WanRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table)"
            ::= { r2WanCFGEntry 4 }

        r2WanNatNapt  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN NAT/NAPT Function"
            ::= { r2WanCFGEntry 5 }

        r2WanNumberOfTimeSlots  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Number of TimeSlots for this WAN"
            ::= { r2WanCFGEntry 6 }

        r2WanLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    ppp(3),
                    hdlc(4),
                    frame-relay(5),
                    cisco-hdlc(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Layer2 Protocol"
            ::= { r2WanCFGEntry 7 }

        r2WanInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Interface Mode"
            ::= { r2WanCFGEntry 8 }

        r2WanInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan inbound policy (off to disable access control)"
            ::= { r2WanCFGEntry 9 }

        r2WanOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan outbound policy (off to disable access control)"
            ::= { r2WanCFGEntry 10 }

        r2WanStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Status"
            ::= { r2WanCFGEntry 11 }

--
-- R2 WAN Cisco Hdlc Config Table
--

        r2WanCiscoHdlc  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanCiscoHdlcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Cisco Hdlc Config Table."
            ::= { r2IntfWAN 2 }

        r2WanCiscoHdlcEntry  OBJECT-TYPE
            SYNTAX  R2WanCiscoHdlcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Cisco Hdlc Config Entry"
            INDEX { r2Index ,
        r2WanIndex }
            ::= { r2WanCiscoHdlc 1 }

            R2WanCiscoHdlcEntry ::= SEQUENCE {
            r2WanChdlcInterval          INTEGER,
            r2WanChdlcTimeout           INTEGER,
            r2WanChdlcCMD               INTEGER
        }

        r2WanChdlcInterval  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..3600)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Keepalive interval (1-3600, default is 10 secs)"
            ::= { r2WanCiscoHdlcEntry 3 }

        r2WanChdlcTimeout  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface restart timeout(secs, should be multiple of interval)"
            ::= { r2WanCiscoHdlcEntry 4 }

        r2WanChdlcCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    set(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Cisco Hdlc"
            ::= { r2WanCiscoHdlcEntry 5 }

--
-- R2 WAN Frame Relay Config Table
--

        r2WanFrameRelay  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanFrameRelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Frame Relay Config Table."
            ::= { r2IntfWAN 3 }

        r2WanFrameRelayEntry  OBJECT-TYPE
            SYNTAX  R2WanFrameRelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Frame Relay Config Entry"
            INDEX { r2Index ,
        r2WanIndex }
            ::= { r2WanFrameRelay 1 }

            R2WanFrameRelayEntry ::= SEQUENCE {
            r2WanFRLMIType              INTEGER,
            r2WanFRN391                 INTEGER,
            r2WanFRN392                 INTEGER,
            r2WanFRN393                 INTEGER,
            r2WanFRT391                 INTEGER
        }

        r2WanFRLMIType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    q933(1),
                    ansi(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frame Relay LMI protocol (ansi/q933)"
            ::= { r2WanFrameRelayEntry 3 }

        r2WanFRN391  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI full-status polling interval (1~255)"
            ::= { r2WanFrameRelayEntry 4 }

        r2WanFRN392  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI error threshold (1~10)"
            ::= { r2WanFrameRelayEntry 5 }

        r2WanFRN393  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI monitored event threshold (1~10)"
            ::= { r2WanFrameRelayEntry 6 }

        r2WanFRT391  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 5..30)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI link integrity polling interval (5~30)"
            ::= { r2WanFrameRelayEntry 7 }

--
--  R2 WAN PVC
--

    r2WanPVC            OBJECT IDENTIFIER ::= { r2IntfWAN 4 }

--
-- R2 WAN PVC Function Table
--

        r2WanAddDelPVC  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanAddDelPVCEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC Table"
            ::= { r2WanPVC 1 }

        r2WanAddDelPVCEntry  OBJECT-TYPE
            SYNTAX  R2WanAddDelPVCEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC Entry"
            INDEX { r2Index }
            ::= { r2WanAddDelPVC 1 }

            R2WanAddDelPVCEntry ::= SEQUENCE {
            r2PvcWanIndex               INTEGER,
            r2PvcNum                    INTEGER,
            r2PvcDLCI                   INTEGER,
            r2PvcCIR                    INTEGER,
            r2PvcBc                     INTEGER,
            r2PvcBe                     INTEGER,
            r2PvcQdepth                 INTEGER,
            r2WanPvcCMD                 INTEGER
        }

        r2PvcWanIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Wan number (wan1-wan64)"
            ::= { r2WanAddDelPVCEntry 2 }

        r2PvcNum  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC number (pvc1-pvc16)"
            ::= { r2WanAddDelPVCEntry 3 }

        r2PvcDLCI  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC's DLCI (16~991)"
            ::= { r2WanAddDelPVCEntry 4 }

        r2PvcCIR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Information Rate (kbps)"
            ::= { r2WanAddDelPVCEntry 5 }

        r2PvcBc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Burst Size (kbits)"
            ::= { r2WanAddDelPVCEntry 6 }

        r2PvcBe  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Excess Burst Size (kbits)"
            ::= { r2WanAddDelPVCEntry 7 }

        r2PvcQdepth  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Max. queue length"
            ::= { r2WanAddDelPVCEntry 8 }

        r2WanPvcCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    add-pvc(1),
                    delete-pvc(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC for this wan interface"
            ::= { r2WanAddDelPVCEntry 9 }

--
-- R2 WAN PVC Config Table
--

        r2WanPvcCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanPvcCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Config Table"
            ::= { r2WanPVC 2 }

        r2WanPvcCFGEntry  OBJECT-TYPE
            SYNTAX  R2WanPvcCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Config Entry"
            INDEX { r2Index ,
        r2WanIndex ,
        r2PvcIndex }
            ::= { r2WanPvcCFG 1 }

            R2WanPvcCFGEntry ::= SEQUENCE {
            r2PvcIndex                  INTEGER,
            r2WanPvcState               INTEGER,
            r2WanPvcIPAddr              DisplayString,
            r2WanPvcRoutingProtocol     INTEGER,
            r2WanPvcNatNapt             INTEGER,
            r2WanPvcInterfaceMode       INTEGER,
            r2WanPvcDLCI                INTEGER,
            r2WanPvcCIR                 INTEGER,
            r2WanPvcBc                  INTEGER,
            r2WanPvcBe                  INTEGER,
            r2WanPvcQdepth              INTEGER,
            r2WanPvcInboundPolicy       DisplayString,
            r2WanPvcOutboundPolicy      DisplayString
        }

        r2PvcIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The PVC number (pvc1-pvc16)"
            ::= { r2WanPvcCFGEntry 3 }

        r2WanPvcState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    inactive(1),
                    active(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC State"
            ::= { r2WanPvcCFGEntry 4 }

        r2WanPvcIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC IP address (xxx.xxx.xxx.xxx/xx)"
            ::= { r2WanPvcCFGEntry 5 }

        r2WanPvcRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table)"
            ::= { r2WanPvcCFGEntry 6 }

        r2WanPvcNatNapt  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC NAT/NAPT Function"
            ::= { r2WanPvcCFGEntry 7 }

        r2WanPvcInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Interface Mode"
            ::= { r2WanPvcCFGEntry 8 }

        r2WanPvcDLCI  OBJECT-TYPE
            SYNTAX  INTEGER (16..991)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC's DLCI (16~991)"
            ::= { r2WanPvcCFGEntry 9 }

        r2WanPvcCIR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Information Rate (kbps)"
            ::= { r2WanPvcCFGEntry 10 }

        r2WanPvcBc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Burst Size (kbits)"
            ::= { r2WanPvcCFGEntry 11 }

        r2WanPvcBe  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Excess Burst Size (kbits)"
            ::= { r2WanPvcCFGEntry 12 }

        r2WanPvcQdepth  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Max. queue length"
            ::= { r2WanPvcCFGEntry 13 }

        r2WanPvcInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Pvc inbound policy (off to disable access control)"
            ::= { r2WanPvcCFGEntry 14 }

        r2WanPvcOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Pvc outbound policy (off to disable access control)"
            ::= { r2WanPvcCFGEntry 15 }

--
--  R2 WAN Channel Map
--

    r2WanChannelMap     OBJECT IDENTIFIER ::= { r2IntfWAN 5 }

--
-- R2 WAN Set Channel Map Control
--

        r2WanSetMap  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanSetMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Set Channel Map Table"
            ::= { r2WanChannelMap 1 }

        r2WanSetMapEntry  OBJECT-TYPE
            SYNTAX  R2WanSetMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Set Channel Map Entry"
            INDEX { r2Index }
            ::= { r2WanSetMap 1 }

            R2WanSetMapEntry ::= SEQUENCE {
            r2MapWanNumber              INTEGER,
            r2StartTimeSlot             INTEGER,
            r2ChannelNumber             INTEGER,
            r2MapCommand                INTEGER
        }

        r2MapWanNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Index(wan1~wan64)"
            ::= { r2WanSetMapEntry 2 }

        r2StartTimeSlot  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set start time slot number"
            ::= { r2WanSetMapEntry 3 }

        r2ChannelNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set channel number"
            ::= { r2WanSetMapEntry 4 }

        r2MapCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1),
                    set(2),
                    clrSet(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map Command"
            ::= { r2WanSetMapEntry 5 }

--
-- R2 WAN Channel Map Info Table
--

        r2ChannelMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Channel Map Config Table"
            ::= { r2WanChannelMap 2 }

        r2ChannelMapEntry  OBJECT-TYPE
            SYNTAX  R2ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Channel Map Config Entry"
            INDEX { r2Index ,
        r2TimeSlotIndex }
            ::= { r2ChannelMapTable 1 }

            R2ChannelMapEntry ::= SEQUENCE {
            r2TimeSlotIndex             INTEGER,
            r2MapToWanNum               WanID
        }

        r2TimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot number"
            ::= { r2ChannelMapEntry 2 }

        r2MapToWanNum  OBJECT-TYPE
            SYNTAX  WanID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot number"
            ::= { r2ChannelMapEntry 3 }

--
--  R2 WAN QoS Table
--

    r2WanQoS            OBJECT IDENTIFIER ::= { r2IntfWAN 6 }

--
-- R2 WAN Qos Policy Table
--
        r2WanQosPolicyTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanQosPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Table."
            ::= { r2WanQoS 1 }

        r2WanQosPolicyEntry  OBJECT-TYPE
            SYNTAX  R2WanQosPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Entry"
            INDEX { r2Index ,
        r2WanIndex ,
        r2WanQosPolicyNumber }
            ::= { r2WanQosPolicyTable 1 }

            R2WanQosPolicyEntry ::= SEQUENCE {
            r2WanQosPolicyNumber        INTEGER,
            r2WanQosPolicySrcIP         DisplayString,
            r2WanQosPolicyDstIP         DisplayString,
            r2WanQosPolicyProtocol      DisplayString,
            r2WanQosPolicyRate          DisplayString,
            r2WanQosPolicySrcPort       DisplayString,
            r2WanQosPolicyDstPort       DisplayString
        }

        r2WanQosPolicyNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Qos Policy Number"
            ::= { r2WanQosPolicyEntry 3 }

        r2WanQosPolicySrcIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Source IP/Perfix"
            ::= { r2WanQosPolicyEntry 4 }

        r2WanQosPolicyDstIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Destination IP/Perfix"
            ::= { r2WanQosPolicyEntry 5 }

        r2WanQosPolicyProtocol  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Qos Policy Protocol"
            ::= { r2WanQosPolicyEntry 6 }

        r2WanQosPolicyRate  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Rate"
            ::= { r2WanQosPolicyEntry 7 }

        r2WanQosPolicySrcPort  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Source Port"
            ::= { r2WanQosPolicyEntry 8 }

        r2WanQosPolicyDstPort  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Destination Port"
            ::= { r2WanQosPolicyEntry 9 }

--
--  R2 WAN Qos Policy Control Table
--

    r2WanQosPolicyControl   OBJECT IDENTIFIER ::= { r2WanQoS 2 }

--
-- R2 WAN Qos Append and Insert Policy Table
--

        r2WanQosAppendAndInsertPolicy  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanQosAppendAndInsertPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append od Insert a traffic control policy Table."
            ::= { r2WanQosPolicyControl 1 }

        r2WanQosAppendAndInsertPolicyEntry  OBJECT-TYPE
            SYNTAX  R2WanQosAppendAndInsertPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append od Insert a traffic control policy Entry"
            INDEX { r2Index }
            ::= { r2WanQosAppendAndInsertPolicy 1 }

            R2WanQosAppendAndInsertPolicyEntry ::= SEQUENCE {
            r2WanAppInstPolicyWanNum    INTEGER (1..64),
            r2WanAppInstPolicySrcIP     DisplayString (SIZE (0..20)),
            r2WanAppInstPolicySrcIPPrefix   DisplayString (SIZE (0..2)),
            r2WanAppInstPolicyDstIP         DisplayString (SIZE (0..20)),
            r2WanAppInstPolicyDstIPPrefix   DisplayString (SIZE (0..2)),
            r2WanAppInstPolicySrcPort       DisplayString (SIZE (0..25)),
            r2WanAppInstPolicyDstPort       DisplayString (SIZE (0..25)),
            r2WanAppInstPolicyProtocol      DisplayString (SIZE (0..10)),
            r2WanAppInstPolicyRate          DisplayString (SIZE (0..25)),
            r2WanAppInstPolicyRateType      INTEGER,
            r2WanInstPolicyNum              INTEGER (0..32),
            r2WanAppInstPolicyCommand       INTEGER
        }

        r2WanAppInstPolicyWanNum  OBJECT-TYPE
            SYNTAX  INTEGER   (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Number(Wan 1~64)"
            ::= { r2WanQosAppendAndInsertPolicyEntry 2 }

        r2WanAppInstPolicySrcIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source IP(xxx.xxx.xxx.xxx)"
            ::= { r2WanQosAppendAndInsertPolicyEntry 3 }

        r2WanAppInstPolicySrcIPPrefix  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..2))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source IP Prefix(skip if src_ip is 'any')"
            ::= { r2WanQosAppendAndInsertPolicyEntry 4 }

        r2WanAppInstPolicyDstIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination IP(xxx.xxx.xxx.xxx)"
            ::= { r2WanQosAppendAndInsertPolicyEntry 5 }

        r2WanAppInstPolicyDstIPPrefix  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..2))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination IP Prefix(skip if dst_ip is 'any')"
            ::= { r2WanQosAppendAndInsertPolicyEntry 6 }

        r2WanAppInstPolicySrcPort  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source Port(any or min[-max] only for TCP/UDP, (no space before and after '-')"
            ::= { r2WanQosAppendAndInsertPolicyEntry 7 }

        r2WanAppInstPolicyDstPort  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination Port(any or min[-max] only for TCP/UDP, (no space before and after '-')"
            ::= { r2WanQosAppendAndInsertPolicyEntry 8 }

        r2WanAppInstPolicyProtocol  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Protocol(TCP or UDP or ICMP or Any or 0~255)"
            ::= { r2WanQosAppendAndInsertPolicyEntry 9 }

        r2WanAppInstPolicyRate  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Rate(Committed access rate in min[-max] format, (no space before and after '-') )"
            ::= { r2WanQosAppendAndInsertPolicyEntry 10 }

        r2WanAppInstPolicyRateType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    kbps(1),
                    mbps(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Rate Type(type of bandwidth for rate in bits per sec)"
            ::= { r2WanQosAppendAndInsertPolicyEntry 11 }

        r2WanInstPolicyNum  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy number before which new policy will be inserted"
            ::= { r2WanQosAppendAndInsertPolicyEntry 12 }

        r2WanAppInstPolicyCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    append(1),
                    insert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Command"
            ::= { r2WanQosAppendAndInsertPolicyEntry 13 }

--
-- R2 WAN Qos Delete Policy Table
--

        r2WanQosDeletePolicy  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2WanQosDeletePolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete a traffic control policy Table."
            ::= { r2WanQosPolicyControl 2 }

        r2WanQosDeletePolicyEntry  OBJECT-TYPE
            SYNTAX  R2WanQosDeletePolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete a traffic control policy Entry"
            INDEX { r2Index }
            ::= { r2WanQosDeletePolicy 1 }

            R2WanQosDeletePolicyEntry ::= SEQUENCE {
            r2WanDelPolicyWanNum        INTEGER (1..64),
            r2WanDelPolicyNumber        INTEGER (1..32),
            r2WanDelPolicyCommand       INTEGER
        }

        r2WanDelPolicyWanNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Number(Wan 1~64)"
            ::= { r2WanQosDeletePolicyEntry 2 }

        r2WanDelPolicyNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Number(1~32)"
            ::= { r2WanQosDeletePolicyEntry 3 }

        r2WanDelPolicyCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete Policy Command"
            ::= { r2WanQosDeletePolicyEntry 4 }


--
-- R2 Virtual Interface
--

    r2IntfVirtual         OBJECT IDENTIFIER ::= { r2Interface 3 }

--
-- R2 Virtual Interface Config
--

        r2VirtualIntfCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VirtualIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Configuration Table."
            ::= { r2IntfVirtual 1 }

        r2VirtualIntfCFGEntry  OBJECT-TYPE
            SYNTAX  R2VirtualIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Configuration Entry"
            INDEX { r2Index ,
        r2VIntfIndex }
            ::= { r2VirtualIntfCFG 1 }

            R2VirtualIntfCFGEntry ::= SEQUENCE {
            r2VIntfIndex                INTEGER,
            r2VIntfName                 DisplayString,
            r2VIntfRoutingProtocol      INTEGER,
            r2VIntfLayer2Protocol       INTEGER,
            r2VIntfInterfaceMode        INTEGER,
            r2VIntfInboundPolicy        DisplayString,
            r2VIntfOutboundPolicy       DisplayString,
            r2VIntfStatus               INTEGER
        }

        r2VIntfIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual interface index"
            ::= { r2VirtualIntfCFGEntry 2 }

        r2VIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual interface name"
            ::= { r2VirtualIntfCFGEntry 3 }

        r2VIntfRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table)"
            ::= { r2VirtualIntfCFGEntry 4 }

        r2VIntfLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ppp(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Layer2 Protocol"
            ::= { r2VirtualIntfCFGEntry 5 }

        r2VIntfInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Mode of Virtual Interface"
            ::= { r2VirtualIntfCFGEntry 6 }

        r2VIntfInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface inbound policy (off to disable access control)"
            ::= { r2VirtualIntfCFGEntry 7 }

        r2VIntfOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface outbound policy (off to disable access control)"
            ::= { r2VirtualIntfCFGEntry 8 }

        r2VIntfStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Status"
            ::= { r2VirtualIntfCFGEntry 9 }


--
--  R2 Policy
--

    r2Policy            OBJECT IDENTIFIER ::= { router-a-card 5 }

--
-- R2 Filter Info
--

        r2FilterInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2FilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "filter information Table"
            ::= { r2Policy 1 }

        r2FilterInfoEntry  OBJECT-TYPE
            SYNTAX  R2FilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "filter information Entry"
            INDEX { r2Index ,
        r2FilterIndex ,
        r2RuleIndex }
            ::= { r2FilterInfo 1 }

            R2FilterInfoEntry ::= SEQUENCE {
            r2FilterIndex               INTEGER,
            r2RuleIndex                 INTEGER,
            r2FilterName                DisplayString,
            r2FilterAction              INTEGER,
            r2FilterSrcAddr             DisplayString,
            r2FilterDestAddr            DisplayString,
            r2FilterProtocol            INTEGER,
            r2FilterPortLow             INTEGER,
            r2FilterPortHigh            INTEGER
        }

        r2FilterIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Filter List Index "
            ::= { r2FilterInfoEntry 2 }

        r2RuleIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "filter rule index"
            ::= { r2FilterInfoEntry 3 }

        r2FilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "filter list Name"
            ::= { r2FilterInfoEntry 4 }

        r2FilterAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    deny(1),
                    permit(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Filter action"
            ::= { r2FilterInfoEntry 5 }

        r2FilterSrcAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "source address of filter action (xx.xx.xx.xx/xx)"
            ::= { r2FilterInfoEntry 6 }

        r2FilterDestAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "destination address of filter action (xx.xx.xx.xx/xx)"
            ::= { r2FilterInfoEntry 7 }

        r2FilterProtocol  OBJECT-TYPE
            SYNTAX  INTEGER{
                    tcp(1),
                    udp(2),
                    icmp(3),
                    any(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "protocol of filter action"
            ::= { r2FilterInfoEntry 8 }

        r2FilterPortLow  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Low port of the port range for TCP/UDP"
            ::= { r2FilterInfoEntry 9 }

        r2FilterPortHigh  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "High port of the port range for TCP/UDP"
            ::= { r2FilterInfoEntry 10 }

--
-- R2 Mac Filter Info
--

        r2MacFilterInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2MacFilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Mac filter information Table"
            ::= { r2Policy 2 }

        r2MacFilterInfoEntry  OBJECT-TYPE
            SYNTAX  R2MacFilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Mac filter information Entry"
            INDEX { r2Index ,
        r2MacFilterIndex ,
        r2MacFilterRuleIndex }
            ::= { r2MacFilterInfo 1 }

            R2MacFilterInfoEntry ::= SEQUENCE {
            r2MacFilterIndex            INTEGER,
            r2MacFilterRuleIndex        INTEGER,
            r2MacFilterName             DisplayString,
            r2MacFilterMacAddress       DisplayString
        }

        r2MacFilterIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter List Index "
            ::= { r2MacFilterInfoEntry 2 }

        r2MacFilterRuleIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "MAc Filter rule index"
            ::= { r2MacFilterInfoEntry 3 }

        r2MacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter list Name"
            ::= { r2MacFilterInfoEntry 4 }

        r2MacFilterMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter Mac Address"
            ::= { r2MacFilterInfoEntry 5 }

--
--  R2 Filter Control
--

    r2FilterControl     OBJECT IDENTIFIER ::= { r2Policy 3 }

--
-- R2 Create & Destroy Filter list Table
--

        r2CreateDestroyFilter  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2CreateDestroyFilterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Filter List Table"
            ::= { r2FilterControl 1 }

        r2CreateDestroyFilterEntry  OBJECT-TYPE
            SYNTAX  R2CreateDestroyFilterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Filter List Entry"
            INDEX { r2Index }
            ::= { r2CreateDestroyFilter 1 }

            R2CreateDestroyFilterEntry ::= SEQUENCE {
            r2CreDesFilterName          DisplayString,
            r2CreDesFilterCMD           INTEGER
        }

        r2CreDesFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Filter List Name"
            ::= { r2CreateDestroyFilterEntry 2 }

        r2CreDesFilterCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    create-filter(1),
                    destroy-filter(2),
                    create-mac-filter(3),
                    destroy-mac-filter(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Filter List Command"
            ::= { r2CreateDestroyFilterEntry 3 }

--
-- R2 Add Filter Rule
--

        r2AddFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append filter rule Table"
            ::= { r2FilterControl 2 }

        r2AddFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R2AddFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append filter rule Entry"
            INDEX { r2Index }
            ::= { r2AddFilterRule 1 }

            R2AddFilterRuleEntry ::= SEQUENCE {
            r2AddFilterName             DisplayString,
            r2AddFilterAction           INTEGER,
            r2AddFilterSrcAddr          DisplayString,
            r2AddFilterDestAddr         DisplayString,
            r2AddFilterProtocol         INTEGER,
            r2AddFilterPortLow          INTEGER,
            r2AddFilterPortHigh         INTEGER,
            r2AddFilterRuleCMD          INTEGER
        }

        r2AddFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Filter List Name"
            ::= { r2AddFilterRuleEntry 2 }

        r2AddFilterAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    deny(1),
                    permit(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Filter action"
            ::= { r2AddFilterRuleEntry 3 }

        r2AddFilterSrcAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "source address of filter action (xx.xx.xx.xx/xx)"
            ::= { r2AddFilterRuleEntry 4 }

        r2AddFilterDestAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "destination address of filter action (xx.xx.xx.xx/xx)"
            ::= { r2AddFilterRuleEntry 5 }

        r2AddFilterProtocol  OBJECT-TYPE
            SYNTAX  INTEGER{
                    tcp(1),
                    udp(2),
                    icmp(3),
                    any(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "protocol of filter action"
            ::= { r2AddFilterRuleEntry 6 }

        r2AddFilterPortLow  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Low port of the port range for TCP/UDP"
            ::= { r2AddFilterRuleEntry 7 }

        r2AddFilterPortHigh  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "High port of the port range for TCP/UDP"
            ::= { r2AddFilterRuleEntry 8 }

        r2AddFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    append(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Append Filter rule"
            ::= { r2AddFilterRuleEntry 9 }

--
-- R2 Add Mac Filter Rule
--

        r2AddMacFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append Mac filter rule Table"
            ::= { r2FilterControl 3 }

        r2AddMacFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R2AddMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append Mac filter rule Entry"
            INDEX { r2Index }
            ::= { r2AddMacFilterRule 1 }

            R2AddMacFilterRuleEntry ::= SEQUENCE {
            r2AddMacFilterName          DisplayString,
            r2AddMacFilterMacAddr       DisplayString,
            r2AddMacFilterRuleCMD       INTEGER
        }

        r2AddMacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter List Name"
            ::= { r2AddMacFilterRuleEntry 2 }

        r2AddMacFilterMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter Mac address"
            ::= { r2AddMacFilterRuleEntry 3 }

        r2AddMacFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    append(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Append Mac Filter rule"
            ::= { r2AddMacFilterRuleEntry 4 }

--
-- R2 Delete Filter Rule
--

        r2DelFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DelFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete filter rule Table"
            ::= { r2FilterControl 4 }

        r2DelFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R2DelFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete filter rule Entry"
            INDEX { r2Index }
            ::= { r2DelFilterRule 1 }

            R2DelFilterRuleEntry ::= SEQUENCE {
            r2DelFilterName             DisplayString,
            r2DelStartIndex             INTEGER,
            r2DelEndIndex               INTEGER,
            r2DelFilterRuleCMD          INTEGER
        }

        r2DelFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "filter list Name"
            ::= { r2DelFilterRuleEntry 2 }

        r2DelStartIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "start index of list which will be deleted"
            ::= { r2DelFilterRuleEntry 3 }

        r2DelEndIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "end index of list which will be deleted"
            ::= { r2DelFilterRuleEntry 4 }

        r2DelFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "delete filter rule command"
            ::= { r2DelFilterRuleEntry 5 }

--
-- R2 Delete Mac Filter Rule
--

        r2DelMacFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DelMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete Mac filter rule Table"
            ::= { r2FilterControl 5 }

        r2DelMacFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R2DelMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete Mac filter rule Entry"
            INDEX { r2Index }
            ::= { r2DelMacFilterRule 1 }

            R2DelMacFilterRuleEntry ::= SEQUENCE {
            r2DelMacFilterName          DisplayString,
            r2DelMacFilterMacAddr       DisplayString,
            r2DelMacFilterRuleCMD       INTEGER
        }

        r2DelMacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mac filter list Name"
            ::= { r2DelMacFilterRuleEntry 2 }

        r2DelMacFilterMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mac address"
            ::= { r2DelMacFilterRuleEntry 3 }

        r2DelMacFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "delete mac filter rule command"
            ::= { r2DelMacFilterRuleEntry 4 }

--
--  R2 Route
--

    r2Route             OBJECT IDENTIFIER ::= { router-a-card 6 }

--
-- R2 Static Route Table
--

        r2StaticRouteTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2StaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Static Route Table"
            ::= { r2Route 1 }

        r2StaticRouteEntry  OBJECT-TYPE
            SYNTAX  R2StaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Static Route Entry"
            INDEX { r2Index ,
        r2RouteIndex }
            ::= { r2StaticRouteTable 1 }

            R2StaticRouteEntry ::= SEQUENCE {
            r2RouteIndex                INTEGER,
            r2StaticRouteNetAddr        DisplayString,
            r2StaticRouteNetMask        DisplayString,
            r2StaticRouteGatewayAddr    DisplayString,
            r2StaticRouteInterface      DisplayString
        }

        r2RouteIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "routing table entry index"
            ::= { r2StaticRouteEntry 2 }

        r2StaticRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address"
            ::= { r2StaticRouteEntry 3 }

        r2StaticRouteNetMask  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route net mask"
            ::= { r2StaticRouteEntry 4 }

        r2StaticRouteGatewayAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route gateway Address"
            ::= { r2StaticRouteEntry 5 }

        r2StaticRouteInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route output interface"
            ::= { r2StaticRouteEntry 6 }

--
-- R2 Add Static Route
--

        r2AddStaticRoute  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add static route Table"
            ::= { r2Route 2 }

        r2AddStaticRouteEntry  OBJECT-TYPE
            SYNTAX  R2AddStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add static route Entry"
            INDEX { r2Index }
            ::= { r2AddStaticRoute 1 }

            R2AddStaticRouteEntry ::= SEQUENCE {
            r2AddRouteNetAddr           DisplayString,
            r2AddRouteGatewayAddr       DisplayString,
            r2AddRouteInterface         DisplayString,
            r2AddSataicRouteCMD         INTEGER
        }

        r2AddRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2AddStaticRouteEntry 2 }

        r2AddRouteGatewayAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route gateway Address(xxx.xxx.xxx.xxx)"
            ::= { r2AddStaticRouteEntry 3 }

        r2AddRouteInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route output interface(lan1~2/wan1~wan64/wanX pvc1-16/brg_group)"
            ::= { r2AddStaticRouteEntry 4 }

        r2AddSataicRouteCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " add static route "
            ::= { r2AddStaticRouteEntry 5 }

--
-- R2 Delete Static Route
--

        r2DelStaticRoute  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DelStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete static route Table"
            ::= { r2Route 3 }

        r2DelStaticRouteEntry  OBJECT-TYPE
            SYNTAX  R2DelStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete static route Entry"
            INDEX { r2Index }
            ::= { r2DelStaticRoute 1 }

            R2DelStaticRouteEntry ::= SEQUENCE {
            r2DelRouteNetAddr           DisplayString,
            r2DelSataicRouteCMD         INTEGER
        }

        r2DelRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2DelStaticRouteEntry 2 }

        r2DelSataicRouteCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete static route"
            ::= { r2DelStaticRouteEntry 3 }

--
--  R2 OSPF
--

    r2OSPF              OBJECT IDENTIFIER ::= { r2Route 4 }

--
-- R2 OSPF General Table
--

        r2OspfGereralTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2OspfGereralEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Route OSPF General Config Table"
            ::= { r2OSPF 1 }

        r2OspfGereralEntry  OBJECT-TYPE
            SYNTAX  R2OspfGereralEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Route OSPF General Config Entry"
            INDEX { r2Index }
            ::= { r2OspfGereralTable 1 }

            R2OspfGereralEntry ::= SEQUENCE {
            r2OspfRedistribute          DisplayString (SIZE (1..50)),
            r2OspfRouterID              DisplayString (SIZE (1..20))
        }

        r2OspfRedistribute  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..50))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Redistributes (kernel | static | connected | rip | default | none)"
            ::= { r2OspfGereralEntry 2 }

        r2OspfRouterID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address(xxx.xxx.xxx.xxx) that identifies this OSPF router"
            ::= { r2OspfGereralEntry 3 }

--
--  R2 OSPF Area
--

    r2OspfArea          OBJECT IDENTIFIER ::= { r2OSPF 2 }

--
-- R2 OSPF Area Config
--

        r2OspfAreaCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2OspfAreaCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config"
            ::= { r2OspfArea 1 }

        r2OspfAreaCFGEntry  OBJECT-TYPE
            SYNTAX  R2OspfAreaCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Entry"
            INDEX { r2Index ,
        r2OspfAreaCfgIndex }
            ::= { r2OspfAreaCFG 1 }

            R2OspfAreaCFGEntry ::= SEQUENCE {
            r2OspfAreaCfgIndex          INTEGER,
            r2OspfAreaCfgAreaID         INTEGER,
            r2OspfAreaCfgAuthenticationType INTEGER,
            r2OspfAreaCfgAreaType           INTEGER,
            r2OspfAreaCfgCost               INTEGER (0..16777215)
        }

        r2OspfAreaCfgIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Index"
            ::= { r2OspfAreaCFGEntry 2 }

        r2OspfAreaCfgAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Area ID"
            ::= { r2OspfAreaCFGEntry 3 }

        r2OspfAreaCfgAuthenticationType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    password(2),
                    md5(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Authentication for an OSPF area"
            ::= { r2OspfAreaCFGEntry 4 }

        r2OspfAreaCfgAreaType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    stub(2),
                    stub-no-summary(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Designates an area as a stub area"
            ::= { r2OspfAreaCFGEntry 5 }

        r2OspfAreaCfgCost  OBJECT-TYPE
            SYNTAX  INTEGER (0..16777215)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Assign a specific cost to the default summary route used"
            ::= { r2OspfAreaCFGEntry 6 }

--
-- R2 OSPF Add & Delete Area
--

        r2OspfAddDelArea  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2OspfAddDelAreaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area"
            ::= { r2OspfArea 2 }

        r2OspfAddDelAreaEntry  OBJECT-TYPE
            SYNTAX  R2OspfAddDelAreaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area Entry"
            INDEX { r2Index }
            ::= { r2OspfAddDelArea 1 }

            R2OspfAddDelAreaEntry ::= SEQUENCE {
            r2OspfAddDelAreaID          INTEGER,
            r2OspfAddDelAreaCommand     INTEGER
        }

        r2OspfAddDelAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area ID"
            ::= { r2OspfAddDelAreaEntry 2 }

        r2OspfAddDelAreaCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area ID Command"
            ::= { r2OspfAddDelAreaEntry 3 }


--
--  R2 OSPF Interface Table
--

    r2OspfInterface     OBJECT IDENTIFIER ::= { r2OSPF 3 }

--
-- R2 OSPF Interface Config Table
--

        r2OspfIntfCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2OspfIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Config"
            ::= { r2OspfInterface 1 }

        r2OspfIntfCFGEntry  OBJECT-TYPE
            SYNTAX  R2OspfIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Config Entry"
            INDEX { r2Index ,
        r2OspfIntfIndex }
            ::= { r2OspfIntfCFG 1 }

            R2OspfIntfCFGEntry ::= SEQUENCE {
            r2OspfIntfIndex             INTEGER,
            r2OspfIntfName              DisplayString (SIZE (0..20)),
            r2OspfIntfAdminStatus       INTEGER,
            r2OspfIntfAreaID            INTEGER,
            r2OspfIntfNetworkType       INTEGER,
            r2OspfIntfLinkCost          INTEGER (1..65535),
            r2OspfIntfTransmitDelay     INTEGER (1..65535),
            r2OspfIntfRouterPriority    INTEGER (0..255),
            r2OspfIntfHelloInterval     INTEGER (1..65535),
            r2OspfIntfRouterDeadInterval    INTEGER (1..65535),
            r2OspfIntfRetransmitInterval    INTEGER (1..65535),
            r2OspfIntfAuthMD5KeyID-Key      DisplayString (SIZE (0..20)),
            r2OspfIntfAuthPasswordTextKey   DisplayString (SIZE (0..8))
        }

        r2OspfIntfIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Index"
            ::= { r2OspfIntfCFGEntry 2 }

        r2OspfIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(Lan1~2/Wan1~64/Wanxx Pvc1~16)"
            ::= { r2OspfIntfCFGEntry 3 }

        r2OspfIntfAdminStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dsiable(1),
                    enable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The OSPF interface's administrative status"
            ::= { r2OspfIntfCFGEntry 4 }

        r2OspfIntfAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "A 32-bit integer uniquely identifying the area to which the interface connects."
            ::= { r2OspfIntfCFGEntry 5 }

        r2OspfIntfNetworkType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    broadcast(1),
                    point-to-point(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The OSPF interface type."
            ::= { r2OspfIntfCFGEntry 6 }

        r2OspfIntfLinkCost  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Explicitly specify the link cost of sending a packet"
            ::= { r2OspfIntfCFGEntry 7 }

        r2OspfIntfTransmitDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for InfTransDelay value."
            ::= { r2OspfIntfCFGEntry 8 }

        r2OspfIntfRouterPriority  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RouterPriority integer value."
            ::= { r2OspfIntfCFGEntry 9 }

        r2OspfIntfHelloInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds between hello packets sent."
            ::= { r2OspfIntfCFGEntry 10 }

        r2OspfIntfRouterDeadInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for RouterDeadInterval timer."
            ::= { r2OspfIntfCFGEntry 11 }

        r2OspfIntfRetransmitInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for RxmtInterval timer value."
            ::= { r2OspfIntfCFGEntry 12 }

        r2OspfIntfAuthMD5KeyID-Key  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface MD5 Authentication KeyID/Key(KeyID:1~255, Key:up to 16 chars)"
            ::= { r2OspfIntfCFGEntry 13 }

        r2OspfIntfAuthPasswordTextKey  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Password Authentication Key"
            ::= { r2OspfIntfCFGEntry 14 }

--
-- R2 OSPF Interface Admin Setup Table
--

        r2OspfIntfAdminSetup  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2OspfIntfAdminSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Admin Setup Table"
            ::= { r2OspfInterface 2 }

        r2OspfIntfAdminSetupEntry  OBJECT-TYPE
            SYNTAX  R2OspfIntfAdminSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Admin Setup Entry"
            INDEX { r2Index }
            ::= { r2OspfIntfAdminSetup 1 }

            R2OspfIntfAdminSetupEntry ::= SEQUENCE {
            r2OspfIntfAdminSetupIntfName    DisplayString (SIZE (0..20)),
            r2OspfIntfAdminSetupAreaID      INTEGER,
            r2OspfIntfAdminSetupCMD         INTEGER
        }

        r2OspfIntfAdminSetupIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1~2/wan1~64/wanXX pvcXX)"
            ::= { r2OspfIntfAdminSetupEntry 2 }

        r2OspfIntfAdminSetupAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface OSPF Area ID"
            ::= { r2OspfIntfAdminSetupEntry 3 }

        r2OspfIntfAdminSetupCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    disable-intf-ospf(1),
                    enable-intf-ospf(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface OSPF Admin Setup Command(Disable/Enable)"
            ::= { r2OspfIntfAdminSetupEntry 4 }

--
--  R2 NAT
--

    r2NAT               OBJECT IDENTIFIER ::= { router-a-card 7 }

--
-- R2 NAT Interface Mode
--

        r2NatIFMode  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NatIFModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT interface mode status Table"
            ::= { r2NAT 1 }

        r2NatIFModeEntry  OBJECT-TYPE
            SYNTAX  R2NatIFModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT interface mode status Entry"
            INDEX { r2Index ,
        r2NatIFIndex }
            ::= { r2NatIFMode 1 }

            R2NatIFModeEntry ::= SEQUENCE {
            r2NatIFIndex                INTEGER,
            r2NatIFName                 DisplayString,
            r2NatMode                   INTEGER
        }

        r2NatIFIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT index"
            ::= { r2NatIFModeEntry 2 }

        r2NatIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r2NatIFModeEntry 3 }

        r2NatMode  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT mode of interface"
            ::= { r2NatIFModeEntry 4 }

--
-- R2 NAT IP Pool
--

        r2NatIPPool  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NatIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP Pool Table"
            ::= { r2NAT 2 }

        r2NatIPPoolEntry  OBJECT-TYPE
            SYNTAX  R2NatIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP Pool Entry"
            INDEX { r2Index ,
        r2NatIFIndex ,
        r2NatPoolIndex }
            ::= { r2NatIPPool 1 }

            R2NatIPPoolEntry ::= SEQUENCE {
            r2NatPoolIndex              INTEGER,
            r2NatPoolIFName             DisplayString,
            r2NatStartAddress           DisplayString,
            r2NatEndAddress             DisplayString
        }

        r2NatPoolIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "IP Pool index"
            ::= { r2NatIPPoolEntry 3 }

        r2NatPoolIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanX pvc1-16)"
            ::= { r2NatIPPoolEntry 4 }

        r2NatStartAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT start address"
            ::= { r2NatIPPoolEntry 5 }

        r2NatEndAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT end address"
            ::= { r2NatIPPoolEntry 6 }

--
-- R2 NAT Add or Delete IP Pool
--

        r2NatAddDelIPPool  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NatAddDelIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete NAT IP Pool Table"
            ::= { r2NAT 3 }

        r2NatAddDelIPPoolEntry  OBJECT-TYPE
            SYNTAX  R2NatAddDelIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete NAT IP Pool Entry"
            INDEX { r2Index }
            ::= { r2NatAddDelIPPool 1 }

            R2NatAddDelIPPoolEntry ::= SEQUENCE {
            r2NatAddDelPoolIFName       DisplayString,
            r2NatAddDelPoolIndex        INTEGER,
            r2NatAddDelStartAddr        DisplayString,
            r2NatAddDelEndAddr          DisplayString,
            r2NatAddDelIPPoolCMD        INTEGER
        }

        r2NatAddDelPoolIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanx pvc1-16)"
            ::= { r2NatAddDelIPPoolEntry 2 }

        r2NatAddDelPoolIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete IP Pool index"
            ::= { r2NatAddDelIPPoolEntry 3 }

        r2NatAddDelStartAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT start address(xxx.xxx.xxx.xxx)"
            ::= { r2NatAddDelIPPoolEntry 4 }

        r2NatAddDelEndAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT end address(xxx.xxx.xxx.xxx)"
            ::= { r2NatAddDelIPPoolEntry 5 }

        r2NatAddDelIPPoolCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete IP Pool command"
            ::= { r2NatAddDelIPPoolEntry 6 }

--
-- R2 NAT IP Static
--

        r2NatIPStatic  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NatIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static status Table"
            ::= { r2NAT 4 }

        r2NatIPStaticEntry  OBJECT-TYPE
            SYNTAX  R2NatIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static status Entry"
            INDEX { r2Index ,
        r2NatIFIndex ,
        r2NatIPStaticIndex }
            ::= { r2NatIPStatic 1 }

            R2NatIPStaticEntry ::= SEQUENCE {
            r2NatIPStaticIndex          INTEGER,
            r2NatIPStaticIFName         DisplayString,
            r2NatIPStaticPublicAddr     DisplayString,
            r2NatIPStaticPrivateAddr    DisplayString
        }

        r2NatIPStaticIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static index"
            ::= { r2NatIPStaticEntry 2 }

        r2NatIPStaticIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface name(wan1-64/wanx pvc1-16)"
            ::= { r2NatIPStaticEntry 3 }

        r2NatIPStaticPublicAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static public Address"
            ::= { r2NatIPStaticEntry 4 }

        r2NatIPStaticPrivateAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static private Address"
            ::= { r2NatIPStaticEntry 5 }

--
-- R2 NAT Add or Delete IP Static
--

        r2NatAddDelIPStatic  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NatAddDelIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static Table"
            ::= { r2NAT 5 }

        r2NatAddDelIPStaticEntry  OBJECT-TYPE
            SYNTAX  R2NatAddDelIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static Entry"
            INDEX { r2Index }
            ::= { r2NatAddDelIPStatic 1 }

            R2NatAddDelIPStaticEntry ::= SEQUENCE {
            r2NatAddDelIPStaticIFName   DisplayString,
            r2NatAddDelPublicAddr       DisplayString,
            r2NatAddDelPrivateAddr      DisplayString,
            r2NatAddDelIPStaticCMD      INTEGER
        }

        r2NatAddDelIPStaticIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanx pvc1-16)"
            ::= { r2NatAddDelIPStaticEntry 2 }

        r2NatAddDelPublicAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static public Address(xxx.xxx.xxx.xxx)"
            ::= { r2NatAddDelIPStaticEntry 3 }

        r2NatAddDelPrivateAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static private Address(xxx.xxx.xxx.xxx)"
            ::= { r2NatAddDelIPStaticEntry 4 }

        r2NatAddDelIPStaticCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static command"
            ::= { r2NatAddDelIPStaticEntry 5 }

--
-- R2 NAPT Port Forwarding
--

        r2NaptPortForwarding  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NaptPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding Table"
            ::= { r2NAT 6 }

        r2NaptPortForwardingEntry  OBJECT-TYPE
            SYNTAX  R2NaptPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding Entry"
            INDEX { r2Index ,
        r2NaptIFIndex ,
        r2NaptPortFwdIndex }
            ::= { r2NaptPortForwarding 1 }

            R2NaptPortForwardingEntry ::= SEQUENCE {
            r2NaptIFIndex               INTEGER,
            r2NaptPortFwdIndex          INTEGER,
            r2NaptIFName                DisplayString,
            r2NaptPortFwdName           DisplayString,
            r2NaptPortFwdStartPort      INTEGER,
            r2NaptPortFwdEndPort        INTEGER,
            r2NaptPortFwdServerIP       DisplayString
        }

        r2NaptIFIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface index"
            ::= { r2NaptPortForwardingEntry 2 }

        r2NaptPortFwdIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding entry index"
            ::= { r2NaptPortForwardingEntry 3 }

        r2NaptIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r2NaptPortForwardingEntry 4 }

        r2NaptPortFwdName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The NAPT entry name"
            ::= { r2NaptPortForwardingEntry 5 }

        r2NaptPortFwdStartPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Start Port number"
            ::= { r2NaptPortForwardingEntry 6 }

        r2NaptPortFwdEndPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "End Port number"
            ::= { r2NaptPortForwardingEntry 7 }

        r2NaptPortFwdServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The IP address of the service(xxx.xxx.xxx.xxx)"
            ::= { r2NaptPortForwardingEntry 8 }

--
-- R2 NAPT Add or Delete Port Forwarding
--

        r2NaptAddDelPortForwarding  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2NaptAddDelPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Add or Delete Port Forwarding Table"
            ::= { r2NAT 7 }

        r2NaptAddDelPortForwardingEntry  OBJECT-TYPE
            SYNTAX  R2NaptAddDelPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Add or Delete Port Forwarding Entry"
            INDEX { r2Index }
            ::= { r2NaptAddDelPortForwarding 1 }

            R2NaptAddDelPortForwardingEntry ::= SEQUENCE {
            r2NaptAddDelIFName          DisplayString,
            r2NaptAddDelName            DisplayString,
            r2NaptAddDelStartPort       INTEGER,
            r2NaptAddDelEndPort         INTEGER,
            r2NaptAddDelServerIP        DisplayString,
            r2NaptAddDelPortFwdCMD      INTEGER
        }

        r2NaptAddDelIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r2NaptAddDelPortForwardingEntry 2 }

        r2NaptAddDelName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The NAPT entry name"
            ::= { r2NaptAddDelPortForwardingEntry 3 }

        r2NaptAddDelStartPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Start Port number"
            ::= { r2NaptAddDelPortForwardingEntry 4 }

        r2NaptAddDelEndPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "End Port number"
            ::= { r2NaptAddDelPortForwardingEntry 5 }

        r2NaptAddDelServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The IP address of the service(xxx.xxx.xxx.xxx)"
            ::= { r2NaptAddDelPortForwardingEntry 6 }

        r2NaptAddDelPortFwdCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAPT add or delete port forwarding command"
            ::= { r2NaptAddDelPortForwardingEntry 7 }

--
--  R2 VLAN
--

    r2VLAN              OBJECT IDENTIFIER ::= { router-a-card 8 }

--
-- R2 VLAN State
--

        r2VlanState  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Table"
            ::= { r2VLAN 1 }

        r2VlanStateEntry  OBJECT-TYPE
            SYNTAX  R2VlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Entry"
            INDEX { r2Index ,
        r2BrgGroupID }
            ::= { r2VlanState 1 }

            R2VlanStateEntry ::= SEQUENCE {
            r2VlanBrgName               DisplayString,
            r2VlanEnable                INTEGER,
            r2VlanMgmtVID               INTEGER,
            r2VlanRegenCRC              INTEGER
        }

        r2VlanBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2VlanStateEntry 3 }

        r2VlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan state enable/disable"
            ::= { r2VlanStateEntry 4 }

        r2VlanMgmtVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VLAN ID for the bridge management interface"
            ::= { r2VlanStateEntry 5 }

        r2VlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable CRC regenerating on WAN interfaces for VLAN frames"
            ::= { r2VlanStateEntry 6 }

--
-- R2 VLAN Table
--


        r2VlanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan Table"
            ::= { r2VLAN 2 }

        r2VlanTableEntry  OBJECT-TYPE
            SYNTAX  R2VlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan Table Tag Member Entry"
            INDEX { r2Index ,
        r2BrgGroupID ,
        r2VlanID ,
        r2VlanTableIndex }
            ::= { r2VlanTable 1 }

            R2VlanTableEntry ::= SEQUENCE {
            r2VlanID                    INTEGER,
            r2VlanTableIndex            INTEGER,
            r2VlanTagMember             DisplayString,
            r2VlanUnTagMember           DisplayString
        }

        r2VlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan Index"
            ::= { r2VlanTableEntry 3 }

        r2VlanTableIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan Tag Index"
            ::= { r2VlanTableEntry 4 }

        r2VlanTagMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r2VlanTableEntry 5 }

        r2VlanUnTagMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r2VlanTableEntry 6 }

--
--  R2 VLAN Table Control
--

    r2VlanTableControl  OBJECT IDENTIFIER ::= { r2VLAN 3 }

--
-- R2 VLAN Create and Destroy VLAN
--

        r2VlanCreateDestroyVlan  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan Table"
            ::= { r2VlanTableControl 1 }

        r2VlanCreateDestroyVlanEntry  OBJECT-TYPE
            SYNTAX  R2VlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan Entry"
            INDEX { r2Index }
            ::= { r2VlanCreateDestroyVlan 1 }

            R2VlanCreateDestroyVlanEntry ::= SEQUENCE {
            r2VlanCreateDestroyBrgName  DisplayString,
            r2VlanCreateDestroyVidNum   INTEGER,
            r2ValnCreateDestroyCMD      INTEGER
        }

        r2VlanCreateDestroyBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2VlanCreateDestroyVlanEntry 2 }

        r2VlanCreateDestroyVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan VID"
            ::= { r2VlanCreateDestroyVlanEntry 3 }

        r2ValnCreateDestroyCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    create-vlan(1),
                    destroy-vlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan command"
            ::= { r2VlanCreateDestroyVlanEntry 4 }

--
-- R2 VLAN Add and Delete Port
--

        r2VlanAddDelPort  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and del port Table"
            ::= { r2VlanTableControl 2 }

        r2VlanAddDelPortEntry  OBJECT-TYPE
            SYNTAX  R2VlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and del port Entry"
            INDEX { r2Index }
            ::= { r2VlanAddDelPort 1 }

            R2VlanAddDelPortEntry ::= SEQUENCE {
            r2VlanAddDelPortBrgName     DisplayString,
            r2VlanAddDelPortVidNum      INTEGER,
            r2VlanAddDelPortTag         INTEGER,
            r2VlanAddDelPortInterface   DisplayString,
            r2VlanAddDelPortCMD         INTEGER
        }

        r2VlanAddDelPortBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2VlanAddDelPortEntry 2 }

        r2VlanAddDelPortVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan VID"
            ::= { r2VlanAddDelPortEntry 3 }

        r2VlanAddDelPortTag  OBJECT-TYPE
            SYNTAX  INTEGER{
                    untag(1),
                    tag(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r2VlanAddDelPortEntry 4 }

        r2VlanAddDelPortInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name (lan1~2/wan1~wan64/wanX pvc1-16)"
            ::= { r2VlanAddDelPortEntry 5 }

        r2VlanAddDelPortCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add-port-to-vlan(1),
                    delete-port-from-vlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and delete port command"
            ::= { r2VlanAddDelPortEntry 6 }

--
-- R2 VLAN Port Table
--

        r2VlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2VlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Table"
            ::= { r2VLAN 4 }

        r2VlanPortTableEntry  OBJECT-TYPE
            SYNTAX  R2VlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Entry"
            INDEX { r2Index ,
        r2VlanPortIndex }
            ::= { r2VlanPortTable 1 }

            R2VlanPortTableEntry ::= SEQUENCE {
            r2VlanPortIndex             INTEGER,
            r2VlanPortIFName            DisplayString,
            r2VlanPortPVID              INTEGER,
            r2VlanPortFrameType         INTEGER,
            r2VlanPortIngressFilter     INTEGER
        }

        r2VlanPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan port index"
            ::= { r2VlanPortTableEntry 2 }

        r2VlanPortIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port type(lan1~2/wan1~wan64/wanX pvc1-16)"
            ::= { r2VlanPortTableEntry 3 }


        r2VlanPortPVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface PVID"
            ::= { r2VlanPortTableEntry 4 }

        r2VlanPortFrameType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    all(1),
                    tag-only(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set the acceptable frame type"
            ::= { r2VlanPortTableEntry 5 }

        r2VlanPortIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable ingress filtering"
            ::= { r2VlanPortTableEntry 6 }

--
--  R2 DHCP
--

    r2DHCP              OBJECT IDENTIFIER ::= { router-a-card 9 }

--
--  R2 DHCP Server
--

    r2DHCPServer        OBJECT IDENTIFIER ::= { r2DHCP 1 }

--
-- R2 DHCP Server Config
--

        r2DhcpServerCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpServerCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Server Config Table"
            ::= { r2DHCPServer 1 }

        r2DhcpServerCFGEntry  OBJECT-TYPE
            SYNTAX  R2DhcpServerCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Server Config Entry"
            INDEX { r2Index }
            ::= { r2DhcpServerCFG 1 }

            R2DhcpServerCFGEntry ::= SEQUENCE {
            r2DhcpServer                INTEGER,
            r2DhcpServerInterface       DisplayString,
            r2DhcpServerBridgeMgmt      DisplayString
        }

        r2DhcpServer  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0),
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP function disable/enable"
            ::= { r2DhcpServerCFGEntry 2 }

        r2DhcpServerInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP interface config"
            ::= { r2DhcpServerCFGEntry 3 }

        r2DhcpServerBridgeMgmt  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP bridge mgmt"
            ::= { r2DhcpServerCFGEntry 4 }

--
-- R2 Add or Delete DHCP Server Interface
--

        r2DhcpServerAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpServerAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP interface Table"
            ::= { r2DHCPServer 2 }

        r2DhcpServerAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R2DhcpServerAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP interface Entry"
            INDEX { r2Index }
            ::= { r2DhcpServerAddDelInterface 1 }

            R2DhcpServerAddDelInterfaceEntry ::= SEQUENCE {
            r2DhcpServerAddDelIntfName  DisplayString,
            r2DhcpServerAddDelIntfCMD   INTEGER
        }

        r2DhcpServerAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1/lan2/bridge group name)"
            ::= { r2DhcpServerAddDelInterfaceEntry 2 }

        r2DhcpServerAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface command"
            ::= { r2DhcpServerAddDelInterfaceEntry 3 }

--
--  R2 DHCP Server Host Table
--

    r2DHCPHost          OBJECT IDENTIFIER ::= { r2DHCPServer 3 }

--
-- R2 DHCP Server Host Config Table
--

        r2DhcpHostCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpHostCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host config Table"
            ::= { r2DHCPHost 1 }

        r2DhcpHostCFGEntry OBJECT-TYPE
            SYNTAX  R2DhcpHostCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host config Entry"
            INDEX { r2Index ,
        r2DhcpHostIndex }
            ::= { r2DhcpHostCFG 1 }

            R2DhcpHostCFGEntry ::= SEQUENCE {
            r2DhcpHostIndex             INTEGER,
            r2DhcpHostName              DisplayString,
            r2DhcpHostHWType            INTEGER,
            r2DhcpHostHWAddr            DisplayString,
            r2DhcpHostFixedAddr         DisplayString,
            r2DhcpHostBootStrapFile     DisplayString,
            r2DhcpHostNextServer        DisplayString,
            r2DhcpHostClientIdentifier  DisplayString,
            r2DhcpHostDefLeaseTime      INTEGER
        }

        r2DhcpHostIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration index"
            ::= { r2DhcpHostCFGEntry 2 }

        r2DhcpHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration name"
            ::= { r2DhcpHostCFGEntry 3 }

        r2DhcpHostHWType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    null(0),
                    ethernet(1),
                    token-ring(2),
                    fddi(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host hardware type"
            ::= { r2DhcpHostCFGEntry 4 }

        r2DhcpHostHWAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..32))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host hardware address"
            ::= { r2DhcpHostCFGEntry 5 }

        r2DhcpHostFixedAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host address"
            ::= { r2DhcpHostCFGEntry 6 }

        r2DhcpHostBootStrapFile  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..128))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host bootstrap file"
            ::= { r2DhcpHostCFGEntry 7 }

        r2DhcpHostNextServer  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP next server in boot process"
            ::= { r2DhcpHostCFGEntry 8 }

        r2DhcpHostClientIdentifier  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..9))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host client identifier"
            ::= { r2DhcpHostCFGEntry 9 }

        r2DhcpHostDefLeaseTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host default duration of the lease"
            ::= { r2DhcpHostCFGEntry 10 }

--
-- R2 Add or Delete DHCP Server Host
--

        r2AddDelDhcpHost  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelDhcpHostEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host control Table"
            ::= { r2DHCPHost 2 }

        r2AddDelDhcpHostEntry  OBJECT-TYPE
            SYNTAX  R2AddDelDhcpHostEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host control Entry"
            INDEX { r2Index }
            ::= { r2AddDelDhcpHost 1 }

            R2AddDelDhcpHostEntry ::= SEQUENCE {
            r2AddDelDhcpHostName        DisplayString,
            r2DhcpHostCMD               INTEGER
        }

        r2AddDelDhcpHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration name"
            ::= { r2AddDelDhcpHostEntry 2 }

        r2DhcpHostCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP host configuration"
            ::= { r2AddDelDhcpHostEntry 3 }

--
-- R2 DHCP Host Option
--

        r2DhcpHostOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option Table"
            ::= { r2DHCPHost 3 }

        r2DhcpHostOptionEntry  OBJECT-TYPE
            SYNTAX  R2DhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option Entry"
            INDEX { r2Index ,
        r2DhcpHostIndex ,
        r2DhcpHostOptionIndex }
            ::= { r2DhcpHostOption 1 }

            R2DhcpHostOptionEntry ::= SEQUENCE {
            r2DhcpHostOptionIndex       INTEGER,
            r2DhcpHostOptionHostName    DisplayString,
            r2DhcpHostOptionCode        INTEGER,
            r2DhcpHostOptionValue       DisplayString
        }

        r2DhcpHostOptionIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host Option index"
            ::= { r2DhcpHostOptionEntry 3 }

        r2DhcpHostOptionHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host name"
            ::= { r2DhcpHostOptionEntry 4 }

        r2DhcpHostOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option code"
            ::= { r2DhcpHostOptionEntry 5 }

        r2DhcpHostOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option value"
            ::= { r2DhcpHostOptionEntry 6 }

--
-- R2 Add or Delete DHCP Host Option
--

        r2AddDelDhcpHostOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelDhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option control Table"
            ::= { r2DHCPHost 4 }

        r2AddDelDhcpHostOptionEntry  OBJECT-TYPE
            SYNTAX  R2AddDelDhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option control Entry"
            INDEX { r2Index }
            ::= { r2AddDelDhcpHostOption 1 }

            R2AddDelDhcpHostOptionEntry ::= SEQUENCE {
            r2AddDelHostOptionHostName  DisplayString,
            r2AddDelHostOptionCode      INTEGER,
            r2AddDelHostOptionValue     DisplayString,
            r2AddDelHostOptionCMD       INTEGER
        }

        r2AddDelHostOptionHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host name"
            ::= { r2AddDelDhcpHostOptionEntry 2 }

        r2AddDelHostOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option code"
            ::= { r2AddDelDhcpHostOptionEntry 3 }

        r2AddDelHostOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option value"
            ::= { r2AddDelDhcpHostOptionEntry 4 }

        r2AddDelHostOptionCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete DHCP host option command"
            ::= { r2AddDelDhcpHostOptionEntry 5 }

--
--  R2 DHCP Server Subnet Table
--

    r2DHCPSubnet        OBJECT IDENTIFIER ::= { r2DHCPServer 4 }

--
-- R2 DHCP Server Subnet Config-1 Table
--

        r2DhcpSubnetCFG1  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpSubnetCFG1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Table"
            ::= { r2DHCPSubnet 1 }

        r2DhcpSubnetCFG1Entry  OBJECT-TYPE
            SYNTAX  R2DhcpSubnetCFG1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Entry"
            INDEX { r2Index ,
        r2DhcpSubnetIndex }
            ::= { r2DhcpSubnetCFG1 1 }

            R2DhcpSubnetCFG1Entry ::= SEQUENCE {
            r2DhcpSubnetIndex           INTEGER,
            r2DhcpCfg1SubnetName        DisplayString,
            r2DhcpSubnetNetworkAddr     DisplayString,
            r2DhcpSubnetStartAddr       DisplayString,
            r2DhcpSubnetEndAddr         DisplayString,
            r2DhcpSubnetBootp           INTEGER,
            r2DhcpSubnetDefLeaseTime    INTEGER,
            r2DhcpSubnetBootStrapFile   DisplayString,
            r2DhcpSubnetNextServer      DisplayString
        }

        r2DhcpSubnetIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet index"
            ::= { r2DhcpSubnetCFG1Entry 2 }

        r2DhcpCfg1SubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2DhcpSubnetCFG1Entry 3 }

        r2DhcpSubnetNetworkAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet address/netmask(xxx.xxx.xxx.xxx/xx)"
            ::= { r2DhcpSubnetCFG1Entry 4 }

        r2DhcpSubnetStartAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet ip range(start)"
            ::= { r2DhcpSubnetCFG1Entry 5 }

        r2DhcpSubnetEndAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet ip range(end)"
            ::= { r2DhcpSubnetCFG1Entry 6 }

        r2DhcpSubnetBootp  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet bootp support"
            ::= { r2DhcpSubnetCFG1Entry 7 }

        r2DhcpSubnetDefLeaseTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default duration of the lease"
            ::= { r2DhcpSubnetCFG1Entry 8 }

        r2DhcpSubnetBootStrapFile  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..128))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet bootstrap file"
            ::= { r2DhcpSubnetCFG1Entry 9 }

        r2DhcpSubnetNextServer  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet next server in boot process"
            ::= { r2DhcpSubnetCFG1Entry 10 }

--
-- R2 DHCP Server Subnet Config-2 Table
--

        r2DhcpSubnetCFG2  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpSubnetCFG2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Table"
            ::= { r2DHCPSubnet 2 }

        r2DhcpSubnetCFG2Entry  OBJECT-TYPE
            SYNTAX  R2DhcpSubnetCFG2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Entry"
            INDEX { r2Index ,
        r2DhcpSubnetIndex }
            ::= { r2DhcpSubnetCFG2 1 }

            R2DhcpSubnetCFG2Entry ::= SEQUENCE {
            r2DhcpCfg2SubnetName        DisplayString,
            r2DhcpSubnetDomainName      DisplayString,
            r2DhcpSubnetDNSServer1      DisplayString,
            r2DhcpSubnetDNSServer2      DisplayString,
            r2DhcpSubnetDNSServer3      DisplayString,
            r2DhcpSubnetDNSServer4      DisplayString,
            r2DhcpSubnetDefRouter1      DisplayString,
            r2DhcpSubnetDefRouter2      DisplayString,
            r2DhcpSubnetDefRouter3      DisplayString,
            r2DhcpSubnetDefRouter4      DisplayString,
            r2DhcpSubnetNetbiosServer1  DisplayString,
            r2DhcpSubnetNetbiosServer2  DisplayString,
            r2DhcpSubnetNetbiosServer3  DisplayString,
            r2DhcpSubnetNetbiosServer4  DisplayString,
            r2DhcpSubnetNetbiosNode     INTEGER
        }

        r2DhcpCfg2SubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2DhcpSubnetCFG2Entry 3 }

        r2DhcpSubnetDomainName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name"
            ::= { r2DhcpSubnetCFG2Entry 4 }

        r2DhcpSubnetDNSServer1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 1"
            ::= { r2DhcpSubnetCFG2Entry 5 }

        r2DhcpSubnetDNSServer2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 2"
            ::= { r2DhcpSubnetCFG2Entry 6 }

        r2DhcpSubnetDNSServer3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 3"
            ::= { r2DhcpSubnetCFG2Entry 7 }

        r2DhcpSubnetDNSServer4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 4"
            ::= { r2DhcpSubnetCFG2Entry 8 }

        r2DhcpSubnetDefRouter1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 1"
            ::= { r2DhcpSubnetCFG2Entry 9 }

        r2DhcpSubnetDefRouter2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 2"
            ::= { r2DhcpSubnetCFG2Entry 10 }

        r2DhcpSubnetDefRouter3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 3"
            ::= { r2DhcpSubnetCFG2Entry 11 }

        r2DhcpSubnetDefRouter4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 4"
            ::= { r2DhcpSubnetCFG2Entry 12 }

        r2DhcpSubnetNetbiosServer1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 1"
            ::= { r2DhcpSubnetCFG2Entry 13 }

        r2DhcpSubnetNetbiosServer2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 2"
            ::= { r2DhcpSubnetCFG2Entry 14 }

        r2DhcpSubnetNetbiosServer3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 3"
            ::= { r2DhcpSubnetCFG2Entry 15 }

        r2DhcpSubnetNetbiosServer4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 4"
            ::= { r2DhcpSubnetCFG2Entry 16 }

        r2DhcpSubnetNetbiosNode  OBJECT-TYPE
            SYNTAX  INTEGER{
                    null(0),
                    b-node(1),
                    p-node(2),
                    m-node(4),
                    h-node(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios node type"
            ::= { r2DhcpSubnetCFG2Entry 17 }

--
-- R2 Add or Delete DHCP Subnet
--

        r2AddDelDhcpSubnet  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelDhcpSubnetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet control Table"
            ::= { r2DHCPSubnet 3 }

        r2AddDelDhcpSubnetEntry  OBJECT-TYPE
            SYNTAX  R2AddDelDhcpSubnetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet control Entry"
            INDEX { r2Index }
            ::= { r2AddDelDhcpSubnet 1 }

            R2AddDelDhcpSubnetEntry ::= SEQUENCE {
            r2AddDelDhcpSubnetName      DisplayString,
            r2DhcpSubnetCMD             INTEGER
        }

        r2AddDelDhcpSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name"
            ::= { r2AddDelDhcpSubnetEntry 2 }

        r2DhcpSubnetCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet configuration"
            ::= { r2AddDelDhcpSubnetEntry 3 }

--
-- R2 Add or Delete DHCP Subnet DNS Server
--

        r2AddDelSubnetDNSServer  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelSubnetDNSServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server control Table"
            ::= { r2DHCPSubnet 4 }

        r2AddDelSubnetDNSServerEntry  OBJECT-TYPE
            SYNTAX  R2AddDelSubnetDNSServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server control Entry"
            INDEX { r2Index }
            ::= { r2AddDelSubnetDNSServer 1 }

            R2AddDelSubnetDNSServerEntry ::= SEQUENCE {
            r2AddDelDNSServerSubnetName DisplayString,
            r2AddDelDNSServerAddr       DisplayString,
            r2AddDelDNSSeverCMD         INTEGER
        }

        r2AddDelDNSServerSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2AddDelSubnetDNSServerEntry 2 }

        r2AddDelDNSServerAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server Address"
            ::= { r2AddDelSubnetDNSServerEntry 3 }

        r2AddDelDNSSeverCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet DNS Server"
            ::= { r2AddDelSubnetDNSServerEntry 4 }

--
-- R2 Add or Delete DHCP Subnet Default Routers
--

        r2AddDelSubnetDefRouter  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelSubnetDefRouterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router control Table"
            ::= { r2DHCPSubnet 5 }

        r2AddDelSubnetDefRouterEntry  OBJECT-TYPE
            SYNTAX  R2AddDelSubnetDefRouterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router control Entry"
            INDEX { r2Index }
            ::= { r2AddDelSubnetDefRouter 1 }

            R2AddDelSubnetDefRouterEntry ::= SEQUENCE {
            r2AddDelDefRTRSubnetName    DisplayString,
            r2AddDelDefRouterAddr       DisplayString,
            r2AddDelDefRouterCMD        INTEGER
        }

        r2AddDelDefRTRSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2AddDelSubnetDefRouterEntry 2 }

        r2AddDelDefRouterAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router address"
            ::= { r2AddDelSubnetDefRouterEntry 3 }

        r2AddDelDefRouterCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet default router"
            ::= { r2AddDelSubnetDefRouterEntry 4 }

--
-- R2 Add or Delete DHCP Subnet Netbios Server
--

        r2AddDelSubnetNetbiosServer  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelSubnetNetbiosServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server control Table"
            ::= { r2DHCPSubnet 6 }

        r2AddDelSubnetNetbiosServerEntry  OBJECT-TYPE
            SYNTAX  R2AddDelSubnetNetbiosServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server control Entry"
            INDEX { r2Index }
            ::= { r2AddDelSubnetNetbiosServer 1 }

            R2AddDelSubnetNetbiosServerEntry ::= SEQUENCE {
            r2AddDelNetbSubnetName      DisplayString,
            r2AddDelNetbServerAddr      DisplayString,
            r2AddDelNetbServerCMD       INTEGER
        }

        r2AddDelNetbSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2AddDelSubnetNetbiosServerEntry 2 }

        r2AddDelNetbServerAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server address"
            ::= { r2AddDelSubnetNetbiosServerEntry 3 }

        r2AddDelNetbServerCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet netbios server"
            ::= { r2AddDelSubnetNetbiosServerEntry 4 }

--
-- R2 DHCP Subnet Option
--

        r2DhcpSubnetOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option Table"
            ::= { r2DHCPSubnet 7 }

        r2DhcpSubnetOptionEntry  OBJECT-TYPE
            SYNTAX  R2DhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option Entry"
            INDEX { r2Index ,
        r2DhcpSubnetIndex ,
        r2DhcpSubnetOptionIndex }
            ::= { r2DhcpSubnetOption 1 }

            R2DhcpSubnetOptionEntry ::= SEQUENCE {
            r2DhcpSubnetOptionIndex     INTEGER,
            r2DhcpSubnetOptSubnetName   DisplayString,
            r2DhcpSubnetOptionCode      INTEGER,
            r2DhcpSubnetOptionValue     DisplayString
        }

        r2DhcpSubnetOptionIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet Option index"
            ::= { r2DhcpSubnetOptionEntry 3 }

        r2DhcpSubnetOptSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2DhcpSubnetOptionEntry 4 }

        r2DhcpSubnetOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option code"
            ::= { r2DhcpSubnetOptionEntry 5 }

        r2DhcpSubnetOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option value"
            ::= { r2DhcpSubnetOptionEntry 6 }

--
-- R2 Add or Delete DHCP Subnet Option
--

        r2AddDelDhcpSubnetOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2AddDelDhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option control Table"
            ::= { r2DHCPSubnet 8 }

        r2AddDelDhcpSubnetOptionEntry  OBJECT-TYPE
            SYNTAX  R2AddDelDhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option control Entry"
            INDEX { r2Index }
            ::= { r2AddDelDhcpSubnetOption 1 }

            R2AddDelDhcpSubnetOptionEntry ::= SEQUENCE {
            r2AddDelSubnetOptSubnetName DisplayString,
            r2AddDelSubnetOptionCode    INTEGER,
            r2AddDelSubnetOptionValue   DisplayString,
            r2AddDelSubnetOptionCMD     INTEGER
        }

        r2AddDelSubnetOptSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r2AddDelDhcpSubnetOptionEntry 2 }

        r2AddDelSubnetOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option code"
            ::= { r2AddDelDhcpSubnetOptionEntry 3 }

        r2AddDelSubnetOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option value"
            ::= { r2AddDelDhcpSubnetOptionEntry 4 }

        r2AddDelSubnetOptionCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete DHCP subnet option"
            ::= { r2AddDelDhcpSubnetOptionEntry 5 }

--
--  R2 DHCP Relay
--

    r2DHCPRelay         OBJECT IDENTIFIER ::= { r2DHCP 2 }

--
-- R2 DHCP Relay Config
--

        r2DhcpRelayCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpRelayCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Config Table"
            ::= { r2DHCPRelay 1 }

        r2DhcpRelayCFGEntry  OBJECT-TYPE
            SYNTAX  R2DhcpRelayCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Config Entry"
            INDEX { r2Index }
            ::= { r2DhcpRelayCFG 1 }

            R2DhcpRelayCFGEntry ::= SEQUENCE {
            r2DhcpRelay                 INTEGER,
            r2DhcpRelayServerIP         DisplayString,
            r2DhcpRelayInterface        DisplayString,
            r2DhcpRelayBridgeMgmt       DisplayString
        }

        r2DhcpRelay  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0),
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay function disable/enable"
            ::= { r2DhcpRelayCFGEntry 2 }

        r2DhcpRelayServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Server IP"
            ::= { r2DhcpRelayCFGEntry 3 }

        r2DhcpRelayInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay interface"
            ::= { r2DhcpRelayCFGEntry 4 }

        r2DhcpRelayBridgeMgmt  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay bridge mgmt"
            ::= { r2DhcpRelayCFGEntry 5 }

--
-- R2 Add or Delete DHCP Relay Interface
--

        r2DhcpRelayAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2DhcpRelayAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP Relay interface Table"
            ::= { r2DHCPRelay 2 }

        r2DhcpRelayAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R2DhcpRelayAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP Relay interface Entry"
            INDEX { r2Index }
            ::= { r2DhcpRelayAddDelInterface 1 }

            R2DhcpRelayAddDelInterfaceEntry ::= SEQUENCE {
            r2DhcpRelayAddDelIntfName   DisplayString,
            r2DhcpRelayAddDelIntfCMD    INTEGER
        }

        r2DhcpRelayAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r2DhcpRelayAddDelInterfaceEntry 2 }

        r2DhcpRelayAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface command"
            ::= { r2DhcpRelayAddDelInterfaceEntry 3 }

--
--  R2 MultiLink
--

    r2MultiLink            OBJECT IDENTIFIER ::= { router-a-card 10 }

--
-- R2 MultiLink Config Table
--

        r2MultiLinkCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2MultiLinkCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MultiLink Config Table."
            ::= { r2MultiLink 1 }

        r2MultiLinkCFGEntry  OBJECT-TYPE
            SYNTAX  R2MultiLinkCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MultiLink Config Entry"
            INDEX { r2Index ,
        r2MLinkIndex }
            ::= { r2MultiLinkCFG 1 }

            R2MultiLinkCFGEntry ::= SEQUENCE {
            r2MLinkIndex                INTEGER,
            r2MLinkName                 DisplayString,
            r2MLinkIPAddr               DisplayString,
            r2MLinkBundles              DisplayString,
            r2MLinkInterval             INTEGER,
            r2MLinkTimes                INTEGER
        }

        r2MLinkIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Index"
            ::= { r2MultiLinkCFGEntry 2 }

        r2MLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Virtual Name"
            ::= { r2MultiLinkCFGEntry 3 }

        r2MLinkIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r2MultiLinkCFGEntry 4 }

        r2MLinkBundles  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Boundles Interface"
            ::= { r2MultiLinkCFGEntry 5 }

        r2MLinkInterval  OBJECT-TYPE
            SYNTAX  INTEGER (5..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink The Retry Interval"
            ::= { r2MultiLinkCFGEntry 6 }

        r2MLinkTimes  OBJECT-TYPE
            SYNTAX  INTEGER (6..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink The Retry Times"
            ::= { r2MultiLinkCFGEntry 7 }

--
-- R2 Create and Destroy Multilink
--

        r2CreateDestroyMultiLink  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2CreateDestroyMultiLinkEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy MultiLink Table."
            ::= { r2MultiLink 2 }

        r2CreateDestroyMultiLinkEntry  OBJECT-TYPE
            SYNTAX  R2CreateDestroyMultiLinkEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Multilin Entry"
            INDEX { r2Index }
            ::= { r2CreateDestroyMultiLink 1 }

            R2CreateDestroyMultiLinkEntry ::= SEQUENCE {
            r2CreateDestroyMLinkName    DisplayString,
            r2CreateDestroyMLinkCMD     INTEGER
        }

        r2CreateDestroyMLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create/Destroy Multilink Name"
            ::= { r2CreateDestroyMultiLinkEntry 2 }

        r2CreateDestroyMLinkCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    create(1),
                    destroy(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create/Destory Multilink Command"
            ::= { r2CreateDestroyMultiLinkEntry 3 }

--
-- R2 MultiLink Add/Delete Interface Table
--

        r2MultiLinkAddDeleteInterface OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2MultiLinkAddDeleteInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interfaces To Multilink Bundle Table"
            ::= { r2MultiLink 3 }

        r2MultiLinkAddDeleteInterfaceEntry  OBJECT-TYPE
            SYNTAX  R2MultiLinkAddDeleteInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interfaces To Multilink Bundle Entry"
            INDEX { r2Index }
            ::= { r2MultiLinkAddDeleteInterface 1 }

            R2MultiLinkAddDeleteInterfaceEntry ::= SEQUENCE {
            r2MLinkAddDelMLinkName      DisplayString,
            r2MLinkAddDelIntfName       DisplayString,
            r2MLinkAddDelIntfCMD        INTEGER
        }

        r2MLinkAddDelMLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "R2 Add/Delete Interface MultiLink Name"
            ::= { r2MultiLinkAddDeleteInterfaceEntry 2 }

        r2MLinkAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString(SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "R2 Add/Delete Interfaces(wan1~wan64) to Multilink Bundle"
            ::= { r2MultiLinkAddDeleteInterfaceEntry 3 }

        r2MLinkAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete interfaces To/From Multilink Bundle"
            ::= { r2MultiLinkAddDeleteInterfaceEntry 4 }


--==================================================
--  SVLAN
--==================================================
    r2svlan            OBJECT IDENTIFIER ::= { router-a-card 11 }
--==================================================
--  SVLAN State
--==================================================

        r2svlanState  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2SvlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Table"
            ::= { r2svlan 1 }

        r2svlanStateEntry  OBJECT-TYPE
            SYNTAX  R2SvlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Svlan state Entry"
            INDEX { r2ssIndex , r2svlanBrgGroupID }
            ::= { r2svlanState 1 }


            R2SvlanStateEntry ::= SEQUENCE {
            r2ssIndex                   SmallSlotIndex,
            r2svlanBrgGroupID           INTEGER,
            r2svlanBrgName              DisplayString,
            r2svlanEnable               INTEGER,
            r2svlanMgmtSVID             INTEGER,
            r2svlanRegenCRC             INTEGER,
            r2svlanTPID                 DisplayString,
            r2svlanPCP                  INTEGER,
            r2svlanDEI                  INTEGER
        }
        r2ssIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2svlanStateEntry 1 }

        r2svlanBrgGroupID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group ID"
            ::= { r2svlanStateEntry 2 }

        r2svlanBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2svlanStateEntry 3 }

        r2svlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan state enable/disable"
            ::= { r2svlanStateEntry 4 }

        r2svlanMgmtSVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVLAN ID for the bridge management interface"
            ::= { r2svlanStateEntry 5 }

        r2svlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable CRC regenerating on WAN interfaces for SVLAN frames"
            ::= { r2svlanStateEntry 6 }

        r2svlanTPID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..4))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TPID "
            ::= { r2svlanStateEntry 7 }

        r2svlanPCP  OBJECT-TYPE
            SYNTAX  INTEGER(0..7)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Priority Code Point"
            ::= { r2svlanStateEntry 8 }

        r2svlanDEI  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Drop Eligible Indicato"
            ::= { r2svlanStateEntry 9 }

--==================================================
-- SVLAN Table
--==================================================


        r2svlanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2SvlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan Table"
            ::= { r2svlan 2 }

        r2svlanTableEntry  OBJECT-TYPE
            SYNTAX  R2SvlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Svlan Table Tag Member Entry"
            INDEX { r2stIndex ,
        r2svlanTableBrgGroupID ,
        r2svlanID ,
        r2svlanTableIndex
    }
            ::= { r2svlanTable 1 }
            R2SvlanTableEntry ::= SEQUENCE {
            r2stIndex                   SmallSlotIndex,
            r2svlanTableBrgGroupID      INTEGER,
            r2svlanID                   INTEGER,
            r2svlanTableIndex           INTEGER,
            r2svlanMember               DisplayString
        }
        r2stIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2svlanTableEntry 1 }

        r2svlanTableBrgGroupID OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Index"
            ::= { r2svlanTableEntry 2 }

        r2svlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { r2svlanTableEntry 3 }

        r2svlanTableIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Member Index"
            ::= { r2svlanTableEntry 4 }

        r2svlanMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member"
            ::= { r2svlanTableEntry 5 }

--=========================================================
--  SVLAN Table Control
--=========================================================

    r2svlanTableControl  OBJECT IDENTIFIER ::= { r2svlan 3 }

--=========================================================
--  SVLAN Create and Destroy
--=========================================================

        r2svlanCreateDestroyVlan  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2SvlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy svlan Table"
            ::= { r2svlanTableControl 1 }

        r2svlanCreateDestroyVlanEntry  OBJECT-TYPE
            SYNTAX  R2SvlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy svlan Entry"
            INDEX { r2scIndex }
            ::= { r2svlanCreateDestroyVlan 1 }

            R2SvlanCreateDestroyVlanEntry ::= SEQUENCE {
            r2scIndex                                                                                SmallSlotIndex,
            r2svlanCreateDestroyBrgName  DisplayString,
            r2svlanCreateDestroyVidNum   INTEGER,
            r2svlanCreateDestroyCMD      INTEGER
        }

        r2scIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2svlanCreateDestroyVlanEntry 1 }


        r2svlanCreateDestroyBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2svlanCreateDestroyVlanEntry 2 }

        r2svlanCreateDestroyVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan VID"
            ::= { r2svlanCreateDestroyVlanEntry 3 }

        r2svlanCreateDestroyCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    create-svlan(1),
                    destroy-svlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy Svlan command"
            ::= { r2svlanCreateDestroyVlanEntry 4 }



--=========================================================
--  SVLAN Add and Delete Port
--=========================================================


        r2svlanAddDelPort  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2SvlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and del port Table"
            ::= { r2svlanTableControl 2 }

        r2svlanAddDelPortEntry  OBJECT-TYPE
            SYNTAX  R2SvlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and del port Entry"
            INDEX { r2saIndex }
            ::= { r2svlanAddDelPort 1 }

            R2SvlanAddDelPortEntry ::= SEQUENCE {
            r2saIndex                                                                                SmallSlotIndex,
            r2svlanAddDelPortBrgName     DisplayString,
            r2svlanAddDelPortVidNum      INTEGER,
            r2svlanAddDelPortInterface   DisplayString,
            r2svlanAddDelPortCMD         INTEGER
        }

        r2saIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2svlanAddDelPortEntry 1 }

        r2svlanAddDelPortBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r2svlanAddDelPortEntry 2 }

        r2svlanAddDelPortVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan VID"
            ::= { r2svlanAddDelPortEntry 3 }

        r2svlanAddDelPortInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r2svlanAddDelPortEntry 4 }

        r2svlanAddDelPortCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add-port-to-svlan(1),
                    delete-port-from-svlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and delete port command"
            ::= { r2svlanAddDelPortEntry 5 }

--=========================================================
-- SVLAN Port Table
--=========================================================

        r2svlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R2SvlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Table"
            ::= { r2svlan 4 }

        r2svlanPortTableEntry  OBJECT-TYPE
            SYNTAX  R2SvlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Entry"
            INDEX { r2spIndex , r2svlanPortIndex }
            ::= { r2svlanPortTable 1 }

            R2SvlanPortTableEntry ::= SEQUENCE {
            r2spIndex                   SmallSlotIndex,
            r2svlanPortIndex            INTEGER,
            r2svlanPortIFName           DisplayString,
            r2svlanPortPVID             INTEGER,
            r2svlanPortType             INTEGER,
            r2svlanPortIngressFilter    INTEGER
        }
        r2spIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { r2svlanPortTableEntry 1 }

        r2svlanPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan port index"
            ::= { r2svlanPortTableEntry 2 }

        r2svlanPortIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface name"
            ::= { r2svlanPortTableEntry 3 }


        r2svlanPortPVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface PVID"
            ::= { r2svlanPortTableEntry 4 }

        r2svlanPortType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    provider(1),
                    customer(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "the acceptable port type"
            ::= { r2svlanPortTableEntry 5 }

        r2svlanPortIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable ingress filtering"
            ::= { r2svlanPortTableEntry 6 }


        r2TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of RTA"
            ::= { router-a-card 100 }


--======================================================================--
--======================================================================--
--  LS-OPTICAL MIB
--======================================================================--
--======================================================================--

--
--  SYSTEM Control Table
--

        lsoSystemControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LS-OPTICAL control table."
            ::= { ls-optical-card 1 }

        lsoSystemControlEntry  OBJECT-TYPE
            SYNTAX  LsoSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the LS-OPTICAL control table."
            INDEX { lsoIndex ,
        lsoPortIndex }
            ::= { lsoSystemControlTable 1 }

            LsoSystemControlEntry ::= SEQUENCE  {
            lsoIndex                    GenSlotID,
            lsoPortIndex                FourPortID,
            lsoMode                     INTEGER,
            lsoReceiveBW                INTEGER,
            lsoTransmitBW               INTEGER,
            lsoALS                      INTEGER
        }

        lsoIndex  OBJECT-TYPE
            SYNTAX  GenSlotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { lsoSystemControlEntry 1 }

        lsoPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { lsoSystemControlEntry 2 }

        lsoMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    manual(1),
                    auto(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LS-OPTICAL Mode"
            ::= { lsoSystemControlEntry 3 }

        lsoReceiveBW  OBJECT-TYPE
            SYNTAX  INTEGER (0..12)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "LS-OPTICAL reveive bandwidth(0~12 TS)"
            ::= { lsoSystemControlEntry 4 }

        lsoTransmitBW  OBJECT-TYPE
            SYNTAX  INTEGER (0..12)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LS-OPTICAL transmit bandwidth(0~12 TS)"
            ::= { lsoSystemControlEntry 5 }

        lsoALS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LS-OPTICAL Auto Laser Shutdown(ALS)"
            ::= { lsoSystemControlEntry 6 }

--
--  Status Table
--

        lsoStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The LS-OPTICAL status table."
            ::= { ls-optical-card 2 }

        lsoStatusEntry  OBJECT-TYPE
            SYNTAX  LsoStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the LS-OPTICAL status table."
            INDEX { lsoIndex ,
        lsoPortIndex }
            ::= { lsoStatusTable 1 }

            LsoStatusEntry ::= SEQUENCE {
            lsoLOS                      INTEGER,
            lsoYEL                      INTEGER,
            lsoFramingERR               INTEGER,
            lsoPayloadERR               INTEGER
        }

        lsoLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LS-OPTICAL Line LOS "
            ::= { lsoStatusEntry 1 }

        lsoYEL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yel(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LS-OPTICAL Line YEL "
            ::= { lsoStatusEntry 2 }

        lsoFramingERR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LS-OPTICAL Framing Error Counter "
            ::= { lsoStatusEntry 3 }

        lsoPayloadERR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LS-OPTICAL Payload Error Counter "
            ::= { lsoStatusEntry 4 }

--
-- Diagnostic Control Table
--

        lsoDiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagnostic Control Table"
            ::= { ls-optical-card 3 }

        lsoDiagEntry  OBJECT-TYPE
            SYNTAX  LsoDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagnostic Control Table Entry"
            INDEX { lsoIndex ,
        lsoPortIndex }
            ::= { lsoDiagTable 1 }

            LsoDiagEntry ::= SEQUENCE {
            lsoLoopback                 INTEGER,
            lsoBertControl              INTEGER,
            lsoBertStatus               INTEGER,
            lsoElapseSeconds            INTEGER,
            lsoErrorSeconds             INTEGER,
            lsoErrorBits                INTEGER
        }

        lsoLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payLoad-loopback(3),
                    line-loopback(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Loopback Type"
            ::= { lsoDiagEntry 1 }

        lsoBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
                    bert-on(2),
                    reset(3),
                    inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Control"
            ::= { lsoDiagEntry 2 }

        lsoBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { lsoDiagEntry 3 }

        lsoElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Elapse seconds"
            ::= { lsoDiagEntry 4 }

        lsoErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error seconds"
            ::= { lsoDiagEntry 5 }

        lsoErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error bits"
            ::= { lsoDiagEntry 6 }

--
-- Alarm Status Table
--

        lsoAlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Table"
            ::= { ls-optical-card 4 }

        lsoAlmStatusEntry  OBJECT-TYPE
            SYNTAX  LsoAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Table Entry"
            INDEX { lsoIndex ,
        lsoPortIndex ,
        lsoAlmNumber }
            ::= { lsoAlmStatusTable 1 }

            LsoAlmStatusEntry ::= SEQUENCE {
            lsoAlmNumber                INTEGER,
            lsoAlmString                DisplayString,
            lsoAlmState                 INTEGER,
            lsoAlmCount                 INTEGER,
            lsoAlmThreshold             INTEGER,
            lsoAlmEnable                AlarmSeverity
        }

        lsoAlmNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Index"
            ::= { lsoAlmStatusEntry 1 }

        lsoAlmString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { lsoAlmStatusEntry 2 }

        lsoAlmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Current State"
            ::= { lsoAlmStatusEntry 3 }

        lsoAlmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Count which happened"
            ::= { lsoAlmStatusEntry 4 }

        lsoAlmThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Threshold"
            ::= { lsoAlmStatusEntry 5 }

        lsoAlmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { lsoAlmStatusEntry 6 }

--
--  Command Control Table
--

        lsoCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { ls-optical-card 5 }

        lsoCommandControlEntry  OBJECT-TYPE
            SYNTAX  LsoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { lsoIndex }
            ::= { lsoCommandControlTable 1 }

            LsoCommandControlEntry ::= SEQUENCE {
            lsoClearCardAlarmHistory    INTEGER,
            lsoClearCardPerformanceData INTEGER,
            lsoCardLoadDefault          INTEGER
        }

        lsoClearCardAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear Card Alarm History"
            ::= { lsoCommandControlEntry 1 }

        lsoClearCardPerformanceData    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear card performance data"
            ::= { lsoCommandControlEntry 2 }

        lsoCardLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Card Load Default"
            ::= { lsoCommandControlEntry 3 }

--
--  SYSTEM Information Table
--

        lsoSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= {ls-optical-card 6 }

        lsoSystemInformationEntry  OBJECT-TYPE
            SYNTAX  LsoSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { lsoIndex }
            ::= { lsoSystemInformationTable 1 }

            LsoSystemInformationEntry ::= SEQUENCE {
            lsoFPGAVersion              DisplayString,
            lsoPCBVersion               DisplayString,
            lsoBOMVersion               DisplayString,
            lsoPortNumber               INTEGER,
            lsoOpticalModule            DisplayString
        }

        lsoFPGAVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { lsoSystemInformationEntry 1 }

        lsoPCBVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PCB Version"
            ::= { lsoSystemInformationEntry 2 }

        lsoBOMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BOM Version"
            ::= { lsoSystemInformationEntry 3 }

        lsoPortNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Number of port in card"
            ::= { lsoSystemInformationEntry 4 }

        lsoOpticalModule  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..59) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Optical module type"
            ::= { lsoSystemInformationEntry 5 }


--
--  Performance Table
--
    lsoPerformanceReport    OBJECT IDENTIFIER ::= { ls-optical-card 7 }

--
-- Current Performance Table
--
        lsoCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current Performance Table"
            ::= { lsoPerformanceReport 1 }

        lsoCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  LsoCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current performance entry"
            INDEX { lsoIndex ,
        lsoPortIndex ,
        lsoCurrPerfRegType }
            ::= { lsoCurrentPerfTable 1 }

            LsoCurrentPerfEntry ::= SEQUENCE  {
            lsoCurrPerfRegType          INTEGER,
            lsoCurrentPerfES            INTEGER,
            lsoCurrentPerfSES           INTEGER,
            lsoCurrentPerfUAS           INTEGER,
            lsoCurr15MinTimeElapsed     INTEGER,
            lsoValid15MinInterval       INTEGER
        }

        lsoCurrPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { lsoCurrentPerfEntry 1 }

        lsoCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { lsoCurrentPerfEntry 2 }

        lsoCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { lsoCurrentPerfEntry 3 }

        lsoCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { lsoCurrentPerfEntry 4 }

        lsoCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { lsoCurrentPerfEntry 5 }

        lsoValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { lsoCurrentPerfEntry 6 }

--
--  Interval Performance Table
--

        lsoIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval Performance Table"
            ::= { lsoPerformanceReport 2 }

        lsoIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  LsoIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical interval performance entry"
            INDEX { lsoIndex ,
        lsoPortIndex ,
        lsoIntvPerfRegType ,
        lsoIntervalPerfNumber }
            ::= { lsoIntervalPerfTable 1 }

            LsoIntervalPerfEntry ::= SEQUENCE {
            lsoIntvPerfRegType          INTEGER,
            lsoIntervalPerfNumber       INTEGER  (1..96),
            lsoIntervalPerfES           INTEGER,
            lsoIntervalPerfSES          INTEGER,
            lsoIntervalPerfUAS          INTEGER
        }

        lsoIntvPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { lsoIntervalPerfEntry 1 }

        lsoIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { lsoIntervalPerfEntry 2 }

        lsoIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { lsoIntervalPerfEntry 3 }

        lsoIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { lsoIntervalPerfEntry 4 }

        lsoIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { lsoIntervalPerfEntry 5 }

--
--  Total Performance Table
--

        lsoTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total Performance Table"
            ::= { lsoPerformanceReport 3 }

        lsoTotalPerfEntry  OBJECT-TYPE
            SYNTAX  LsoTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total performance table"
            INDEX { lsoIndex ,
        lsoPortIndex ,
        lsoTotalPerfRegType }
            ::= { lsoTotalPerfTable 1 }

            LsoTotalPerfEntry ::= SEQUENCE  {
            lsoTotalPerfRegType         INTEGER,
            lsoTotalPerfES              INTEGER,
            lsoTotalPerfSES             INTEGER,
            lsoTotalPerfUAS             INTEGER
        }

        lsoTotalPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { lsoTotalPerfEntry 1 }

        lsoTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { lsoTotalPerfEntry 2 }

        lsoTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { lsoTotalPerfEntry 3 }

        lsoTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { lsoTotalPerfEntry 4 }

--
--  Seven Days Performance Table
--
        lsoSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF LsoSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= { lsoPerformanceReport 4 }

        lsoSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  LsoSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance entry"
            INDEX { lsoIndex ,
        lsoPortIndex ,
        lsoSevenDaysPerfRegType ,
        lsoDaysIndex }
            ::= { lsoSevenDaysPerfTable 1 }

            LsoSevenDaysPerfEntry ::= SEQUENCE  {
            lsoSevenDaysPerfRegType     INTEGER,
            lsoDaysIndex                INTEGER (1..7),
            lsoDateStrIndex             DisplayString (SIZE (0..255) ),
            lsoSevenDaysPerfES          INTEGER,
            lsoSevenDaysPerfSES         INTEGER,
            lsoSevenDaysPerfUAS         INTEGER
        }

        lsoSevenDaysPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { lsoSevenDaysPerfEntry 1 }

        lsoDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { lsoSevenDaysPerfEntry 2 }

        lsoDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { lsoSevenDaysPerfEntry 3 }

        lsoSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { lsoSevenDaysPerfEntry 4 }

        lsoSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { lsoSevenDaysPerfEntry 5 }

        lsoSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { lsoSevenDaysPerfEntry 6 }


        lsoTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of LS Optical"
            ::= { ls-optical-card 100 }


--======================================================================--
--======================================================================--
--  OCUDP MIB
--======================================================================--
--======================================================================--

--
--  SYSTEM Control Table
--

        ocuSystemControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCUDP control table."
            ::= { ocudp-card 1 }

        ocuSystemControlEntry  OBJECT-TYPE
            SYNTAX  OcuSystemControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the OCUDP control table."
            INDEX { ocuIndex, ocuPortIndex }
            ::= { ocuSystemControlTable 1 }

            OcuSystemControlEntry ::= SEQUENCE  {
            ocuIndex                    LargeSlotIndex,
            ocuPortIndex                EightPortID,
            ocuDataRate                 INTEGER,
            ocuTransparent              INTEGER,
            ocuPortEnable               INTEGER
        }

        ocuIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ocuSystemControlEntry 1 }

        ocuPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 8, total 8 ports."
            ::= { ocuSystemControlEntry 2 }

        ocuDataRate  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    r64k(1),
                    r56k(2),
                    r19-2k(3),
                    r9-6k(4),
                    r4-8k(5),
                    r2-4k(6),
                    r38-4k(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP Data Rate"
            ::= { ocuSystemControlEntry 3 }

        ocuTransparent  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP transparent carry data signal"
            ::= { ocuSystemControlEntry 4 }

        ocuPortEnable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP port enable/disable"
            ::= { ocuSystemControlEntry 5 }


--
--  User Define Code Table
--

        ocuUserDefineCodeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuUserDefineCodeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCUDP user define act/deact code table."
            ::= { ocudp-card 2 }

        ocuUserDefineCodeEntry  OBJECT-TYPE
            SYNTAX  OcuUserDefineCodeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the OCUDP user define code table."
            INDEX { ocuIndex }
            ::= { ocuUserDefineCodeTable 1 }

            OcuUserDefineCodeEntry ::= SEQUENCE  {
            ocuActivationCodeLEN        INTEGER,
            ocuActivationCode           DisplayString,
            ocuDeActivationCodeLEN      INTEGER,
            ocuDeActivationCode         DisplayString
        }

        ocuActivationCodeLEN  OBJECT-TYPE
            SYNTAX  INTEGER (3..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP Activation Code Length"
            ::= { ocuUserDefineCodeEntry 1 }

        ocuActivationCode  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP Activation Code"
            ::= { ocuUserDefineCodeEntry 2 }

        ocuDeActivationCodeLEN  OBJECT-TYPE
            SYNTAX  INTEGER (3..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP DeActivation Code Length"
            ::= { ocuUserDefineCodeEntry 3 }

        ocuDeActivationCode  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCUDP DeActivation Code"
            ::= { ocuUserDefineCodeEntry 4 }

--
--  Status Table
--

        ocuStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The OCUDP status table."
            ::= { ocudp-card 3 }

        ocuStatusEntry  OBJECT-TYPE
            SYNTAX  OcuStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the OCUDP status table."
            INDEX { ocuIndex ,
        ocuPortIndex }
            ::= { ocuStatusTable 1 }

            OcuStatusEntry ::= SEQUENCE {
            ocuOOS                      INTEGER,
            ocuLOS                      INTEGER,
            ocuBitError                 INTEGER,
            ocuLOF                      INTEGER
        }

        ocuOOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OCUDP Out of Service "
            ::= { ocuStatusEntry 1 }

        ocuLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OCUDP Los of Signal "
            ::= { ocuStatusEntry 2 }

        ocuBitError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OCUDP Bit Error Counter "
            ::= { ocuStatusEntry 3 }

        ocuLOF  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OCUDP Out of Frame for 64K line rate "
            ::= { ocuStatusEntry 4 }

--
-- Diagnostic Control Table
--

        ocuDiagTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagnostic Control Table"
            ::= { ocudp-card 4 }

        ocuDiagEntry  OBJECT-TYPE
            SYNTAX  OcuDiagEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagnostic Control Table Entry"
            INDEX { ocuIndex ,
        ocuPortIndex }
            ::= { ocuDiagTable 1 }

            OcuDiagEntry ::= SEQUENCE {
            ocuLocalLoopback            INTEGER,
            ocuRemoteLoopback           INTEGER,
            ocuBertControl              INTEGER,
            ocuBertStatus               INTEGER,
            ocuElapseSeconds            INTEGER,
            ocuErrorSeconds             INTEGER,
            ocuErrorBits                INTEGER,
            ocuRemoteCallLoopback       INTEGER,
            ocuForceDisableRemCallLB    INTEGER
        }

        ocuLocalLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    line-loopback(2),
                    local-loopback(3),
                    bi-direct-loopback(4),
                    payload-loopback(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Local Loopback Type"
            ::= { ocuDiagEntry 1 }

        ocuRemoteLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    t1-410(2),
                    v54(3),
                    user-define(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Remote Loopback Type"
            ::= { ocuDiagEntry 2 }

        ocuBertControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-off(1),
                    all-zero(2),
                    all-one(3),
                    patt-63(4),
                    patt-511(5),
                    patt-2047(6),
                    reset(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BERT Test Control"
            ::= { ocuDiagEntry 3 }

        ocuBertStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BERT Status"
            ::= { ocuDiagEntry 4 }

        ocuElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Elapse seconds"
            ::= { ocuDiagEntry 5 }

        ocuErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error seconds"
            ::= { ocuDiagEntry 6 }

        ocuErrorBits  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Error bits"
            ::= { ocuDiagEntry 7 }

        ocuRemoteCallLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Call Loopback Status"
            ::= { ocuDiagEntry 8 }

        ocuForceDisableRemCallLB  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Force Disable Remote Call Loopback"
            ::= { ocuDiagEntry 9 }


--
-- Alarm Status Table
--

        ocuAlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Table"
            ::= { ocudp-card 5 }

        ocuAlmStatusEntry  OBJECT-TYPE
            SYNTAX  OcuAlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Table Entry"
            INDEX { ocuIndex ,
        ocuPortIndex ,
        ocuAlmNumber }
            ::= { ocuAlmStatusTable 1 }

            OcuAlmStatusEntry ::= SEQUENCE {
            ocuAlmNumber                INTEGER,
            ocuAlmString                DisplayString,
            ocuAlmState                 INTEGER,
            ocuAlmCount                 INTEGER,
            ocuAlmThreshold             INTEGER,
            ocuAlmEnable                AlarmSeverity
        }

        ocuAlmNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Status Index"
            ::= { ocuAlmStatusEntry 1 }

        ocuAlmString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { ocuAlmStatusEntry 2 }

        ocuAlmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    portDisabled(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Current State"
            ::= { ocuAlmStatusEntry 3 }

        ocuAlmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Count which happened"
            ::= { ocuAlmStatusEntry 4 }

        ocuAlmThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm Threshold"
            ::= { ocuAlmStatusEntry 5 }

        ocuAlmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { ocuAlmStatusEntry 6 }

--
--  Command Control Table
--

        ocuCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { ocudp-card 6 }

        ocuCommandControlEntry  OBJECT-TYPE
            SYNTAX  OcuCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { ocuIndex }
            ::= { ocuCommandControlTable 1 }

            OcuCommandControlEntry ::= SEQUENCE {
            ocuClearCardAlarmHistory    INTEGER,
            ocuClearCardPerformanceData INTEGER,
            ocuCardLoadDefault          INTEGER,
            ocuCardReset                INTEGER,
            ocuPortReset                INTEGER,
            ocuCardMode                 INTEGER
        }

        ocuClearCardAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear Card Alarm History"
            ::= { ocuCommandControlEntry 1 }

        ocuClearCardPerformanceData    OBJECT-TYPE
            SYNTAX  INTEGER {
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear card performance data"
            ::= { ocuCommandControlEntry 2 }

        ocuCardLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Card Load Default"
            ::= { ocuCommandControlEntry 3 }

        ocuCardReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Card Reset"
            ::= { ocuCommandControlEntry 4 }

        ocuPortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset-port1(1),
                    reset-port2(2),
                    reset-port3(3),
                    reset-port4(4),
                    reset-port5(5),
                    reset-port6(6),
                    reset-port7(7),
                    reset-port8(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port Reset"
            ::= { ocuCommandControlEntry 5 }

        ocuCardMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    modeA(1),
                    modeB(2),
                    modeC(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Card mode support after FPGA version:F"
            ::= { ocuCommandControlEntry 6 }

--
--  SYSTEM Information Table
--

        ocuSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= {ocudp-card 7 }

        ocuSystemInformationEntry  OBJECT-TYPE
            SYNTAX  OcuSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { ocuIndex }
            ::= { ocuSystemInformationTable 1 }

            OcuSystemInformationEntry ::= SEQUENCE {
            ocuFPGAVersion              DisplayString,
            ocuPCBVersion               DisplayString
        }

        ocuFPGAVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { ocuSystemInformationEntry 1 }

        ocuPCBVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "PCB Version"
            ::= { ocuSystemInformationEntry 2 }

--
--  Performance Table
--
    ocuPerformanceReport    OBJECT IDENTIFIER ::= { ocudp-card 8 }

--
-- Current Performance Table
--
        ocuCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current Performance Table"
            ::= { ocuPerformanceReport 1 }

        ocuCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  OcuCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current performance entry"
            INDEX { ocuIndex ,
        ocuPortIndex ,
        ocuCurrPerfRegType }
            ::= { ocuCurrentPerfTable 1 }

            OcuCurrentPerfEntry ::= SEQUENCE  {
            ocuCurrPerfRegType          INTEGER,
            ocuCurrentPerfES            INTEGER,
            ocuCurrentPerfSES           INTEGER,
            ocuCurrentPerfUAS           INTEGER,
            ocuCurr15MinTimeElapsed     INTEGER,
            ocuValid15MinInterval       INTEGER
        }

        ocuCurrPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { ocuCurrentPerfEntry 1 }

        ocuCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { ocuCurrentPerfEntry 2 }

        ocuCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { ocuCurrentPerfEntry 3 }

        ocuCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { ocuCurrentPerfEntry 4 }

        ocuCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { ocuCurrentPerfEntry 5 }

        ocuValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { ocuCurrentPerfEntry 6 }

--
--  Interval Performance Table
--

        ocuIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval Performance Table"
            ::= { ocuPerformanceReport 2 }

        ocuIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  OcuIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "FOM Optical interval performance entry"
            INDEX { ocuIndex ,
        ocuPortIndex ,
        ocuIntvPerfRegType ,
        ocuIntervalPerfNumber }
            ::= { ocuIntervalPerfTable 1 }

            OcuIntervalPerfEntry ::= SEQUENCE {
            ocuIntvPerfRegType          INTEGER,
            ocuIntervalPerfNumber       INTEGER  (1..96),
            ocuIntervalPerfES           INTEGER,
            ocuIntervalPerfSES          INTEGER,
            ocuIntervalPerfUAS          INTEGER
        }

        ocuIntvPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { ocuIntervalPerfEntry 1 }

        ocuIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { ocuIntervalPerfEntry 2 }

        ocuIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { ocuIntervalPerfEntry 3 }

        ocuIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { ocuIntervalPerfEntry 4 }

        ocuIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { ocuIntervalPerfEntry 5 }

--
--  Total Performance Table
--

        ocuTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total Performance Table"
            ::= { ocuPerformanceReport 3 }

        ocuTotalPerfEntry  OBJECT-TYPE
            SYNTAX  OcuTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total performance table"
            INDEX { ocuIndex ,
        ocuPortIndex ,
        ocuTotalPerfRegType }
            ::= { ocuTotalPerfTable 1 }

            OcuTotalPerfEntry ::= SEQUENCE  {
            ocuTotalPerfRegType         INTEGER,
            ocuTotalPerfES              INTEGER,
            ocuTotalPerfSES             INTEGER,
            ocuTotalPerfUAS             INTEGER
        }

        ocuTotalPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { ocuTotalPerfEntry 1 }

        ocuTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { ocuTotalPerfEntry 2 }

        ocuTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { ocuTotalPerfEntry 3 }

        ocuTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { ocuTotalPerfEntry 4 }

--
--  Seven Days Performance Table
--
        ocuSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OcuSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= { ocuPerformanceReport 4 }

        ocuSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  OcuSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance entry"
            INDEX { ocuIndex ,
        ocuPortIndex ,
        ocuSevenDaysPerfRegType ,
        ocuDaysIndex }
            ::= { ocuSevenDaysPerfTable 1 }

            OcuSevenDaysPerfEntry ::= SEQUENCE  {
            ocuSevenDaysPerfRegType     INTEGER,
            ocuDaysIndex                INTEGER (1..7),
            ocuDateStrIndex             DisplayString (SIZE (0..255) ),
            ocuSevenDaysPerfES          INTEGER,
            ocuSevenDaysPerfSES         INTEGER,
            ocuSevenDaysPerfUAS         INTEGER
        }

        ocuSevenDaysPerfRegType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    user(1),
                    line(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Performance Register Type "
            ::= { ocuSevenDaysPerfEntry 1 }

        ocuDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { ocuSevenDaysPerfEntry 2 }

        ocuDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { ocuSevenDaysPerfEntry 3 }

        ocuSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { ocuSevenDaysPerfEntry 4 }

        ocuSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { ocuSevenDaysPerfEntry 5 }

        ocuSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { ocuSevenDaysPerfEntry 6 }


        ocuTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of OCUDP"
            ::= { ocudp-card 100 }


--======================================================================--
--======================================================================--
--  OCT-RT-B MIB
--======================================================================--
--======================================================================--
--
--  Alarm Status Table
--

        r8AlmStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Table "
            ::= { oct-rt-b-card 1 }

        r8AlmStatusEntry  OBJECT-TYPE
            SYNTAX  R8AlmStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { r8Index ,
        r8AlmStatusNumber }
            ::= { r8AlmStatusTable 1 }

            R8AlmStatusEntry ::= SEQUENCE {
            r8Index                  LargeSlotIndex,
            r8AlmStatusNumber           INTEGER (1..40),
            r8AlmStatusString           DisplayString,
            r8AlmStatusState            INTEGER,
            r8AlmStatusCount            INTEGER,
            r8AlmStatusEnable           AlarmSeverity
        }

        r8Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8AlmStatusEntry 1 }

        r8AlmStatusNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Status Index "
            ::= { r8AlmStatusEntry 2 }

        r8AlmStatusString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Type String"
            ::= { r8AlmStatusEntry 3 }

        r8AlmStatusState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    none(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { r8AlmStatusEntry 4 }

        r8AlmStatusCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { r8AlmStatusEntry 5 }

        r8AlmStatusEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { r8AlmStatusEntry 6 }

--
--  Command Control Table
--

        r8CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { oct-rt-b-card 2 }

        r8CommandControlEntry  OBJECT-TYPE
            SYNTAX  R8CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { r8Index }
            ::= { r8CommandControlTable 1 }

            R8CommandControlEntry ::= SEQUENCE {
            r8ClearAlarmHistory         INTEGER,
            r8LoadDefaultAlarmCfg       INTEGER,
            r8Reset                     INTEGER,
            r8ReturnToDefault           INTEGER,
            r8SaveConfig                INTEGER
        }

        r8ClearAlarmHistory    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Clear Alarm History"
            ::= { r8CommandControlEntry 2 }

        r8LoadDefaultAlarmCfg    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Alarm Config"
            ::= { r8CommandControlEntry 3 }

        r8Reset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Card"
            ::= { r8CommandControlEntry 4 }

        r8ReturnToDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    return-to-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Return to default"
            ::= { r8CommandControlEntry 5 }

        r8SaveConfig    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    save-config(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Save config"
            ::= { r8CommandControlEntry 6 }

--
--  OCT-RT-B Bridge
--

    r8Bridge            OBJECT IDENTIFIER ::= { oct-rt-b-card 3 }

--
-- OCT-RT-B Create and Destroy Bridge
--

        r8CreateDestroyBridge  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8CreateDestroyBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCT-RT-B Create and Destroy Bridge Table."
            ::= { r8Bridge 1 }

        r8CreateDestroyBridgeEntry  OBJECT-TYPE
            SYNTAX  R8CreateDestroyBridgeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCT-RT-B Create and Destroy Bridge Entry"
            INDEX { r8Index }
            ::= { r8CreateDestroyBridge 1 }

            R8CreateDestroyBridgeEntry ::= SEQUENCE {
            r8BridgeName                DisplayString,
            r8BridgeMacAddr             DisplayString,
            r8BridgeCMD                 INTEGER
        }

        r8BridgeName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Name"
            ::= { r8CreateDestroyBridgeEntry 2 }

        r8BridgeMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management Mac (xx:xx:xx:xx:xx:xx)"
            ::= { r8CreateDestroyBridgeEntry 3 }

        r8BridgeCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    create(1),
                    destroy(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Index"
            ::= { r8CreateDestroyBridgeEntry 4 }

--
-- OCT-RT-B Bridge Config Table
--

        r8BridgeCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8BridgeCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R8 Bridge Config Table."
            ::= { r8Bridge 2 }

        r8BridgeCFGEntry  OBJECT-TYPE
            SYNTAX  R8BridgeCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "R8 Bridge Config Entry"
            INDEX { r8Index ,
        r8BrgGroupID }
            ::= { r8BridgeCFG 1 }

            R8BridgeCFGEntry ::= SEQUENCE {
            r8BrgGroupID                INTEGER,
            r8BrgName                   DisplayString,
            r8BrgManagementAddr         DisplayString,
            r8BrgManagementMac          DisplayString,
            r8BrgMacAgingTime           INTEGER,
            r8BrgCRC                    INTEGER,
            r8BrgManageState            INTEGER,
            r8BrgInboundPolicy          DisplayString,
            r8BrgOutboundPolicy         DisplayString,
            r8BrgSTPState               INTEGER,
            r8BrgSTPProtocolVersion     INTEGER,
            r8BrgSTPHelloTime           INTEGER,
            r8BrgSTPMacAgingTime        INTEGER,
            r8BrgSTPForwardDelay        INTEGER,
            r8BrgSTPPriority            INTEGER,
            r8BrgL2PDUtunneling         INTEGER,
            r8BrgRoutingProtocol        INTEGER
        }

        r8BrgGroupID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group ID"
            ::= { r8BridgeCFGEntry 2 }

        r8BrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Name"
            ::= { r8BridgeCFGEntry 3 }

        r8BrgManagementAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8BridgeCFGEntry 4 }

        r8BrgManagementMac  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Management Mac (xx:xx:xx:xx:xx:xx)"
            ::= { r8BridgeCFGEntry 5 }

        r8BrgMacAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER (10..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge MAC Aging Time(10-1000000 Sec)"
            ::= { r8BridgeCFGEntry 6 }

        r8BrgCRC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Disable/Enable CRC"
            ::= { r8BridgeCFGEntry 7 }

        r8BrgManageState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Indicated whether the mgmt attached with epilogue"
            ::= { r8BridgeCFGEntry 8 }

        r8BrgInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Inbound policy"
            ::= { r8BridgeCFGEntry 9 }

        r8BrgOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Inbound policy"
            ::= { r8BridgeCFGEntry 10 }

        r8BrgSTPState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree disable/enable"
            ::= { r8BridgeCFGEntry 11 }

        r8BrgSTPProtocolVersion  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stp(1),
                    rstp(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Protocol Version"
            ::= { r8BridgeCFGEntry 12 }

        r8BrgSTPHelloTime  OBJECT-TYPE
            SYNTAX  INTEGER (1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Hello Time(1-10 Sec)"
            ::= { r8BridgeCFGEntry 13 }

        r8BrgSTPMacAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER (6..40)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Aging Time(6-40 Sec)"
            ::= { r8BridgeCFGEntry 14 }

        r8BrgSTPForwardDelay OBJECT-TYPE
            SYNTAX  INTEGER (4..30)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Forward Delay Time(4-30 Sec)"
            ::= { r8BridgeCFGEntry 15 }

        r8BrgSTPPriority OBJECT-TYPE
            SYNTAX  INTEGER (0..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Priority (0-65535)"
            ::= { r8BridgeCFGEntry 16 }

        r8BrgL2PDUtunneling  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Disable/Enable BPDU"
            ::= { r8BridgeCFGEntry 17 }

        r8BrgRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ripV1(1),
                    ripV2(2),
                    disable(4),
                    notSupport(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Bridge routing protocol"
            ::= { r8BridgeCFGEntry 18 }


--
-- OCT-RT-B Bridge STP Info
--

        r8BrgSTPInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8BrgSTPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree information Table."
            ::= { r8Bridge 3 }

        r8BrgSTPInfoEntry  OBJECT-TYPE
            SYNTAX  R8BrgSTPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree information Entry"
            INDEX { r8Index ,
        r8BrgGroupID ,
        r8STPIndex }
            ::= { r8BrgSTPInfo 1 }

            R8BrgSTPInfoEntry ::= SEQUENCE {
            r8STPIndex                  INTEGER,
            r8STPName                   DisplayString,
            r8STPBridgeID               DisplayString,
            r8STPHelloTime              INTEGER,
            r8STPMaxAgingTime           INTEGER,
            r8STPForwardDelay           INTEGER,
            r8STPRootCost               INTEGER
        }

        r8STPIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "STP index"
            ::= { r8BrgSTPInfoEntry 3 }

        r8STPName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning tree Name"
            ::= { r8BrgSTPInfoEntry 4 }

        r8STPBridgeID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning tree Bridge Id"
            ::= { r8BrgSTPInfoEntry 5 }

        r8STPHelloTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Hello Time interval"
            ::= { r8BrgSTPInfoEntry 6 }

        r8STPMaxAgingTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Maximum Aging Time interval"
            ::= { r8BrgSTPInfoEntry 7 }

        r8STPForwardDelay OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Forward Delay Time interval"
            ::= { r8BrgSTPInfoEntry 8 }

        r8STPRootCost OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Spanning Tree Post Cost"
            ::= { r8BrgSTPInfoEntry 9 }

--
-- OCT-RT-B STP Port Info
--

        r8BrgStpPortInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8BrgStpPortInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Port information Table."
            ::= { r8Bridge 4 }

        r8BrgStpPortInfoEntry  OBJECT-TYPE
            SYNTAX  R8BrgStpPortInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Spanning Tree Port information Entry"
            INDEX { r8Index ,
        r8BrgGroupID ,
        r8StpPortIndex }
            ::= { r8BrgStpPortInfo 1 }

            R8BrgStpPortInfoEntry ::= SEQUENCE {
            r8StpPortIndex              INTEGER,
            r8StpPortName               DisplayString,
            r8StpState                  INTEGER,
            r8StpPriority               INTEGER,
            r8StpCost                   INTEGER,
            r8StpEdgePort               INTEGER,
            r8StpLinkType               INTEGER,
            r8StpRootPort               INTEGER
        }

        r8StpPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "STP Port Number Index"
            ::= { r8BrgStpPortInfoEntry 3 }

        r8StpPortName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port Name"
            ::= { r8BrgStpPortInfoEntry 4 }

        r8StpState  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    listen(2),
                    learn(3),
                    forward(4),
                    block(5),
                    down(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port state"
            ::= { r8BrgStpPortInfoEntry 5 }

        r8StpPriority  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r8BrgStpPortInfoEntry 6 }

        r8StpCost  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r8BrgStpPortInfoEntry 7 }

        r8StpEdgePort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r8BrgStpPortInfoEntry 8 }

        r8StpLinkType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    shared(1),
                    p-to-p(2),
                    auto(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STP Port priority"
            ::= { r8BrgStpPortInfoEntry 9 }

        r8StpRootPort  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stp Port root status"
            ::= { r8BrgStpPortInfoEntry 10 }

--
-- OCT-RT-B Bridge Add or Delete Interface Table
--

        r8BrgAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8BrgAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface to bridge group Table."
            ::= { r8Bridge 5 }

        r8BrgAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R8BrgAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface to bridge group Entry"
            INDEX { r8Index }
            ::= { r8BrgAddDelInterface 1 }

            R8BrgAddDelInterfaceEntry ::= SEQUENCE {
            r8BrgAddDelBrgName          DisplayString,
            r8BrgAddDelInterfaceName    DisplayString,
            r8BrgAddDelInterfaceCMD     INTEGER
        }

        r8BrgAddDelBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Name"
            ::= { r8BrgAddDelInterfaceEntry 2 }

        r8BrgAddDelInterfaceName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1-8/wan1-64/wanX pvc1-16)"
            ::= { r8BrgAddDelInterfaceEntry 3 }

        r8BrgAddDelInterfaceCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add interface to Bridge Mode or (delete)add interface
                to router mode"
            ::= { r8BrgAddDelInterfaceEntry 4 }

--
--  OCT-RT-B Interface Control Table
--

    r8Interface         OBJECT IDENTIFIER ::= { oct-rt-b-card 4 }

--
--  OCT-RT-B LAN
--

    r8IntfLAN           OBJECT IDENTIFIER ::= { r8Interface 1 }

--
-- R8 LAN Config Table
--

        r8LanCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8LanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LAN Config Table."
            ::= { r8IntfLAN 1 }

        r8LanCFGEntry  OBJECT-TYPE
            SYNTAX  R8LanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "LAN Config Entry"
            INDEX { r8Index ,
        r8LanIndex }
            ::= { r8LanCFG 1 }

            R8LanCFGEntry ::= SEQUENCE {
            r8LanIndex                  INTEGER,
            r8LanIPAddr                 DisplayString,
--               r8LanAliasIPAddr1
--                 DisplayString,
--               r8LanAliasIPAddr2
--                 DisplayString,
--               r8LanAliasIPAddr3
--                 DisplayString,
--               r8LanAliasIPAddr4
--                 DisplayString,
--               r8LanAliasIPAddr5
--                 DisplayString,
            r8LanRoutingProtocol        INTEGER,
            r8LanLayer2Protocol         INTEGER,
            r8LanSpeed                  INTEGER,
            r8LanInterfaceMode          INTEGER,
            r8LanInboundPolicy          DisplayString,
            r8LanOutboundPolicy         DisplayString,
            r8LanStatus                 DisplayString
        }

        r8LanIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    lan1(1),
                    lan2(2),
                    lan3(3),
                    lan4(4),
                    lan5(5),
                    lan6(6),
                    lan7(7),
                    lan8(8)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Index"
            ::= { r8LanCFGEntry 2 }

        r8LanIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8LanCFGEntry 3 }

--         r8LanAliasIPAddr1  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8LanCFGEntry 4 }
--
--         r8LanAliasIPAddr2  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8LanCFGEntry 5 }
--
--         r8LanAliasIPAddr3  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8LanCFGEntry 6 }
--
--         r8LanAliasIPAddr4  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8LanCFGEntry 7 }
--
--         r8LanAliasIPAddr5  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8LanCFGEntry 8 }

        r8LanRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table"
            ::= { r8LanCFGEntry 9 }

        r8LanLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    ethernet(1),
                    fast-ethernet(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Layer2 Protocol"
            ::= { r8LanCFGEntry 10 }

        r8LanSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    half-duplex-10M(1),
                    full-duplex-10M(2),
                    half-duplex-100M(3),
                    full-duplex-100M(4),
                    auto-negotiation(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Speed(10/100Mb ; half/full)"
            ::= { r8LanCFGEntry 11 }

        r8LanInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Interface Mode"
            ::= { r8LanCFGEntry 12 }

        r8LanInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan inbound policy (off to disable access control)"
            ::= { r8LanCFGEntry 13 }

        r8LanOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan outbound policy (off to disable access control)"
            ::= { r8LanCFGEntry 14 }

        r8LanStatus  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Lan Status"
            ::= { r8LanCFGEntry 15 }

--
-- OCT-RT-B Add or Delete Lan Alias IP Table
--

--         r8AddDelAliasIP  OBJECT-TYPE
--             SYNTAX  SEQUENCE OF R8AddDelAliasIPEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "Add or Delete Lan Alias IP Table."
--             ::= { r8IntfLAN 2 }
--
--         r8AddDelAliasIPEntry  OBJECT-TYPE
--             SYNTAX  R8AddDelAliasIPEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "Add or Delete Lan Alias IP Entry"
--             INDEX  { r8Index }
--             ::= { r8AddDelAliasIP 1 }
--
--         R8AddDelAliasIPEntry ::=
--             SEQUENCE {
--               r8AliasIPLanIndex
--                 INTEGER,
--               r8AliasIPAddr
--                 DisplayString,
--               r8AliasIPAddrCMD
--                 INTEGER
--             }
--
--         r8AliasIPLanIndex  OBJECT-TYPE
--             SYNTAX  INTEGER{
--                        lan1(1),
--                        lan2(2),
--                        lan3(3),
--                        lan4(4),
--                        lan5(5),
--                        lan6(6),
--                        lan7(7),
--                        lan8(8)
--                     }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "Lan Index"
--             ::= { r8AddDelAliasIPEntry 2 }
--
--         r8AliasIPAddr  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..20))
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "Alias IP Address(xxx.xxx.xxx.xxx/xx)"
--             ::= { r8AddDelAliasIPEntry 3 }
--
--         r8AliasIPAddrCMD  OBJECT-TYPE
--             SYNTAX  INTEGER{
--                        add(1),
--                        delete(2)
--                     }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "Add or Delete Alias IP Address"
--             ::= { r8AddDelAliasIPEntry 4 }

--
--  OCT-RT-B WAN
--

    r8IntfWAN           OBJECT IDENTIFIER ::= { r8Interface 2 }

--
-- OCT-RT-B  WAN Config Table
--

        r8WanCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN(1-64) Config Table."
            ::= { r8IntfWAN 1 }

        r8WanCFGEntry  OBJECT-TYPE
            SYNTAX  R8WanCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN(1-64) Config Entry"
            INDEX { r8Index ,
        r8WanIndex }
            ::= { r8WanCFG 1 }

            R8WanCFGEntry ::= SEQUENCE {
            r8WanIndex                  INTEGER,
            r8WanIPAddr                 DisplayString,
            r8WanRoutingProtocol        INTEGER,
            r8WanNatNapt                INTEGER,
            r8WanNumberOfTimeSlots      INTEGER,
            r8WanLayer2Protocol         INTEGER,
            r8WanInterfaceMode          INTEGER,
            r8WanInboundPolicy          DisplayString,
            r8WanOutboundPolicy         DisplayString,
            r8WanStatus                 INTEGER
        }

        r8WanIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface WAN1-WAN2"
            ::= { r8WanCFGEntry 2 }

        r8WanIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8WanCFGEntry 3 }

        r8WanRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN Routing Protocol"
            ::= { r8WanCFGEntry 4 }

        r8WanNatNapt  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN NAT/NAPT Function"
            ::= { r8WanCFGEntry 5 }

        r8WanNumberOfTimeSlots  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Number of TimeSlots for this WAN"
            ::= { r8WanCFGEntry 6 }

        r8WanLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    ppp(3),
                    hdlc(4),
                    frame-relay(5),
                    cisco-hdlc(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lan Layer2 Protocol"
            ::= { r8WanCFGEntry 7 }

        r8WanInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Interface Mode"
            ::= { r8WanCFGEntry 8 }

        r8WanInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan inbound policy (off to disable access control)"
            ::= { r8WanCFGEntry 9 }

        r8WanOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan outbound policy (off to disable access control)"
            ::= { r8WanCFGEntry 10 }

        r8WanStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Status"
            ::= { r8WanCFGEntry 11 }

--
-- OCT-RT-B  WAN Cisco Hdlc Config Table
--

        r8WanCiscoHdlc  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanCiscoHdlcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Cisco Hdlc Config Table."
            ::= { r8IntfWAN 2 }

        r8WanCiscoHdlcEntry  OBJECT-TYPE
            SYNTAX  R8WanCiscoHdlcEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Cisco Hdlc Config Entry"
            INDEX { r8Index ,
        r8WanIndex }
            ::= { r8WanCiscoHdlc 1 }

            R8WanCiscoHdlcEntry ::= SEQUENCE {
            r8WanChdlcInterval          INTEGER,
            r8WanChdlcTimeout           INTEGER,
            r8WanChdlcCMD               INTEGER
        }

        r8WanChdlcInterval  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..3600)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Keepalive interval (1-3600, default is 10 secs)"
            ::= { r8WanCiscoHdlcEntry 3 }

        r8WanChdlcTimeout  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface restart timeout(secs, should be multiple of interval)"
            ::= { r8WanCiscoHdlcEntry 4 }

        r8WanChdlcCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    set(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set Cisco Hdlc"
            ::= { r8WanCiscoHdlcEntry 5 }

--
-- OCT-RT-B  WAN Frame Relay Config Table
--

        r8WanFrameRelay  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanFrameRelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Frame Relay Config Table."
            ::= { r8IntfWAN 3 }

        r8WanFrameRelayEntry  OBJECT-TYPE
            SYNTAX  R8WanFrameRelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Frame Relay Config Entry"
            INDEX { r8Index ,
        r8WanIndex }
            ::= { r8WanFrameRelay 1 }

            R8WanFrameRelayEntry ::= SEQUENCE {
            r8WanFRLMIType              INTEGER,
            r8WanFRN391                 INTEGER,
            r8WanFRN392                 INTEGER,
            r8WanFRN393                 INTEGER,
            r8WanFRT391                 INTEGER
        }

        r8WanFRLMIType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0),
                    q933(1),
                    ansi(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frame Relay LMI protocol (ansi/q933)"
            ::= { r8WanFrameRelayEntry 3 }

        r8WanFRN391  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI full-status polling interval (1~255)"
            ::= { r8WanFrameRelayEntry 4 }

        r8WanFRN392  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI error threshold (1~10)"
            ::= { r8WanFrameRelayEntry 5 }

        r8WanFRN393  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI monitored event threshold (1~10)"
            ::= { r8WanFrameRelayEntry 6 }

        r8WanFRT391  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 5..30)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LMI link integrity polling interval (5~30)"
            ::= { r8WanFrameRelayEntry 7 }

--
--  OCT-RT-B  WAN PVC
--

    r8WanPVC            OBJECT IDENTIFIER ::= { r8IntfWAN 4 }

--
-- OCT-RT-B  WAN PVC Function Table
--

        r8WanAddDelPVC  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanAddDelPVCEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC Table"
            ::= { r8WanPVC 1 }

        r8WanAddDelPVCEntry  OBJECT-TYPE
            SYNTAX  R8WanAddDelPVCEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC Entry"
            INDEX { r8Index }
            ::= { r8WanAddDelPVC 1 }

            R8WanAddDelPVCEntry ::= SEQUENCE {
            r8PvcWanIndex               INTEGER,
            r8PvcNum                    INTEGER,
            r8PvcDLCI                   INTEGER,
            r8PvcCIR                    INTEGER,
            r8PvcBc                     INTEGER,
            r8PvcBe                     INTEGER,
            r8PvcQdepth                 INTEGER,
            r8WanPvcCMD                 INTEGER
        }

        r8PvcWanIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Wan number (wan1-wan64)"
            ::= { r8WanAddDelPVCEntry 2 }

        r8PvcNum  OBJECT-TYPE
            SYNTAX  INTEGER (0 | 1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC number (pvc1-pvc16)"
            ::= { r8WanAddDelPVCEntry 3 }

        r8PvcDLCI  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC's DLCI (16~991)"
            ::= { r8WanAddDelPVCEntry 4 }

        r8PvcCIR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Information Rate (kbps)"
            ::= { r8WanAddDelPVCEntry 5 }

        r8PvcBc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Burst Size (kbits)"
            ::= { r8WanAddDelPVCEntry 6 }

        r8PvcBe  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Excess Burst Size (kbits)"
            ::= { r8WanAddDelPVCEntry 7 }

        r8PvcQdepth  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Max. queue length"
            ::= { r8WanAddDelPVCEntry 8 }

        r8WanPvcCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    add-pvc(1),
                    delete-pvc(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete Frame Relay PVC for this wan interface"
            ::= { r8WanAddDelPVCEntry 9 }

--
-- OCT-RT-B WAN PVC Config Table
--

        r8WanPvcCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanPvcCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Config Table"
            ::= { r8WanPVC 2 }

        r8WanPvcCFGEntry  OBJECT-TYPE
            SYNTAX  R8WanPvcCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Config Entry"
            INDEX { r8Index ,
        r8WanIndex ,
        r8PvcIndex }
            ::= { r8WanPvcCFG 1 }

            R8WanPvcCFGEntry ::= SEQUENCE {
            r8PvcIndex                  INTEGER,
            r8WanPvcState               INTEGER,
            r8WanPvcIPAddr              DisplayString,
            r8WanPvcRoutingProtocol     INTEGER,
            r8WanPvcNatNapt             INTEGER,
            r8WanPvcInterfaceMode       INTEGER,
            r8WanPvcDLCI                INTEGER,
            r8WanPvcCIR                 INTEGER,
            r8WanPvcBc                  INTEGER,
            r8WanPvcBe                  INTEGER,
            r8WanPvcQdepth              INTEGER,
            r8WanPvcInboundPolicy       DisplayString,
            r8WanPvcOutboundPolicy      DisplayString
        }

        r8PvcIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The PVC number (pvc1-pvc16)"
            ::= { r8WanPvcCFGEntry 3 }

        r8WanPvcState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    inactive(1),
                    active(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC State"
            ::= { r8WanPvcCFGEntry 4 }

        r8WanPvcIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC IP address (xxx.xxx.xxx.xxx/xx)"
            ::= { r8WanPvcCFGEntry 5 }

        r8WanPvcRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Routing Protocol(OSPF enable/disable in r2OspfIntfAdminSetup Table)"
            ::= { r8WanPvcCFGEntry 6 }

        r8WanPvcNatNapt  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC NAT/NAPT Function"
            ::= { r8WanPvcCFGEntry 7 }

        r8WanPvcInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN PVC Interface Mode"
            ::= { r8WanPvcCFGEntry 8 }

        r8WanPvcDLCI  OBJECT-TYPE
            SYNTAX  INTEGER (16..991)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The PVC's DLCI (16~991)"
            ::= { r8WanPvcCFGEntry 9 }

        r8WanPvcCIR  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Information Rate (kbps)"
            ::= { r8WanPvcCFGEntry 10 }

        r8WanPvcBc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Committed Burst Size (kbits)"
            ::= { r8WanPvcCFGEntry 11 }

        r8WanPvcBe  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Excess Burst Size (kbits)"
            ::= { r8WanPvcCFGEntry 12 }

        r8WanPvcQdepth  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Max. queue length"
            ::= { r8WanPvcCFGEntry 13 }

        r8WanPvcInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Pvc inbound policy (off to disable access control)"
            ::= { r8WanPvcCFGEntry 14 }

        r8WanPvcOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Pvc outbound policy (off to disable access control)"
            ::= { r8WanPvcCFGEntry 15 }


--
--  OCT-RT-B WAN Channel Map
--

    r8WanChannelMap     OBJECT IDENTIFIER ::= { r8IntfWAN 5 }

--
-- OCT-RT-B WAN Set Channel Map Control
--

        r8WanSetMap  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanSetMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Set Channel Map Table"
            ::= { r8WanChannelMap 1 }

        r8WanSetMapEntry  OBJECT-TYPE
            SYNTAX  R8WanSetMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Set Channel Map Entry"
            INDEX { r8Index }
            ::= { r8WanSetMap 1 }

            R8WanSetMapEntry ::= SEQUENCE {
            r8MapWanNumber              INTEGER,
            r8StartTimeSlot             INTEGER,
            r8ChannelNumber             INTEGER,
            r8MapCommand                INTEGER
        }

        r8MapWanNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Index(wan1~wan64)"
            ::= { r8WanSetMapEntry 2 }

        r8StartTimeSlot  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set start time slot number"
            ::= { r8WanSetMapEntry 3 }

        r8ChannelNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set channel number"
            ::= { r8WanSetMapEntry 4 }

        r8MapCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    clear(1),
                    set(2),
                    clrSet(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Map Command"
            ::= { r8WanSetMapEntry 5 }

--
-- OCT-RT-B WAN Channel Map Info Table
--

        r8ChannelMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Channel Map Config Table"
            ::= { r8WanChannelMap 2 }

        r8ChannelMapEntry  OBJECT-TYPE
            SYNTAX  R8ChannelMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "WAN Channel Map Config Entry"
            INDEX { r8Index ,
        r8TimeSlotIndex }
            ::= { r8ChannelMapTable 1 }

            R8ChannelMapEntry ::= SEQUENCE {
            r8TimeSlotIndex             INTEGER,
            r8MapToWanNum               WanID
        }

        r8TimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..128)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot number"
            ::= { r8ChannelMapEntry 2 }

        r8MapToWanNum  OBJECT-TYPE
            SYNTAX  WanID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot number"
            ::= { r8ChannelMapEntry 3 }

--
--  OCT-RT-B WAN QoS Table
--

    r8WanQoS            OBJECT IDENTIFIER ::= { r8IntfWAN 6 }

--
-- R8 WAN Qos Policy Table
--
        r8WanQosPolicyTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanQosPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Table."
            ::= { r8WanQoS 1 }

        r8WanQosPolicyEntry  OBJECT-TYPE
            SYNTAX  R8WanQosPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Entry"
            INDEX { r8Index ,
        r8WanIndex ,
        r8WanQosPolicyNumber }
            ::= { r8WanQosPolicyTable 1 }

            R8WanQosPolicyEntry ::= SEQUENCE {
            r8WanQosPolicyNumber        INTEGER,
            r8WanQosPolicySrcIP         DisplayString,
            r8WanQosPolicyDstIP         DisplayString,
            r8WanQosPolicyProtocol      DisplayString,
            r8WanQosPolicyRate          DisplayString,
            r8WanQosPolicySrcPort       DisplayString,
            r8WanQosPolicyDstPort       DisplayString,
            r8WanQosPolicyDSCP          DisplayString
        }

        r8WanQosPolicyNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Qos Policy Number"
            ::= { r8WanQosPolicyEntry 3 }

        r8WanQosPolicySrcIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Source IP/Perfix"
            ::= { r8WanQosPolicyEntry 4 }

        r8WanQosPolicyDstIP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Destination IP/Perfix"
            ::= { r8WanQosPolicyEntry 5 }

        r8WanQosPolicyProtocol  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "WAN Qos Policy Protocol"
            ::= { r8WanQosPolicyEntry 6 }

        r8WanQosPolicyRate  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Rate"
            ::= { r8WanQosPolicyEntry 7 }

        r8WanQosPolicySrcPort  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Source Port"
            ::= { r8WanQosPolicyEntry 8 }

        r8WanQosPolicyDstPort  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Destination Port"
            ::= { r8WanQosPolicyEntry 9 }

        r8WanQosPolicyDSCP  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy DSCP Information"
            ::= { r8WanQosPolicyEntry 10 }

--
--  R8 WAN Qos Policy Control Table
--

    r8WanQosPolicyControl OBJECT IDENTIFIER ::= { r8WanQoS 2 }

--
-- R8 WAN Qos Append and Insert Policy Table
--

        r8WanQosAppendAndInsertPolicy  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanQosAppendAndInsertPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append od Insert a traffic control policy Table."
            ::= { r8WanQosPolicyControl 1 }

        r8WanQosAppendAndInsertPolicyEntry  OBJECT-TYPE
            SYNTAX  R8WanQosAppendAndInsertPolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append od Insert a traffic control policy Entry"
            INDEX { r8Index }
            ::= { r8WanQosAppendAndInsertPolicy 1 }

            R8WanQosAppendAndInsertPolicyEntry ::= SEQUENCE {
            r8WanAppInstPolicyWanNum    INTEGER (1..64),
            r8WanAppInstPolicySrcIP     DisplayString (SIZE (0..20)),
            r8WanAppInstPolicySrcIPPrefix   DisplayString (SIZE (0..2)),
            r8WanAppInstPolicyDstIP         DisplayString (SIZE (0..20)),
            r8WanAppInstPolicyDstIPPrefix   DisplayString (SIZE (0..2)),
            r8WanAppInstPolicySrcPort       DisplayString (SIZE (0..25)),
            r8WanAppInstPolicyDstPort       DisplayString (SIZE (0..25)),
            r8WanAppInstPolicyProtocol      DisplayString (SIZE (0..10)),
            r8WanAppInstPolicyRate          DisplayString (SIZE (0..25)),
            r8WanAppInstPolicyRateType      INTEGER,
            r8WanInstPolicyNum              INTEGER (0..32),
            r8WanAppInstPolicyDSCP          DisplayString (SIZE (0..255)),
            r8WanAppInstPolicyCommand       INTEGER
        }

        r8WanAppInstPolicyWanNum  OBJECT-TYPE
            SYNTAX  INTEGER   (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Number(Wan 1~64)"
            ::= { r8WanQosAppendAndInsertPolicyEntry 2 }

        r8WanAppInstPolicySrcIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source IP(xxx.xxx.xxx.xxx)"
            ::= { r8WanQosAppendAndInsertPolicyEntry 3 }

        r8WanAppInstPolicySrcIPPrefix  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..2))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source IP Prefix(skip if src_ip is 'any')"
            ::= { r8WanQosAppendAndInsertPolicyEntry 4 }

        r8WanAppInstPolicyDstIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination IP(xxx.xxx.xxx.xxx)"
            ::= { r8WanQosAppendAndInsertPolicyEntry 5 }

        r8WanAppInstPolicyDstIPPrefix  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..2))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination IP Prefix(skip if dst_ip is 'any')"
            ::= { r8WanQosAppendAndInsertPolicyEntry 6 }

        r8WanAppInstPolicySrcPort  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Source Port(any or min[-max] only for TCP/UDP, (no space before and after '-')"
            ::= { r8WanQosAppendAndInsertPolicyEntry 7 }

        r8WanAppInstPolicyDstPort  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Destination Port(any or min[-max] only for TCP/UDP, (no space before and after '-')"
            ::= { r8WanQosAppendAndInsertPolicyEntry 8 }

        r8WanAppInstPolicyProtocol  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Protocol(TCP or UDP or ICMP or Any or 0~255)"
            ::= { r8WanQosAppendAndInsertPolicyEntry 9 }

        r8WanAppInstPolicyRate  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..25))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Rate(Committed access rate in min[-max] format, (no space before and after '-') )"
            ::= { r8WanQosAppendAndInsertPolicyEntry 10 }

        r8WanAppInstPolicyRateType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    kbps(1),
                    mbps(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Rate Type(type of bandwidth for rate in bits per sec)"
            ::= { r8WanQosAppendAndInsertPolicyEntry 11 }

        r8WanInstPolicyNum  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy number before which new policy will be inserted"
            ::= { r8WanQosAppendAndInsertPolicyEntry 12 }

        r8WanAppInstPolicyCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    append(1),
                    insert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Qos Policy Command"
            ::= { r8WanQosAppendAndInsertPolicyEntry 13 }

        r8WanAppInstPolicyDSCP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optional Diffserv code point value(s) in decimal (space to separate DSCP values, but no space for '-')"
            ::= { r8WanQosAppendAndInsertPolicyEntry 14 }

--
-- R8 WAN Qos Delete Policy Table
--

        r8WanQosDeletePolicy  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8WanQosDeletePolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete a traffic control policy Table."
            ::= { r8WanQosPolicyControl 2 }

        r8WanQosDeletePolicyEntry  OBJECT-TYPE
            SYNTAX  R8WanQosDeletePolicyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete a traffic control policy Entry"
            INDEX { r8Index }
            ::= { r8WanQosDeletePolicy 1 }

            R8WanQosDeletePolicyEntry ::= SEQUENCE {
            r8WanDelPolicyWanNum        INTEGER (1..64),
            r8WanDelPolicyNumber        INTEGER (1..32),
            r8WanDelPolicyCommand       INTEGER
        }

        r8WanDelPolicyWanNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Wan Number(Wan 1~64)"
            ::= { r8WanQosDeletePolicyEntry 2 }

        r8WanDelPolicyNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Policy Number(1~32)"
            ::= { r8WanQosDeletePolicyEntry 3 }

        r8WanDelPolicyCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete Policy Command"
            ::= { r8WanQosDeletePolicyEntry 4 }

--
-- OCT-RT-B Virtual Interface
--

    r8IntfVirtual         OBJECT IDENTIFIER ::= { r8Interface 3 }

--
-- OCT-RT-B Virtual Interface Config
--

        r8VirtualIntfCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VirtualIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Configuration Table."
            ::= { r8IntfVirtual 1 }

        r8VirtualIntfCFGEntry  OBJECT-TYPE
            SYNTAX  R8VirtualIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Configuration Entry"
            INDEX { r8Index ,
        r8VIntfIndex }
            ::= { r8VirtualIntfCFG 1 }

            R8VirtualIntfCFGEntry ::= SEQUENCE {
            r8VIntfIndex                INTEGER,
            r8VIntfName                 DisplayString,
            r8VIntfRoutingProtocol      INTEGER,
            r8VIntfLayer2Protocol       INTEGER,
            r8VIntfInterfaceMode        INTEGER,
            r8VIntfInboundPolicy        DisplayString,
            r8VIntfOutboundPolicy       DisplayString,
            r8VIntfStatus               INTEGER
        }

        r8VIntfIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual interface index"
            ::= { r8VirtualIntfCFGEntry 2 }

        r8VIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual interface name"
            ::= { r8VirtualIntfCFGEntry 3 }

        r8VIntfRoutingProtocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rip1(1),
                    rip2(2),
                    ospf(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Routing Protocol(OSPF enable/disable in r8OspfIntfAdminSetup Table)"
            ::= { r8VirtualIntfCFGEntry 4 }

        r8VIntfLayer2Protocol  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ppp(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Layer2 Protocol"
            ::= { r8VirtualIntfCFGEntry 5 }

        r8VIntfInterfaceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    null(0),
                    router(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Mode of Virtual Interface"
            ::= { r8VirtualIntfCFGEntry 6 }

        r8VIntfInboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface inbound policy (off to disable access control)"
            ::= { r8VirtualIntfCFGEntry 7 }

        r8VIntfOutboundPolicy  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface outbound policy (off to disable access control)"
            ::= { r8VirtualIntfCFGEntry 8 }

        r8VIntfStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    up(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Virtual Interface Status"
            ::= { r8VirtualIntfCFGEntry 9 }


--
--  OCT-RT-B Policy
--

    r8Policy            OBJECT IDENTIFIER ::= { oct-rt-b-card 5 }

--
-- R8 Filter Info
--

        r8FilterInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8FilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "filter information Table"
            ::= { r8Policy 1 }

        r8FilterInfoEntry  OBJECT-TYPE
            SYNTAX  R8FilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "filter information Entry"
            INDEX { r8Index ,
        r8FilterIndex ,
        r8RuleIndex }
            ::= { r8FilterInfo 1 }

            R8FilterInfoEntry ::= SEQUENCE {
            r8FilterIndex               INTEGER,
            r8RuleIndex                 INTEGER,
            r8FilterName                DisplayString,
            r8FilterAction              INTEGER,
            r8FilterSrcAddr             DisplayString,
            r8FilterDestAddr            DisplayString,
            r8FilterProtocol            INTEGER,
            r8FilterPortLow             INTEGER,
            r8FilterPortHigh            INTEGER
        }

        r8FilterIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Filter List Index "
            ::= { r8FilterInfoEntry 2 }

        r8RuleIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "filter rule index"
            ::= { r8FilterInfoEntry 3 }

        r8FilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "filter list Name"
            ::= { r8FilterInfoEntry 4 }

        r8FilterAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    deny(1),
                    permit(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Filter action"
            ::= { r8FilterInfoEntry 5 }

        r8FilterSrcAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "source address of filter action (xx.xx.xx.xx/xx)"
            ::= { r8FilterInfoEntry 6 }

        r8FilterDestAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "destination address of filter action (xx.xx.xx.xx/xx)"
            ::= { r8FilterInfoEntry 7 }

        r8FilterProtocol  OBJECT-TYPE
            SYNTAX  INTEGER{
                    tcp(1),
                    udp(2),
                    icmp(3),
                    any(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "protocol of filter action"
            ::= { r8FilterInfoEntry 8 }

        r8FilterPortLow  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Low port of the port range for TCP/UDP"
            ::= { r8FilterInfoEntry 9 }

        r8FilterPortHigh  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "High port of the port range for TCP/UDP"
            ::= { r8FilterInfoEntry 10 }

--
-- OCT-RT-B Mac Filter Info
--

        r8MacFilterInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8MacFilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Mac filter information Table"
            ::= { r8Policy 2 }

        r8MacFilterInfoEntry  OBJECT-TYPE
            SYNTAX  R8MacFilterInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Mac filter information Entry"
            INDEX { r8Index ,
        r8MacFilterIndex ,
        r8MacFilterRuleIndex }
            ::= { r8MacFilterInfo 1 }

            R8MacFilterInfoEntry ::= SEQUENCE {
            r8MacFilterIndex            INTEGER,
            r8MacFilterRuleIndex        INTEGER,
            r8MacFilterName             DisplayString,
            r8MacFilterMacAddress       DisplayString
        }

        r8MacFilterIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter List Index "
            ::= { r8MacFilterInfoEntry 2 }

        r8MacFilterRuleIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "MAc Filter rule index"
            ::= { r8MacFilterInfoEntry 3 }

        r8MacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter list Name"
            ::= { r8MacFilterInfoEntry 4 }

        r8MacFilterMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter Mac Address"
            ::= { r8MacFilterInfoEntry 5 }

--
--  OCT-RT-B Filter Control
--

    r8FilterControl     OBJECT IDENTIFIER ::= { r8Policy 3 }

--
-- R8 Create & Destroy Filter list Table
--

        r8CreateDestroyFilter  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8CreateDestroyFilterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Filter List Table"
            ::= { r8FilterControl 1 }

        r8CreateDestroyFilterEntry  OBJECT-TYPE
            SYNTAX  R8CreateDestroyFilterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Filter List Entry"
            INDEX { r8Index }
            ::= { r8CreateDestroyFilter 1 }

            R8CreateDestroyFilterEntry ::= SEQUENCE {
            r8CreDesFilterName          DisplayString,
            r8CreDesFilterCMD           INTEGER
        }

        r8CreDesFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Filter List Name"
            ::= { r8CreateDestroyFilterEntry 2 }

        r8CreDesFilterCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    create-filter(1),
                    destroy-filter(2),
                    create-mac-filter(3),
                    destroy-mac-filter(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Filter List Command"
            ::= { r8CreateDestroyFilterEntry 3 }

--
-- R8 Add Filter Rule
--

        r8AddFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append filter rule Table"
            ::= { r8FilterControl 2 }

        r8AddFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R8AddFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append filter rule Entry"
            INDEX { r8Index }
            ::= { r8AddFilterRule 1 }

            R8AddFilterRuleEntry ::= SEQUENCE {
            r8AddFilterName             DisplayString,
            r8AddFilterAction           INTEGER,
            r8AddFilterSrcAddr          DisplayString,
            r8AddFilterDestAddr         DisplayString,
            r8AddFilterProtocol         INTEGER,
            r8AddFilterPortLow          INTEGER,
            r8AddFilterPortHigh         INTEGER,
            r8AddFilterRuleCMD          INTEGER
        }

        r8AddFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Filter List Name"
            ::= { r8AddFilterRuleEntry 2 }

        r8AddFilterAction  OBJECT-TYPE
            SYNTAX  INTEGER{
                    deny(1),
                    permit(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Filter action"
            ::= { r8AddFilterRuleEntry 3 }

        r8AddFilterSrcAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "source address of filter action (xx.xx.xx.xx/xx)"
            ::= { r8AddFilterRuleEntry 4 }

        r8AddFilterDestAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "destination address of filter action (xx.xx.xx.xx/xx)"
            ::= { r8AddFilterRuleEntry 5 }

        r8AddFilterProtocol  OBJECT-TYPE
            SYNTAX  INTEGER{
                    tcp(1),
                    udp(2),
                    icmp(3),
                    any(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "protocol of filter action"
            ::= { r8AddFilterRuleEntry 6 }

        r8AddFilterPortLow  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Low port of the port range for TCP/UDP"
            ::= { r8AddFilterRuleEntry 7 }

        r8AddFilterPortHigh  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "High port of the port range for TCP/UDP"
            ::= { r8AddFilterRuleEntry 8 }

        r8AddFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    append(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Append Filter rule"
            ::= { r8AddFilterRuleEntry 9 }

--
-- R8 Add Mac Filter Rule
--

        r8AddMacFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append Mac filter rule Table"
            ::= { r8FilterControl 3 }

        r8AddMacFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R8AddMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Append Mac filter rule Entry"
            INDEX { r8Index }
            ::= { r8AddMacFilterRule 1 }

            R8AddMacFilterRuleEntry ::= SEQUENCE {
            r8AddMacFilterName          DisplayString,
            r8AddMacFilterMacAddr       DisplayString,
            r8AddMacFilterRuleCMD       INTEGER
        }

        r8AddMacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter List Name"
            ::= { r8AddMacFilterRuleEntry 2 }

        r8AddMacFilterMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mac Filter Mac address"
            ::= { r8AddMacFilterRuleEntry 3 }

        r8AddMacFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    append(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Append Mac Filter rule"
            ::= { r8AddMacFilterRuleEntry 4 }

--
-- R8 Delete Filter Rule
--

        r8DelFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DelFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete filter rule Table"
            ::= { r8FilterControl 4 }

        r8DelFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R8DelFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete filter rule Entry"
            INDEX { r8Index }
            ::= { r8DelFilterRule 1 }

            R8DelFilterRuleEntry ::= SEQUENCE {
            r8DelFilterName             DisplayString,
            r8DelStartIndex             INTEGER,
            r8DelEndIndex               INTEGER,
            r8DelFilterRuleCMD          INTEGER
        }

        r8DelFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "filter list Name"
            ::= { r8DelFilterRuleEntry 2 }

        r8DelStartIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "start index of list which will be deleted"
            ::= { r8DelFilterRuleEntry 3 }

        r8DelEndIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "end index of list which will be deleted"
            ::= { r8DelFilterRuleEntry 4 }

        r8DelFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "delete filter rule command"
            ::= { r8DelFilterRuleEntry 5 }

--
-- R8 Delete Mac Filter Rule
--

        r8DelMacFilterRule  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DelMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete Mac filter rule Table"
            ::= { r8FilterControl 5 }

        r8DelMacFilterRuleEntry  OBJECT-TYPE
            SYNTAX  R8DelMacFilterRuleEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete Mac filter rule Entry"
            INDEX { r8Index }
            ::= { r8DelMacFilterRule 1 }

            R8DelMacFilterRuleEntry ::= SEQUENCE {
            r8DelMacFilterName          DisplayString,
            r8DelMacFilterMacAddr       DisplayString,
            r8DelMacFilterRuleCMD       INTEGER
        }

        r8DelMacFilterName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..10))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mac filter list Name"
            ::= { r8DelMacFilterRuleEntry 2 }

        r8DelMacFilterMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mac address"
            ::= { r8DelMacFilterRuleEntry 3 }

        r8DelMacFilterRuleCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "delete mac filter rule command"
            ::= { r8DelMacFilterRuleEntry 4 }



--
--  OCT-RT-B Route
--

    r8Route             OBJECT IDENTIFIER ::= { oct-rt-b-card 6 }

--
-- OCT-RT-B Static Route Table
--

        r8StaticRouteTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8StaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Static Route Table"
            ::= { r8Route 1 }

        r8StaticRouteEntry  OBJECT-TYPE
            SYNTAX  R8StaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Static Route Entry"
            INDEX { r8Index ,
        r8RouteIndex }
            ::= { r8StaticRouteTable 1 }

            R8StaticRouteEntry ::= SEQUENCE {
            r8RouteIndex                INTEGER,
            r8StaticRouteNetAddr        DisplayString,
            r8StaticRouteNetMask        DisplayString,
            r8StaticRouteGatewayAddr    DisplayString,
            r8StaticRouteInterface      DisplayString
        }

        r8RouteIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "routing table entry index"
            ::= { r8StaticRouteEntry 2 }

        r8StaticRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address"
            ::= { r8StaticRouteEntry 3 }

        r8StaticRouteNetMask  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route net mask"
            ::= { r8StaticRouteEntry 4 }

        r8StaticRouteGatewayAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route gateway Address"
            ::= { r8StaticRouteEntry 5 }

        r8StaticRouteInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Static route output interface"
            ::= { r8StaticRouteEntry 6 }

--
-- OCT-RT-B Add Static Route
--

        r8AddStaticRoute  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add static route Table"
            ::= { r8Route 2 }

        r8AddStaticRouteEntry  OBJECT-TYPE
            SYNTAX  R8AddStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add static route Entry"
            INDEX { r8Index }
            ::= { r8AddStaticRoute 1 }

            R8AddStaticRouteEntry ::= SEQUENCE {
            r8AddRouteNetAddr           DisplayString,
            r8AddRouteGatewayAddr       DisplayString,
            r8AddRouteInterface         DisplayString,
            r8AddSataicRouteCMD         INTEGER
        }

        r8AddRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8AddStaticRouteEntry 2 }

        r8AddRouteGatewayAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route gateway Address(xxx.xxx.xxx.xxx)"
            ::= { r8AddStaticRouteEntry 3 }

        r8AddRouteInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route output interface(lan1~2/wan1~wan64/wanX pvc1-16/brg_group)"
            ::= { r8AddStaticRouteEntry 4 }

        r8AddSataicRouteCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " add static route "
            ::= { r8AddStaticRouteEntry 5 }

--
-- OCT-RT-B Delete Static Route
--

        r8DelStaticRoute  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DelStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete static route Table"
            ::= { r8Route 3 }

        r8DelStaticRouteEntry  OBJECT-TYPE
            SYNTAX  R8DelStaticRouteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Delete static route Entry"
            INDEX { r8Index }
            ::= { r8DelStaticRoute 1 }

            R8DelStaticRouteEntry ::= SEQUENCE {
            r8DelRouteNetAddr           DisplayString,
            r8DelSataicRouteCMD         INTEGER
        }

        r8DelRouteNetAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Static route net Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8DelStaticRouteEntry 2 }

        r8DelSataicRouteCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    delete(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Delete static route"
            ::= { r8DelStaticRouteEntry 3 }


--
--  OCT-RT-B OSPF
--

    r8OSPF              OBJECT IDENTIFIER ::= { r8Route 4 }

--
-- OCT-RT-B OSPF General Table
--

        r8OspfGereralTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8OspfGereralEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Route OSPF General Config Table"
            ::= { r8OSPF 1 }

        r8OspfGereralEntry  OBJECT-TYPE
            SYNTAX  R8OspfGereralEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Route OSPF General Config Entry"
            INDEX { r8Index }
            ::= { r8OspfGereralTable 1 }

            R8OspfGereralEntry ::= SEQUENCE {
            r8OspfRedistribute          DisplayString (SIZE (1..50)),
            r8OspfRouterID              DisplayString (SIZE (1..20))
        }

        r8OspfRedistribute  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..50))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Redistributes (kernel | static | connected | rip | default | none)"
            ::= { r8OspfGereralEntry 2 }

        r8OspfRouterID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP address(xxx.xxx.xxx.xxx) that identifies this OSPF router"
            ::= { r8OspfGereralEntry 3 }

--
--  OCT-RT-B OSPF Area
--

    r8OspfArea          OBJECT IDENTIFIER ::= { r8OSPF 2 }

--
-- R8 OSPF Area Config
--

        r8OspfAreaCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8OspfAreaCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config"
            ::= { r8OspfArea 1 }

        r8OspfAreaCFGEntry  OBJECT-TYPE
            SYNTAX  R8OspfAreaCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Entry"
            INDEX { r8Index ,
        r8OspfAreaCfgIndex }
            ::= { r8OspfAreaCFG 1 }

            R8OspfAreaCFGEntry ::= SEQUENCE {
            r8OspfAreaCfgIndex          INTEGER,
            r8OspfAreaCfgAreaID         INTEGER,
            r8OspfAreaCfgAuthenticationType INTEGER,
            r8OspfAreaCfgAreaType           INTEGER,
            r8OspfAreaCfgCost               INTEGER (0..16777215)
        }

        r8OspfAreaCfgIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Index"
            ::= { r8OspfAreaCFGEntry 2 }

        r8OspfAreaCfgAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OSPF Area Config Area ID"
            ::= { r8OspfAreaCFGEntry 3 }

        r8OspfAreaCfgAuthenticationType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    password(2),
                    md5(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Authentication for an OSPF area"
            ::= { r8OspfAreaCFGEntry 4 }

        r8OspfAreaCfgAreaType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    stub(2),
                    stub-no-summary(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Designates an area as a stub area"
            ::= { r8OspfAreaCFGEntry 5 }

        r8OspfAreaCfgCost  OBJECT-TYPE
            SYNTAX  INTEGER (0..16777215)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Assign a specific cost to the default summary route used"
            ::= { r8OspfAreaCFGEntry 6 }

--
-- OCT-RT-B OSPF Add & Delete Area
--

        r8OspfAddDelArea  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8OspfAddDelAreaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area"
            ::= { r8OspfArea 2 }

        r8OspfAddDelAreaEntry  OBJECT-TYPE
            SYNTAX  R8OspfAddDelAreaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area Entry"
            INDEX { r8Index }
            ::= { r8OspfAddDelArea 1 }

            R8OspfAddDelAreaEntry ::= SEQUENCE {
            r8OspfAddDelAreaID          INTEGER,
            r8OspfAddDelAreaCommand     INTEGER
        }

        r8OspfAddDelAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area ID"
            ::= { r8OspfAddDelAreaEntry 2 }

        r8OspfAddDelAreaCommand  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add and Delete OSPF Area ID Command"
            ::= { r8OspfAddDelAreaEntry 3 }


--
--  OCT-RT-B OSPF Interface Table
--

    r8OspfInterface     OBJECT IDENTIFIER ::= { r8OSPF 3 }

--
-- OCT-RT-B OSPF Interface Config Table
--

        r8OspfIntfCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8OspfIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Config"
            ::= { r8OspfInterface 1 }

        r8OspfIntfCFGEntry  OBJECT-TYPE
            SYNTAX  R8OspfIntfCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Config Entry"
            INDEX { r8Index ,
        r8OspfIntfIndex }
            ::= { r8OspfIntfCFG 1 }

            R8OspfIntfCFGEntry ::= SEQUENCE {
            r8OspfIntfIndex             INTEGER,
            r8OspfIntfName              DisplayString (SIZE (0..20)),
            r8OspfIntfAdminStatus       INTEGER,
            r8OspfIntfAreaID            INTEGER,
            r8OspfIntfNetworkType       INTEGER,
            r8OspfIntfLinkCost          INTEGER (1..65535),
            r8OspfIntfTransmitDelay     INTEGER (1..65535),
            r8OspfIntfRouterPriority    INTEGER (0..255),
            r8OspfIntfHelloInterval     INTEGER (1..65535),
            r8OspfIntfRouterDeadInterval    INTEGER (1..65535),
            r8OspfIntfRetransmitInterval    INTEGER (1..65535),
            r8OspfIntfAuthMD5KeyID-Key      DisplayString (SIZE (0..20)),
            r8OspfIntfAuthPasswordTextKey   DisplayString (SIZE (0..8))
        }

        r8OspfIntfIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Index"
            ::= { r8OspfIntfCFGEntry 2 }

        r8OspfIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(Lan1~2/Wan1~64/Wanxx Pvc1~16)"
            ::= { r8OspfIntfCFGEntry 3 }

        r8OspfIntfAdminStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dsiable(1),
                    enable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The OSPF interface's administrative status"
            ::= { r8OspfIntfCFGEntry 4 }

        r8OspfIntfAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "A 32-bit integer uniquely identifying the area to which the interface connects."
            ::= { r8OspfIntfCFGEntry 5 }

        r8OspfIntfNetworkType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    broadcast(1),
                    point-to-point(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The OSPF interface type."
            ::= { r8OspfIntfCFGEntry 6 }

        r8OspfIntfLinkCost  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Explicitly specify the link cost of sending a packet"
            ::= { r8OspfIntfCFGEntry 7 }

        r8OspfIntfTransmitDelay  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for InfTransDelay value."
            ::= { r8OspfIntfCFGEntry 8 }

        r8OspfIntfRouterPriority  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RouterPriority integer value."
            ::= { r8OspfIntfCFGEntry 9 }

        r8OspfIntfHelloInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds between hello packets sent."
            ::= { r8OspfIntfCFGEntry 10 }

        r8OspfIntfRouterDeadInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for RouterDeadInterval timer."
            ::= { r8OspfIntfCFGEntry 11 }

        r8OspfIntfRetransmitInterval  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number of seconds for RxmtInterval timer value."
            ::= { r8OspfIntfCFGEntry 12 }

        r8OspfIntfAuthMD5KeyID-Key  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface MD5 Authentication KeyID/Key(KeyID:1~255, Key:up to 16 chars)"
            ::= { r8OspfIntfCFGEntry 13 }

        r8OspfIntfAuthPasswordTextKey  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Password Authentication Key"
            ::= { r8OspfIntfCFGEntry 14 }

--
-- OCT-RT-B OSPF Interface Admin Setup Table
--

        r8OspfIntfAdminSetup  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8OspfIntfAdminSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Admin Setup Table"
            ::= { r8OspfInterface 2 }

        r8OspfIntfAdminSetupEntry  OBJECT-TYPE
            SYNTAX  R8OspfIntfAdminSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OSPF Interface Admin Setup Entry"
            INDEX { r8Index }
            ::= { r8OspfIntfAdminSetup 1 }

            R8OspfIntfAdminSetupEntry ::= SEQUENCE {
            r8OspfIntfAdminSetupIntfName    DisplayString (SIZE (0..20)),
            r8OspfIntfAdminSetupAreaID      INTEGER,
            r8OspfIntfAdminSetupCMD         INTEGER
        }

        r8OspfIntfAdminSetupIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1~2/wan1~64/wanXX pvcXX)"
            ::= { r8OspfIntfAdminSetupEntry 2 }

        r8OspfIntfAdminSetupAreaID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface OSPF Area ID"
            ::= { r8OspfIntfAdminSetupEntry 3 }

        r8OspfIntfAdminSetupCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    disable-intf-ospf(1),
                    enable-intf-ospf(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface OSPF Admin Setup Command(Disable/Enable)"
            ::= { r8OspfIntfAdminSetupEntry 4 }



--
--  OCT-RT-B NAT
--

    r8NAT               OBJECT IDENTIFIER ::= { oct-rt-b-card 7 }

--
-- R8 NAT Interface Mode
--

        r8NatIFMode  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NatIFModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT interface mode status Table"
            ::= { r8NAT 1 }

        r8NatIFModeEntry  OBJECT-TYPE
            SYNTAX  R8NatIFModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT interface mode status Entry"
            INDEX { r8Index ,
        r8NatIFIndex }
            ::= { r8NatIFMode 1 }

            R8NatIFModeEntry ::= SEQUENCE {
            r8NatIFIndex                INTEGER,
            r8NatIFName                 DisplayString,
            r8NatMode                   INTEGER
        }

        r8NatIFIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT index"
            ::= { r8NatIFModeEntry 2 }

        r8NatIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r8NatIFModeEntry 3 }

        r8NatMode  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    nat(2),
                    napt(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT mode of interface"
            ::= { r8NatIFModeEntry 4 }

--
-- OCT-RT-B NAT IP Pool
--

        r8NatIPPool  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NatIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP Pool Table"
            ::= { r8NAT 2 }

        r8NatIPPoolEntry  OBJECT-TYPE
            SYNTAX  R8NatIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP Pool Entry"
            INDEX { r8Index ,
        r8NatIFIndex ,
        r8NatPoolIndex }
            ::= { r8NatIPPool 1 }

            R8NatIPPoolEntry ::= SEQUENCE {
            r8NatPoolIndex              INTEGER,
            r8NatPoolIFName             DisplayString,
            r8NatStartAddress           DisplayString,
            r8NatEndAddress             DisplayString
        }

        r8NatPoolIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "IP Pool index"
            ::= { r8NatIPPoolEntry 3 }

        r8NatPoolIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanX pvc1-16)"
            ::= { r8NatIPPoolEntry 4 }

        r8NatStartAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT start address"
            ::= { r8NatIPPoolEntry 5 }

        r8NatEndAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT end address"
            ::= { r8NatIPPoolEntry 6 }

--
-- R8 NAT Add or Delete IP Pool
--

        r8NatAddDelIPPool  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NatAddDelIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete NAT IP Pool Table"
            ::= { r8NAT 3 }

        r8NatAddDelIPPoolEntry  OBJECT-TYPE
            SYNTAX  R8NatAddDelIPPoolEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete NAT IP Pool Entry"
            INDEX { r8Index }
            ::= { r8NatAddDelIPPool 1 }

            R8NatAddDelIPPoolEntry ::= SEQUENCE {
            r8NatAddDelPoolIFName       DisplayString,
            r8NatAddDelPoolIndex        INTEGER,
            r8NatAddDelStartAddr        DisplayString,
            r8NatAddDelEndAddr          DisplayString,
            r8NatAddDelIPPoolCMD        INTEGER
        }

        r8NatAddDelPoolIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanx pvc1-16)"
            ::= { r8NatAddDelIPPoolEntry 2 }

        r8NatAddDelPoolIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete IP Pool index"
            ::= { r8NatAddDelIPPoolEntry 3 }

        r8NatAddDelStartAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT start address(xxx.xxx.xxx.xxx)"
            ::= { r8NatAddDelIPPoolEntry 4 }

        r8NatAddDelEndAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT end address(xxx.xxx.xxx.xxx)"
            ::= { r8NatAddDelIPPoolEntry 5 }

        r8NatAddDelIPPoolCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete IP Pool command"
            ::= { r8NatAddDelIPPoolEntry 6 }

--
-- OCT-RT-B NAT IP Static
--

        r8NatIPStatic  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NatIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static status Table"
            ::= { r8NAT 4 }

        r8NatIPStaticEntry  OBJECT-TYPE
            SYNTAX  R8NatIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static status Entry"
            INDEX { r8Index ,
        r8NatIFIndex ,
        r8NatIPStaticIndex }
            ::= { r8NatIPStatic 1 }

            R8NatIPStaticEntry ::= SEQUENCE {
            r8NatIPStaticIndex          INTEGER,
            r8NatIPStaticIFName         DisplayString,
            r8NatIPStaticPublicAddr     DisplayString,
            r8NatIPStaticPrivateAddr    DisplayString
        }

        r8NatIPStaticIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static index"
            ::= { r8NatIPStaticEntry 2 }

        r8NatIPStaticIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface name(wan1-64/wanx pvc1-16)"
            ::= { r8NatIPStaticEntry 3 }

        r8NatIPStaticPublicAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static public Address"
            ::= { r8NatIPStaticEntry 4 }

        r8NatIPStaticPrivateAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static private Address"
            ::= { r8NatIPStaticEntry 5 }

--
-- OCT-RT-B NAT Add or Delete IP Static
--

        r8NatAddDelIPStatic  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NatAddDelIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static Table"
            ::= { r8NAT 5 }

        r8NatAddDelIPStaticEntry  OBJECT-TYPE
            SYNTAX  R8NatAddDelIPStaticEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static Entry"
            INDEX { r8Index }
            ::= { r8NatAddDelIPStatic 1 }

            R8NatAddDelIPStaticEntry ::= SEQUENCE {
            r8NatAddDelIPStaticIFName   DisplayString,
            r8NatAddDelPublicAddr       DisplayString,
            r8NatAddDelPrivateAddr      DisplayString,
            r8NatAddDelIPStaticCMD      INTEGER
        }

        r8NatAddDelIPStaticIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(wan1-64/wanx pvc1-16)"
            ::= { r8NatAddDelIPStaticEntry 2 }

        r8NatAddDelPublicAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static public Address(xxx.xxx.xxx.xxx)"
            ::= { r8NatAddDelIPStaticEntry 3 }

        r8NatAddDelPrivateAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP static private Address(xxx.xxx.xxx.xxx)"
            ::= { r8NatAddDelIPStaticEntry 4 }

        r8NatAddDelIPStaticCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT add or delete IP static command"
            ::= { r8NatAddDelIPStaticEntry 5 }

--
-- OCT-RT-B NAPT Port Forwarding
--

        r8NaptPortForwarding  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NaptPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding Table"
            ::= { r8NAT 6 }

        r8NaptPortForwardingEntry  OBJECT-TYPE
            SYNTAX  R8NaptPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding Entry"
            INDEX { r8Index ,
        r8NaptIFIndex ,
        r8NaptPortFwdIndex }
            ::= { r8NaptPortForwarding 1 }

            R8NaptPortForwardingEntry ::= SEQUENCE {
            r8NaptIFIndex               INTEGER,
            r8NaptPortFwdIndex          INTEGER,
            r8NaptIFName                DisplayString,
            r8NaptPortFwdName           DisplayString,
            r8NaptPortFwdStartPort      INTEGER,
            r8NaptPortFwdEndPort        INTEGER,
            r8NaptPortFwdServerIP       DisplayString
        }

        r8NaptIFIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface index"
            ::= { r8NaptPortForwardingEntry 2 }

        r8NaptPortFwdIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "NAPT Port Forwarding entry index"
            ::= { r8NaptPortForwardingEntry 3 }

        r8NaptIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r8NaptPortForwardingEntry 4 }

        r8NaptPortFwdName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The NAPT entry name"
            ::= { r8NaptPortForwardingEntry 5 }

        r8NaptPortFwdStartPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Start Port number"
            ::= { r8NaptPortForwardingEntry 6 }

        r8NaptPortFwdEndPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "End Port number"
            ::= { r8NaptPortForwardingEntry 7 }

        r8NaptPortFwdServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The IP address of the service(xxx.xxx.xxx.xxx)"
            ::= { r8NaptPortForwardingEntry 8 }

--
-- OCT-RT-B NAPT Add or Delete Port Forwarding
--

        r8NaptAddDelPortForwarding  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8NaptAddDelPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Add or Delete Port Forwarding Table"
            ::= { r8NAT 7 }

        r8NaptAddDelPortForwardingEntry  OBJECT-TYPE
            SYNTAX  R8NaptAddDelPortForwardingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "NAPT Add or Delete Port Forwarding Entry"
            INDEX { r8Index }
            ::= { r8NaptAddDelPortForwarding 1 }

            R8NaptAddDelPortForwardingEntry ::= SEQUENCE {
            r8NaptAddDelIFName          DisplayString,
            r8NaptAddDelName            DisplayString,
            r8NaptAddDelStartPort       INTEGER,
            r8NaptAddDelEndPort         INTEGER,
            r8NaptAddDelServerIP        DisplayString,
            r8NaptAddDelPortFwdCMD      INTEGER
        }

        r8NaptAddDelIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r8NaptAddDelPortForwardingEntry 2 }

        r8NaptAddDelName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The NAPT entry name"
            ::= { r8NaptAddDelPortForwardingEntry 3 }

        r8NaptAddDelStartPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Start Port number"
            ::= { r8NaptAddDelPortForwardingEntry 4 }

        r8NaptAddDelEndPort  OBJECT-TYPE
            SYNTAX  INTEGER (1..1024)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "End Port number"
            ::= { r8NaptAddDelPortForwardingEntry 5 }

        r8NaptAddDelServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The IP address of the service(xxx.xxx.xxx.xxx)"
            ::= { r8NaptAddDelPortForwardingEntry 6 }

        r8NaptAddDelPortFwdCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAPT add or delete port forwarding command"
            ::= { r8NaptAddDelPortForwardingEntry 7 }


--
--  OCT-RT-B VLAN
--

    r8VLAN              OBJECT IDENTIFIER ::= { oct-rt-b-card 8 }

--
-- R8 VLAN State
--

        r8VlanState  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Table"
            ::= { r8VLAN 1 }

        r8VlanStateEntry  OBJECT-TYPE
            SYNTAX  R8VlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Entry"
            INDEX { r8Index ,
        r8BrgGroupID }
            ::= { r8VlanState 1 }

            R8VlanStateEntry ::= SEQUENCE {
            r8VlanBrgName               DisplayString,
            r8VlanEnable                INTEGER,
            r8VlanMgmtVID               INTEGER,
            r8VlanRegenCRC              INTEGER
        }

        r8VlanBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8VlanStateEntry 3 }

        r8VlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan state enable/disable"
            ::= { r8VlanStateEntry 4 }

        r8VlanMgmtVID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VLAN ID for the bridge management interface"
            ::= { r8VlanStateEntry 5 }

        r8VlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable CRC regenerating on WAN interfaces for VLAN frames"
            ::= { r8VlanStateEntry 6 }

--
-- OCT-RT-B VLAN Table
--


        r8VlanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan Table"
            ::= { r8VLAN 2 }

        r8VlanTableEntry  OBJECT-TYPE
            SYNTAX  R8VlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan Table Tag Member Entry"
            INDEX { r8Index ,
        r8BrgGroupID ,
        r8VlanID ,
        r8VlanTableIndex }
            ::= { r8VlanTable 1 }

            R8VlanTableEntry ::= SEQUENCE {
            r8VlanID                    INTEGER,
            r8VlanTableIndex            INTEGER,
            r8VlanTagMember             DisplayString,
            r8VlanUnTagMember           DisplayString
        }

        r8VlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan Index"
            ::= { r8VlanTableEntry 3 }

        r8VlanTableIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan Tag Index"
            ::= { r8VlanTableEntry 4 }

        r8VlanTagMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r8VlanTableEntry 5 }

        r8VlanUnTagMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r8VlanTableEntry 6 }

--
--  OCT-RT-B VLAN Table Control
--

    r8VlanTableControl  OBJECT IDENTIFIER ::= { r8VLAN 3 }

--
-- R8 VLAN Create and Destroy VLAN
--

        r8VlanCreateDestroyVlan  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan Table"
            ::= { r8VlanTableControl 1 }

        r8VlanCreateDestroyVlanEntry  OBJECT-TYPE
            SYNTAX  R8VlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan Entry"
            INDEX { r8Index }
            ::= { r8VlanCreateDestroyVlan 1 }

            R8VlanCreateDestroyVlanEntry ::= SEQUENCE {
            r8VlanCreateDestroyBrgName  DisplayString,
            r8VlanCreateDestroyVidNum   INTEGER,
            r8ValnCreateDestroyCMD      INTEGER
        }

        r8VlanCreateDestroyBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8VlanCreateDestroyVlanEntry 2 }

        r8VlanCreateDestroyVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan VID"
            ::= { r8VlanCreateDestroyVlanEntry 3 }

        r8ValnCreateDestroyCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    create-vlan(1),
                    destroy-vlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan command"
            ::= { r8VlanCreateDestroyVlanEntry 4 }

--
-- R8 VLAN Add and Delete Port
--

        r8VlanAddDelPort  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and del port Table"
            ::= { r8VlanTableControl 2 }

        r8VlanAddDelPortEntry  OBJECT-TYPE
            SYNTAX  R8VlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and del port Entry"
            INDEX { r8Index }
            ::= { r8VlanAddDelPort 1 }

            R8VlanAddDelPortEntry ::= SEQUENCE {
            r8VlanAddDelPortBrgName     DisplayString,
            r8VlanAddDelPortVidNum      INTEGER,
            r8VlanAddDelPortTag         INTEGER,
            r8VlanAddDelPortInterface   DisplayString,
            r8VlanAddDelPortCMD         INTEGER
        }

        r8VlanAddDelPortBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8VlanAddDelPortEntry 2 }

        r8VlanAddDelPortVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan VID"
            ::= { r8VlanAddDelPortEntry 3 }

        r8VlanAddDelPortTag  OBJECT-TYPE
            SYNTAX  INTEGER{
                    untag(1),
                    tag(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan member mask"
            ::= { r8VlanAddDelPortEntry 4 }

        r8VlanAddDelPortInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name (lan1~2/wan1~wan64/wanX pvc1-16)"
            ::= { r8VlanAddDelPortEntry 5 }

        r8VlanAddDelPortCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add-port-to-vlan(1),
                    delete-port-from-vlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan add and delete port command"
            ::= { r8VlanAddDelPortEntry 6 }


--
-- OCT-RT-B VLAN Port Table
--

        r8VlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8VlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Table"
            ::= { r8VLAN 4 }

        r8VlanPortTableEntry  OBJECT-TYPE
            SYNTAX  R8VlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Entry"
            INDEX { r8Index ,
        r8VlanPortIndex }
            ::= { r8VlanPortTable 1 }

            R8VlanPortTableEntry ::= SEQUENCE {
            r8VlanPortIndex             INTEGER,
            r8VlanPortIFName            DisplayString,
            r8VlanPortPVID              INTEGER,
            r8VlanPortFrameType         INTEGER,
            r8VlanPortIngressFilter     INTEGER
        }

        r8VlanPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan port index"
            ::= { r8VlanPortTableEntry 2 }

        r8VlanPortIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port type(lan1~2/wan1~wan64/wanX pvc1-16)"
            ::= { r8VlanPortTableEntry 3 }


        r8VlanPortPVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface PVID"
            ::= { r8VlanPortTableEntry 4 }

        r8VlanPortFrameType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    all(1),
                    tag-only(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Set the acceptable frame type"
            ::= { r8VlanPortTableEntry 5 }

        r8VlanPortIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable ingress filtering"
            ::= { r8VlanPortTableEntry 6 }
--Jass
--
--  OCT-RT-B DHCP
--

    r8DHCP              OBJECT IDENTIFIER ::= { oct-rt-b-card 9 }

--
--  R8 DHCP Server
--

    r8DHCPServer        OBJECT IDENTIFIER ::= { r8DHCP 1 }

--
-- R8 DHCP Server Config
--

        r8DhcpServerCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpServerCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Server Config Table"
            ::= { r8DHCPServer 1 }

        r8DhcpServerCFGEntry  OBJECT-TYPE
            SYNTAX  R8DhcpServerCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Server Config Entry"
            INDEX { r8Index }
            ::= { r8DhcpServerCFG 1 }

            R8DhcpServerCFGEntry ::= SEQUENCE {
            r8DhcpServer                INTEGER,
            r8DhcpServerInterface       DisplayString,
            r8DhcpServerBridgeMgmt      DisplayString
        }

        r8DhcpServer  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0),
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP function disable/enable"
            ::= { r8DhcpServerCFGEntry 2 }

        r8DhcpServerInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP interface config"
            ::= { r8DhcpServerCFGEntry 3 }

        r8DhcpServerBridgeMgmt  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP bridge mgmt"
            ::= { r8DhcpServerCFGEntry 4 }

--
-- R8 Add or Delete DHCP Server Interface
--

        r8DhcpServerAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpServerAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP interface Table"
            ::= { r8DHCPServer 2 }

        r8DhcpServerAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R8DhcpServerAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP interface Entry"
            INDEX { r8Index }
            ::= { r8DhcpServerAddDelInterface 1 }

            R8DhcpServerAddDelInterfaceEntry ::= SEQUENCE {
            r8DhcpServerAddDelIntfName  DisplayString,
            r8DhcpServerAddDelIntfCMD   INTEGER
        }

        r8DhcpServerAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name(lan1/lan2/bridge group name)"
            ::= { r8DhcpServerAddDelInterfaceEntry 2 }

        r8DhcpServerAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface command"
            ::= { r8DhcpServerAddDelInterfaceEntry 3 }

--
--  R8 DHCP Server Host Table
--

    r8DHCPHost          OBJECT IDENTIFIER ::= { r8DHCPServer 3 }

--
-- R8 DHCP Server Host Config Table
--

        r8DhcpHostCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpHostCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host config Table"
            ::= { r8DHCPHost 1 }

        r8DhcpHostCFGEntry OBJECT-TYPE
            SYNTAX  R8DhcpHostCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host config Entry"
            INDEX { r8Index ,
        r8DhcpHostIndex }
            ::= { r8DhcpHostCFG 1 }

            R8DhcpHostCFGEntry ::= SEQUENCE {
            r8DhcpHostIndex             INTEGER,
            r8DhcpHostName              DisplayString,
            r8DhcpHostHWType            INTEGER,
            r8DhcpHostHWAddr            DisplayString,
            r8DhcpHostFixedAddr         DisplayString,
            r8DhcpHostBootStrapFile     DisplayString,
            r8DhcpHostNextServer        DisplayString,
            r8DhcpHostClientIdentifier  DisplayString,
            r8DhcpHostDefLeaseTime      INTEGER
        }

        r8DhcpHostIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration index"
            ::= { r8DhcpHostCFGEntry 2 }

        r8DhcpHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration name"
            ::= { r8DhcpHostCFGEntry 3 }

        r8DhcpHostHWType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    null(0),
                    ethernet(1),
                    token-ring(2),
                    fddi(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host hardware type"
            ::= { r8DhcpHostCFGEntry 4 }

        r8DhcpHostHWAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..32))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host hardware address"
            ::= { r8DhcpHostCFGEntry 5 }

        r8DhcpHostFixedAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host address"
            ::= { r8DhcpHostCFGEntry 6 }

        r8DhcpHostBootStrapFile  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..128))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host bootstrap file"
            ::= { r8DhcpHostCFGEntry 7 }

        r8DhcpHostNextServer  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP next server in boot process"
            ::= { r8DhcpHostCFGEntry 8 }

        r8DhcpHostClientIdentifier  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..9))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host client identifier"
            ::= { r8DhcpHostCFGEntry 9 }

        r8DhcpHostDefLeaseTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host default duration of the lease"
            ::= { r8DhcpHostCFGEntry 10 }

--
-- R8 Add or Delete DHCP Server Host
--

        r8AddDelDhcpHost  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelDhcpHostEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host control Table"
            ::= { r8DHCPHost 2 }

        r8AddDelDhcpHostEntry  OBJECT-TYPE
            SYNTAX  R8AddDelDhcpHostEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host control Entry"
            INDEX { r8Index }
            ::= { r8AddDelDhcpHost 1 }

            R8AddDelDhcpHostEntry ::= SEQUENCE {
            r8AddDelDhcpHostName        DisplayString,
            r8DhcpHostCMD               INTEGER
        }

        r8AddDelDhcpHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host configuration name"
            ::= { r8AddDelDhcpHostEntry 2 }

        r8DhcpHostCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP host configuration"
            ::= { r8AddDelDhcpHostEntry 3 }

--
-- R8 DHCP Host Option
--

        r8DhcpHostOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option Table"
            ::= { r8DHCPHost 3 }

        r8DhcpHostOptionEntry  OBJECT-TYPE
            SYNTAX  R8DhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option Entry"
            INDEX { r8Index ,
        r8DhcpHostIndex ,
        r8DhcpHostOptionIndex }
            ::= { r8DhcpHostOption 1 }

            R8DhcpHostOptionEntry ::= SEQUENCE {
            r8DhcpHostOptionIndex       INTEGER,
            r8DhcpHostOptionHostName    DisplayString,
            r8DhcpHostOptionCode        INTEGER,
            r8DhcpHostOptionValue       DisplayString
        }

        r8DhcpHostOptionIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host Option index"
            ::= { r8DhcpHostOptionEntry 3 }

        r8DhcpHostOptionHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host name"
            ::= { r8DhcpHostOptionEntry 4 }

        r8DhcpHostOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option code"
            ::= { r8DhcpHostOptionEntry 5 }

        r8DhcpHostOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option value"
            ::= { r8DhcpHostOptionEntry 6 }

--
-- R8 Add or Delete DHCP Host Option
--

        r8AddDelDhcpHostOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelDhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option control Table"
            ::= { r8DHCPHost 4 }

        r8AddDelDhcpHostOptionEntry  OBJECT-TYPE
            SYNTAX  R8AddDelDhcpHostOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option control Entry"
            INDEX { r8Index }
            ::= { r8AddDelDhcpHostOption 1 }

            R8AddDelDhcpHostOptionEntry ::= SEQUENCE {
            r8AddDelHostOptionHostName  DisplayString,
            r8AddDelHostOptionCode      INTEGER,
            r8AddDelHostOptionValue     DisplayString,
            r8AddDelHostOptionCMD       INTEGER
        }

        r8AddDelHostOptionHostName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host name"
            ::= { r8AddDelDhcpHostOptionEntry 2 }

        r8AddDelHostOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option code"
            ::= { r8AddDelDhcpHostOptionEntry 3 }

        r8AddDelHostOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP host option value"
            ::= { r8AddDelDhcpHostOptionEntry 4 }

        r8AddDelHostOptionCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete DHCP host option command"
            ::= { r8AddDelDhcpHostOptionEntry 5 }

--
--  R8 DHCP Server Subnet Table
--

    r8DHCPSubnet        OBJECT IDENTIFIER ::= { r8DHCPServer 4 }

--
-- R8 DHCP Server Subnet Config-1 Table
--

        r8DhcpSubnetCFG1  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpSubnetCFG1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Table"
            ::= { r8DHCPSubnet 1 }

        r8DhcpSubnetCFG1Entry  OBJECT-TYPE
            SYNTAX  R8DhcpSubnetCFG1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Entry"
            INDEX { r8Index ,
        r8DhcpSubnetIndex }
            ::= { r8DhcpSubnetCFG1 1 }

            R8DhcpSubnetCFG1Entry ::= SEQUENCE {
            r8DhcpSubnetIndex           INTEGER,
            r8DhcpCfg1SubnetName        DisplayString,
            r8DhcpSubnetNetworkAddr     DisplayString,
            r8DhcpSubnetStartAddr       DisplayString,
            r8DhcpSubnetEndAddr         DisplayString,
            r8DhcpSubnetBootp           INTEGER,
            r8DhcpSubnetDefLeaseTime    INTEGER,
            r8DhcpSubnetBootStrapFile   DisplayString,
            r8DhcpSubnetNextServer      DisplayString
        }

        r8DhcpSubnetIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet index"
            ::= { r8DhcpSubnetCFG1Entry 2 }

        r8DhcpCfg1SubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8DhcpSubnetCFG1Entry 3 }

        r8DhcpSubnetNetworkAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet address/netmask(xxx.xxx.xxx.xxx/xx)"
            ::= { r8DhcpSubnetCFG1Entry 4 }

        r8DhcpSubnetStartAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet ip range(start)"
            ::= { r8DhcpSubnetCFG1Entry 5 }

        r8DhcpSubnetEndAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet ip range(end)"
            ::= { r8DhcpSubnetCFG1Entry 6 }

        r8DhcpSubnetBootp  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet bootp support"
            ::= { r8DhcpSubnetCFG1Entry 7 }

        r8DhcpSubnetDefLeaseTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default duration of the lease"
            ::= { r8DhcpSubnetCFG1Entry 8 }

        r8DhcpSubnetBootStrapFile  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..128))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet bootstrap file"
            ::= { r8DhcpSubnetCFG1Entry 9 }

        r8DhcpSubnetNextServer  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet next server in boot process"
            ::= { r8DhcpSubnetCFG1Entry 10 }

--
-- R8 DHCP Server Subnet Config-2 Table
--

        r8DhcpSubnetCFG2  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpSubnetCFG2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Table"
            ::= { r8DHCPSubnet 2 }

        r8DhcpSubnetCFG2Entry  OBJECT-TYPE
            SYNTAX  R8DhcpSubnetCFG2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet config Entry"
            INDEX { r8Index ,
        r8DhcpSubnetIndex }
            ::= { r8DhcpSubnetCFG2 1 }

            R8DhcpSubnetCFG2Entry ::= SEQUENCE {
            r8DhcpCfg2SubnetName        DisplayString,
            r8DhcpSubnetDomainName      DisplayString,
            r8DhcpSubnetDNSServer1      DisplayString,
            r8DhcpSubnetDNSServer2      DisplayString,
            r8DhcpSubnetDNSServer3      DisplayString,
            r8DhcpSubnetDNSServer4      DisplayString,
            r8DhcpSubnetDefRouter1      DisplayString,
            r8DhcpSubnetDefRouter2      DisplayString,
            r8DhcpSubnetDefRouter3      DisplayString,
            r8DhcpSubnetDefRouter4      DisplayString,
            r8DhcpSubnetNetbiosServer1  DisplayString,
            r8DhcpSubnetNetbiosServer2  DisplayString,
            r8DhcpSubnetNetbiosServer3  DisplayString,
            r8DhcpSubnetNetbiosServer4  DisplayString,
            r8DhcpSubnetNetbiosNode     INTEGER
        }

        r8DhcpCfg2SubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8DhcpSubnetCFG2Entry 3 }

        r8DhcpSubnetDomainName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name"
            ::= { r8DhcpSubnetCFG2Entry 4 }

        r8DhcpSubnetDNSServer1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 1"
            ::= { r8DhcpSubnetCFG2Entry 5 }

        r8DhcpSubnetDNSServer2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 2"
            ::= { r8DhcpSubnetCFG2Entry 6 }

        r8DhcpSubnetDNSServer3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 3"
            ::= { r8DhcpSubnetCFG2Entry 7 }

        r8DhcpSubnetDNSServer4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name server 4"
            ::= { r8DhcpSubnetCFG2Entry 8 }

        r8DhcpSubnetDefRouter1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 1"
            ::= { r8DhcpSubnetCFG2Entry 9 }

        r8DhcpSubnetDefRouter2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 2"
            ::= { r8DhcpSubnetCFG2Entry 10 }

        r8DhcpSubnetDefRouter3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 3"
            ::= { r8DhcpSubnetCFG2Entry 11 }

        r8DhcpSubnetDefRouter4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router 4"
            ::= { r8DhcpSubnetCFG2Entry 12 }

        r8DhcpSubnetNetbiosServer1  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 1"
            ::= { r8DhcpSubnetCFG2Entry 13 }

        r8DhcpSubnetNetbiosServer2  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 2"
            ::= { r8DhcpSubnetCFG2Entry 14 }

        r8DhcpSubnetNetbiosServer3  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 3"
            ::= { r8DhcpSubnetCFG2Entry 15 }

        r8DhcpSubnetNetbiosServer4  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet NBNS name server 4"
            ::= { r8DhcpSubnetCFG2Entry 16 }

        r8DhcpSubnetNetbiosNode  OBJECT-TYPE
            SYNTAX  INTEGER{
                    null(0),
                    b-node(1),
                    p-node(2),
                    m-node(4),
                    h-node(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios node type"
            ::= { r8DhcpSubnetCFG2Entry 17 }

--
-- R8 Add or Delete DHCP Subnet
--

        r8AddDelDhcpSubnet  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelDhcpSubnetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet control Table"
            ::= { r8DHCPSubnet 3 }

        r8AddDelDhcpSubnetEntry  OBJECT-TYPE
            SYNTAX  R8AddDelDhcpSubnetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet control Entry"
            INDEX { r8Index }
            ::= { r8AddDelDhcpSubnet 1 }

            R8AddDelDhcpSubnetEntry ::= SEQUENCE {
            r8AddDelDhcpSubnetName      DisplayString,
            r8DhcpSubnetCMD             INTEGER
        }

        r8AddDelDhcpSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet domain name"
            ::= { r8AddDelDhcpSubnetEntry 2 }

        r8DhcpSubnetCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet configuration"
            ::= { r8AddDelDhcpSubnetEntry 3 }

--
-- R8 Add or Delete DHCP Subnet DNS Server
--

        r8AddDelSubnetDNSServer  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelSubnetDNSServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server control Table"
            ::= { r8DHCPSubnet 4 }

        r8AddDelSubnetDNSServerEntry  OBJECT-TYPE
            SYNTAX  R8AddDelSubnetDNSServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server control Entry"
            INDEX { r8Index }
            ::= { r8AddDelSubnetDNSServer 1 }

            R8AddDelSubnetDNSServerEntry ::= SEQUENCE {
            r8AddDelDNSServerSubnetName DisplayString,
            r8AddDelDNSServerAddr       DisplayString,
            r8AddDelDNSSeverCMD         INTEGER
        }

        r8AddDelDNSServerSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8AddDelSubnetDNSServerEntry 2 }

        r8AddDelDNSServerAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet DNS Server Address"
            ::= { r8AddDelSubnetDNSServerEntry 3 }

        r8AddDelDNSSeverCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet DNS Server"
            ::= { r8AddDelSubnetDNSServerEntry 4 }

--
-- R8 Add or Delete DHCP Subnet Default Routers
--

        r8AddDelSubnetDefRouter  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelSubnetDefRouterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router control Table"
            ::= { r8DHCPSubnet 5 }

        r8AddDelSubnetDefRouterEntry  OBJECT-TYPE
            SYNTAX  R8AddDelSubnetDefRouterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router control Entry"
            INDEX { r8Index }
            ::= { r8AddDelSubnetDefRouter 1 }

            R8AddDelSubnetDefRouterEntry ::= SEQUENCE {
            r8AddDelDefRTRSubnetName    DisplayString,
            r8AddDelDefRouterAddr       DisplayString,
            r8AddDelDefRouterCMD        INTEGER
        }

        r8AddDelDefRTRSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8AddDelSubnetDefRouterEntry 2 }

        r8AddDelDefRouterAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet default router address"
            ::= { r8AddDelSubnetDefRouterEntry 3 }

        r8AddDelDefRouterCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet default router"
            ::= { r8AddDelSubnetDefRouterEntry 4 }

--
-- R8 Add or Delete DHCP Subnet Netbios Server
--

        r8AddDelSubnetNetbiosServer  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelSubnetNetbiosServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server control Table"
            ::= { r8DHCPSubnet 6 }

        r8AddDelSubnetNetbiosServerEntry  OBJECT-TYPE
            SYNTAX  R8AddDelSubnetNetbiosServerEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server control Entry"
            INDEX { r8Index }
            ::= { r8AddDelSubnetNetbiosServer 1 }

            R8AddDelSubnetNetbiosServerEntry ::= SEQUENCE {
            r8AddDelNetbSubnetName      DisplayString,
            r8AddDelNetbServerAddr      DisplayString,
            r8AddDelNetbServerCMD       INTEGER
        }

        r8AddDelNetbSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8AddDelSubnetNetbiosServerEntry 2 }

        r8AddDelNetbServerAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet netbios server address"
            ::= { r8AddDelSubnetNetbiosServerEntry 3 }

        r8AddDelNetbServerCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete a DHCP subnet netbios server"
            ::= { r8AddDelSubnetNetbiosServerEntry 4 }

--
-- R8 DHCP Subnet Option
--

        r8DhcpSubnetOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option Table"
            ::= { r8DHCPSubnet 7 }

        r8DhcpSubnetOptionEntry  OBJECT-TYPE
            SYNTAX  R8DhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option Entry"
            INDEX { r8Index ,
        r8DhcpSubnetIndex ,
        r8DhcpSubnetOptionIndex }
            ::= { r8DhcpSubnetOption 1 }

            R8DhcpSubnetOptionEntry ::= SEQUENCE {
            r8DhcpSubnetOptionIndex     INTEGER,
            r8DhcpSubnetOptSubnetName   DisplayString,
            r8DhcpSubnetOptionCode      INTEGER,
            r8DhcpSubnetOptionValue     DisplayString
        }

        r8DhcpSubnetOptionIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet Option index"
            ::= { r8DhcpSubnetOptionEntry 3 }

        r8DhcpSubnetOptSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8DhcpSubnetOptionEntry 4 }

        r8DhcpSubnetOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option code"
            ::= { r8DhcpSubnetOptionEntry 5 }

        r8DhcpSubnetOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option value"
            ::= { r8DhcpSubnetOptionEntry 6 }

--
-- R8 Add or Delete DHCP Subnet Option
--

        r8AddDelDhcpSubnetOption  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8AddDelDhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option control Table"
            ::= { r8DHCPSubnet 8 }

        r8AddDelDhcpSubnetOptionEntry  OBJECT-TYPE
            SYNTAX  R8AddDelDhcpSubnetOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option control Entry"
            INDEX { r8Index }
            ::= { r8AddDelDhcpSubnetOption 1 }

            R8AddDelDhcpSubnetOptionEntry ::= SEQUENCE {
            r8AddDelSubnetOptSubnetName DisplayString,
            r8AddDelSubnetOptionCode    INTEGER,
            r8AddDelSubnetOptionValue   DisplayString,
            r8AddDelSubnetOptionCMD     INTEGER
        }

        r8AddDelSubnetOptSubnetName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet name"
            ::= { r8AddDelDhcpSubnetOptionEntry 2 }

        r8AddDelSubnetOptionCode  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option code"
            ::= { r8AddDelDhcpSubnetOptionEntry 3 }

        r8AddDelSubnetOptionValue  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP subnet option value"
            ::= { r8AddDelDhcpSubnetOptionEntry 4 }

        r8AddDelSubnetOptionCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete DHCP subnet option"
            ::= { r8AddDelDhcpSubnetOptionEntry 5 }

--
--  R8 DHCP Relay
--

    r8DHCPRelay         OBJECT IDENTIFIER ::= { r8DHCP 2 }

--
-- R8 DHCP Relay Config
--

        r8DhcpRelayCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpRelayCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Config Table"
            ::= { r8DHCPRelay 1 }

        r8DhcpRelayCFGEntry  OBJECT-TYPE
            SYNTAX  R8DhcpRelayCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Config Entry"
            INDEX { r8Index }
            ::= { r8DhcpRelayCFG 1 }

            R8DhcpRelayCFGEntry ::= SEQUENCE {
            r8DhcpRelay                 INTEGER,
            r8DhcpRelayServerIP         DisplayString,
            r8DhcpRelayInterface        DisplayString,
            r8DhcpRelayBridgeMgmt       DisplayString
        }

        r8DhcpRelay  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0),
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay function disable/enable"
            ::= { r8DhcpRelayCFGEntry 2 }

        r8DhcpRelayServerIP  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DHCP Relay Server IP"
            ::= { r8DhcpRelayCFGEntry 3 }

        r8DhcpRelayInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay interface"
            ::= { r8DhcpRelayCFGEntry 4 }

        r8DhcpRelayBridgeMgmt  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DHCP relay bridge mgmt"
            ::= { r8DhcpRelayCFGEntry 5 }

--
-- R8 Add or Delete DHCP Relay Interface
--

        r8DhcpRelayAddDelInterface  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8DhcpRelayAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP Relay interface Table"
            ::= { r8DHCPRelay 2 }

        r8DhcpRelayAddDelInterfaceEntry  OBJECT-TYPE
            SYNTAX  R8DhcpRelayAddDelInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add or Delete DHCP Relay interface Entry"
            INDEX { r8Index }
            ::= { r8DhcpRelayAddDelInterface 1 }

            R8DhcpRelayAddDelInterfaceEntry ::= SEQUENCE {
            r8DhcpRelayAddDelIntfName   DisplayString,
            r8DhcpRelayAddDelIntfCMD    INTEGER
        }

        r8DhcpRelayAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r8DhcpRelayAddDelInterfaceEntry 2 }

        r8DhcpRelayAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add or delete interface command"
            ::= { r8DhcpRelayAddDelInterfaceEntry 3 }

--
--  R8 MultiLink
--

    r8MultiLink            OBJECT IDENTIFIER ::= { oct-rt-b-card 10 }

--
-- R8 MultiLink Config Table
--

        r8MultiLinkCFG  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8MultiLinkCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MultiLink Config Table."
            ::= { r8MultiLink 1 }

        r8MultiLinkCFGEntry  OBJECT-TYPE
            SYNTAX  R8MultiLinkCFGEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "MultiLink Config Entry"
            INDEX { r8Index ,
        r8MLinkIndex }
            ::= { r8MultiLinkCFG 1 }

            R8MultiLinkCFGEntry ::= SEQUENCE {
            r8MLinkIndex                INTEGER,
            r8MLinkName                 DisplayString,
            r8MLinkIPAddr               DisplayString,
            r8MLinkBundles              DisplayString,
            r8MLinkInterval             INTEGER,
            r8MLinkTimes                INTEGER
        }

        r8MLinkIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Index"
            ::= { r8MultiLinkCFGEntry 2 }

        r8MLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Virtual Name"
            ::= { r8MultiLinkCFGEntry 3 }

        r8MLinkIPAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink IP Address(xxx.xxx.xxx.xxx/xx)"
            ::= { r8MultiLinkCFGEntry 4 }

        r8MLinkBundles  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Multilink Boundles Interface"
            ::= { r8MultiLinkCFGEntry 5 }

        r8MLinkInterval  OBJECT-TYPE
            SYNTAX  INTEGER (5..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink The Retry Interval"
            ::= { r8MultiLinkCFGEntry 6 }

        r8MLinkTimes  OBJECT-TYPE
            SYNTAX  INTEGER (6..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Multilink The Retry Times"
            ::= { r8MultiLinkCFGEntry 7 }

--
-- R8 Create and Destroy Multilink
--

        r8CreateDestroyMultiLink  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8CreateDestroyMultiLinkEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy MultiLink Table."
            ::= { r8MultiLink 2 }

        r8CreateDestroyMultiLinkEntry  OBJECT-TYPE
            SYNTAX  R8CreateDestroyMultiLinkEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and Destroy Multilin Entry"
            INDEX { r8Index }
            ::= { r8CreateDestroyMultiLink 1 }

            R8CreateDestroyMultiLinkEntry ::= SEQUENCE {
            r8CreateDestroyMLinkName    DisplayString,
            r8CreateDestroyMLinkCMD     INTEGER
        }

        r8CreateDestroyMLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create/Destroy Multilink Name"
            ::= { r8CreateDestroyMultiLinkEntry 2 }

        r8CreateDestroyMLinkCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    create(1),
                    destroy(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create/Destory Multilink Command"
            ::= { r8CreateDestroyMultiLinkEntry 3 }

--
-- R8 MultiLink Add/Delete Interface Table
--

        r8MultiLinkAddDeleteInterface OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8MultiLinkAddDeleteInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interfaces To Multilink Bundle Table"
            ::= { r8MultiLink 3 }

        r8MultiLinkAddDeleteInterfaceEntry  OBJECT-TYPE
            SYNTAX  R8MultiLinkAddDeleteInterfaceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interfaces To Multilink Bundle Entry"
            INDEX { r8Index }
            ::= { r8MultiLinkAddDeleteInterface 1 }

            R8MultiLinkAddDeleteInterfaceEntry ::= SEQUENCE {
            r8MLinkAddDelMLinkName      DisplayString,
            r8MLinkAddDelIntfName       DisplayString,
            r8MLinkAddDelIntfCMD        INTEGER
        }

        r8MLinkAddDelMLinkName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interface MultiLink Name"
            ::= { r8MultiLinkAddDeleteInterfaceEntry 2 }

        r8MLinkAddDelIntfName  OBJECT-TYPE
            SYNTAX  DisplayString(SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete Interfaces(wan1~wan64) to Multilink Bundle"
            ::= { r8MultiLinkAddDeleteInterfaceEntry 3 }

        r8MLinkAddDelIntfCMD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    add(1),
                    delete(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Add/Delete interfaces To/From Multilink Bundle"
            ::= { r8MultiLinkAddDeleteInterfaceEntry 4 }


--==================================================
--  R8SVLAN
--==================================================
    r8svlan         OBJECT IDENTIFIER ::= { oct-rt-b-card 11 }
--==================================================
--  R8SVLAN State
--==================================================

        r8svlanState  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8SvlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan state Table"
            ::= { r8svlan 1 }

        r8svlanStateEntry  OBJECT-TYPE
            SYNTAX  R8SvlanStateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Svlan state Entry"
            INDEX { r8ssIndex , r8svlanBrgGroupID }
            ::= { r8svlanState 1 }


            R8SvlanStateEntry ::= SEQUENCE {
            r8ssIndex                   LargeSlotIndex,
            r8svlanBrgGroupID           INTEGER,
            r8svlanBrgName              DisplayString,
            r8svlanEnable               INTEGER,
            r8svlanMgmtSVID             INTEGER,
            r8svlanRegenCRC             INTEGER,
            r8svlanTPID                 DisplayString,
            r8svlanPCP                  INTEGER,
            r8svlanDEI                  INTEGER
        }
        r8ssIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8svlanStateEntry 1 }

        r8svlanBrgGroupID  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group ID"
            ::= { r8svlanStateEntry 2 }

        r8svlanBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8svlanStateEntry 3 }

        r8svlanEnable  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan state enable/disable"
            ::= { r8svlanStateEntry 4 }

        r8svlanMgmtSVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVLAN ID for the bridge management interface"
            ::= { r8svlanStateEntry 5 }

        r8svlanRegenCRC  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable CRC regenerating on WAN interfaces for SVLAN frames"
            ::= { r8svlanStateEntry 6 }

        r8svlanTPID  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (1..4))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TPID "
            ::= { r8svlanStateEntry 7 }

        r8svlanPCP  OBJECT-TYPE
            SYNTAX  INTEGER(0..7)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Priority Code Point"
            ::= { r8svlanStateEntry 8 }

        r8svlanDEI  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Drop Eligible Indicato"
            ::= { r8svlanStateEntry 9 }

--==================================================
-- R8SVLAN Table
--==================================================


        r8svlanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8SvlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan Table"
            ::= { r8svlan 2 }

        r8svlanTableEntry  OBJECT-TYPE
            SYNTAX  R8SvlanTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Svlan Table Tag Member Entry"
            INDEX { r8stIndex ,
        r8svlanTableBrgGroupID ,
        r8svlanID ,
        r8svlanTableIndex
    }
            ::= { r8svlanTable 1 }

            R8SvlanTableEntry ::= SEQUENCE {
            r8stIndex                   LargeSlotIndex,
            r8svlanTableBrgGroupID      INTEGER,
            r8svlanID                   INTEGER,
            r8svlanTableIndex           INTEGER,
            r8svlanMember               DisplayString
        }
        r8stIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8svlanTableEntry 1 }

        r8svlanTableBrgGroupID OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bridge Group Index"
            ::= { r8svlanTableEntry 2 }

        r8svlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { r8svlanTableEntry 3 }

        r8svlanTableIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Member Index"
            ::= { r8svlanTableEntry 4 }

        r8svlanMember  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..200))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan member"
            ::= { r8svlanTableEntry 5 }

--=========================================================
--  SVLAN Table Control
--=========================================================

    r8svlanTableControl  OBJECT IDENTIFIER ::= { r8svlan 3 }

--=========================================================
--  SVLAN Create and Destroy
--=========================================================

        r8svlanCreateDestroyVlan  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8SvlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy svlan Table"
            ::= { r8svlanTableControl 1 }

        r8svlanCreateDestroyVlanEntry  OBJECT-TYPE
            SYNTAX  R8SvlanCreateDestroyVlanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy svlan Entry"
            INDEX { r8scIndex }
            ::= { r8svlanCreateDestroyVlan 1 }

            R8SvlanCreateDestroyVlanEntry ::= SEQUENCE {
            r8scIndex                    LargeSlotIndex,
            r8svlanCreateDestroyBrgName  DisplayString,
            r8svlanCreateDestroyVidNum   INTEGER,
            r8svlanCreateDestroyCMD      INTEGER
        }
        r8scIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8svlanCreateDestroyVlanEntry 1 }

        r8svlanCreateDestroyBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8svlanCreateDestroyVlanEntry 2 }

        r8svlanCreateDestroyVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Vlan VID"
            ::= { r8svlanCreateDestroyVlanEntry 3 }

        r8svlanCreateDestroyCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    create-svlan(1),
                    destroy-svlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Create and destroy vlan command"
            ::= { r8svlanCreateDestroyVlanEntry 4 }



--=========================================================
--  SVLAN Add and Delete Port
--=========================================================


        r8svlanAddDelPort  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8SvlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and del port Table"
            ::= { r8svlanTableControl 2 }

        r8svlanAddDelPortEntry  OBJECT-TYPE
            SYNTAX  R8SvlanAddDelPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and del port Entry"
            INDEX { r8saIndex }
            ::= { r8svlanAddDelPort 1 }

            R8SvlanAddDelPortEntry ::= SEQUENCE {
            r8saIndex                                                      LargeSlotIndex,
            r8svlanAddDelPortBrgName     DisplayString,
            r8svlanAddDelPortVidNum      INTEGER,
            r8svlanAddDelPortInterface   DisplayString,
            r8svlanAddDelPortCMD         INTEGER
        }
        r8saIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8svlanAddDelPortEntry 1 }

        r8svlanAddDelPortBrgName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..8))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bridge group name"
            ::= { r8svlanAddDelPortEntry 2 }

        r8svlanAddDelPortVidNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan VID"
            ::= { r8svlanAddDelPortEntry 3 }

        r8svlanAddDelPortInterface  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..16))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface Name"
            ::= { r8svlanAddDelPortEntry 4 }

        r8svlanAddDelPortCMD  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(0), --//RIKER2021 SilverCreek
                    add-port-to-svlan(1),
                    delete-port-from-svlan(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SVlan add and delete port command"
            ::= { r8svlanAddDelPortEntry 5 }

--=========================================================
-- SVLAN Port Table
--=========================================================

        r8svlanPortTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF R8SvlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Table"
            ::= { r8svlan 4 }

        r8svlanPortTableEntry  OBJECT-TYPE
            SYNTAX  R8SvlanPortTableEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan port table control Entry"
            INDEX { r8spIndex , r8svlanPortIndex }
            ::= { r8svlanPortTable 1 }

            R8SvlanPortTableEntry ::= SEQUENCE {
            r8spIndex                   LargeSlotIndex,
            r8svlanPortIndex            INTEGER,
            r8svlanPortIFName           DisplayString,
            r8svlanPortPVID             INTEGER,
            r8svlanPortType             INTEGER,
            r8svlanPortIngressFilter    INTEGER
        }
        r8spIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { r8svlanPortTableEntry 1 }

        r8svlanPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan port index"
            ::= { r8svlanPortTableEntry 2 }

        r8svlanPortIFName  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface name"
            ::= { r8svlanPortTableEntry 3 }


        r8svlanPortPVID  OBJECT-TYPE
            SYNTAX  INTEGER (0..4094) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface PVID"
            ::= { r8svlanPortTableEntry 4 }

        r8svlanPortType  OBJECT-TYPE
            SYNTAX  INTEGER{
                    na(0), --//RIKER2021 SilverCreek
                    provider(1),
                    customer(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "the acceptable port type"
            ::= { r8svlanPortTableEntry 5 }

        r8svlanPortIngressFilter  OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable/disable ingress filtering"
            ::= { r8svlanPortTableEntry 6 }


        r8TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of RTB"
            ::= { oct-rt-b-card 100 }




--======================================================================--
--  ts_card MIB


--
--    The NI table
--
        tsNiControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS NI Configuration Control Table"
            ::= { ts-card 1 }

        tsNiControlEntry  OBJECT-TYPE
            SYNTAX  TsNiControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS NI configuration control entry"
            INDEX { tsPortIndex ,
        tsNetIndex }
            ::= { tsNiControlTable 1 }

            TsNiControlEntry ::= SEQUENCE {
            tsPortIndex                 SmallSlotIndex,
            tsNetIndex                  INTEGER,
            tsIPAddr                    IpAddress,
            tsSubnetMask                IpAddress,
            tsFrame                     INTEGER,
            tsRIP1                      INTEGER,
            tsRIP2                      INTEGER,
            tsMode                      INTEGER
        }

        tsPortIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { tsNiControlEntry 1 }

        tsNetIndex OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte1(1),
                    dte2(2),
                    dte3(3),
                    wan1(4),
                    wan2(5),
                    wan3(6),
                    wan4(7),
                    wan5(8),
                    wan6(9),
                    wan7(10),
                    wan8(11),
                    wan9(12),
                    wan10(13),
                    wan11(14),
                    wan12(15),
                    wan13(16),
                    wan14(17),
                    wan15(18),
                    wan16(19),
                    wan17(20),
                    wan18(21),
                    wan19(22),
                    wan20(23),
                    wan21(24),
                    wan22(25),
                    wan23(26),
                    wan24(27),
                    wan25(28),
                    wan26(29),
                    wan27(30),
                    wan28(31),
                    wan29(32),
                    wan30(33),
                    wan31(34),
                    wan32(35)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS Ni index"
            ::= { tsNiControlEntry 2}

        tsIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS IP Address"
            ::= { tsNiControlEntry 3}

        tsSubnetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS  net mask"
            ::= { tsNiControlEntry 4}

        tsFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2),
--                      fr(3),
                    slip-async(5),
                    raw-async(6),
                    ppp-sync(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS Layer2 frame"
            ::= { tsNiControlEntry 5}

        tsRIP1 OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS RIP1"
            ::= { tsNiControlEntry 6}

        tsRIP2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS RIP2"
            ::= { tsNiControlEntry 7}

        tsMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    route(1),
                    bridge(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS mode"
            ::= { tsNiControlEntry 8}

--
--    The DTE table
--
        tsDteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsDteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS DTE Configuration Control Table"
            ::= { ts-card 2 }

        tsDteControlEntry  OBJECT-TYPE
            SYNTAX  TsDteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS DTE configuration control entry"
            INDEX { tsPortIndex ,
        tsDTEindex }
            ::= { tsDteControlTable 1 }

            TsDteControlEntry ::= SEQUENCE {
            tsDTEindex                  INTEGER,
            tsDTEFrame                  INTEGER,
            tsSpeed                     INTEGER,
            tsDataBits                  INTEGER,
            tsStopBits                  INTEGER,
            tsParity                    INTEGER,
            tsDestIPAddr                IpAddress,
            tsDestIPAddr2               IpAddress,
            tsDestIPAddr3               IpAddress,
            tsDestIPAddr4               IpAddress,
            tsDestIPAddr5               IpAddress,
            tsDTEMode                   INTEGER
        }

        tsDTEindex OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte1(1),
                    dte2(2),
                    dte3(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS Dte index"
            ::= { tsDteControlEntry 1}

        tsDTEFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
--                        hdlc(1),
--                        ppp(2),
--                        fr(3),
                    slip-async(5),
                    raw-async(6),
                    ppp-sync(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Layer2 frame"
            ::= { tsDteControlEntry 2}

        tsSpeed  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate-38400(1),
                    rate-19200(2),
                    rate-9600(3),
                    rate-4800(4),
                    rate-2400(5),
                    rate-1200(6),
                    rate-64K(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Baud Rate"
            ::= { tsDteControlEntry 3}

        tsDataBits  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-8-bits(1),
                    data-7-bits(2),
                    null(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Data bits"
            ::= { tsDteControlEntry 4}

        tsStopBits  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop-1-bit(1),
                    stop-2-bits(2),
                    null(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Stop bits"
            ::= { tsDteControlEntry 5}

        tsParity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    even(2),
                    odd(3),
                    null(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Parity check "
            ::= { tsDteControlEntry 6}

        tsDestIPAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS 1st IP Address"
            ::= { tsDteControlEntry 7}

        tsDestIPAddr2   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS 2nd IP Address"
            ::= { tsDteControlEntry 8}

        tsDestIPAddr3   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS 3rd IP Address"
            ::= { tsDteControlEntry 9}

        tsDestIPAddr4   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS 4th IP Address"
            ::= { tsDteControlEntry 10}

        tsDestIPAddr5   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS 5th IP Address"
            ::= { tsDteControlEntry 11}

        tsDTEMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    server(1),
                    client(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS DTE Mode "
            ::= { tsDteControlEntry 12}

--
-- Route Table
--
        tsRouteControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS Route Control Table."
            ::= { ts-card 3 }

        tsRouteControlEntry  OBJECT-TYPE
            SYNTAX  TsRouteControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TS Route  control entry."
            INDEX { tsPortIndex ,
        tsEntry }
            ::= { tsRouteControlTable 1 }

            TsRouteControlEntry ::= SEQUENCE {
            tsEntry                     INTEGER (1..16),
            tsNetAddr                   IpAddress,
            tsNetMask                   IpAddress,
            tsGatewayAddr               IpAddress,
            tsNIAddr                    IpAddress,
            tsMetric                    INTEGER (1..16)
        }

        tsEntry OBJECT-TYPE
            SYNTAX  INTEGER  (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS routeentry"
            ::= { tsRouteControlEntry 1}

        tsNetAddr   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS route net Address"
            ::= { tsRouteControlEntry 2}

        tsNetMask OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS route net mask"
            ::= { tsRouteControlEntry 3}

        tsGatewayAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS route gateway Address"
            ::= { tsRouteControlEntry 4}

        tsNIAddr  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS route NI Address"
            ::= { tsRouteControlEntry 5}


        tsMetric OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TS Route metric"
            ::= { tsRouteControlEntry 6}


--
--  TS Frac Map Table
--

        tsFracCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsFracCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Assignment Table."
            ::= { ts-card 4 }

        tsFracCtrlEntry  OBJECT-TYPE
            SYNTAX  TsFracCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Index."
            INDEX { tsPortIndex ,
        tsTSIndex }
            ::= { tsFracCtrlTable 1 }

            TsFracCtrlEntry ::= SEQUENCE  {
            tsTSIndex                   INTEGER,
            tsInterface                 INTEGER
        }

        tsTSIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..33)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { tsFracCtrlEntry 1 }


        tsInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    wan2(3),
                    wan3(4),
                    wan4(5),
                    wan5(6),
                    wan6(7),
                    wan7(8),
                    wan8(9),
                    wan9(10),
                    wan10(11),
                    wan11(12),
                    wan12(13),
                    wan13(14),
                    wan14(15),
                    wan15(16),
                    wan16(17),
                    wan17(18),
                    wan18(19),
                    wan19(20),
                    wan20(21),
                    wan21(22),
                    wan22(23),
                    wan23(24),
                    wan24(25),
                    wan25(26),
                    wan26(27),
                    wan27(28),
                    wan28(29),
                    wan29(30),
                    wan30(31),
                    wan31(32),
                    wan32(33)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Frac ni if index."
            ::= { tsFracCtrlEntry 2 }

--
--  Command Control Table
--

        tsCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { ts-card 5}

        tsCommandControlEntry  OBJECT-TYPE
            SYNTAX  TsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { tsPortIndex }
            ::= { tsCommandControlTable 1 }

            TsCommandControlEntry ::= SEQUENCE {
            tsPortReset                 INTEGER,
            tsPortLoadDefault           INTEGER
        }

        tsPortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset TS Port"
            ::= { tsCommandControlEntry 1 }

        tsPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default TS Port"
            ::= { tsCommandControlEntry 2 }


--
--  SYSTEM Information Table
--
        tsSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TsSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { ts-card 6}

        tsSystemInformationEntry  OBJECT-TYPE
            SYNTAX  TsSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { tsPortIndex }
            ::= { tsSystemInformationTable 1 }

            TsSystemInformationEntry ::= SEQUENCE {
            tsPROMVersion               DisplayString,
            tsHWVersion                 DisplayString
        }

        tsPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS EPROM Version"
            ::= { tsSystemInformationEntry 1 }

        tsHWVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TS Hardware Version"
            ::= { tsSystemInformationEntry 2 }


        tsTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of TS"
            ::= { ts-card 100 }



--======================================================================--
--
--  qfxo_card MIB
--
--======================================================================--


--
--      QFXO Control Table
--

        qfxoConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxoConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXO Configuration Control Table"
            ::= { qfxo-card 1 }

        qfxoConfigControlEntry  OBJECT-TYPE
            SYNTAX  QFxoConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXO configuration control entry"
            INDEX { qfxoConfigControlIndex }
            ::= { qfxoConfigControlTable 1 }

            QFxoConfigControlEntry ::= SEQUENCE {
            qfxoConfigControlIndex      SmallSlotIndex,
            qfxo-A-u-law                INTEGER,
            qfxo-Tx-gain                INTEGER,
            qfxo-Rx-gain                INTEGER,
            qfxo-IMP                    INTEGER,
            qfxo-A-bit                  INTEGER
        }

        qfxoConfigControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoConfigControlEntry 1 }

        qfxo-A-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a-law(1),
                    u-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qfxoConfigControlEntry 2 }

        qfxo-Tx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0dB(1),
                    gain-3dB(2),
                    gain-6dB(3),
                    gain-9dB(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TX_GAIN "
            ::= { qfxoConfigControlEntry 3 }

        qfxo-Rx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0dB(1),
                    gain-3dB(2),
                    gain-6dB(3),
                    gain-9dB(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RX_GAIN "
            ::= { qfxoConfigControlEntry 4 }

        qfxo-IMP   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qfxoConfigControlEntry 5 }

        qfxo-A-bit  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    invert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A-BIT "
            ::= { qfxoConfigControlEntry 6 }

--
--  Command Control Table
--

        qfxoCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qfxo-card 2 }

        qfxoCommandControlEntry  OBJECT-TYPE
            SYNTAX  QFxoCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qfxoCommandControlIndex }
            ::= { qfxoCommandControlTable 1 }

            QFxoCommandControlEntry ::= SEQUENCE {
            qfxoCommandControlIndex     SmallSlotIndex,
            qfxoPortLoadDefault         INTEGER
        }

        qfxoCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoCommandControlEntry 1 }


        qfxoPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXO Port"
            ::= { qfxoCommandControlEntry 2 }

--
--      QFXOA All Port Config Control Table
--

        qfxoaCfgControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaCfgControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA All Port Configuration Control Table"
            ::= { qfxo-card 3 }

        qfxoaCfgControlEntry  OBJECT-TYPE
            SYNTAX  QfxoaCfgControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA all port configuration control entry"
            INDEX { qfxoaCfgControlIndex }
            ::= { qfxoaCfgControlTable 1 }

            QfxoaCfgControlEntry ::= SEQUENCE {
            qfxoaCfgControlIndex    SmallSlotIndex,
            qfxoaCfgControlAuLaw  INTEGER,
            qfxoaCfgControlImpedance    INTEGER,
            qfxoaCfgControlTrunk  INTEGER,
            qfxoaCfgControlPolarity    INTEGER
        }

        qfxoaCfgControlIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxoaCfgControlEntry 1 }

        qfxoaCfgControlAuLaw     OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qfxoaCfgControlEntry 2 }

        qfxoaCfgControlImpedance    OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qfxoaCfgControlEntry 3 }


        qfxoaCfgControlTrunk  OBJECT-TYPE
            SYNTAX  INTEGER {
                    on-hook(1),
                    off-hook(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Trunk Condition "
            ::= { qfxoaCfgControlEntry 4 }

        qfxoaCfgControlPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reverse(1),
                    normal(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Line Polarity "
            ::= { qfxoaCfgControlEntry 5 }


 --    QFXO Per Port Signaling Config Control Table


        qfxoaPerPortSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaPerPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXO Per Port Signaling Configuration Control Table"
            ::= { qfxo-card 4 }

        qfxoaPerPortSigSetEntry  OBJECT-TYPE
            SYNTAX  QfxoaPerPortSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXO Per port signaling configuration control entry"
            INDEX { qfxoaPerPortSigSetIndex ,
        qfxoaPerPortSigSetPort ,
        qfxoaPerPortSigSetItemIndex }
            ::= { qfxoaPerPortSigSetTable 1 }

            QfxoaPerPortSigSetEntry ::= SEQUENCE {
            qfxoaPerPortSigSetIndex SmallSlotIndex,
            qfxoaPerPortSigSetPort      INTEGER,
            qfxoaPerPortSigSetItemIndex INTEGER,
            qfxoaPerPortSigSetSigBit        DisplayString
        }

        qfxoaPerPortSigSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxoaPerPortSigSetEntry 1 }

        qfxoaPerPortSigSetPort   OBJECT-TYPE
            SYNTAX  INTEGER {
                    port1(1),
                    port2(2),
                    port3(3),
                    port4(4),
                    portAll(99)
                   }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { qfxoaPerPortSigSetEntry 2 }

        qfxoaPerPortSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ringing(1),
                    no-ring(2),
                    batt-rev(3),
                    pulse-on(4),
                    tip-open(5),
                    off-hook(6),
                    oos-alarm(7),
                    ring-gnd(8),
                    on-hook(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ringing, no-ring, batt-rev, pulse-on, tip-open, off-hook, oos-on, ring-gnd "
            ::= { qfxoaPerPortSigSetEntry 3 }

        qfxoaPerPortSigSetSigBit   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (4)) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { qfxoaPerPortSigSetEntry 4 }


--
--      QFXOA Per Port Config Control Table
--

        qfxoaPerPortCfgTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaPerPortCfgEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA Per Port Configuration Control Table"
            ::= { qfxo-card 5 }

        qfxoaPerPortCfgEntry  OBJECT-TYPE
            SYNTAX  QfxoaPerPortCfgEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA Per Port Configuration control entry"
            INDEX { qfxoaPerPortCfgIndex ,
                    qfxoaPerPortCfgPort }
            ::= { qfxoaPerPortCfgTable 1 }

            QfxoaPerPortCfgEntry ::= SEQUENCE {
            qfxoaPerPortCfgIndex    SmallSlotIndex,
            qfxoaPerPortCfgPort     FourPortID,
            qfxoaPerPortCfgTxGain   DisplayString,
            qfxoaPerPortCfgRxGain   DisplayString
        }

        qfxoaPerPortCfgIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoaPerPortCfgEntry 1 }

        qfxoaPerPortCfgPort    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-4"
            ::= { qfxoaPerPortCfgEntry 2 }

        qfxoaPerPortCfgTxGain      OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { qfxoaPerPortCfgEntry 3 }

        qfxoaPerPortCfgRxGain     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { qfxoaPerPortCfgEntry 4 }

--
--  QFXOA SigMode Control Table
--

        qfxoaSigModeControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaSigModeControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The SigMode control table."
            ::= { qfxo-card 6 }

        qfxoaSigModeControlEntry  OBJECT-TYPE
            SYNTAX  QfxoaSigModeControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the SigMode control table."
            INDEX { qfxoaSigModeControlIndex }
            ::= { qfxoaSigModeControlTable 1 }

            QfxoaSigModeControlEntry ::= SEQUENCE {
            qfxoaSigModeControlIndex      SmallSlotIndex,
            qfxoaSigModeControlMode      INTEGER
        }

        qfxoaSigModeControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoaSigModeControlEntry 1 }

        qfxoaSigModeControlMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    perCard(1),
                    perPort(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SigMode Mode"
            ::= { qfxoaSigModeControlEntry 2 }

--
--      QFXOA Per Port Diag InfoTable
--

        qfxoaInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA Diag Info Table"
            ::= { qfxo-card 7 }

        qfxoaInfoEntry  OBJECT-TYPE
            SYNTAX  QfxoaInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA Diag Infoentry"
            INDEX { qfxoaInfoIndex ,
        qfxoaInfoPortIndex }
            ::= { qfxoaInfoTable 1 }

            QfxoaInfoEntry ::= SEQUENCE {
            qfxoaInfoIndex             SmallSlotIndex,
            qfxoaInfoPortIndex        TwelvePortID,
            qfxoaInfoRing            EMOffOn,
            qfxoaInfoOffHook           EMOffOn,
            qfxoaInfoLine               EMOffOn,
            qfxoaInfoRingGND              EMOffOn,
            qfxoaInfoBattRev              EMOffOn,
            qfxoaInfoPulseOn              EMOffOn,
            qfxoaInfoAlarm              EMOffOn,
            qfxoaInfoTx               DisplayString,
            qfxoaInfoRx              DisplayString,
            qfxoaInfoVoltage         DisplayString
        }

        qfxoaInfoIndex OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoaInfoEntry 1 }

        qfxoaInfoPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-4"
            ::= { qfxoaInfoEntry 2 }


        qfxoaInfoRing    OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ring "
            ::= { qfxoaInfoEntry 3}

        qfxoaInfoOffHook   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " off hook "
            ::= { qfxoaInfoEntry 4}

        qfxoaInfoLine     OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " line broken "
            ::= { qfxoaInfoEntry 5}

        qfxoaInfoRingGND   OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ring ground "
            ::= { qfxoaInfoEntry 6}

        qfxoaInfoBattRev      OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Battery reverse "
            ::= { qfxoaInfoEntry 7}


        qfxoaInfoPulseOn     OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Pulse On "
            ::= { qfxoaInfoEntry 8}


        qfxoaInfoAlarm       OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm"
            ::= { qfxoaInfoEntry 9}


        qfxoaInfoTx       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { qfxoaInfoEntry 10 }

        qfxoaInfoRx       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { qfxoaInfoEntry 11}

        qfxoaInfoVoltage       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port Line Voltage"
            ::= { qfxoaInfoEntry 12}


--
-- QFXOA Line Diagnostic Control Table
--

        qfxoaDiagSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaDiagSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXOA Diagnostic Control Table."
            ::= { qfxo-card 8 }

        qfxoaDiagSetEntry  OBJECT-TYPE
            SYNTAX  QfxoaDiagSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QFXO diagnostic control table."
            INDEX { qfxoaDiagSetSlot }
            ::= { qfxoaDiagSetTable 1 }

            QfxoaDiagSetEntry ::= SEQUENCE {
            qfxoaDiagSetSlot          SmallSlotIndex,
            qfxoaDiagSetTest           INTEGER,
            qfxoaDiagSetPeriod          INTEGER,
            qfxoaDiagSetRemain           INTEGER

        }

        qfxoaDiagSetSlot    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoaDiagSetEntry 1 }

        qfxoaDiagSetTest    OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    offHookTest(2),
                    ringTest(3),
                    battRevTest(4),
                    pulseOnTest(5),
                    tipOpenTest(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QFXOA  Test Button"
            ::= { qfxoaDiagSetEntry 2 }


        qfxoaDiagSetPeriod    OBJECT-TYPE
            SYNTAX  INTEGER {
                    sec10(1),
                    sec60(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QFXOA  Test Button"
            ::= { qfxoaDiagSetEntry 3 }

        qfxoaDiagSetRemain    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { qfxoaDiagSetEntry 4 }

--
--  QFXOA Command Control Table
--

        qfxoaCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxoaCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qfxo-card 9 }

        qfxoaCommandEntry  OBJECT-TYPE
            SYNTAX  QfxoaCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qfxoaCommandIndex }
            ::= { qfxoaCommandTable 1 }

            QfxoaCommandEntry ::= SEQUENCE {
            qfxoaCommandIndex     SmallSlotIndex,
            qfxoaLoadDefault         INTEGER,
            qfxoaReset                  INTEGER
        }

        qfxoaCommandIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxoaCommandEntry 1 }


        qfxoaLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXO Port"
            ::= { qfxoaCommandEntry 2 }

        qfxoaReset   OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    yes(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXS Port"
            ::= { qfxoaCommandEntry 3 }

        qfxoTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of QFXO"
            ::= { qfxo-card 100 }


--======================================================================--
--
--  qfxs-card MIB
--
--======================================================================--


--
--      QFXS Control Table
--

        qfxsConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Configuration Control Table"
            ::= { qfxs-card 1 }

        qfxsConfigControlEntry  OBJECT-TYPE
            SYNTAX  QFxsConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS configuration control entry"
            INDEX { qfxsConfigControlIndex }
            ::= { qfxsConfigControlTable 1 }

            QFxsConfigControlEntry ::= SEQUENCE {
            qfxsConfigControlIndex      SmallSlotIndex,
            qfxs-A-u-law                INTEGER,
            qfxs-Tx-gain                INTEGER,
            qfxs-Rx-gain                INTEGER,
            qfxs-IMP                    INTEGER,
            qfxs-A-bit                  INTEGER,
            qfxs-PLAR-RING-01           INTEGER,
            qfxs-PLAR-RING-02           INTEGER,
            qfxs-PLAR-RING-03           INTEGER,
            qfxs-PLAR-RING-04           INTEGER,
            qfxs-CADENCE                INTEGER
        }

        qfxsConfigControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxsConfigControlEntry 1 }

        qfxs-A-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a-law(1),
                    u-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qfxsConfigControlEntry 2 }

        qfxs-Tx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0dB(1),
                    gain-3dB(2),
                    gain-6dB(3),
                    gain-9dB(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TX_GAIN "
            ::= { qfxsConfigControlEntry 3 }

        qfxs-Rx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0dB(1),
                    gain-3dB(2),
                    gain-6dB(3),
                    gain-9dB(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RX_GAIN "
            ::= { qfxsConfigControlEntry 4 }

        qfxs-IMP   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qfxsConfigControlEntry 5 }

        qfxs-A-bit OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    invert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A-BIT "
            ::= { qfxsConfigControlEntry 6 }

        qfxs-PLAR-RING-01 OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PLAR_A "
            ::= { qfxsConfigControlEntry 7 }

        qfxs-PLAR-RING-02 OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PLAR_B "
            ::= { qfxsConfigControlEntry 8 }

        qfxs-PLAR-RING-03 OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PLAR_C "
            ::= { qfxsConfigControlEntry 9 }

        qfxs-PLAR-RING-04 OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PLAR_D "
            ::= { qfxsConfigControlEntry 10 }

        qfxs-CADENCE  OBJECT-TYPE
            SYNTAX  INTEGER {
                    two-sec-on-four-sec-off(1),
                    one-sec-on-two-sec-off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " CADENCE "
            ::= { qfxsConfigControlEntry 11 }



--
--  Command Control Table
--

        qfxsCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qfxs-card 2 }

        qfxsCommandControlEntry  OBJECT-TYPE
            SYNTAX  QFxsCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qfxsCommandControlIndex }
            ::= { qfxsCommandControlTable 1 }

            QFxsCommandControlEntry ::= SEQUENCE {
            qfxsCommandControlIndex     SmallSlotIndex,
            qfxsPortLoadDefault         INTEGER
        }

        qfxsCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxsCommandControlEntry 1 }


        qfxsPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXS Port"
            ::= { qfxsCommandControlEntry 2 }


        qfxsTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of QFXS"
            ::= { qfxs-card 100 }

--
--      QFXS All Port Config Control Table
--

        qfxsAllPortConfigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsAllPortConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS All Port Configuration Control Table"
            ::= { qfxs-card 3 }

        qfxsAllPortConfigSetEntry  OBJECT-TYPE
            SYNTAX  QFxsAllPortConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS all port configuration control entry"
            INDEX { qfxsAllPortConfigSetIndex }
            ::= { qfxsAllPortConfigSetTable 1 }

            QFxsAllPortConfigSetEntry ::= SEQUENCE {
            qfxsAllPortConfigSetIndex    SmallSlotIndex,
            qfxsAllPortConfigSetA-u-law  INTEGER,
            qfxsAllPortConfigSetImpedance    INTEGER,
--             qfxsAllPortConfigSetTx-gain
--               DisplayString,
--             qfxsAllPortConfigSetRx-gain
--               DisplayString,
            qfxsAllPortConfigSetRing-cadence INTEGER,
            qfxsAllPortConfigSetRing-Freq    INTEGER,
            qfxsAllPortConfigSetMetering-pulse   INTEGER,
            qfxsAllPortConfigSetMetering-freq    INTEGER,
            qfxsAllPortConfigSetMetering-level   INTEGER
        }

        qfxsAllPortConfigSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsAllPortConfigSetEntry 1 }

        qfxsAllPortConfigSetA-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qfxsAllPortConfigSetEntry 2 }

        qfxsAllPortConfigSetImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qfxsAllPortConfigSetEntry 3 }

--       qfxsAllPortConfigSetTx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " TX-GAIN "
--           ::= { qfxsAllPortConfigSetEntry 4 }

--       qfxsAllPortConfigSetRx-gain   OBJECT-TYPE
--           SYNTAX  DisplayString (SIZE (0..255))
--           ACCESS  read-write
--           STATUS  mandatory
--           DESCRIPTION
--              " RX-GAIN "
--           ::= { qfxsAllPortConfigSetEntry 5 }

        qfxsAllPortConfigSetRing-cadence   OBJECT-TYPE
            SYNTAX  INTEGER {
                    cadence-1-on-2-off(1),
                    cadence-2-on-4-off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ring Cadence "
            ::= { qfxsAllPortConfigSetEntry 6 }

        qfxsAllPortConfigSetRing-Freq   OBJECT-TYPE
            SYNTAX  INTEGER {
                    freq-20-hz(1),
                    freq-25-hz(2),
                    freq-16-7-hz(3),
                    freq-50-hz(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ring Frequency "
            ::= { qfxsAllPortConfigSetEntry 7 }

        qfxsAllPortConfigSetMetering-pulse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Pulse "
            ::= { qfxsAllPortConfigSetEntry 8 }

        qfxsAllPortConfigSetMetering-freq   OBJECT-TYPE
            SYNTAX  INTEGER {
                    freq-16k-hz(1),
                    freq-12k-hz(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Frequency "
            ::= { qfxsAllPortConfigSetEntry 9 }

        qfxsAllPortConfigSetMetering-level   OBJECT-TYPE
            SYNTAX  INTEGER {
                    level-2-4-vrms(1),
                    level-1-vrms(2),
                    unavail(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Metering Level "
            ::= { qfxsAllPortConfigSetEntry 10 }


--
--      QFXS All Port Signaling Config Control Table
--

        qfxsAllPortSigConfigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsAllPortSigConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS All Port Signaling Configuration Control Table"
            ::= { qfxs-card 4 }

        qfxsAllPortSigConfigSetEntry  OBJECT-TYPE
            SYNTAX  QFxsAllPortSigConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS all port signaling configuration control entry"
            INDEX { qfxsAllPortSigConfigSetIndex ,
        qfxsAllPortSigConfigSetItemIndex ,
        qfxsAllPortSigConfigSetSigBitIndex }
            ::= { qfxsAllPortSigConfigSetTable 1 }

            QFxsAllPortSigConfigSetEntry ::= SEQUENCE {
            qfxsAllPortSigConfigSetIndex SmallSlotIndex,
            qfxsAllPortSigConfigSetItemIndex INTEGER,
            qfxsAllPortSigConfigSetSigBitIndex   INTEGER,
            qfxsAllPortSigConfigSetSigBit        INTEGER
        }

        qfxsAllPortSigConfigSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsAllPortSigConfigSetEntry 1 }

        qfxsAllPortSigConfigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    tx-on-hook(1),
                    tx-off-hook(2),
                    tx-ring-gnd(3),
                    plar-tx-off-hook(4),
                    rx-ring-on(5),
                    rx-batt-rev-and-pulse-on(6),
                    rx-oos-alarm(7),
                    rx-tip-open(8),
                    rx-plar-rx-ring-on(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "on-hook, off-hook, ring-gnd, ring-on, batt-rev-pulse-on, oos-on, tip-open"
            ::= { qfxsAllPortSigConfigSetEntry 2 }

        qfxsAllPortSigConfigSetSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { qfxsAllPortSigConfigSetEntry 3 }

        qfxsAllPortSigConfigSetSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { qfxsAllPortSigConfigSetEntry 4 }



--
--      QFXS Per Port Config Control Table
--

        qfxsPerPortConfigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsPerPortConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Per Port Configuration Control Table"
            ::= { qfxs-card 5 }

        qfxsPerPortConfigSetEntry  OBJECT-TYPE
            SYNTAX  QFxsPerPortConfigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Per Port Configuration control entry"
            INDEX { qfxsPerPortConfigSetIndex ,
        qfxsPerPortConfigSetPortIndex }
            ::= { qfxsPerPortConfigSetTable 1 }

            QFxsPerPortConfigSetEntry ::= SEQUENCE {
            qfxsPerPortConfigSetIndex    SmallSlotIndex,
            qfxsPerPortConfigSetPortIndex    TwelvePortID,
            qfxsPerPortConfigSetPLAR         INTEGER,
            qfxsPerPortConfigSetTx-gain      DisplayString,
            qfxsPerPortConfigSetRx-gain      DisplayString
        }

        qfxsPerPortConfigSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsPerPortConfigSetEntry 1 }

        qfxsPerPortConfigSetPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { qfxsPerPortConfigSetEntry 2 }

        qfxsPerPortConfigSetPLAR   OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port PLAR setting "
            ::= { qfxsPerPortConfigSetEntry 3 }

        qfxsPerPortConfigSetTx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { qfxsPerPortConfigSetEntry 4 }

        qfxsPerPortConfigSetRx-gain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { qfxsPerPortConfigSetEntry 5 }


--
--      QFXS Port Status Table
--

        qfxsPortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Port Status Table"
            ::= { qfxs-card 6 }

        qfxsPortStatusEntry  OBJECT-TYPE
            SYNTAX  QFxsPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Port Status entry"
            INDEX { qfxsPortStatusIndex ,
        qfxsPortStatusItemIndex ,
        qfxsPortStatusPortIndex }
            ::= { qfxsPortStatusTable 1 }

            QFxsPortStatusEntry ::= SEQUENCE {
            qfxsPortStatusIndex          SmallSlotIndex,
            qfxsPortStatusItemIndex      INTEGER,
            qfxsPortStatusPortIndex      TwelvePortID,
            qfxsPortStatusStatus         DisplayString
        }

        qfxsPortStatusIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsPortStatusEntry 1 }

        qfxsPortStatusItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off-hook(1),
                    metering-pulse(2),
                    tip-open(3),
                    ring-gnd(4),
                    plar-on(5),
                    ringing(6),
                    alarm-on(7),
                    battery-rev(8),
                    tx-signaling(9),
                    rx-signaling(10)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "off-hook, ring-on, metering-pulse, tip-open, ring-gnd, plar-on, alarm-on"
            ::= { qfxsPortStatusEntry 2 }

        qfxsPortStatusPortIndex   OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " port index 1-12 "
            ::= { qfxsPortStatusEntry 3 }

        qfxsPortStatusStatus   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port Status "
            ::= { qfxsPortStatusEntry 4 }


--
--      QFXS All Port Config Control Table
--

        qfxsAllPortStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsAllPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS All Port Configuration Control Table"
            ::= { qfxs-card 7 }

        qfxsAllPortStatusEntry  OBJECT-TYPE
            SYNTAX  QFxsAllPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS all port configuration control entry"
            INDEX { qfxsAllPortStatusIndex }
            ::= { qfxsAllPortStatusTable 1 }

            QFxsAllPortStatusEntry ::= SEQUENCE {
            qfxsAllPortStatusIndex    SmallSlotIndex,
            qfxsAllPortStatusLineCurrent             INTEGER,
            qfxsAllPortStatusBankSwitch             INTEGER,
            qfxsAllPortStatusAlarmTone             INTEGER,
            qfxsAllPortStatusRingVrms             INTEGER,
            qfxsAllPortStatusDoubleRing             INTEGER,
            qfxsAllPortStatusInputPower             INTEGER,
            qfxsAllPortStatusEMC             INTEGER

    }

        qfxsAllPortStatusIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsAllPortStatusEntry 1 }

        qfxsAllPortStatusLineCurrent   OBJECT-TYPE
            SYNTAX  INTEGER {
                    current-20ma(1),
                    current-25ma(2),
                    current-30ma(3),
                    current-35ma(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Line Current"
            ::= { qfxsAllPortStatusEntry 2 }

        qfxsAllPortStatusBankSwitch   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank Switch"
            ::= { qfxsAllPortStatusEntry 3 }

        qfxsAllPortStatusAlarmTone   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm tone"
            ::= { qfxsAllPortStatusEntry 4 }

        qfxsAllPortStatusRingVrms   OBJECT-TYPE
            SYNTAX  INTEGER {
                    vol-78v(1),
                    vol-64v(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ring Vrms"
            ::= { qfxsAllPortStatusEntry 5 }

        qfxsAllPortStatusDoubleRing   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Double Ring"
            ::= { qfxsAllPortStatusEntry 6 }

        qfxsAllPortStatusInputPower   OBJECT-TYPE
            SYNTAX  INTEGER {
                    vol-48v(1),
                    vol-24v(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Input Power"
            ::= { qfxsAllPortStatusEntry 7 }

        qfxsAllPortStatusEMC   OBJECT-TYPE
            SYNTAX  INTEGER {
                    ce(1),
                    ieee1613(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "EMC & safety type"
            ::= { qfxsAllPortStatusEntry 8 }


--
--      QFXS Line Diagnostic Control Table
--

        qfxsDiagTestControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxsDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Diagnostic Control Table."
            ::= { qfxs-card 8 }

        qfxsDiagTestControlEntry  OBJECT-TYPE
            SYNTAX  QfxsDiagTestControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QFXS diagnostic control table."
            INDEX { qfxsDiagTestControlIndex }
            ::= { qfxsDiagTestControlTable 1 }

        QfxsDiagTestControlEntry ::= SEQUENCE {
            qfxsDiagTestControlIndex     SmallSlotIndex,
            qfxsDiagTestControlType      INTEGER,
            qfxsDiagTestControlPeroid    INTEGER,
            qfxsDiagTestControlRemainTime    INTEGER
        }

        qfxsDiagTestControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsDiagTestControlEntry 1 }

        qfxsDiagTestControlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    ring-test(2),
                    battery-reverse(3),
                    channel-swap(4),
                    metering-pulse-test(5),
                    tip-open-test(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QFXS Test Button"
            ::= { qfxsDiagTestControlEntry 2 }

        qfxsDiagTestControlPeroid  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sec-10(1),
                    sec-60(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QFXS Test peroid"
            ::= { qfxsDiagTestControlEntry 3 }

        qfxsDiagTestControlRemainTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remain time (sec)"
            ::= { qfxsDiagTestControlEntry 4 }

--
--  All Port Command Control Table
--

        qfxsAllPortCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QFxsAllPortCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qfxs-card 9 }

        qfxsAllPortCommandEntry  OBJECT-TYPE
            SYNTAX  QFxsAllPortCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qfxsAllPortCommandIndex }
            ::= { qfxsAllPortCommandTable 1 }

            QFxsAllPortCommandEntry ::= SEQUENCE {
            qfxsAllPortCommandIndex     SmallSlotIndex,
            qfxsAllPortLoadDefault         INTEGER,
            qfxsAllPortReset                  INTEGER
        }

        qfxsAllPortCommandIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qfxsAllPortCommandEntry 1 }


        qfxsAllPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXS Port"
            ::= { qfxsAllPortCommandEntry 2 }

        qfxsAllPortReset   OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    yes(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QFXS Port"
            ::= { qfxsAllPortCommandEntry 3 }

--
--  QFXS DTMF TEST Table
--


       qfxsDiagDtmfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxsDiagDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Diagnostic Control Table."
            ::= { qfxs-card 10 }

        qfxsDiagDtmfEntry  OBJECT-TYPE
            SYNTAX  QfxsDiagDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QFXS diagnostic dtmf table."
            INDEX { qfxsDiagDtmfIndex }
            ::= { qfxsDiagDtmfTable 1 }

            QfxsDiagDtmfEntry ::= SEQUENCE {
            qfxsDiagDtmfIndex     SmallSlotIndex,
            qfxsDiagDtmfRemainTime    INTEGER,
            qfxsDiagDtmfTone      INTEGER,
            qfxsDiagDtmfResult DisplayString
        }

        qfxsDiagDtmfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsDiagDtmfEntry 1 }

        qfxsDiagDtmfRemainTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remain time (sec)"
            ::= { qfxsDiagDtmfEntry 2 }

        qfxsDiagDtmfTone  OBJECT-TYPE
            SYNTAX  INTEGER {
                    n1(2),
                    n2(3),
                    n3(4),
                    n4(5),
                    n5(6),
                    n6(7),
                    n7(8),
                    n8(9),
                    n9(10),
                    n0(11),
                    asterisk(12),
                    pound(13),
                    a(14),
                    b(15),
                    c(16),
                    d(1)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Test Tone"
            ::= { qfxsDiagDtmfEntry 3 }

        qfxsDiagDtmfResult  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone Result"
            ::= { qfxsDiagDtmfEntry 4 }


--
--  QFXS Port DTMF TEST Table
--


       qfxsPortDtmfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QfxsPortDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QFXS Port DTMF Test Table."
            ::= { qfxs-card 11 }

        qfxsPortDtmfEntry  OBJECT-TYPE
            SYNTAX  QfxsPortDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QFXS diagnostic port dtmf table."
            INDEX { qfxsPortDtmfIndex }
            ::= { qfxsPortDtmfTable 1 }

            QfxsPortDtmfEntry ::= SEQUENCE {
            qfxsPortDtmfIndex     SmallSlotIndex,
            qfxsPortDtmfPort      INTEGER,
            qfxsPortDtmfTone1    INTEGER,
            qfxsPortDtmfTone2    INTEGER,
            qfxsPortDtmfTone3    INTEGER,
            qfxsPortDtmfTone4    INTEGER,
            qfxsPortDtmfTone5    INTEGER,
            qfxsPortDtmfTone6    INTEGER,
            qfxsPortDtmfTone7    INTEGER,
            qfxsPortDtmfTone8    INTEGER,
            qfxsPortDtmfTone9    INTEGER,
            qfxsPortDtmfTone0    INTEGER
        }

        qfxsPortDtmfIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qfxsPortDtmfEntry 1 }

        qfxsPortDtmfPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    port1(1),
                    port2(2),
                    port3(3),
                    port4(4)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Test Port"
            ::= { qfxsPortDtmfEntry 2}

        qfxsPortDtmfTone1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone1"
            ::= { qfxsPortDtmfEntry 3}

        qfxsPortDtmfTone2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone2"
            ::= { qfxsPortDtmfEntry 4}

        qfxsPortDtmfTone3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone3"
            ::= { qfxsPortDtmfEntry 5}

        qfxsPortDtmfTone4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone4"
            ::= { qfxsPortDtmfEntry 6}

        qfxsPortDtmfTone5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone5"
            ::= { qfxsPortDtmfEntry 7}

        qfxsPortDtmfTone6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone6"
            ::= { qfxsPortDtmfEntry 8}

        qfxsPortDtmfTone7  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone7"
            ::= { qfxsPortDtmfEntry 9}

        qfxsPortDtmfTone8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone8"
            ::= { qfxsPortDtmfEntry 10}

        qfxsPortDtmfTone9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone9"
            ::= { qfxsPortDtmfEntry 11}

        qfxsPortDtmfTone0  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    testing(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test Tone0"
            ::= { qfxsPortDtmfEntry 12}


--======================================================================--
--
--  qem-card MIB
--
--======================================================================--

--
--      QEM Control Table
--

        qemConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Configuration Control Table"
            ::= { qem-card 1 }

        qemConfigControlEntry  OBJECT-TYPE
            SYNTAX  QemConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemConfigControlIndex }
            ::= { qemConfigControlTable 1 }

            QemConfigControlEntry ::= SEQUENCE {
            qemConfigControlIndex       SmallSlotIndex,
            qem-Side                    INTEGER,
            qem-Line                    INTEGER,
            qem-Signaling               INTEGER,
            qem-A-u-law                 INTEGER,
            qem-Tx-gain                 INTEGER,
            qem-Rx-gain                 INTEGER,
            qem-IMP                     INTEGER,
            qem-AB-bit                  INTEGER
        }

        qemConfigControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemConfigControlEntry 1 }

        qem-Side   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    a-b(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Side "
            ::= { qemConfigControlEntry 2 }

        qem-Line   OBJECT-TYPE
            SYNTAX  INTEGER {
                    line-2-wire(1),
                    line-4-wire(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Line "
            ::= { qemConfigControlEntry 3 }

        qem-Signaling   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    type-4(2),
                    type-2(3),
                    na(4),
                    type-1(5),
                    type-5(6),
                    type-3(7),
                    tx-only(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Line "
            ::= { qemConfigControlEntry 4 }

        qem-A-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a-law(1),
                    u-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qemConfigControlEntry 5 }

        qem-Tx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-dB(1),
                    gain-neg-3-dB(2),
                    gain-neg-6-dB(3),
                    gain-neg-9-dB(4),
                    gain-7-dB(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TX_GAIN "
            ::= { qemConfigControlEntry 6 }

        qem-Rx-gain   OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-dB(1),
                    gain-neg-3-dB(2),
                    gain-neg-6-dB(3),
                    gain-neg-9-dB(4),
                    gain-10-dB(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " RX_GAIN "
            ::= { qemConfigControlEntry 7 }

        qem-IMP   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qemConfigControlEntry 8 }

        qem-AB-bit OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    invert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " AB-BIT "
            ::= { qemConfigControlEntry 9 }

--
-- Line Status Table
--

        qemStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Status Table."
            ::= { qem-card 2 }

        qemStatusEntry  OBJECT-TYPE
            SYNTAX  QemStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QE&M status table."
            INDEX { qemStatusIndex }
            ::= { qemStatusTable 1 }

            QemStatusEntry ::= SEQUENCE {
            qemStatusIndex              SmallSlotIndex,
            qemE1                       INTEGER,
            qemE2                       INTEGER,
            qemE3                       INTEGER,
            qemE4                       INTEGER,
            qemM1                       INTEGER,
            qemM2                       INTEGER,
            qemM3                       INTEGER,
            qemM4                       INTEGER,
            qemAlarm1                 INTEGER,
            qemAlarm2                       INTEGER,
            qemAlarm3                       INTEGER,
            qemAlarm4                       INTEGER,
            qemPower                 INTEGER,
            qemSupport48V        INTEGER
        }

        qemStatusIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemStatusEntry 1 }

        qemE1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E1"
            ::= { qemStatusEntry 3 }

        qemE2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E2"
            ::= { qemStatusEntry 4 }

        qemE3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E3"
            ::= { qemStatusEntry 5 }

        qemE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E4"
            ::= { qemStatusEntry 6 }

        qemM1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M1"
            ::= { qemStatusEntry 7 }

        qemM2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M2"
            ::= { qemStatusEntry 8 }

        qemM3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M3"
            ::= { qemStatusEntry 9 }

        qemM4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M4"
            ::= { qemStatusEntry 10 }


        qemAlarm1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M Alarm1"
            ::= { qemStatusEntry 11 }
        qemAlarm2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M Alarm2"
            ::= { qemStatusEntry 12 }

        qemAlarm3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  Alarm3"
            ::= { qemStatusEntry 13 }
        qemAlarm4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  Alarm4"
            ::= { qemStatusEntry 14 }

        qemPower  OBJECT-TYPE
            SYNTAX  INTEGER {
                    negatibe-48V(1),
                    begative-24V(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  Power Modul"
            ::= { qemStatusEntry 15 }

        qemSupport48V  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  supoort 48V"
            ::= { qemStatusEntry 16 }
--
-- Line Diagnostic Control Table
--

        qemDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Diagnostic Control Table."
            ::= { qem-card 3 }

        qemDiagControlEntry  OBJECT-TYPE
            SYNTAX  QemDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QE&M diagnostic control table."
            INDEX { qemDiagControlIndex }
            ::= { qemDiagControlTable 1 }

            QemDiagControlEntry ::= SEQUENCE {
            qemDiagControlIndex         SmallSlotIndex,
            qemTEST                     INTEGER,
            qem-E1                      INTEGER,
            qem-E2                      INTEGER,
            qem-E3                      INTEGER,
            qem-E4                      INTEGER,
            qem-M1                      INTEGER,
            qem-M2                      INTEGER,
            qem-M3                      INTEGER,
            qem-M4                      INTEGER
        }

        qemDiagControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemDiagControlEntry 1 }

        qemTEST  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    start(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E1"
            ::= { qemDiagControlEntry 2 }

        qem-E1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E1"
            ::= { qemDiagControlEntry 3 }

        qem-E2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E2"
            ::= { qemDiagControlEntry 4 }

        qem-E3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E3"
            ::= { qemDiagControlEntry 5 }

        qem-E4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  E4"
            ::= { qemDiagControlEntry 6 }

        qem-M1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M1"
            ::= { qemDiagControlEntry 7 }

        qem-M2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M2"
            ::= { qemDiagControlEntry 8 }

        qem-M3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M3"
            ::= { qemDiagControlEntry 9 }

        qem-M4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    null(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QE&M  M4"
            ::= { qemDiagControlEntry 10 }



--
--  Command Control Table
--

        qemCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qem-card 4 }

        qemCommandControlEntry  OBJECT-TYPE
            SYNTAX  QemCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qemCommandControlIndex }
            ::= { qemCommandControlTable 1 }

            QemCommandControlEntry ::= SEQUENCE {
            qemCommandControlIndex      SmallSlotIndex,
            qemPortLoadDefault          INTEGER
        }

        qemCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemCommandControlEntry 1 }


        qemPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default QE&M CONF"
            ::= { qemCommandControlEntry 2 }


        qemTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of QEM"
            ::= { qem-card 100 }


        qemPerPortConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Configuration Control Table"
            ::= { qem-card 5 }

        qemPerPortConfigControlEntry  OBJECT-TYPE
            SYNTAX  QemPerPortConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortConfigControlIndex }
            ::= { qemPerPortConfigControlTable 1 }

            QemPerPortConfigControlEntry ::= SEQUENCE {
            qemPerPortConfigControlIndex       SmallSlotIndex,
            qem2-Side                    INTEGER,
            qem2-Line                    INTEGER,
            qem2-Signaling               INTEGER,
            qem2-A-u-law                 INTEGER,
            qem2-IMP                     INTEGER,
            qem2-Trunk                INTEGER
        }

        qemPerPortConfigControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortConfigControlEntry 1 }

        qem2-Side   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    a-b(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Side "
            ::= { qemPerPortConfigControlEntry 2 }

        qem2-Line   OBJECT-TYPE
            SYNTAX  INTEGER {
                    line-2-wire(1),
                    line-4-wire(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Line "
            ::= { qemPerPortConfigControlEntry 3 }

        qem2-Signaling   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    type-4(2),
                    type-2(3),
                    na(4),
                    type-1(5),
                    type-5(6),
                    type-3(7),
                    tx-only(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " QE&M Line "
            ::= { qemPerPortConfigControlEntry 4 }

        qem2-A-u-law   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a-law(1),
                    u-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qemPerPortConfigControlEntry 5 }

        qem2-IMP   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qemPerPortConfigControlEntry 6 }

        qem2-Trunk OBJECT-TYPE
            SYNTAX  INTEGER {
                    on-HOOK(1),
                    off-HOOK(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Trunk Condition"
            ::= { qemPerPortConfigControlEntry 7 }



        qemPerPortGainTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortGainEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Gain Table"
            ::= { qem-card 6 }

        qemPerPortGainEntry  OBJECT-TYPE
            SYNTAX  QemPerPortGainEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortGainIndex }
            ::= { qemPerPortGainTable 1 }

            QemPerPortGainEntry ::= SEQUENCE {
            qemPerPortGainIndex       SmallSlotIndex,
            qem-L1-TX                   DisplayString,
            qem-L2-TX                   DisplayString,
            qem-L3-TX                   DisplayString,
            qem-L4-TX                   DisplayString,
            qem-L1-RX                   DisplayString,
            qem-L2-RX                   DisplayString,
            qem-L3-RX                   DisplayString,
            qem-L4-RX                   DisplayString

    }

        qemPerPortGainIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortGainEntry 1 }

        qem-L1-TX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TX "
            ::= { qemPerPortGainEntry 2 }

        qem-L2-TX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TX "
            ::= { qemPerPortGainEntry 3 }

        qem-L3-TX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TX "
            ::= { qemPerPortGainEntry 4 }

        qem-L4-TX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TX "
            ::= { qemPerPortGainEntry 5 }

        qem-L1-RX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RX "
            ::= { qemPerPortGainEntry 6 }

        qem-L2-RX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RX "
            ::= { qemPerPortGainEntry 7 }
        qem-L3-RX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RX "
            ::= { qemPerPortGainEntry 8 }
        qem-L4-RX   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RX "
            ::= { qemPerPortGainEntry 9 }

        qemPerPortTXSignalBitTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortTXSignalBitEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Gain Table"
            ::= { qem-card 7 }

        qemPerPortTXSignalBitEntry  OBJECT-TYPE
            SYNTAX  QemPerPortTXSignalBitEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortTXSignalBitIndex }
            ::= { qemPerPortTXSignalBitTable 1 }

            QemPerPortTXSignalBitEntry ::= SEQUENCE {
            qemPerPortTXSignalBitIndex       SmallSlotIndex,
            qem-OnHook-1                       INTEGER,
            qem-OnHook-2                       INTEGER,
            qem-OnHook-3                       INTEGER,
            qem-OnHook-4                       INTEGER,
            qem-OffHook-1                       INTEGER,
            qem-OffHook-2                       INTEGER,
            qem-OffHook-3                       INTEGER,
            qem-OffHook-4                       INTEGER


    }

        qemPerPortTXSignalBitIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortTXSignalBitEntry 1 }

        qem-OnHook-1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 1 "
            ::= { qemPerPortTXSignalBitEntry 2 }

        qem-OnHook-2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 2 "
            ::= { qemPerPortTXSignalBitEntry 3 }

        qem-OnHook-3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 3 "
            ::= { qemPerPortTXSignalBitEntry 4 }

        qem-OnHook-4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 4 "
            ::= { qemPerPortTXSignalBitEntry 5 }

        qem-OffHook-1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OFF HOOK 1 "
            ::= { qemPerPortTXSignalBitEntry 6 }

        qem-OffHook-2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OFF HOOK 2 "
            ::= { qemPerPortTXSignalBitEntry 7 }

        qem-OffHook-3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OFF HOOK 3 "
            ::= { qemPerPortTXSignalBitEntry 8 }

        qem-OffHook-4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OFF HOOK 4 "
            ::= { qemPerPortTXSignalBitEntry 9 }

        qemPerPortRXSignalBitTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortRXSignalBitEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Gain Table"
            ::= { qem-card 8 }

        qemPerPortRXSignalBitEntry  OBJECT-TYPE
            SYNTAX  QemPerPortRXSignalBitEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortRXSignalBitIndex }
            ::= { qemPerPortRXSignalBitTable 1 }

            QemPerPortRXSignalBitEntry ::= SEQUENCE {
            qemPerPortRXSignalBitIndex       SmallSlotIndex,
            qem-OpenRelay-1                       INTEGER,
            qem-OpenRelay-2                       INTEGER,
            qem-OpenRelay-3                       INTEGER,
            qem-OpenRelay-4                       INTEGER,
            qem-CloseRelay-1                       INTEGER,
            qem-CloseRelay-2                       INTEGER,
            qem-CloseRelay-3                       INTEGER,
            qem-CloseRelay-4                      INTEGER,
            qem-OosAlarm-1                       INTEGER,
            qem-OosAlarm-2                       INTEGER,
            qem-OosAlarm-3                      INTEGER,
            qem-OosAlarm-4                       INTEGER
        }

        qemPerPortRXSignalBitIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortRXSignalBitEntry 1 }

        qem-OpenRelay-1   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Open1  "
            ::= { qemPerPortRXSignalBitEntry 2 }

        qem-OpenRelay-2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Open2 "
            ::= { qemPerPortRXSignalBitEntry 3 }

        qem-OpenRelay-3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Open 3 "
            ::= { qemPerPortRXSignalBitEntry 4 }

        qem-OpenRelay-4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Open 4 "
            ::= { qemPerPortRXSignalBitEntry 5 }

        qem-CloseRelay-1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Close 1 "
            ::= { qemPerPortRXSignalBitEntry 6 }

        qem-CloseRelay-2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Close2 "
            ::= { qemPerPortRXSignalBitEntry 7 }

        qem-CloseRelay-3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Close3 "
            ::= { qemPerPortRXSignalBitEntry 8 }

        qem-CloseRelay-4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem-RELAY-Close 4 "
            ::= { qemPerPortRXSignalBitEntry 9 }

        qem-OosAlarm-1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 1 "
            ::= { qemPerPortRXSignalBitEntry 10 }

        qem-OosAlarm-2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 2 "
            ::= { qemPerPortRXSignalBitEntry 11 }

        qem-OosAlarm-3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 3 "
            ::= { qemPerPortRXSignalBitEntry 12 }

        qem-OosAlarm-4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    do-not-care(3),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ON HOOK 4 "
            ::= { qemPerPortRXSignalBitEntry 13 }

        qemPerPortLEDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortLEDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Gain Table"
            ::= { qem-card 9 }

        qemPerPortLEDEntry  OBJECT-TYPE
            SYNTAX  QemPerPortLEDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortLEDIndex }
            ::= { qemPerPortLEDTable 1 }

            QemPerPortLEDEntry ::= SEQUENCE {
            qemPerPortLEDIndex       SmallSlotIndex,
            qem-Led-1                       INTEGER,
            qem-Led-2                       INTEGER,
            qem-Led-3                       INTEGER,
            qem-Led-4                       INTEGER,
            qem-Led-R                       INTEGER,
            qem-Led-Y                       INTEGER

    }

        qemPerPortLEDIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortLEDEntry 1 }

        qem-Led-1   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED 1 "
            ::= { qemPerPortLEDEntry 2 }

        qem-Led-2   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED 2 "
            ::= { qemPerPortLEDEntry 3 }
        qem-Led-3   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED 3 "
            ::= { qemPerPortLEDEntry 4 }
        qem-Led-4   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED 4 "
            ::= { qemPerPortLEDEntry 5 }
        qem-Led-R   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED R "
            ::= { qemPerPortLEDEntry 6 }
        qem-Led-Y   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    flash-1Hz(2),
                    flash-8Hz(3),
                    on(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem LED Y "
            ::= { qemPerPortLEDEntry 7 }



        qemPerPortTestTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortTestEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Test Table"
            ::= { qem-card 10 }

        qemPerPortTestEntry  OBJECT-TYPE
            SYNTAX  QemPerPortTestEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M configuration control entry"
            INDEX { qemPerPortTestIndex }
            ::= { qemPerPortTestTable 1 }

            QemPerPortTestEntry ::= SEQUENCE {
            qemPerPortTestIndex       SmallSlotIndex,
            qem-TestMode                       INTEGER,
            qem-TestPeriod                       INTEGER,
            qem-TestStatus                 INTEGER

    }
        qemPerPortTestIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortTestEntry 1 }

        qem-TestMode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    off-Hook-test(2),
                    loopback-test(3),
                    led-display-test(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem Test Mode "
            ::= { qemPerPortTestEntry 2 }

        qem-TestPeriod    OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    sec-10(2),
                    sec-300(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem Test Period "
            ::= { qemPerPortTestEntry 3 }
        qem-TestStatus   OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    start(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem Test Period "
            ::= { qemPerPortTestEntry 4 }


        qemPerPortResetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QemPerPortResetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M ResetTable"
            ::= { qem-card 11 }

        qemPerPortResetEntry  OBJECT-TYPE
            SYNTAX  QemPerPortResetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QE&M Reset control entry"
            INDEX { qemPerPortResetIndex }
            ::= { qemPerPortResetTable 1 }

            QemPerPortResetEntry ::= SEQUENCE {
            qemPerPortResetIndex       SmallSlotIndex,
            qem-Reset                       INTEGER

    }
        qemPerPortResetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { qemPerPortResetEntry 1 }

        qem-Reset   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "qem Reset Mode "
            ::= { qemPerPortResetEntry 2 }



--======================================================================--
--======================================================================--
--  conference-card MIB
--======================================================================--
--======================================================================--

--
--  Basic Control Table
--
        confBasicControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfBasicControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference basic control table."
            ::= { conference-card 1 }

        confBasicControlEntry  OBJECT-TYPE
            SYNTAX  ConfBasicControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference basic control table."
            INDEX { confIndex }
            ::= { confBasicControlTable 1 }

            ConfBasicControlEntry ::= SEQUENCE  {
            confIndex                   LargeSlotIndex,
            confConferenceID            INTEGER,
            confFXS-L1-PhoneNumber      INTEGER,
            confFXS-L2-PhoneNumber      INTEGER,
            confEM-L3-PhoneNumber       INTEGER,
            confEM-L4-PhoneNumber       INTEGER,
            confWanRate                 INTEGER,
            confFXS-L1-Conference       INTEGER,
            confFXS-L2-Conference       INTEGER,
            confEM-L3-Conference        INTEGER,
            confEM-L4-Conference        INTEGER,
            confMediaType               INTEGER,
            confEchoCanceller           INTEGER,
            confPhoneMode               INTEGER
        }

        confIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confBasicControlEntry 1 }

        confConferenceID  OBJECT-TYPE
            SYNTAX  INTEGER (0..99)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The conference card ID"
            ::= { confBasicControlEntry 2 }

        confFXS-L1-PhoneNumber  OBJECT-TYPE
            SYNTAX  INTEGER (0..89)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS(L1) phone number"
            ::= { confBasicControlEntry 3 }

        confFXS-L2-PhoneNumber  OBJECT-TYPE
            SYNTAX  INTEGER (0..89)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS(L2) phone number"
            ::= { confBasicControlEntry 4 }

        confEM-L3-PhoneNumber  OBJECT-TYPE
            SYNTAX  INTEGER (0..89)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "EM(L3) phone number"
            ::= { confBasicControlEntry 5 }

        confEM-L4-PhoneNumber  OBJECT-TYPE
            SYNTAX  INTEGER (0..89)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "EM(L4) phone number"
            ::= { confBasicControlEntry 6 }

        confWanRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate-64Kbs(1),
                    rate-128Kbs(2),
                    rate-192Kbs(3),
                    rate-256Kbs(4),
                    rate-320Kbs(5),
                    rate-384Kbs(6),
                    rate-448Kbs(7),
                    rate-512Kbs(8),
                    rate-576Kbs(9),
                    rate-640Kbs(10),
                    rate-702Kbs(11),
                    rate-768Kbs(12),
                    rate-832Kbs(13),
                    rate-896Kbs(14),
                    rate-960Kbs(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN Rate"
            ::= { confBasicControlEntry 11 }

        confFXS-L1-Conference  OBJECT-TYPE
            SYNTAX  INTEGER {
                    conference-1(1),
                    conference-2(2),
                    conference-3(3),
                    disable(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS(L1) Conference Group"
            ::= { confBasicControlEntry 12 }

        confFXS-L2-Conference  OBJECT-TYPE
            SYNTAX  INTEGER {
                    conference-1(1),
                    conference-2(2),
                    conference-3(3),
                    disable(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS(L2) Conference Group"
            ::= { confBasicControlEntry 13 }

        confEM-L3-Conference  OBJECT-TYPE
            SYNTAX  INTEGER {
                    conference-1(1),
                    conference-2(2),
                    conference-3(3),
                    disable(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M(L3) Conference Group"
            ::= { confBasicControlEntry 14 }

        confEM-L4-Conference  OBJECT-TYPE
            SYNTAX  INTEGER {
                    conference-1(1),
                    conference-2(2),
                    conference-3(3),
                    disable(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M(L4) Conference Group"
            ::= { confBasicControlEntry 15 }

        confMediaType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    g711(1),
                    g723(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Media Type"
            ::= { confBasicControlEntry 16 }

        confEchoCanceller  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Echo Canceller"
            ::= { confBasicControlEntry 17 }

        confPhoneMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dailNumber(1),
                    hotline(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Phone Mode"
            ::= { confBasicControlEntry 18 }

--
--  FXS Control Table
--
        confFxsControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfFxsControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference FXS control table."
            ::= { conference-card 2 }

        confFxsControlEntry  OBJECT-TYPE
            SYNTAX  ConfFxsControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference FXS control table."
            INDEX { confFxsCtrlSlotIndex , confFxsCtrlPortIndex }
            ::= { confFxsControlTable 1 }

            ConfFxsControlEntry ::= SEQUENCE  {
            confFxsCtrlSlotIndex        LargeSlotIndex,
            confFxsCtrlPortIndex        INTEGER,
            confFxsCtrlTxGain           INTEGER,
            confFxsCtrlRxGain           INTEGER,
            confFxsCtrlCadence          INTEGER
        }

        confFxsCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confFxsControlEntry 1 }

        confFxsCtrlPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fxs-l1(1),
                    fxs-l2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L1 to L2, total 2 ports"
            ::= { confFxsControlEntry 2 }

        confFxsCtrlTxGain  OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-db(1),
                    gain-neg-6-db(2),
                    gain-6-db(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Tx gain"
            ::= { confFxsControlEntry 3 }

        confFxsCtrlRxGain  OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-db(1),
                    gain-6-db(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Rx gain"
            ::= { confFxsControlEntry 4 }

        confFxsCtrlCadence  OBJECT-TYPE
            SYNTAX  INTEGER {
                    cadence-1-on-2-off(2),
                    cadence-2-on-4-off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS ring cadence"
            ::= { confFxsControlEntry 5 }

--
--  E&M Control Table
--
        confEmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfEmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference E&M control table."
            ::= { conference-card 3 }

        confEmControlEntry  OBJECT-TYPE
            SYNTAX  ConfEmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference E&M control table."
            INDEX { confEmCtrlSlotIndex , confEmCtrlPortIndex }
            ::= { confEmControlTable 1 }

            ConfEmControlEntry ::= SEQUENCE  {
            confEmCtrlSlotIndex         LargeSlotIndex,
            confEmCtrlPortIndex         INTEGER,
            confEmCtrlMode              INTEGER,
            confEmCtrlSide              INTEGER,
            confEmCtrlType              INTEGER,
            confEmCtrlTxGain            INTEGER,
            confEmCtrlRxGain            INTEGER,
            confEmCtrlCadence           INTEGER
        }

        confEmCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confEmControlEntry 1 }

        confEmCtrlPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    em-l3(1),
                    em-l4(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M L3 to L4, total 2 ports"
            ::= { confEmControlEntry 2 }

        confEmCtrlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    standard(1),
                    master(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M mode"
            ::= { confEmControlEntry 3 }

        confEmCtrlSide  OBJECT-TYPE
            SYNTAX  INTEGER {
                    side-a(1),
                    side-b(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M side"
            ::= { confEmControlEntry 4 }

        confEmCtrlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    type1(2),
                    type4(5),
                    type5(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M type"
            ::= { confEmControlEntry 5 }

        confEmCtrlTxGain  OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-db(1),
                    gain-neg-6-db(2),
                    gain-6-db(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M Tx gain"
            ::= { confEmControlEntry 6 }

        confEmCtrlRxGain  OBJECT-TYPE
            SYNTAX  INTEGER {
                    gain-0-db(1),
                    gain-4-db(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M Rx gain"
            ::= { confEmControlEntry 7 }

        confEmCtrlCadence  OBJECT-TYPE
            SYNTAX  INTEGER {
                    cadence-5-on(1),
                    cadence-1-on-2-off(2),
                    cadence-2-on-4-off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E&M ring cadence"
            ::= { confEmControlEntry 8 }

--
--  Conference Status Table
--
        confStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference status table."
            ::= { conference-card 4 }

        confStatusEntry  OBJECT-TYPE
            SYNTAX  ConfStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference status table."
            INDEX { confStaIndex }
            ::= { confStatusTable 1 }

            ConfStatusEntry ::= SEQUENCE  {
            confStaIndex                LargeSlotIndex,
            confStaMappingStatus        INTEGER,
            confStaFXS-L1-Hook          INTEGER,
            confStaFXS-L1-Ring          INTEGER,
            confStaFXS-L2-Hook          INTEGER,
            confStaFXS-L2-Ring          INTEGER,
            confStaEM-L3-ELeadHook      INTEGER,
            confStaEM-L3-MLeadRing      INTEGER,
            confStaEM-L4-ELeadHook      INTEGER,
            confStaEM-L4-MLeadRing      INTEGER
        }

        confStaIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confStatusEntry 1 }

        confStaMappingStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    fail(2),
                    port1-fail(3),
                    port2-fail(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Conference mapping status"
            ::= { confStatusEntry 2 }

        confStaFXS-L1-Hook  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L1 hook"
            ::= { confStatusEntry 3 }

        confStaFXS-L1-Ring  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L1 ring"
            ::= { confStatusEntry 4 }

        confStaFXS-L2-Hook  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L2 hook"
            ::= { confStatusEntry 5 }

        confStaFXS-L2-Ring  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L2 ring"
            ::= { confStatusEntry 6 }

        confStaEM-L3-ELeadHook  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M L3 E-lead hook"
            ::= { confStatusEntry 7 }

        confStaEM-L3-MLeadRing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M L3 M-lead ring"
            ::= { confStatusEntry 8 }

        confStaEM-L4-ELeadHook  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M L4 E-lead hook"
            ::= { confStatusEntry 9 }

        confStaEM-L4-MLeadRing  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "E&M L4 M-lead ring"
            ::= { confStatusEntry 10 }

--
--  Command Control Table
--
        confCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference command control table."
            ::= { conference-card 5 }

        confCommandControlEntry  OBJECT-TYPE
            SYNTAX  ConfCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference command control table."
            INDEX { confCmdCtrlIndex }
            ::= { confCommandControlTable 1 }

            ConfCommandControlEntry ::= SEQUENCE  {
            confCmdCtrlIndex            LargeSlotIndex,
            confCmdCtrlReset            INTEGER,
            confCmdCtrlLoadDefault      INTEGER
        }

        confCmdCtrlIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confCommandControlEntry 1 }

        confCmdCtrlReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset"
            ::= { confCommandControlEntry 2 }

        confCmdCtrlLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default"
            ::= { confCommandControlEntry 3 }

--
--  RS232 Control Table
--
        confRs232ControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfRs232ControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference RS232 control table."
            ::= { conference-card 6 }

        confRs232ControlEntry  OBJECT-TYPE
            SYNTAX  ConfRs232ControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference RS232 control table."
            INDEX { confRs232CtrlSlotIndex , confRs232CtrlPortIndex }
            ::= { confRs232ControlTable 1 }

            ConfRs232ControlEntry ::= SEQUENCE  {
            confRs232CtrlSlotIndex      LargeSlotIndex,
            confRs232CtrlPortIndex      INTEGER,
            confRs232CtrlMode           INTEGER,
            confRs232CtrlBaudRate       INTEGER,
            confRs232CtrlDataLength     INTEGER,
            confRs232CtrlStopBit        INTEGER,
            confRs232CtrlParity         INTEGER,
            confRs232CtrlRTS            INTEGER,
            confRs232CtrlOnTimer        INTEGER,
            confRs232CtrlOffTimer       INTEGER
        }

        confRs232CtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confRs232ControlEntry 1 }

        confRs232CtrlPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232-d1(1),
                    rs232-d2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 D1 to D2, total 2 ports"
            ::= { confRs232ControlEntry 2 }

        confRs232CtrlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave(1),
                    master(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 master/slave mode"
            ::= { confRs232ControlEntry 3 }

        confRs232CtrlBaudRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate-300(1),
                    rate-600(2),
                    rate-1200(3),
                    rate-2400(4),
                    rate-4800(5),
                    rate-9600(6),
                    rate-19200(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 baud rate"
            ::= { confRs232ControlEntry 4 }

        confRs232CtrlDataLength  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-8-bits(1),
                    data-7-bits(2),
                    data-6-bits(3),
                    data-5-bits(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 data length"
            ::= { confRs232ControlEntry 5 }

        confRs232CtrlStopBit  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop-1-bit(1),
                    stop-2-bits(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 stop bit"
            ::= { confRs232ControlEntry 6 }

        confRs232CtrlParity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    even(2),
                    odd(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 parity"
            ::= { confRs232ControlEntry 7 }

        confRs232CtrlRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 RTS"
            ::= { confRs232ControlEntry 8 }

        confRs232CtrlOnTimer  OBJECT-TYPE
            SYNTAX  INTEGER (0..60)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 on timer"
            ::= { confRs232ControlEntry 9 }

        confRs232CtrlOffTimer  OBJECT-TYPE
            SYNTAX  INTEGER (0..60)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 off timer"
            ::= { confRs232ControlEntry 10 }

--
--  RS232 Status Table
--
        confRs232StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfRs232StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference RS232 status table."
            ::= { conference-card 7 }

        confRs232StatusEntry  OBJECT-TYPE
            SYNTAX  ConfRs232StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference RS232 status table."
            INDEX { confRs232StaSlotIndex , confRs232StaPortIndex }
            ::= { confRs232StatusTable 1 }

            ConfRs232StatusEntry ::= SEQUENCE  {
            confRs232StaSlotIndex       LargeSlotIndex,
            confRs232StaPortIndex       INTEGER,
            confRs232StaRTS             INTEGER,
            confRs232StaCTS             INTEGER,
            confRs232StaDTR             INTEGER,
            confRs232StaDSR             INTEGER,
            confRs232StaDCD             INTEGER
        }

        confRs232StaSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confRs232StatusEntry 1 }

        confRs232StaPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232-d1(1),
                    rs232-d2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 D1 to D2, total 2 ports"
            ::= { confRs232StatusEntry 2 }

        confRs232StaRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 RTS status"
            ::= { confRs232StatusEntry 3 }

        confRs232StaCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 CTS status"
            ::= { confRs232StatusEntry 4 }

        confRs232StaDTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 DTR status"
            ::= { confRs232StatusEntry 5 }

        confRs232StaDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 DSR status"
            ::= { confRs232StatusEntry 6 }

        confRs232StaDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "RS232 DCD status"
            ::= { confRs232StatusEntry 7 }

--
--  RS232 Loopback Table
--
        confRs232LoopbackTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfRs232LoopbackEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference RS232 Loopback table."
            ::= { conference-card 8 }

        confRs232LoopbackEntry  OBJECT-TYPE
            SYNTAX  ConfRs232LoopbackEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference RS232 Loopback table."
            INDEX { confRs232LBSlotIndex }
            ::= { confRs232LoopbackTable 1 }

            ConfRs232LoopbackEntry ::= SEQUENCE  {
            confRs232LBSlotIndex      LargeSlotIndex,
            confRs232D1Loopback         INTEGER,
            confRs232D2Loopback         INTEGER
        }

        confRs232LBSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confRs232LoopbackEntry 1 }

        confRs232D1Loopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    to-local(2),
                    to-rs232(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 D1 loopback"
            ::= { confRs232LoopbackEntry 2 }

        confRs232D2Loopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    to-local(2),
                    to-rs232(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RS232 D1 loopback"
            ::= { confRs232LoopbackEntry 3 }

--
--  Group Call Table
--
        confGroupCallTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ConfGroupCallEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The conference group call table."
            ::= { conference-card 9 }

        confGroupCallEntry  OBJECT-TYPE
            SYNTAX  ConfGroupCallEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the conference group call table."
            INDEX { confGroupCallSlotIndex , confGroupCallPortIndex }
            ::= { confGroupCallTable 1 }

            ConfGroupCallEntry ::= SEQUENCE  {
            confGroupCallSlotIndex      LargeSlotIndex,
            confGroupCallPortIndex      INTEGER,
            confGroupCallGroupCall1     INTEGER,
            confGroupCallGroupCall2     INTEGER,
            confGroupCallGroupCall3     INTEGER,
            confGroupCallGroupCall4     INTEGER
        }

        confGroupCallSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { confGroupCallEntry 1 }

        confGroupCallPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fxs-l1(1),
                    fxs-l2(2),
                    em-l3(3),
                    em-l4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FXS L1 to L2, E&M L3 to L4, total 4 ports"
            ::= { confGroupCallEntry 2 }

        confGroupCallGroupCall1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    no-90(2),
                    no-91(3),
                    no-92(4),
                    no-93(5),
                    no-94(6),
                    no-95(7),
                    no-96(8),
                    no-97(9),
                    no-98(10),
                    no-99(11),
                    no-AA(12),
                    no-BB(13),
                    no-CC(14),
                    no-DD(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Group Call 1 Number"
            ::= { confGroupCallEntry 3 }

        confGroupCallGroupCall2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    no-90(2),
                    no-91(3),
                    no-92(4),
                    no-93(5),
                    no-94(6),
                    no-95(7),
                    no-96(8),
                    no-97(9),
                    no-98(10),
                    no-99(11),
                    no-AA(12),
                    no-BB(13),
                    no-CC(14),
                    no-DD(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Group Call 2 Number"
            ::= { confGroupCallEntry 4 }

        confGroupCallGroupCall3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    no-90(2),
                    no-91(3),
                    no-92(4),
                    no-93(5),
                    no-94(6),
                    no-95(7),
                    no-96(8),
                    no-97(9),
                    no-98(10),
                    no-99(11),
                    no-AA(12),
                    no-BB(13),
                    no-CC(14),
                    no-DD(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Group Call 3 Number"
            ::= { confGroupCallEntry 5 }

        confGroupCallGroupCall4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    no-90(2),
                    no-91(3),
                    no-92(4),
                    no-93(5),
                    no-94(6),
                    no-95(7),
                    no-96(8),
                    no-97(9),
                    no-98(10),
                    no-99(11),
                    no-AA(12),
                    no-BB(13),
                    no-CC(14),
                    no-DD(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Group Call 4 Number"
            ::= { confGroupCallEntry 6 }


        confTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of CONF"
            ::= { conference-card 100 }


--======================================================================--
--======================================================================--
--  tri-e1-card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        tri-e1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { tri-e1-card 1 }

        tri-e1LineControlEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1LineControlTable 1 }

            Tri-E1LineControlEntry ::= SEQUENCE  {
            tri-e1Index                 LargeSlotIndex,
            tri-e1PortIndex             ThreePortID,
            tri-e1LineFrame             INTEGER,
            tri-e1LineCoding            INTEGER,
            tri-e1Interface             INTEGER,
            tri-e1FDL                   INTEGER,
            tri-e1FDLSabit              INTEGER,
            tri-e1AIS                   INTEGER,
            tri-e1RAI                   INTEGER,
            tri-e1CRC                   INTEGER,
            tri-e1IdleCode              INTEGER,
            tri-e1CASMode               INTEGER,
            tri-e1SignallingMode        INTEGER,
            tri-e1CGA                   INTEGER,
            tri-e1OutOfService          INTEGER,
            tri-e1SNCPdelay             Integer32,
            tri-e1SNCPsendAIS           INTEGER
        }

        tri-e1Index  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tri-e1LineControlEntry 1 }

        tri-e1PortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, total 4 ports."
            ::= { tri-e1LineControlEntry 2 }

        tri-e1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { tri-e1LineControlEntry 3 }

        tri-e1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { tri-e1LineControlEntry 4 }

        tri-e1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twisted-pair(1),
                    coaxial-cable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that Tri-E1 line use 75/120 Ohm Cable."
            ::= { tri-e1LineControlEntry 5 }

        tri-e1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    fdl(1),
                    off(2),
                    hdlc(3),
                    ssm(4)
--                        ssm-hdlc(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Tri-E1 Facility Data Link ON/OFF"
            ::= { tri-e1LineControlEntry 6 }

        tri-e1FDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    sa4-5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Tri-E1 Facility Data Link use Sax bit"
            ::= { tri-e1LineControlEntry 7 }

        tri-e1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Tri-E1 line Alarm Indication Signal."
            ::= { tri-e1LineControlEntry 8 }

        tri-e1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { tri-e1LineControlEntry 9 }

        tri-e1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Tri-E1 Cycle Redundancy Check ON/OFF"
            ::= { tri-e1LineControlEntry 10 }

        tri-e1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value.
                Do not set idle code to FF if using DS0-SNCP."
            ::= { tri-e1LineControlEntry 11 }

        tri-e1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { tri-e1LineControlEntry 12 }

        tri-e1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1),
                    cd01(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS or CD01"
            ::= { tri-e1LineControlEntry 13 }

        tri-e1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { tri-e1LineControlEntry 14 }

        tri-e1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { tri-e1LineControlEntry 15 }

        tri-e1SNCPdelay  OBJECT-TYPE
            SYNTAX  Integer32  (-3..99)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP port delay."
            ::= { tri-e1LineControlEntry 16 }

        tri-e1SNCPsendAIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP port send AIS."
            ::= { tri-e1LineControlEntry 17 }


--
--  User Current Performance Table
--

        tri-e1UserCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { tri-e1-card 2 }

        tri-e1UserCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1UserCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1UserCurrentPerfTable 1 }

            Tri-E1UserCurrentPerfEntry ::= SEQUENCE  {
            tri-e1UserCurrentPerfES     INTEGER,
            tri-e1UserCurrentPerfSES    INTEGER,
            tri-e1UserCurrentPerfBES    INTEGER,
            tri-e1UserCurrentPerfUAS    INTEGER,
            tri-e1UserCurrentPerfCSS    INTEGER,
            tri-e1UserCurrentPerfBPV    INTEGER,
            tri-e1UserCurrentPerfDMs    INTEGER,
            tri-e1UserCurr15MinTimeElapsed  INTEGER,
            tri-e1UserValid15MinInterval    INTEGER
        }

        tri-e1UserCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 2 }

        tri-e1UserCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 3 }

        tri-e1UserCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 4 }

        tri-e1UserCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 5 }

        tri-e1UserCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 6 }

        tri-e1UserCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 7 }

        tri-e1UserCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1UserCurrentPerfEntry 8 }

        tri-e1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { tri-e1UserCurrentPerfEntry 11 }

        tri-e1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { tri-e1UserCurrentPerfEntry 12 }


--
--  User Interval Performance Table
--

        tri-e1UserIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { tri-e1-card 3 }

        tri-e1UserIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1UserIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1UserIntervalPerfNumber }
            ::= { tri-e1UserIntervalPerfTable 1 }

            Tri-E1UserIntervalPerfEntry ::= SEQUENCE  {
            tri-e1UserIntervalPerfNumber    INTEGER  (1..96),
            tri-e1UserIntervalPerfES        INTEGER,
            tri-e1UserIntervalPerfSES       INTEGER,
            tri-e1UserIntervalPerfBES       INTEGER,
            tri-e1UserIntervalPerfUAS       INTEGER,
            tri-e1UserIntervalPerfCSS       INTEGER,
            tri-e1UserIntervalPerfBPV       INTEGER,
            tri-e1UserIntervalPerfDMs       INTEGER
        }

        tri-e1UserIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { tri-e1UserIntervalPerfEntry 2 }

        tri-e1UserIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 3 }

        tri-e1UserIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 4 }

        tri-e1UserIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 5 }

        tri-e1UserIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 6 }

        tri-e1UserIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 7 }

        tri-e1UserIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 8 }

        tri-e1UserIntervalPerfDMs   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1UserIntervalPerfEntry 9 }


--
--  User Total Performance Table
--
        tri-e1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { tri-e1-card 4 }

        tri-e1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1UserTotalPerfTable 1 }

            Tri-E1UserTotalPerfEntry ::= SEQUENCE  {
            tri-e1UserTotalPerfES       INTEGER,
            tri-e1UserTotalPerfSES      INTEGER,
            tri-e1UserTotalPerfBES      INTEGER,
            tri-e1UserTotalPerfUAS      INTEGER,
            tri-e1UserTotalPerfCSS      INTEGER,
            tri-e1UserTotalPerfBPV      INTEGER,
            tri-e1UserTotalPerfDMs      INTEGER
        }

        tri-e1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1UserTotalPerfEntry 2 }

        tri-e1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1UserTotalPerfEntry 3 }

        tri-e1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1UserTotalPerfEntry 4 }

        tri-e1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1UserTotalPerfEntry 5 }

        tri-e1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1UserTotalPerfEntry 6 }

        tri-e1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1UserTotalPerfEntry 7 }

        tri-e1UserTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1UserTotalPerfEntry 8 }


--
--  User Seven Days Performance Table
--
        tri-e1UserSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { tri-e1-card 5 }

        tri-e1UserSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1UserSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1UserDaysIndex }
            ::= { tri-e1UserSevenDaysPerfTable 1 }

            Tri-E1UserSevenDaysPerfEntry ::= SEQUENCE  {
            tri-e1UserDaysIndex         INTEGER (1..7),
            tri-e1UserDateStrIndex      DisplayString (SIZE (0..255) ),
            tri-e1UserSevenDaysPerfES   INTEGER,
            tri-e1UserSevenDaysPerfSES  INTEGER,
            tri-e1UserSevenDaysPerfBES  INTEGER,
            tri-e1UserSevenDaysPerfUAS  INTEGER,
            tri-e1UserSevenDaysPerfCSS  INTEGER,
            tri-e1UserSevenDaysPerfDMs  INTEGER,
            tri-e1UserSevenDaysPerfBPV  INTEGER
        }

        tri-e1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { tri-e1UserSevenDaysPerfEntry 2 }

        tri-e1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { tri-e1UserSevenDaysPerfEntry 3 }

        tri-e1UserSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 4 }

        tri-e1UserSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 5 }

        tri-e1UserSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 6 }

        tri-e1UserSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 7 }

        tri-e1UserSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 8 }

        tri-e1UserSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 9 }

        tri-e1UserSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1UserSevenDaysPerfEntry 10 }


--
--  Line Current Performance Table
--

        tri-e1LineCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { tri-e1-card 10 }

        tri-e1LineCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1LineCurrentPerfTable 1 }

            Tri-E1LineCurrentPerfEntry ::= SEQUENCE  {
            tri-e1LineCurrentPerfES     INTEGER,
            tri-e1LineCurrentPerfSES    INTEGER,
            tri-e1LineCurrentPerfBES    INTEGER,
            tri-e1LineCurrentPerfUAS    INTEGER,
            tri-e1LineCurrentPerfCSS    INTEGER,
            tri-e1LineCurrentPerfBPV    INTEGER,
            tri-e1LineCurrentPerfDMs    INTEGER,
            tri-e1LineCurr15MinTimeElapsed  INTEGER,
            tri-e1LineValid15MinInterval    INTEGER
        }

        tri-e1LineCurrentPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 2 }

        tri-e1LineCurrentPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 3 }

        tri-e1LineCurrentPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 4 }

        tri-e1LineCurrentPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 5 }

        tri-e1LineCurrentPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 6 }

        tri-e1LineCurrentPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 7 }

        tri-e1LineCurrentPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1LineCurrentPerfEntry 8 }

        tri-e1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { tri-e1LineCurrentPerfEntry 11 }

        tri-e1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { tri-e1LineCurrentPerfEntry 12 }


--
--  Line Interval Performance Table
--

        tri-e1LineIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { tri-e1-card 11 }

        tri-e1LineIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1LineIntervalPerfNumber }
            ::= { tri-e1LineIntervalPerfTable 1 }

            Tri-E1LineIntervalPerfEntry ::= SEQUENCE {
            tri-e1LineIntervalPerfNumber    INTEGER  (1..96),
            tri-e1LineIntervalPerfES        INTEGER,
            tri-e1LineIntervalPerfSES       INTEGER,
            tri-e1LineIntervalPerfBES       INTEGER,
            tri-e1LineIntervalPerfUAS       INTEGER,
            tri-e1LineIntervalPerfCSS       INTEGER,
            tri-e1LineIntervalPerfBPV       INTEGER,
            tri-e1LineIntervalPerfDMs       INTEGER,
            tri-e1LineIntvAvailable         INTEGER
        }

        tri-e1LineIntervalPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { tri-e1LineIntervalPerfEntry 2 }

        tri-e1LineIntervalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 3 }

        tri-e1LineIntervalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 4 }

        tri-e1LineIntervalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 5 }

        tri-e1LineIntervalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 6 }

        tri-e1LineIntervalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 7 }

        tri-e1LineIntervalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 8 }

        tri-e1LineIntervalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1LineIntervalPerfEntry 9 }

        tri-e1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { tri-e1LineIntervalPerfEntry 10 }


--
--  Line Total Performance Table
--

        tri-e1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { tri-e1-card 12 }

        tri-e1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1LineTotalPerfTable 1 }

            Tri-E1LineTotalPerfEntry ::= SEQUENCE  {
            tri-e1LineTotalPerfES       INTEGER,
            tri-e1LineTotalPerfSES      INTEGER,
            tri-e1LineTotalPerfBES      INTEGER,
            tri-e1LineTotalPerfUAS      INTEGER,
            tri-e1LineTotalPerfCSS      INTEGER,
            tri-e1LineTotalPerfBPV      INTEGER,
            tri-e1LineTotalPerfDMs      INTEGER
        }

        tri-e1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1LineTotalPerfEntry 2 }

        tri-e1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1LineTotalPerfEntry 3 }

        tri-e1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1LineTotalPerfEntry 4 }

        tri-e1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1LineTotalPerfEntry 5 }

        tri-e1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1LineTotalPerfEntry 6 }

        tri-e1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1LineTotalPerfEntry 7 }

        tri-e1LineTotalPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1LineTotalPerfEntry 8 }


--
--  Line Seven Days Performance Table
--
        tri-e1LineSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { tri-e1-card 13 }

        tri-e1LineSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1LineDaysIndex }
            ::= { tri-e1LineSevenDaysPerfTable 1 }

            Tri-E1LineSevenDaysPerfEntry ::= SEQUENCE  {
            tri-e1LineDaysIndex         INTEGER (1..7),
            tri-e1LineDateStrIndex      DisplayString (SIZE (0..255) ),
            tri-e1LineSevenDaysPerfES   INTEGER,
            tri-e1LineSevenDaysPerfSES  INTEGER,
            tri-e1LineSevenDaysPerfBES  INTEGER,
            tri-e1LineSevenDaysPerfUAS  INTEGER,
            tri-e1LineSevenDaysPerfCSS  INTEGER,
            tri-e1LineSevenDaysPerfDMs  INTEGER,
            tri-e1LineSevenDaysPerfBPV  INTEGER
        }

        tri-e1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { tri-e1LineSevenDaysPerfEntry 2 }

        tri-e1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { tri-e1LineSevenDaysPerfEntry 3 }

        tri-e1LineSevenDaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 4 }

        tri-e1LineSevenDaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 5 }

        tri-e1LineSevenDaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 6 }

        tri-e1LineSevenDaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 7 }

        tri-e1LineSevenDaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 8 }

        tri-e1LineSevenDaysPerfDMs  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DM Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 9 }

        tri-e1LineSevenDaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { tri-e1LineSevenDaysPerfEntry 10 }


--
--  Alarm Queue Table
--

        tri-e1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { tri-e1-card 14 }

        tri-e1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  Tri-E1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1AlarmQueueIndex }
            ::= { tri-e1AlarmQueueTable 1 }

            Tri-E1AlarmQueueEntry ::= SEQUENCE {
            tri-e1AlarmQueueIndex       INTEGER (1..40),
            tri-e1AlarmQueueString      DisplayString (SIZE(0..255))
        }

        tri-e1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { tri-e1AlarmQueueEntry 2 }

        tri-e1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { tri-e1AlarmQueueEntry 3 }

--
--  Alarm History Table
--

        tri-e1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { tri-e1-card 15 }

        tri-e1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  Tri-E1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { tri-e1Index , tri-e1PortIndex ,
        tri-e1AlarmHistoryIndex }
            ::= { tri-e1AlarmHistoryTable 1 }

            Tri-E1AlarmHistoryEntry ::= SEQUENCE {
            tri-e1AlarmHistoryIndex     INTEGER,
            tri-e1Threshold             INTEGER,
            tri-e1CurrentState          INTEGER,
            tri-e1CurrentCount          INTEGER,
            tri-e1Alarm                 AlarmSeverity
        }

        tri-e1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rai-line(1),
                    ais-line(2),
                    los-line(3),
                    lof-line(4),
                    bpv-line(5),
                    ess-line(6),
                    uas-line(7),
                    css-line(8),
                    ais-insert(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { tri-e1AlarmHistoryEntry 2 }

        tri-e1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { tri-e1AlarmHistoryEntry 3 }

        tri-e1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { tri-e1AlarmHistoryEntry 4 }

        tri-e1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { tri-e1AlarmHistoryEntry 5 }

        tri-e1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { tri-e1AlarmHistoryEntry 6 }


--
--  Line Availability Table
--

        tri-e1LineAvailabilityTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { tri-e1-card 16 }

        tri-e1LineAvailabilityEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineAvailabilityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1LineAvailabilityTable 1 }

            Tri-E1LineAvailabilityEntry ::= SEQUENCE {
            tri-e1AvailableSeconds      DisplayString,
            tri-e1UnavailableSeconds    DisplayString,
            tri-e1LineAvailability      DisplayString
        }

        tri-e1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { tri-e1LineAvailabilityEntry 2 }

        tri-e1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { tri-e1LineAvailabilityEntry 3 }

        tri-e1LineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { tri-e1LineAvailabilityEntry 4 }


--
--  Alarm Control Table
--

        tri-e1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { tri-e1-card 17 }

        tri-e1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  Tri-E1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1AlarmControlTable 1 }

            Tri-E1AlarmControlEntry ::= SEQUENCE {
            tri-e1RAI-Line              AlarmSeverity,
            tri-e1AIS-Line              AlarmSeverity,
            tri-e1LOS-Line              AlarmSeverity,
            tri-e1LOF-Line              AlarmSeverity,
            tri-e1BPV-Line              AlarmSeverity,
            tri-e1ESS-Line              AlarmSeverity,
            tri-e1UAS-Line              AlarmSeverity,
            tri-e1CSS-Line              AlarmSeverity,
            tri-e1AISinsert             AlarmSeverity
        }

        tri-e1RAI-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-Line State"
            ::= { tri-e1AlarmControlEntry 2 }

        tri-e1AIS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { tri-e1AlarmControlEntry 3 }

        tri-e1LOS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { tri-e1AlarmControlEntry 4 }

        tri-e1LOF-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { tri-e1AlarmControlEntry 5 }

        tri-e1BPV-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { tri-e1AlarmControlEntry 6 }

        tri-e1ESS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { tri-e1AlarmControlEntry 7 }

        tri-e1UAS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { tri-e1AlarmControlEntry 8 }

        tri-e1CSS-Line  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { tri-e1AlarmControlEntry 9 }

        tri-e1AISinsert  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3E1 AIS insert"
            ::= { tri-e1AlarmControlEntry 10 }


--
--  Threshold Control Table
--

        tri-e1ThresholdControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { tri-e1-card 18 }

        tri-e1ThresholdControlEntry  OBJECT-TYPE
            SYNTAX  Tri-E1ThresholdControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1ThresholdControlTable 1 }

            Tri-E1ThresholdControlEntry ::= SEQUENCE {
            tri-e1ThresholdBPV-Line     INTEGER,
            tri-e1ThresholdESS-Line     INTEGER,
            tri-e1ThresholdUAS-Line     INTEGER,
            tri-e1ThresholdCSS-Line     INTEGER,
            tri-e1ThresholdAISinsert    INTEGER
        }

        tri-e1ThresholdBPV-Line  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line: 10exp-N"
            ::= { tri-e1ThresholdControlEntry 2 }

        tri-e1ThresholdESS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { tri-e1ThresholdControlEntry 3 }

        tri-e1ThresholdUAS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { tri-e1ThresholdControlEntry 4 }

        tri-e1ThresholdCSS-Line  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { tri-e1ThresholdControlEntry 5 }

        tri-e1ThresholdAISinsert  OBJECT-TYPE
            SYNTAX  INTEGER (3..6)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of 3E1 AIS Insert: 10exp-N"
            ::= { tri-e1ThresholdControlEntry 6 }


--
-- Line Diagnostic Control Table
--

        tri-e1LineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { tri-e1-card 19 }

        tri-e1LineDiagControlEntry  OBJECT-TYPE
            SYNTAX  Tri-E1LineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1LineDiagControlTable 1 }

            Tri-E1LineDiagControlEntry ::= SEQUENCE {
            tri-e1LoopbackType          INTEGER,
            tri-e1LoopbackStatus        INTEGER,
            tri-e1PRBSControl           INTEGER,
            tri-e1PRBSStatus            INTEGER,
            tri-e1PRBSElapseSeconds     INTEGER,
            tri-e1PRBSErrorSeconds      INTEGER,
            tri-e1PRBSErrorCounts       INTEGER,
            tri-e1InbandLoopbackPeriod  INTEGER,
            tri-e1remBERTControl        INTEGER,
            tri-e1remBERTStatus         INTEGER,
            tri-e1remBERTCounter        INTEGER,
            tri-e1remBERTElapsed        INTEGER,
            tri-e1remBERTErrorSeconds   INTEGER,
            tri-e1remBERTPatternUnsyncSeconds   INTEGER
        }

        tri-e1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local-loopback(2),
                    payload-loopback(3),
                    line-loopback(4),
                    remote-PLB-Active(5),
                    remote-LLB-Active(6),
                    remote-PLB-Deactive(7),
                    remote-LLB-Deactive(8),
                    remote-DTE1-Active(9),
                    remote-DTE1-Deactive(10),
                    remote-DTE2-Active(11),
                    remote-DTE2-Deactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 Loopback Type"
            ::= { tri-e1LineDiagControlEntry 2 }

        tri-e1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 Loopback Status"
            ::= { tri-e1LineDiagControlEntry 3 }

        tri-e1PRBSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-deactive(1),
                    prbs-active-full(2),
                    prbs-reset-error-count(3),
                    prbs-inject-error(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 PRBS Control"
            ::= { tri-e1LineDiagControlEntry 4 }

        tri-e1PRBSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    prbs-sync(1),
                    prbs-unsync(2),
                    prbs-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 PRBS Status"
            ::= { tri-e1LineDiagControlEntry 5 }

        tri-e1PRBSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 PRBS Elapse Seconds"
            ::= { tri-e1LineDiagControlEntry 6 }

        tri-e1PRBSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 PRBS Error Seconds"
            ::= { tri-e1LineDiagControlEntry 7 }

        tri-e1PRBSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "tri-e1 PRBS Error Counts"
            ::= { tri-e1LineDiagControlEntry 8 }

        tri-e1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of Tri-E1 inband local, payload, or line loopback"
            ::= { tri-e1LineDiagControlEntry 9 }

        tri-e1remBERTControl    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0), --//RIKER2021 SilverCreek
                    bert-off(1),
                    bert-full(2),
                    bert-dte1(3),
                    bert-dte2(4),
                    bert-inject-error(5),
                    bert-reset(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "remBert Control"
            ::= { tri-e1LineDiagControlEntry 11 }

        tri-e1remBERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0), --//RIKER2021 SilverCreek
                    bert-sync(1),
                    bert-unsync(2),
                    bert-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Status"
            ::= { tri-e1LineDiagControlEntry 13 }

        tri-e1remBERTCounter  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Counter"
            ::= { tri-e1LineDiagControlEntry 14 }

        tri-e1remBERTElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Elapsed Time"
            ::= { tri-e1LineDiagControlEntry 15 }

        tri-e1remBERTErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Error Seconds"
            ::= { tri-e1LineDiagControlEntry 16 }

        tri-e1remBERTPatternUnsyncSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remBERT Pattern Unsync Seconds"
            ::= { tri-e1LineDiagControlEntry 17 }


--
--  Command Control Table
--

        tri-e1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { tri-e1-card 20 }

        tri-e1CommandControlEntry  OBJECT-TYPE
            SYNTAX  Tri-E1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { tri-e1Index , tri-e1PortIndex }
            ::= { tri-e1CommandControlTable 1 }

            Tri-E1CommandControlEntry ::= SEQUENCE {
            tri-e1AlarmQueueReset       INTEGER,
            tri-e1UserPerfReset         INTEGER,
            tri-e1AlarmHistoryReset     INTEGER,
            tri-e1PortReset             INTEGER,
            tri-e1PortLoadDefault       INTEGER
        }

        tri-e1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { tri-e1CommandControlEntry 2 }

        tri-e1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { tri-e1CommandControlEntry 3 }

        tri-e1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { tri-e1CommandControlEntry 4 }

        tri-e1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Tri-E1 Port"
            ::= { tri-e1CommandControlEntry 5 }

        tri-e1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default Tri-E1 Port"
            ::= { tri-e1CommandControlEntry 6 }


--
--  SYSTEM Information Table
--

        tri-e1SystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { tri-e1-card 21 }

        tri-e1SystemInformationEntry  OBJECT-TYPE
            SYNTAX  Tri-E1SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { tri-e1Index }
            ::= { tri-e1SystemInformationTable 1 }

            Tri-E1SystemInformationEntry ::= SEQUENCE {
            tri-e1PROMVersion           DisplayString,
            tri-e1HardwareVersion       DisplayString
        }

        tri-e1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " tri-e1 PROM Version"
            ::= { tri-e1SystemInformationEntry 2 }

        tri-e1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " tri-e1 Hardware Version"
            ::= { tri-e1SystemInformationEntry 3 }


--
--  3E1 Customer Information Table
--

        triE1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { tri-e1-card 99 }

        triE1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  TriE1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { triE1CISlotIndex , triE1CIPortIndex }
            ::= { triE1CustomerInfoTable 1 }

            TriE1CustomerInfoEntry ::= SEQUENCE {
            triE1CISlotIndex              LargeSlotIndex,
            triE1CIPortIndex              ThreePortID,
            triE1CICustomerInfo           DisplayString (SIZE(0..64))
        }

        triE1CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triE1CustomerInfoEntry 1 }

        triE1CIPortIndex    OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { triE1CustomerInfoEntry 2 }

        triE1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { triE1CustomerInfoEntry 3 }


--
--  Remote Link Identification Table
--

        tri-e1RemoteLinkIDTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Tri-E1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Table"
            ::= { tri-e1-card 22 }

        tri-e1RemoteLinkIDEntry  OBJECT-TYPE
            SYNTAX  Tri-E1RemoteLinkIDEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification entry"
            INDEX { tri-e1Index ,
        tri-e1PortIndex }
            ::= { tri-e1RemoteLinkIDTable 1 }

            Tri-E1RemoteLinkIDEntry ::= SEQUENCE {
            tri-e1RemoteLinkIDType      INTEGER,
            tri-e1RemoteLinkIDRack      INTEGER,
            tri-e1RemoteLinkIDSlotNumber    INTEGER,
            tri-e1RemoteLinkIDPort          INTEGER,
            tri-e1RemoteLinkIDSerialNumber  INTEGER,
            tri-e1RemoteLinkIDBackupSlotNUM INTEGER,
            tri-e1RemoteLinkIDBackupPort    INTEGER
        }

        tri-e1RemoteLinkIDType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    cpe(1),
                    an(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type of remote site."
            ::= { tri-e1RemoteLinkIDEntry 3 }

        tri-e1RemoteLinkIDRack  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Rack"
            ::= { tri-e1RemoteLinkIDEntry 4 }

        tri-e1RemoteLinkIDSlotNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification SlotNumber"
            ::= { tri-e1RemoteLinkIDEntry 5 }

        tri-e1RemoteLinkIDPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Port"
            ::= { tri-e1RemoteLinkIDEntry 6 }

        tri-e1RemoteLinkIDSerialNumber  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Serial Number"
            ::= { tri-e1RemoteLinkIDEntry 7 }

        tri-e1RemoteLinkIDBackupSlotNUM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Slot Number"
            ::= { tri-e1RemoteLinkIDEntry 8 }

        tri-e1RemoteLinkIDBackupPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Remote Link Identification Backup Port"
            ::= { tri-e1RemoteLinkIDEntry 9 }


        tri-e1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 3E1"
            ::= { tri-e1-card 100 }


--======================================================================--
--======================================================================--
--  3T1 card MIB
--======================================================================--
--======================================================================--

--
--  Line Control Table
--

        triT1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { triT1card 1 }

        triT1LineControlEntry  OBJECT-TYPE
            SYNTAX  TriT1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { triT1LCslot , triT1LCport }
            ::= { triT1LineControlTable 1 }

            TriT1LineControlEntry ::= SEQUENCE  {
            triT1LCslot                   LargeSlotIndex,
            triT1LCport                   ThreePortID,
            triT1LineFrame                INTEGER,
            triT1LineCoding               INTEGER,
            triT1Interface                INTEGER,
            triT1LineBuildOut             INTEGER,
            triT1Equalizer                INTEGER,
            triT1AIS                      INTEGER,
            triT1YEL                      INTEGER,
            triT1Inband                   INTEGER,
            triT1IdleCode                 INTEGER,
            triT1CASMode                  INTEGER,
            triT1SignallingMode           INTEGER,
            triT1CGA                      INTEGER,
            triT1OutOfService             INTEGER,
            triT1FDL                      INTEGER,
            triT1SNCPdelay                Integer32,
            triT1SNCPsendAIS              INTEGER
        }

        triT1LCslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineControlEntry 1 }

        triT1LCport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineControlEntry 2 }

        triT1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esfT1403(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { triT1LineControlEntry 3 }

        triT1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { triT1LineControlEntry 4 }

        triT1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    longHaul(1),
                    shortHaul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that TriT1 line use Long/Short haul."
            ::= { triT1LineControlEntry 5 }

        triT1LineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo0dB(1),
                    lboNeg75dB(2),
                    lboNeg15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 line build out: 0dB, -7.5dB, -15dB."
            ::= { triT1LineControlEntry 6 }

        triT1Equalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ0to110Ft(1),
                    equ110to220ft(2),
                    equ220to330ft(3),
                    equ330to440ft(4),
                    equ440to550ft(5),
                    equ550to660ft(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 line equalizer."
            ::= { triT1LineControlEntry 7 }

        triT1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 line Alarm Indication Signal."
            ::= { triT1LineControlEntry 8 }

        triT1YEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { triT1LineControlEntry 9 }

        triT1Inband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 line inband ON/OFF"
            ::= { triT1LineControlEntry 10 }

        triT1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value.
                Do not set idle code to FF if using DS0-SNCP."
            ::= { triT1LineControlEntry 11 }

        triT1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { triT1LineControlEntry 12 }

        triT1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS"
            ::= { triT1LineControlEntry 13 }

        triT1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { triT1LineControlEntry 14 }

        triT1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { triT1LineControlEntry 15 }

        triT1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 Facility Data Link ON/OFF"
            ::= { triT1LineControlEntry 16 }

        triT1SNCPdelay  OBJECT-TYPE
            SYNTAX  Integer32  (-3..99)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP port delay."
            ::= { triT1LineControlEntry 17 }

        triT1SNCPsendAIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DS0-SNCP port send AIS."
            ::= { triT1LineControlEntry 18 }



--
--  User Current Performance Table
--

        triT1UserCurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1UserCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { triT1card 2 }

        triT1UserCurrPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1UserCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { triT1UCPslot , triT1UCPport }
            ::= { triT1UserCurrPerfTable 1 }

            TriT1UserCurrPerfEntry ::= SEQUENCE  {
            triT1UCPslot                  LargeSlotIndex,
            triT1UCPport                  ThreePortID,
            triT1UserCurrPerfES           Gauge,
            triT1UserCurrPerfSES          Gauge,
            triT1UserCurrPerfBES          Gauge,
            triT1UserCurrPerfUAS          Gauge,
            triT1UserCurrPerfCSS          Gauge,
            triT1UserCurrPerfBPV          Gauge,
            triT1UserCurrPerfLOFC         Gauge,
            triT1UserCurr15MinTimeElapsed INTEGER,
            triT1UserValid15MinInterval   INTEGER
        }

        triT1UCPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1UserCurrPerfEntry 1 }

        triT1UCPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1UserCurrPerfEntry 2 }

        triT1UserCurrPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1UserCurrPerfEntry 3 }

        triT1UserCurrPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1UserCurrPerfEntry 4 }

        triT1UserCurrPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1UserCurrPerfEntry 5 }

        triT1UserCurrPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1UserCurrPerfEntry 6 }

        triT1UserCurrPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { triT1UserCurrPerfEntry 7 }

        triT1UserCurrPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1UserCurrPerfEntry 8 }

        triT1UserCurrPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1UserCurrPerfEntry 9 }

        triT1UserCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { triT1UserCurrPerfEntry 11 }

        triT1UserValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { triT1UserCurrPerfEntry 12 }


--
--  User Interval Performance Table
--

        triT1UserIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1UserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { triT1card 3 }

        triT1UserIntvPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1UserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { triT1UIPslot , triT1UIPport ,
        triT1UserIntvPerfNumber }
            ::= { triT1UserIntvPerfTable 1 }

            TriT1UserIntvPerfEntry ::= SEQUENCE  {
            triT1UIPslot                  LargeSlotIndex,
            triT1UIPport                  ThreePortID,
            triT1UserIntvPerfNumber       INTEGER,
            triT1UserIntvPerfES           Gauge,
            triT1UserIntvPerfSES          Gauge,
            triT1UserIntvPerfBES          Gauge,
            triT1UserIntvPerfUAS          Gauge,
            triT1UserIntvPerfCSS          Gauge,
            triT1UserIntvPerfBPV          Gauge,
            triT1UserIntvPerfLOFC         Gauge
        }

        triT1UIPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1UserIntvPerfEntry 1 }

        triT1UIPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1UserIntvPerfEntry 2 }

        triT1UserIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { triT1UserIntvPerfEntry 3 }

        triT1UserIntvPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1UserIntvPerfEntry 4 }

        triT1UserIntvPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1UserIntvPerfEntry 5 }

        triT1UserIntvPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1UserIntvPerfEntry 6 }

        triT1UserIntvPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1UserIntvPerfEntry 7 }

        triT1UserIntvPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1UserIntvPerfEntry 8 }

        triT1UserIntvPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1UserIntvPerfEntry 9 }

        triT1UserIntvPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1UserIntvPerfEntry 10 }


--
--  User Total Performance Table
--
        triT1UserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { triT1card 4 }

        triT1UserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1UserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { triT1UTPslot , triT1UTPport }
            ::= { triT1UserTotalPerfTable 1 }

            TriT1UserTotalPerfEntry ::= SEQUENCE  {
            triT1UTPslot                  LargeSlotIndex,
            triT1UTPport                  ThreePortID,
            triT1UserTotalPerfES          Gauge,
            triT1UserTotalPerfSES         Gauge,
            triT1UserTotalPerfBES         Gauge,
            triT1UserTotalPerfUAS         Gauge,
            triT1UserTotalPerfCSS         Gauge,
            triT1UserTotalPerfBPV         Gauge,
            triT1UserTotalPerfLOFC        Gauge
        }

        triT1UTPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1UserTotalPerfEntry 1 }

        triT1UTPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1UserTotalPerfEntry 2 }

        triT1UserTotalPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1UserTotalPerfEntry 3 }

        triT1UserTotalPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1UserTotalPerfEntry 4 }

        triT1UserTotalPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1UserTotalPerfEntry 5 }

        triT1UserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1UserTotalPerfEntry 6 }

        triT1UserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1UserTotalPerfEntry 7 }

        triT1UserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1UserTotalPerfEntry 8 }

        triT1UserTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1UserTotalPerfEntry 9 }


--
--  User Seven Days Performance Table
--
        triT1User7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1User7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { triT1card 5 }

        triT1User7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1User7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance entry"
            INDEX { triT1USPslot , triT1USPport ,
        triT1UserDaysIndex }
            ::= { triT1User7DaysPerfTable 1 }

            TriT1User7DaysPerfEntry ::= SEQUENCE  {
            triT1USPslot                  LargeSlotIndex,
            triT1USPport                  ThreePortID,
            triT1UserDaysIndex            INTEGER,
            triT1UserDateStrIndex         DisplayString,
            triT1User7DaysPerfES          Gauge,
            triT1User7DaysPerfSES         Gauge,
            triT1User7DaysPerfBES         Gauge,
            triT1User7DaysPerfUAS         Gauge,
            triT1User7DaysPerfCSS         Gauge
        }

        triT1USPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1User7DaysPerfEntry 1 }

        triT1USPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1User7DaysPerfEntry 2 }

        triT1UserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { triT1User7DaysPerfEntry 3 }

        triT1UserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { triT1User7DaysPerfEntry 4 }

        triT1User7DaysPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1User7DaysPerfEntry 5 }

        triT1User7DaysPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1User7DaysPerfEntry 6 }

        triT1User7DaysPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1User7DaysPerfEntry 7 }

        triT1User7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1User7DaysPerfEntry 8 }

        triT1User7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1User7DaysPerfEntry 9 }


--
--  Line Current Performance Table
--

        triT1LineCurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { triT1card 6 }

        triT1LineCurrPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1LineCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { triT1LCPslot , triT1LCPport }
            ::= { triT1LineCurrPerfTable 1 }

            TriT1LineCurrPerfEntry ::= SEQUENCE  {
            triT1LCPslot                  LargeSlotIndex,
            triT1LCPport                  ThreePortID,
            triT1LineCurrPerfES           Gauge,
            triT1LineCurrPerfSES          Gauge,
            triT1LineCurrPerfBES          Gauge,
            triT1LineCurrPerfUAS          Gauge,
            triT1LineCurrPerfCSS          Gauge,
            triT1LineCurrPerfBPV          Gauge,
            triT1LineCurrPerfLOFC         Gauge,
            triT1LineCurr15MinTimeElapsed INTEGER,
            triT1LineValid15MinInterval   INTEGER
        }

        triT1LCPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineCurrPerfEntry 1 }

        triT1LCPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineCurrPerfEntry 2 }

        triT1LineCurrPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { triT1LineCurrPerfEntry 3 }

        triT1LineCurrPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1LineCurrPerfEntry 4 }

        triT1LineCurrPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1LineCurrPerfEntry 5 }

        triT1LineCurrPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1LineCurrPerfEntry 6 }

        triT1LineCurrPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1LineCurrPerfEntry 7 }

        triT1LineCurrPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1LineCurrPerfEntry 8 }

        triT1LineCurrPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1LineCurrPerfEntry 9 }

        triT1LineCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { triT1LineCurrPerfEntry 11 }

        triT1LineValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { triT1LineCurrPerfEntry 12 }


--
--  Line Interval Performance Table
--

        triT1LineIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { triT1card 7 }

        triT1LineIntvPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1LineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { triT1LIPslot , triT1LIPport ,
        triT1LineIntvPerfNumber }
            ::= { triT1LineIntvPerfTable 1 }

            TriT1LineIntvPerfEntry ::= SEQUENCE  {
            triT1LIPslot                  LargeSlotIndex,
            triT1LIPport                  ThreePortID,
            triT1LineIntvPerfNumber       INTEGER,
            triT1LineIntvPerfES           Gauge,
            triT1LineIntvPerfSES          Gauge,
            triT1LineIntvPerfBES          Gauge,
            triT1LineIntvPerfUAS          Gauge,
            triT1LineIntvPerfCSS          Gauge,
            triT1LineIntvPerfBPV          Gauge,
            triT1LineIntvPerfLOFC         Gauge,
            triT1LineIntvAvailable        INTEGER
        }

        triT1LIPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineIntvPerfEntry 1 }

        triT1LIPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineIntvPerfEntry 2 }

        triT1LineIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index "
            ::= { triT1LineIntvPerfEntry 3 }

        triT1LineIntvPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1LineIntvPerfEntry 4 }

        triT1LineIntvPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1LineIntvPerfEntry 5 }

        triT1LineIntvPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1LineIntvPerfEntry 6 }

        triT1LineIntvPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1LineIntvPerfEntry 7 }

        triT1LineIntvPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1LineIntvPerfEntry 8 }

        triT1LineIntvPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1LineIntvPerfEntry 9 }

        triT1LineIntvPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1LineIntvPerfEntry 10 }

        triT1LineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { triT1LineIntvPerfEntry 11 }


--
--  Line Total Performance Table
--

        triT1LineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { triT1card 8 }

        triT1LineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1LineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance entry"
            INDEX { triT1LTPslot , triT1LTPport }
            ::= { triT1LineTotalPerfTable 1 }

            TriT1LineTotalPerfEntry ::= SEQUENCE  {
            triT1LTPslot                  LargeSlotIndex,
            triT1LTPport                  ThreePortID,
            triT1LineTotalPerfES          Gauge,
            triT1LineTotalPerfSES         Gauge,
            triT1LineTotalPerfBES         Gauge,
            triT1LineTotalPerfUAS         Gauge,
            triT1LineTotalPerfCSS         Gauge,
            triT1LineTotalPerfBPV         Gauge,
            triT1LineTotalPerfLOFC        Gauge
        }

        triT1LTPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineTotalPerfEntry 1 }

        triT1LTPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineTotalPerfEntry 2 }

        triT1LineTotalPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1LineTotalPerfEntry 3 }

        triT1LineTotalPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1LineTotalPerfEntry 4 }

        triT1LineTotalPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1LineTotalPerfEntry 5 }

        triT1LineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1LineTotalPerfEntry 6 }

        triT1LineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1LineTotalPerfEntry 7 }

        triT1LineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { triT1LineTotalPerfEntry 8 }

        triT1LineTotalPerfLOFC  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LOFC Error Counter "
            ::= { triT1LineTotalPerfEntry 9 }


--
--  Line Seven Days Performance Table
--
        triT1Line7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1Line7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { triT1card 9 }

        triT1Line7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  TriT1Line7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { triT1LSPslot , triT1LSPport ,
        triT1LineDaysIndex }
            ::= { triT1Line7DaysPerfTable 1 }

            TriT1Line7DaysPerfEntry ::= SEQUENCE  {
            triT1LSPslot                  LargeSlotIndex,
            triT1LSPport                  ThreePortID,
            triT1LineDaysIndex            INTEGER,
            triT1LineDateStrIndex         DisplayString,
            triT1Line7DaysPerfES          Gauge,
            triT1Line7DaysPerfSES         Gauge,
            triT1Line7DaysPerfBES         Gauge,
            triT1Line7DaysPerfUAS         Gauge,
            triT1Line7DaysPerfCSS         Gauge
        }

        triT1LSPslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1Line7DaysPerfEntry 1 }

        triT1LSPport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1Line7DaysPerfEntry 2 }

        triT1LineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { triT1Line7DaysPerfEntry 3 }

        triT1LineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { triT1Line7DaysPerfEntry 4 }

        triT1Line7DaysPerfES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { triT1Line7DaysPerfEntry 5 }

        triT1Line7DaysPerfSES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { triT1Line7DaysPerfEntry 6 }

        triT1Line7DaysPerfBES  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { triT1Line7DaysPerfEntry 7 }

        triT1Line7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { triT1Line7DaysPerfEntry 8 }

        triT1Line7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { triT1Line7DaysPerfEntry 9 }


--
--  Alarm Queue Table
--

        triT1AlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue Table"
            ::= { triT1card 11 }

        triT1AlarmQueueEntry  OBJECT-TYPE
            SYNTAX  TriT1AlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { triT1AQslot , triT1AQport ,
        triT1AlarmQueueIndex }
            ::= { triT1AlarmQueueTable 1 }

            TriT1AlarmQueueEntry ::= SEQUENCE  {
            triT1AQslot                   LargeSlotIndex,
            triT1AQport                   ThreePortID,
            triT1AlarmQueueIndex          INTEGER,
            triT1AlarmQueueString         DisplayString
        }

        triT1AQslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1AlarmQueueEntry 1 }

        triT1AQport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1AlarmQueueEntry 2 }

        triT1AlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { triT1AlarmQueueEntry 3 }

        triT1AlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { triT1AlarmQueueEntry 4 }

--
--  Alarm History Table
--

        triT1AlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { triT1card 12 }

        triT1AlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  TriT1AlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { triT1AHslot , triT1AHport ,
        triT1AlarmHistoryIndex }
            ::= { triT1AlarmHistoryTable 1 }

            TriT1AlarmHistoryEntry ::= SEQUENCE  {
            triT1AHslot                   LargeSlotIndex,
            triT1AHport                   ThreePortID,
            triT1AlarmHistoryIndex        INTEGER,
            triT1Threshold                INTEGER,
            triT1CurrentState             INTEGER,
            triT1CurrentCount             INTEGER,
            triT1Alarm                    AlarmSeverity
        }

        triT1AHslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1AlarmHistoryEntry 1 }

        triT1AHport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1AlarmHistoryEntry 2 }

        triT1AlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yelLine(1),
                    aisLine(2),
                    losLine(3),
                    lofLine(4),
                    bpvLine(5),
                    essLine(6),
                    uasLine(7),
                    cssLine(8),
                    aisInsert(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { triT1AlarmHistoryEntry 3 }

        triT1Threshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { triT1AlarmHistoryEntry 4 }

        triT1CurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { triT1AlarmHistoryEntry 5 }

        triT1CurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { triT1AlarmHistoryEntry 6 }

        triT1Alarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { triT1AlarmHistoryEntry 7 }


--
--  Line Availability Table
--

        triT1LineAvailTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DS1 line control table."
            ::= { triT1card 13 }

        triT1LineAvailEntry  OBJECT-TYPE
            SYNTAX  TriT1LineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 line control table."
            INDEX { triT1LAslot , triT1LAport }
            ::= { triT1LineAvailTable 1 }

            TriT1LineAvailEntry ::= SEQUENCE  {
            triT1LAslot                   LargeSlotIndex,
            triT1LAport                   ThreePortID,
            triT1AvailableSeconds         DisplayString,
            triT1UnavailableSeconds       DisplayString,
            triT1LineAvail                DisplayString
        }

        triT1LAslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineAvailEntry 1 }

        triT1LAport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineAvailEntry 2 }

        triT1AvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { triT1LineAvailEntry 3 }

        triT1UnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { triT1LineAvailEntry 4 }

        triT1LineAvail  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { triT1LineAvailEntry 5 }


--
--  Alarm Control Table
--

        triT1AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { triT1card 14 }

        triT1AlarmControlEntry  OBJECT-TYPE
            SYNTAX  TriT1AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 alarm control table."
            INDEX { triT1ACslot , triT1ACport }
            ::= { triT1AlarmControlTable 1 }

            TriT1AlarmControlEntry ::= SEQUENCE  {
            triT1ACslot                   LargeSlotIndex,
            triT1ACport                   ThreePortID,
            triT1YELline                  AlarmSeverity,
            triT1AISline                  AlarmSeverity,
            triT1LOSline                  AlarmSeverity,
            triT1LOFline                  AlarmSeverity,
            triT1BPVline                  AlarmSeverity,
            triT1ESSline                  AlarmSeverity,
            triT1UASline                  AlarmSeverity,
            triT1CSSline                  AlarmSeverity,
            triT1AISinsert                AlarmSeverity
        }

        triT1ACslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1AlarmControlEntry 1 }

        triT1ACport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1AlarmControlEntry 2 }

        triT1YELline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-Line State"
            ::= { triT1AlarmControlEntry 3 }

        triT1AISline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS-Line State"
            ::= { triT1AlarmControlEntry 4 }

        triT1LOSline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-line State"
            ::= { triT1AlarmControlEntry 5 }

        triT1LOFline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF-Line State"
            ::= { triT1AlarmControlEntry 6 }

        triT1BPVline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV-Line State"
            ::= { triT1AlarmControlEntry 7 }

        triT1ESSline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ESS-Line State"
            ::= { triT1AlarmControlEntry 8 }

        triT1UASline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS-Line State"
            ::= { triT1AlarmControlEntry 9 }

        triT1CSSline  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CS-Line State"
            ::= { triT1AlarmControlEntry 10 }

        triT1AISinsert  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 AIS insert"
            ::= { triT1AlarmControlEntry 11 }


--
--  Threshold Control Table
--

        triT1ThresholdCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1ThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { triT1card 15 }

        triT1ThresholdCtrlEntry  OBJECT-TYPE
            SYNTAX  TriT1ThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { triT1TCslot , triT1TCport }
            ::= { triT1ThresholdCtrlTable 1 }

            TriT1ThresholdCtrlEntry ::= SEQUENCE  {
            triT1TCslot                   LargeSlotIndex,
            triT1TCport                   ThreePortID,
            triT1ThresholdBPVline         INTEGER,
            triT1ThresholdESSline         INTEGER,
            triT1ThresholdUASline         INTEGER,
            triT1ThresholdCSSline         INTEGER,
            triT1ThresholdAISinsert       INTEGER
        }

        triT1TCslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1ThresholdCtrlEntry 1 }

        triT1TCport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1ThresholdCtrlEntry 2 }

        triT1ThresholdBPVline  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV-Line: 10exp-N"
            ::= { triT1ThresholdCtrlEntry 3 }

        triT1ThresholdESSline  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS-Line "
            ::= { triT1ThresholdCtrlEntry 4 }

        triT1ThresholdUASline  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS-Line "
            ::= { triT1ThresholdCtrlEntry 5 }

        triT1ThresholdCSSline  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS-Line "
            ::= { triT1ThresholdCtrlEntry 6 }

        triT1ThresholdAISinsert  OBJECT-TYPE
            SYNTAX  INTEGER (3..6)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of 3T1 AIS Insert: 10exp-N"
            ::= { triT1ThresholdCtrlEntry 7 }


--
-- Line Diagnostic Control Table
--

        triT1LineDiagCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1LineDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { triT1card 16 }

        triT1LineDiagCtrlEntry  OBJECT-TYPE
            SYNTAX  TriT1LineDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DS1 threshold control table."
            INDEX { triT1DCslot , triT1DCport }
            ::= { triT1LineDiagCtrlTable 1 }

            TriT1LineDiagCtrlEntry ::= SEQUENCE  {
            triT1DCslot                   LargeSlotIndex,
            triT1DCport                   ThreePortID,
            triT1LoopbackType             INTEGER,
            triT1LoopbackStatus           INTEGER,
            triT1QRSSControl              INTEGER,
            triT1QRSSStatus               INTEGER,
            triT1QRSSElapseSeconds        INTEGER,
            triT1QRSSErrorSeconds         INTEGER,
            triT1QRSSErrorCounts          INTEGER,
            triT1InbandLoopbackPeriod     INTEGER
        }

        triT1DCslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1LineDiagCtrlEntry 1 }

        triT1DCport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1LineDiagCtrlEntry 2 }

        triT1LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payloadLoopback(3),
                    lineLoopback(4),
                    remoteLlbInbandActive(5),
                    remotePlbAttActive(6),
                    remotePlbAnsiActive(7),
                    remoteLlbAnsiActive(8),
                    remoteLlbInbandDeactive(9),
                    remotePlbAttDeactive(10),
                    remotePlbAnsiDeactive(11),
                    remoteLlbAnsiDeactive(12)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 Loopback Type"
            ::= { triT1LineDiagCtrlEntry 3 }

        triT1LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopbackNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3T1 Loopback Status"
            ::= { triT1LineDiagCtrlEntry 4 }

        triT1QRSSControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrssDeactive(1),
                    qrssActiveFull(2),
                    qrssResetErrorCount(3),
                    qrssInjectError(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3T1 QRSS Control"
            ::= { triT1LineDiagCtrlEntry 5 }

        triT1QRSSStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    qrssSync(1),
                    qrssUnsync(2),
                    qrssNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3T1 QRSS Status"
            ::= { triT1LineDiagCtrlEntry 6 }

        triT1QRSSElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3T1 QRSS Elapse Seconds"
            ::= { triT1LineDiagCtrlEntry 7 }

        triT1QRSSErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3T1 QRSS Error Seconds"
            ::= { triT1LineDiagCtrlEntry 8 }

        triT1QRSSErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3T1 QRSS Error Counts"
            ::= { triT1LineDiagCtrlEntry 9 }

        triT1InbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of TriT1 inband local, payload, or line loopback"
            ::= { triT1LineDiagCtrlEntry 10 }


--
--  Command Control Table
--

        triT1CommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { triT1card 17 }

        triT1CommandControlEntry  OBJECT-TYPE
            SYNTAX  TriT1CommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { triT1CCslot , triT1CCport }
            ::= { triT1CommandControlTable 1 }

            TriT1CommandControlEntry ::= SEQUENCE  {
            triT1CCslot                   LargeSlotIndex,
            triT1CCport                   ThreePortID,
            triT1AlarmQueueReset          INTEGER,
            triT1UserPerfReset            INTEGER,
            triT1AlarmHistoryReset        INTEGER,
            triT1PortReset                INTEGER,
            triT1PortLoadDefault          INTEGER
        }

        triT1CCslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1CommandControlEntry 1 }

        triT1CCport  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, total 3 ports."
            ::= { triT1CommandControlEntry 2 }

        triT1AlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { triT1CommandControlEntry 3 }

        triT1UserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { triT1CommandControlEntry 4 }

        triT1AlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { triT1CommandControlEntry 5 }

        triT1PortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset TriT1 Port"
            ::= { triT1CommandControlEntry 6 }

        triT1PortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    loadDefault(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default TriT1 Port"
            ::= { triT1CommandControlEntry 7 }


--
--  SYSTEM Information Table
--

        triT1SystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { triT1card 18 }

        triT1SystemInfoEntry  OBJECT-TYPE
            SYNTAX  TriT1SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { triT1SIslot }
            ::= { triT1SystemInfoTable 1 }

            TriT1SystemInfoEntry ::= SEQUENCE  {
            triT1SIslot                   LargeSlotIndex,
            triT1PROMVersion              DisplayString,
            triT1HardwareVersion          DisplayString
        }

        triT1SIslot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1SystemInfoEntry 1 }

        triT1PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " triT1 PROM Version"
            ::= { triT1SystemInfoEntry 2 }

        triT1HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " triT1 Hardware Version"
            ::= { triT1SystemInfoEntry 3 }


--
--  TriT1 Customer Information Table
--

        triT1CustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriT1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Customer Information table."
            ::= { triT1card 99 }

        triT1CustomerInfoEntry  OBJECT-TYPE
            SYNTAX  TriT1CustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Customer Information table."
            INDEX { triT1CISlotIndex , triT1CIPortIndex }
            ::= { triT1CustomerInfoTable 1 }

            TriT1CustomerInfoEntry ::= SEQUENCE {
            triT1CISlotIndex              LargeSlotIndex,
            triT1CIPortIndex              ThreePortID,
            triT1CICustomerInfo           DisplayString
        }

        triT1CISlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { triT1CustomerInfoEntry 1 }

        triT1CIPortIndex    OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { triT1CustomerInfoEntry 2 }

        triT1CICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { triT1CustomerInfoEntry 3 }


        triT1TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of TriT1"
            ::= { triT1card 100 }



--======================================================================--
--======================================================================--
--  small dte card MIB
--======================================================================--
--======================================================================--


--
--      DTE Control Table
--

        sdteConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTEConfigControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Configuration Control Table"
            ::= { sdte-card 1 }

        sdteConfigCtrlEntry  OBJECT-TYPE
            SYNTAX  SDTEConfigControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE configuration control entry"
            INDEX { sdteIndex }
            ::= { sdteConfigControlTable 1 }

            SDTEConfigControl ::= SEQUENCE {
            sdteIndex                   SmallSlotIndex,
            sdteRate                    INTEGER,
            sdteChannel                 INTEGER,
            sdteClock                   INTEGER,
            sdteData                    INTEGER,
            sdteInterface               INTEGER,
            sdteRTS                     INTEGER,
            sdteTTM                     INTEGER,
            sdteV54                     INTEGER
        }

        sdteIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { sdteConfigCtrlEntry 1 }

        sdteRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate64k(1),
                    rate56k(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Rate "
            ::= { sdteConfigCtrlEntry 2 }

        sdteChannel   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Channel: channel numbers designed by MAP."
            ::= { sdteConfigCtrlEntry 3 }

        sdteClock   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Clock Polarity "
            ::= { sdteConfigCtrlEntry 4 }

        sdteData   OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    inverted(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Data Polarity "
            ::= { sdteConfigCtrlEntry 5 }

        sdteInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    v35(1),
                    eia530(2),
                    x21(3),
                    rs232(4),
                    rs449(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Interface Type "
            ::= { sdteConfigCtrlEntry 6 }

        sdteRTS   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS Permanent "
            ::= { sdteConfigCtrlEntry 7 }

        sdteTTM   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1)
--                        on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE Terminal Timing Mode "
            ::= { sdteConfigCtrlEntry 8 }

        sdteV54   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DTE V54 control "
            ::= { sdteConfigCtrlEntry 9 }


--
--  Alarm Queue Table
--

--         sdteAlarmQueueTable  OBJECT-TYPE
--             SYNTAX  SEQUENCE OF SDTEAlarmQueue
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "DTE Alarm Queue Table"
--             ::= { sdte-card 2 }
--
--         sdteAlarmQueueEntry  OBJECT-TYPE
--             SYNTAX  SDTEAlarmQueue
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "DTE alarm queue entry"
--             INDEX  { sdteIndex,
--                      sdteAlarmQIndex }
--             ::= { sdteAlarmQueueTable 1 }
--
--         SDTEAlarmQueue ::=
--             SEQUENCE {
--               sdteAlarmQIndex
--                 INTEGER (1..40),
--               sdteAlarmQStr
--                 DisplayString (SIZE(0..255))
--             }
--
--         sdteAlarmQIndex  OBJECT-TYPE
--             SYNTAX  INTEGER (1..40)
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Select Alarm Queue Index(1-40)"
--             ::= { sdteAlarmQueueEntry 2 }
--
--         sdteAlarmQStr  OBJECT-TYPE
--             SYNTAX  DisplayString (SIZE (0..255))
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Alarm Queue String"
--             ::= { sdteAlarmQueueEntry 3 }

--
--  Alarm History Table
--

        sdteAlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTEAlarmHistory
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Alarm History Table"
            ::= { sdte-card 3 }

        sdteAlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  SDTEAlarmHistory
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE alarm history entry"
            INDEX { sdteIndex ,
        sdteAlarmHIndex }
            ::= { sdteAlarmHistoryTable 1 }

            SDTEAlarmHistory ::= SEQUENCE {
            sdteAlarmHIndex             INTEGER,
            sdteCurrentHState           INTEGER,
            sdteCountH                  INTEGER,
            sdteAlarmH                  AlarmSeverity
        }

        sdteAlarmHIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte-alarm(1)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { sdteAlarmHistoryEntry 2 }

        sdteCurrentHState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { sdteAlarmHistoryEntry 3 }

        sdteCountH  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { sdteAlarmHistoryEntry 4 }

        sdteAlarmH  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { sdteAlarmHistoryEntry 5 }

--
--  Alarm Control Table
--

        sdteAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTEAlarmControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { sdte-card 4 }

        sdteAlarmCtrlEntry  OBJECT-TYPE
            SYNTAX  SDTEAlarmControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the SDTE alarm control table."
            INDEX { sdteIndex }
            ::= { sdteAlarmControlTable 1 }

            SDTEAlarmControl ::= SEQUENCE {
            sdteAlarmEn                 AlarmSeverity
        }

        sdteAlarmEn  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SDTE-Alarm State"
            ::= { sdteAlarmCtrlEntry 2 }


--
-- Line Diagnostic Control Table
--

        sdteLineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTELineDiagControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "DTE Diagnostic Control Table."
            ::= { sdte-card 5 }

        sdteDiagCtrlEntry  OBJECT-TYPE
            SYNTAX  SDTELineDiagControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of DTE diagnostic control table."
            INDEX { sdteIndex }
            ::= { sdteLineDiagControlTable 1 }

            SDTELineDiagControl ::= SEQUENCE {
            sdteLoopbacktype            INTEGER,
            sdteLoopbackstatus          INTEGER
--               sdteBertctrl
--                 INTEGER,
--               sdteBertstatus
--                 INTEGER,
--               sdteElapseseconds
--                 Counter,
--               sdteErrorseconds
--                 Counter,
--               sdteErrorcounts
--                 Counter





    }

        sdteLoopbacktype  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    loopback-To-DTE(2),
                    loopback-To-Line(3),
                    remoteV54-active(4),
                    remoteV54-deactive(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SDTE Loopback Type"
            ::= { sdteDiagCtrlEntry 2 }

        sdteLoopbackstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopback-not-active(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SDTE Loopback Status"
            ::= { sdteDiagCtrlEntry 3 }

--         sdteBertctrl  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        bert-DEACTIVE(1),
--                        prbs-ACTIVE-DTE(2),
--                        qrss-ACTIVE-DTE(3),
--                        bert-RESET-ERROR-COUNT(4),
--                        bert-INJECT-ERROR(5)
--                     }
--             ACCESS  read-write
--             STATUS  mandatory
--             DESCRIPTION
--                "SDTE PRBS/QRSS Control"
--             ::= { sdteDiagCtrlEntry 4 }
--
--         sdteBertstatus  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        bert-SYNC(1),
--                        bert-UNSYNC(2),
--                        bert-NOT-ACTIVE(3)
--                     }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "SDTE PRBS/QRSS Status"
--             ::= { sdteDiagCtrlEntry 5 }
--
--         sdteElapseseconds  OBJECT-TYPE
--             SYNTAX  INTEGER
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "sdte PRBS/QRSS Elapse Seconds"
--             ::= { sdteDiagCtrlEntry 6 }
--
--         sdteErrorseconds  OBJECT-TYPE
--             SYNTAX  INTEGER
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "sdte PRBS/QRSS Error Seconds"
--             ::= { sdteDiagCtrlEntry 7 }
--
--         sdteErrorcounts  OBJECT-TYPE
--             SYNTAX  INTEGER
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "sdte PRBS/QRSS Error Counts"
--             ::= { sdteDiagCtrlEntry 8 }


--
--  Command Control Table
--

        sdteCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTECommandControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { sdte-card 6 }

        sdteCommandCtrlEntry  OBJECT-TYPE
            SYNTAX  SDTECommandControl
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { sdteIndex }
            ::= { sdteCommandControlTable 1 }

            SDTECommandControl ::= SEQUENCE {
            sdteAlarmQueueReset         INTEGER,
            sdteAlarmHistoryReset       INTEGER,
            sdtePortReset               INTEGER,
            sdtePortLoadDefault         INTEGER
        }

        sdteAlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { sdteCommandCtrlEntry 2 }

        sdteAlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { sdteCommandCtrlEntry 3 }

        sdtePortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset SDTE Port"
            ::= { sdteCommandCtrlEntry 4 }

        sdtePortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    loadDefault(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default SDTE Port"
            ::= { sdteCommandCtrlEntry 5 }


--
--  SYSTEM Information Table
--

        sdteSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTESystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { sdte-card 7 }

        sdteSystemInfoEntry  OBJECT-TYPE
            SYNTAX  SDTESystemInformation
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { sdteIndex }
            ::= { sdteSystemInformationTable 1 }

            SDTESystemInformation ::= SEQUENCE {
            sdtePromVersion             DisplayString
        }

        sdtePromVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE EPROM Version"
            ::= { sdteSystemInfoEntry 2 }


--
--  SDTE Status Table
--

        sdteStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SDTEStatus
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The SDTE status table."
            ::= { sdte-card 8 }

        sdteStatusEntry  OBJECT-TYPE
            SYNTAX  SDTEStatus
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the SDTE status table."
            INDEX { sdteIndex }
            ::= { sdteStatusTable 1 }

            SDTEStatus ::= SEQUENCE {
            sdteStatusRTS               INTEGER,
            sdteStatusCTS               INTEGER,
            sdteStatusDSR               INTEGER,
            sdteStatusDCD               INTEGER,
            sdteExtclkloss              INTEGER
        }

        sdteStatusRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE RTS status "
            ::= { sdteStatusEntry 2 }

        sdteStatusCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE CTS status "
            ::= { sdteStatusEntry 3 }

        sdteStatusDSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE DSR status "
            ::= { sdteStatusEntry 4 }

        sdteStatusDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE DCD status "
            ::= { sdteStatusEntry 5 }

        sdteExtclkloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    loss(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SDTE external clock loss "
            ::= { sdteStatusEntry 6 }


        sdteTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of SDTE"
            ::= { sdte-card 100 }


--=====================================================================--
--  TDMOE card MIB
--=====================================================================--

    tdmoeConfigTable                  OBJECT IDENTIFIER ::= { tdmoe-card 1 }

        miscellaneousConfig              OBJECT-TYPE
            SYNTAX  SEQUENCE OF   MiscellaneousConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE  Miscellaneous Config Table."
            ::= { tdmoeConfigTable  1 }

        miscellaneousConfigEntry            OBJECT-TYPE
            SYNTAX  MiscellaneousConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE Advanced Config  Entry"
            INDEX { tdmoeSlotIndex }
            ::= { miscellaneousConfig 1 }

            MiscellaneousConfigEntry ::= SEQUENCE {
            tdmoeSlotIndex              LargeSlotIndex,
            tdmoeActiveBundleTimer      INTEGER,
            tdmoeAlarmFilter            INTEGER,
            tdmoeDelaySwitch            INTEGER,
            tdmoeRecoverDelay           INTEGER
        }

        tdmoeSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { miscellaneousConfigEntry 1 }

        tdmoeActiveBundleTimer     OBJECT-TYPE
            SYNTAX INTEGER (1..99999999 )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "arp timer range: 1~9999999 seconds"
            ::= { miscellaneousConfigEntry 2 }

        tdmoeAlarmFilter     OBJECT-TYPE
            SYNTAX INTEGER (0..180)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Protection: Alarm Filter: 0~180 seconds"
            ::= { miscellaneousConfigEntry 3 }

        tdmoeDelaySwitch     OBJECT-TYPE
            SYNTAX INTEGER (0..180)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Protection: Delay Switch: 0~180 seconds"
            ::= { miscellaneousConfigEntry 4 }

        tdmoeRecoverDelay     OBJECT-TYPE
            SYNTAX INTEGER (0..180)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Protection: Recover Delay: 0~180 seconds"
            ::= { miscellaneousConfigEntry 5 }


--
--Qos Table
--

    qosConfig  OBJECT IDENTIFIER ::= {  tdmoeConfigTable 2}

    qosClassOfServiceConfig  OBJECT IDENTIFIER ::= { qosConfig 1 }

        priorityModeConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  PriorityModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Priority Mode Table."
            ::= { qosClassOfServiceConfig 1 }

        priorityModeEntry  OBJECT-TYPE
            SYNTAX  PriorityModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Priority Mode Table."
            INDEX { priorityModeSlotIndex , priorityModePortIndex }
            ::= { priorityModeConfig 1 }

            PriorityModeEntry ::= SEQUENCE {
            priorityModeSlotIndex       LargeSlotIndex,
            priorityModePortIndex       EthportIndex,
            priorityModeMode            INTEGER
        }
        priorityModeSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { priorityModeEntry 1 }

        priorityModePortIndex  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SWPortNum:switch port SNMP, WAN1, WAN2, and LAN."
            ::= { priorityModeEntry 2 }

        priorityModeMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fixed(1),
                    cos(2),
                    tos(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "WAN1 Priority Mode"
            ::= { priorityModeEntry 3 }

--
--  FixedPriorityTable
--

        fixedPriorityConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  FixedPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Fixed Priority Table."
            ::= { qosClassOfServiceConfig 2 }

        fixedPriorityEntry  OBJECT-TYPE
            SYNTAX  FixedPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Fixed Priority Table."
            INDEX { fixSlotIndex , fixPortIndex }
            ::= { fixedPriorityConfig 1 }

            FixedPriorityEntry ::= SEQUENCE {
            fixSlotIndex                LargeSlotIndex,
            fixPortIndex                EthportIndex,
            fixTransmitPriority         INTEGER
        }

        fixSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { fixedPriorityEntry 1 }

        fixPortIndex  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "priority port."
            ::= { fixedPriorityEntry 2 }

        fixTransmitPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    priority-0(1),
                    priority-1(2),
                    priority-2(3),
                    priority-3(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Transmit Priority"
            ::= { fixedPriorityEntry 3 }

--
--  VlanCosPriorityTable
--

        vlanCosPriorityConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  VlanCosPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS VLAN Cos Priority Table."
            ::= { qosClassOfServiceConfig 3 }

        vlanCosPriorityEntry  OBJECT-TYPE
            SYNTAX  VlanCosPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS VLAN Cos Priority Table."
            INDEX { cosSlotIndex , cosCosPriority }
            ::= { vlanCosPriorityConfig 1 }

            VlanCosPriorityEntry ::= SEQUENCE {
            cosSlotIndex                LargeSlotIndex,
            cosCosPriority              INTEGER,
            cosTransmitPriority         INTEGER
        }

        cosSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { vlanCosPriorityEntry 1 }

        cosCosPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    cos-priority-0(1),
                    cos-priority-1(2),
                    cos-priority-2(3),
                    cos-priority-3(4),
                    cos-priority-4(5),
                    cos-priority-5(6),
                    cos-priority-6(7),
                    cos-priority-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Vlan Cos Priority 0 to 7"
            ::= { vlanCosPriorityEntry 2 }

        cosTransmitPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    priority-0(1),
                    priority-1(2),
                    priority-2(3),
                    priority-3(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Transmit Priority"
            ::= { vlanCosPriorityEntry 3 }


--
--   TosPriorityTable
--

        tosPriorityConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TosPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Tos Priority Table."
            ::= { qosClassOfServiceConfig 4 }

        tosPriorityEntry  OBJECT-TYPE
            SYNTAX  TosPriorityEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Tos Priority Table."
            INDEX { tosSlotIndex , tosTosPriority }
            ::= { tosPriorityConfig 1 }

            TosPriorityEntry ::= SEQUENCE {
            tosSlotIndex                LargeSlotIndex,
            tosTosPriority              INTEGER,
            tosTransmitPriority         INTEGER
        }
        tosSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tosPriorityEntry 1 }

        tosTosPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    tos-priority-0(1),
                    tos-priority-1(2),
                    tos-priority-2(3),
                    tos-priority-3(4),
                    tos-priority-4(5),
                    tos-priority-5(6),
                    tos-priority-6(7),
                    tos-priority-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Tos Priority 0 to 7"
            ::= { tosPriorityEntry 2 }

        tosTransmitPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    priority-0(1),
                    priority-1(2),
                    priority-2(3),
                    priority-3(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Transmit Priority"
            ::= { tosPriorityEntry 3 }

--=====================
--  Qos Tx Schedule Table
--=====================

    qosTxScheduleConfig  OBJECT IDENTIFIER ::= { qosConfig 2 }

        scheduleAlgorithmConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  ScheduleAlgorithmEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Scheduling Algorithm Table."
            ::= { qosTxScheduleConfig 1 }

        scheduleAlgorithmEntry  OBJECT-TYPE
            SYNTAX  ScheduleAlgorithmEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Scheduling Algorithm Table."
            INDEX { scheduleSlotIndex , schedulePortIndex }
            ::= { scheduleAlgorithmConfig 1 }

            ScheduleAlgorithmEntry ::= SEQUENCE {
            scheduleSlotIndex           LargeSlotIndex,
            schedulePortIndex           EthportIndex,
            scheduleAlgorithm           INTEGER
        }

        scheduleSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { scheduleAlgorithmEntry 1 }

        schedulePortIndex  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "scheduling algorithm port"
            ::= { scheduleAlgorithmEntry 2 }

        scheduleAlgorithm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    strict-priority(1),
                    weighted-round-robin(2)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "scheduling algorithm"
            ::= { scheduleAlgorithmEntry 3 }

--
--  WRR Weight Table
--




        wrrWeightConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  WrrweightEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Scheduling Algorithm Table."
            ::= { qosTxScheduleConfig 2 }

        wrrweightEntry  OBJECT-TYPE
            SYNTAX  WrrweightEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Wrr Table."
            INDEX { wrrSlotIndex }
            ::= { wrrWeightConfig 1 }

            WrrweightEntry ::= SEQUENCE {
            wrrSlotIndex                LargeSlotIndex,
            wrrWeightP0Queue            INTEGER,
            wrrWeightP1Queue            INTEGER,
            wrrWeightP2Queue            INTEGER,
            wrrWeightP3Queue            INTEGER

    }

        wrrSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { wrrweightEntry 1 }

        wrrWeightP0Queue  OBJECT-TYPE
            SYNTAX  INTEGER (0..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "P0 Queue Percentage, sum of Queue percentage of the four ports must be 100% "
            ::= { wrrweightEntry 2 }

        wrrWeightP1Queue  OBJECT-TYPE
            SYNTAX  INTEGER (0..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "P1 Queue Percentage"
            ::= { wrrweightEntry 3}

        wrrWeightP2Queue  OBJECT-TYPE
            SYNTAX  INTEGER (0..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "P2 Queue Percentage"
            ::= { wrrweightEntry 4}

        wrrWeightP3Queue  OBJECT-TYPE
            SYNTAX  INTEGER (0..100)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "P3 Queue Percentage"
            ::= { wrrweightEntry 5}


--   flow control

        flowControlConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  FlowControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS flow control Table."
            ::= { qosTxScheduleConfig 3 }

        flowControlEntry  OBJECT-TYPE
            SYNTAX  FlowControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS flow control Table."
            INDEX { flowSlotIndex , flowPortIndx }
            ::= { flowControlConfig 1 }

            FlowControlEntry ::= SEQUENCE {
            flowSlotIndex               LargeSlotIndex,
            flowPortIndx                EthportIndex,
            flowFlowControl             INTEGER
        }

        flowSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { flowControlEntry 1 }

        flowPortIndx  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE port 1-4"
            ::= { flowControlEntry 2 }

        flowFlowControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "flow control"
            ::= { flowControlEntry 3 }



        qosRateCtrlConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF  RateCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Ethernet QoS Scheduling Algorithm Table."
            ::= { qosConfig 3}

        rateCtrlEntry  OBJECT-TYPE
            SYNTAX  RateCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Ethernet QoS Wrr Table."
            INDEX { rateCtrlSlotIndex , rateCtrlPortIndex }
            ::= { qosRateCtrlConfig 1 }


            RateCtrlEntry ::= SEQUENCE {
            rateCtrlSlotIndex           LargeSlotIndex,
            rateCtrlPortIndex           EthportIndex,
            rateCtrlSpeedRangeValue     INTEGER,
            rateCtrlRateGranularity     INTEGER
        }

        rateCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rateCtrlEntry 1 }

        rateCtrlPortIndex  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port Index"
            ::= { rateCtrlEntry 2 }

        rateCtrlSpeedRangeValue  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "64kbps to 1mbps in the ratelimit mode of 64kbps, 1mbps to 100mbps in
                the ratelimit mode of 1 mbp, and 100 mbps to 1000 mbps in the ratelimit mode of 10 mbps. "
            ::= { rateCtrlEntry 3 }


        rateCtrlRateGranularity OBJECT-TYPE
            SYNTAX  INTEGER {
                    kbps-64(1),
                    mbps-1(2),
                    mbps-10(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port rate limit: from 64kbps to 1mbps in increments of of 64kbps, from 1mbps to 100mbps in
                increments of 1 mbp and from 100 mbps to 1000 mbps in increments of 10 mbps."
            ::= { rateCtrlEntry 4 }

--
--   eth phy config table
--
    ethPortConfig    OBJECT IDENTIFIER ::= { tdmoeConfigTable 3}

        ethPortElectricConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthPortelectricEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth phy electric Config Table."
            ::= { ethPortConfig 1 }

        ethPortelectricEntry       OBJECT-TYPE
            SYNTAX  EthPortelectricEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { ethSlotIndex , ethPortIndex }
            ::= { ethPortElectricConfig 1 }

            EthPortelectricEntry ::= SEQUENCE {
            ethSlotIndex                LargeSlotIndex,
            ethPortIndex                EthportIndex,
            ethState                    INTEGER,
            ethAutoNegotiation          INTEGER,
            ethSpeed                    INTEGER,
            ethDuplex                   INTEGER
        }

        ethSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ethPortelectricEntry 1 }

        ethPortIndex    OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "eth port 1-4"
            ::= { ethPortelectricEntry 2 }

        ethState         OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port State"
            ::= { ethPortelectricEntry 3 }

        ethAutoNegotiation    OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "auto negotiation state"
            ::= {ethPortelectricEntry 4 }

        ethSpeed    OBJECT-TYPE
            SYNTAX  INTEGER {
                    mbps-10   (1),
                    mbps-100  (2),
                    mbps-1000 (3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port speed 10/100/1000 mbps"
            ::= {ethPortelectricEntry 5 }

        ethDuplex      OBJECT-TYPE
            SYNTAX  INTEGER {
                    half   (1),
                    full   (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port duplex mode(half/full)"
            ::= {ethPortelectricEntry 6 }


        ethPortOpticalConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF EthPortopticalEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth phy electric Config Table."
            ::= { ethPortConfig 2 }

        ethPortopticalEntry       OBJECT-TYPE
            SYNTAX  EthPortopticalEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { ethopticalSlotIndex , ethopticalPortIndex }
            ::= { ethPortOpticalConfig 1 }

            EthPortopticalEntry ::= SEQUENCE {
            ethopticalSlotIndex             LargeSlotIndex,
            ethopticalPortIndex             INTEGER,
            ethopticalState                 INTEGER,
            ethopticalAutolaserShutdown     INTEGER,
            ethopticalSpeed                 INTEGER,
            ethopticalAutoNegotiation       INTEGER,
            ethopticalDuplex                INTEGER,
            ethopticalPulseRepetitionTime   INTEGER,
            ethopticalManualRestart         INTEGER
        }

        ethopticalSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ethPortopticalEntry 1 }

        ethopticalPortIndex    OBJECT-TYPE
            SYNTAX  INTEGER {
                    eth-1   (1),
                    eth-2   (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "eth port 1-2"
            ::= { ethPortopticalEntry 2 }

        ethopticalState         OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port State"
            ::= { ethPortopticalEntry 3 }

        ethopticalAutolaserShutdown    OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "autolasershutdown state"
            ::= {ethPortopticalEntry 4 }

        ethopticalSpeed         OBJECT-TYPE
            SYNTAX  INTEGER {
                    mbps-1000 (1),
                    mbps-100  (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "port State"
            ::= { ethPortopticalEntry 5 }

        ethopticalAutoNegotiation   OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "auto negotiation state"
            ::= {ethPortopticalEntry 6 }

        ethopticalDuplex    OBJECT-TYPE
            SYNTAX  INTEGER {
                    half   (1),
                    full   (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port duplex mode(half/full)"
            ::= {ethPortopticalEntry 7 }

        ethopticalPulseRepetitionTime  OBJECT-TYPE
            SYNTAX  INTEGER (60..300)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ALS/APSD pulse repetition time for automatic restart(sec)"
            ::= { ethPortopticalEntry 8 }

        ethopticalManualRestart  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    start(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Optical port manual restart"
            ::= { ethPortopticalEntry 9 }

--
-- ethL2 Table
--

    ethSwitchConfig         OBJECT IDENTIFIER ::= { tdmoeConfigTable 4 }


        agingtimeConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  AgingtimeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= {  ethSwitchConfig 1 }

        agingtimeEntry    OBJECT-TYPE
            SYNTAX  AgingtimeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "age tme Entry."
            INDEX { tdmoeSlotIndex }
            ::= { agingtimeConfig 1 }

            AgingtimeEntry  ::= SEQUENCE {
            tdmoeAgingtime              INTEGER
        }

        tdmoeAgingtime     OBJECT-TYPE
            SYNTAX   INTEGER (0..3825)
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "mac table aging time range: 0~3825 seconds, setting 0 second disables aging process
                aging time must be a multiple of fifteen."
            ::= {agingtimeEntry 2 }


        addMacConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  AddMacEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "add static mac table"
            ::= {  ethSwitchConfig  2}

        addMacEntry    OBJECT-TYPE
            SYNTAX  AddMacEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "age static mac Entry."
            INDEX { tdmoeSlotIndex }
            ::= { addMacConfig 1 }

            AddMacEntry   ::= SEQUENCE {
            tdmoeAddPort                INTEGER,
            tdmoeAddmacAddress          DisplayString
        }

        tdmoeAddPort     OBJECT-TYPE
            SYNTAX   INTEGER {
                    mgt   (1),
                    eth-1 (2),
                    eth-2 (3),
                    eth-3 (4),
                    eth-4 (5)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "determine which port to add mac"
            ::= {addMacEntry  2}

        tdmoeAddmacAddress   OBJECT-TYPE
            SYNTAX   DisplayString (SIZE (0..12))
            ACCESS   read-write
            STATUS    mandatory
            DESCRIPTION
                "add static mac in hex mode(0~F)"
            ::= {addMacEntry  3}

        delMacConfig     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  DelMacEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "delete static mac table"
            ::= {  ethSwitchConfig  3 }

        delMacEntry    OBJECT-TYPE
            SYNTAX  DelMacEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "delete static mac Entry."
            INDEX { tdmoeSlotIndex }
            ::= { delMacConfig 1 }

            DelMacEntry   ::= SEQUENCE {
            tdmoeDelPort                INTEGER
        }
        tdmoeDelPort     OBJECT-TYPE
            SYNTAX   INTEGER {
                    mgt   (1),
                    eth-1 (2),
                    eth-2 (3),
                    eth-3 (4),
                    eth-4 (5)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "delete port's mac"
            ::= {delMacEntry  2}


    rstpTable            OBJECT IDENTIFIER ::= {tdmoeConfigTable 5  }

        rstpConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  RstpConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "rstp config table"
            ::= {rstpTable  1}

        rstpConfigEntry    OBJECT-TYPE
            SYNTAX  RstpConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "rstp Config Entry."
            INDEX { rstpSlotIndex }
            ::= { rstpConfig 1 }

            RstpConfigEntry  ::= SEQUENCE {
            rstpSlotIndex               LargeSlotIndex,
            rstpState                   INTEGER,
            rstpPriority                INTEGER,
            rstpHellotime               INTEGER,
            rstpMaximumAge              INTEGER,
            rstpForwardDelay            INTEGER
        }

        rstpSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rstpConfigEntry 1 }

        rstpState   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off  (1),
                    stp  (2),
                    rstp (3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "rstp state"
            ::= {rstpConfigEntry  2}

        rstpPriority   OBJECT-TYPE
            SYNTAX   INTEGER (0..65534)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "rstp priority 0~65534"
            ::= {rstpConfigEntry  3}

        rstpHellotime   OBJECT-TYPE
            SYNTAX   INTEGER (1..10)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "rstp hello time 1~10 seconds"
            ::= {rstpConfigEntry  4}

        rstpMaximumAge  OBJECT-TYPE
            SYNTAX   INTEGER (6..40)
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "rstp maxumun age 6~40 seconds"
            ::= {rstpConfigEntry  5}

        rstpForwardDelay   OBJECT-TYPE
            SYNTAX   INTEGER (4..30)
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "rstp forward delay 4~30 seconds"
            ::= {rstpConfigEntry  6}

        rstpPortConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  RstpPortConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= {rstpTable  2}

        rstpPortConfigEntry     OBJECT-TYPE
            SYNTAX    RstpPortConfigEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "rstp Port Config Entry."
            INDEX { rstpSlotIndex , rstpPortIndex }
            ::= { rstpPortConfig 1 }

            RstpPortConfigEntry ::= SEQUENCE {
            rstpPortIndex               EthportIndex,
            rstpStpState                INTEGER,
            rstpPortPriority            INTEGER,
            rstpPortCost                INTEGER,
            rstpLinkType                INTEGER,
            rstpEdgePort                INTEGER
        }

        rstpPortIndex    OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Eth port 1-4"
            ::= { rstpPortConfigEntry 2}

        rstpStpState    OBJECT-TYPE
            SYNTAX   INTEGER{
                    disable (1),
                    block   (2),
                    listen  (3),
                    learn   (4),
                    forward (5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "stp port state"
            ::= {rstpPortConfigEntry  3}

        rstpPortPriority    OBJECT-TYPE
            SYNTAX  INTEGER (0..240)
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "rstp port priority 0~240"
            ::= {rstpPortConfigEntry 4}

        rstpPortCost       OBJECT-TYPE
            SYNTAX  INTEGER (0..65534)
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "rstp port cost 0~32767"
            ::= {rstpPortConfigEntry  5}

        rstpLinkType   OBJECT-TYPE
            SYNTAX    INTEGER {
                    auto   (1),
                    p-to-p (2),
                    shared (3)
                }
            ACCESS   read-write
            STATUS   mandatory
            DESCRIPTION
                "rstp port link type"
            ::= {rstpPortConfigEntry  6}

        rstpEdgePort   OBJECT-TYPE
            SYNTAX    INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "edge port mode"
            ::= {rstpPortConfigEntry  7}


        linkaggregateConfig     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  AggregateEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "link aggregate config"
            ::= {tdmoeConfigTable  6}

        aggregateEntry    OBJECT-TYPE
            SYNTAX    AggregateEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "link aggregate Entry."
            INDEX { aggreSlotIndex }
            ::= { linkaggregateConfig 1 }

            AggregateEntry  ::= SEQUENCE {
            aggreSlotIndex              LargeSlotIndex,
            aggreTrunkGroup1            INTEGER,
            aggreTrunkGroup2            INTEGER
        }

        aggreSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { aggregateEntry 1 }

        aggreTrunkGroup1   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    leader-ETH1 (2),
                    leader-ETH2 (3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "choose group1 port trunk leader(eth1/eth2)"
            ::= {aggregateEntry  2}

        aggreTrunkGroup2   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    leader-ETH3 (2),
                    leader-ETH4 (3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "choose group2 porttrunk leader(eth3/eth4)"
            ::= {aggregateEntry  3}


    tributaryConfig         OBJECT IDENTIFIER ::= { tdmoeConfigTable 7 }

        tributaryModeConfig     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TributaryModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "tributary config table"
            ::= {tributaryConfig 1 }

        tributaryModeEntry    OBJECT-TYPE
            SYNTAX    TributaryModeEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "tributary Entry."
            INDEX { tribSlotIndex }
            ::= { tributaryModeConfig 1 }

            TributaryModeEntry ::= SEQUENCE  {
            tribSlotIndex               LargeSlotIndex,
            tribMode                    INTEGER
        }
        tribSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tributaryModeEntry 1 }

        tribMode   OBJECT-TYPE
            SYNTAX  INTEGER{
                    e1(1),
                    t1(2)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "transport mode:E1/T1"
            ::= {tributaryModeEntry  2}


        tributaryPortConfig     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TributaryPortEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "tributary config table"
            ::= {tributaryConfig 2 }

        tributaryPortEntry    OBJECT-TYPE
            SYNTAX    TributaryPortEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "tributary Entry."
            INDEX { tribSlotIndex , tribTribIndex }
            ::= { tributaryPortConfig 1 }

            TributaryPortEntry ::= SEQUENCE  {
            tribTribIndex               Tributaryport,
            tribFrame                   INTEGER,
            tribCAS                     INTEGER,
            tribRemoteloss              INTEGER
        }



        tribTribIndex    OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "trib port 1-4"
            ::= { tributaryPortEntry  2}

        tribFrame     OBJECT-TYPE
            SYNTAX  INTEGER{
                    e1-fas  (1),
                    e1-unframe (2),
                    t1-t1403(3),
                    t1-esf  (4),
                    t1-d4   (5),
                    t1-unframe (6)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "e1/t1 line frame"
            ::= {tributaryPortEntry  3}

        tribCAS   OBJECT-TYPE
            SYNTAX  INTEGER{
                    off  (1),
                    on   (2)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "cas state"
            ::= {tributaryPortEntry  4}

        tribRemoteloss    OBJECT-TYPE
            SYNTAX  INTEGER{
                    continue-send-packet (1),
                    stop      (2)
                }
            ACCESS    read-write
            STATUS    mandatory
            DESCRIPTION
                "when remote side are lost, local side stop or continue sending data."
            ::= {tributaryPortEntry  5}


        toeBundleProtectionConfig     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  ToeBundleProtectionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "link aggregate config"
            ::= {tdmoeConfigTable  8}

        toeBundleProtectionEntry    OBJECT-TYPE
            SYNTAX    ToeBundleProtectionEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "link aggregate Entry."
            INDEX { toeBPSlot }
            ::= { toeBundleProtectionConfig 1 }

            ToeBundleProtectionEntry  ::= SEQUENCE {
            toeBPSlot              LargeSlotIndex,
            toeBPEnable            INTEGER,
            toeBPTimeout            INTEGER
        }

        toeBPSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { toeBundleProtectionEntry 1 }

        toeBPEnable   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "choose group1 port trunk leader(eth1/eth2)"
            ::= {toeBundleProtectionEntry  2}

        toeBPTimeout  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "choose group2 porttrunk leader(eth3/eth4)"
            ::= {toeBundleProtectionEntry 3}

-- Synce Config Table --

--    toeSynceGroup          OBJECT IDENTIFIER ::= { tdmoeConfigTable 9 }

--        toeTimingGeneralTable     OBJECT-TYPE
--            SYNTAX  SEQUENCE OF  ToeTimingGeneralEntry
--            ACCESS  not-accessible
--            STATUS  mandatory
--            DESCRIPTION
--                "SyncE config table"
--            ::= {toeSynceGroup 1 }

--        toeTimingGeneralEntry    OBJECT-TYPE
--            SYNTAX    ToeTimingGeneralEntry
--            ACCESS    not-accessible
--            STATUS    mandatory
--            DESCRIPTION
--                "SyncE Entry."
--            INDEX { toeTimingSlotIndex }
--            ::= { toeTimingGeneralTable 1 }

--            ToeTimingGeneralEntry ::= SEQUENCE  {
--            toeTimingSlotIndex          LargeSlotIndex,
--            toeTimingSsmMode            INTEGER,
--            toeTimingWtrTimer           Integer32,
--            toeTimingQLOption                   INTEGER
--        }

--        toeTimingSlotIndex  OBJECT-TYPE
--            SYNTAX  LargeSlotIndex
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--            "Slot 1~12, total 12 slots."
--            ::= { toeTimingGeneralEntry 1 }

--        toeTimingSsmMode OBJECT-TYPE
--            SYNTAX INTEGER {
--                    EsmcSsmDisabled(1),
--                    EsmcSsmEnabled(2)
--                }
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Timing mode"
--            ::= { toeTimingGeneralEntry 2 }

--        toeTimingWtrTimer OBJECT-TYPE
--            SYNTAX Integer32 (1..15)
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Timing wait-to-restore timer period"
--            ::= { toeTimingGeneralEntry 3 }

--        toeTimingQLOption OBJECT-TYPE
--            SYNTAX INTEGER {
--                    g781Option1(1),
--                    g781Option2(2)
--                }
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Synchronous ESMC option"
--            ::= { toeTimingGeneralEntry 4 }

--        toeTimingSourceAddDelTable OBJECT-TYPE
--            SYNTAX SEQUENCE OF ToeTimingSourceAddDelEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "This table is used to configure Timing interfaces"
--            ::= { toeSynceGroup 2 }

--        toeTimingSourceAddDelEntry OBJECT-TYPE
--            SYNTAX ToeTimingSourceAddDelEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "The entry of timingQLInterfaceTable."
--            INDEX { toeTimingSourceSlotIndex , toeTimingSourceIntfName }
--            ::= { toeTimingSourceAddDelTable 1 }

--            ToeTimingSourceAddDelEntry ::= SEQUENCE {
--            toeTimingSourceSlotIndex      LargeSlotIndex,
--            toeTimingSourceIntfName INTEGER,
--            toeTimingSourcePriority INTEGER,
--            toeTimingSourceStatus   INTEGER
--    }

--        toeTimingSourceSlotIndex  OBJECT-TYPE
--            SYNTAX  LargeSlotIndex
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--            "Slot 1~12, total 12 slots."
--            ::= { toeTimingSourceAddDelEntry 1 }

--        toeTimingSourceIntfName OBJECT-TYPE
--            SYNTAX INTEGER {
--                    internal(1),
--                    eth1(2),
--                    eth2(3),
--                    eth3(4),
--                    eth4(5)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "The interface name for Timing source add/delete action."
--            ::= { toeTimingSourceAddDelEntry 2 }

--        toeTimingSourcePriority OBJECT-TYPE
--            SYNTAX INTEGER (0..255)
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Clock priority for Timing source add/delete action"
--            ::= { toeTimingSourceAddDelEntry 3 }

--        toeTimingSourceStatus OBJECT-TYPE
--            SYNTAX INTEGER {
--                    disable(1),
--                    enable(2)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "The status of source to/from the Timing source list."
--            ::= { toeTimingSourceAddDelEntry 4 }

--        toeTimingCurrentTable OBJECT-TYPE
--            SYNTAX SEQUENCE OF ToeTimingCurrentEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "This table is used to disply timing current information"
--            ::= { toeSynceGroup 3 }

--        toeTimingCurrentEntry    OBJECT-TYPE
--            SYNTAX    ToeTimingCurrentEntry
--            ACCESS    not-accessible
--            STATUS    mandatory
--            DESCRIPTION
--                "SyncE Entry."
--            INDEX { toeTimingCurrentSlotIndex }
--            ::= { toeTimingCurrentTable 1 }

--            ToeTimingCurrentEntry ::= SEQUENCE  {
--            toeTimingCurrentSlotIndex      LargeSlotIndex,
--            toeTimingCurrentClockLocked    INTEGER,
--            toeTimingCurrentQL             INTEGER
--        }

--        toeTimingCurrentSlotIndex  OBJECT-TYPE
--            SYNTAX  LargeSlotIndex
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--            "Slot 1~12, total 12 slots."
--            ::= { toeTimingCurrentEntry 1 }

--        toeTimingCurrentClockLocked OBJECT-TYPE
--            SYNTAX INTEGER {
--                    internal(1),
--                    eth1(2),
--                    eth2(3),
--                    eth3(4),
--                    eth4(5)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Current clock selected for Timing"
--            ::= { toeTimingCurrentEntry 2 }

--        toeTimingCurrentQL OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    forceOpt1Prc(1),
--                    forceOpt1SsuA(2),
--                    forceOpt1SsuB(3),
--                    forceOpt1Eec1(4),
--                    forceOpt1Dnu(5),
--                    forceOpt2Prs(6),
--                    forceOpt2Stu(7),
--                    forceOpt2St2(8),
--                    forceOpt2Tnc(9),
--                    forceOpt2St3(10),
--                    forcePpt2Smc(11),
--                    forceOpt2St4(12),
--                    forceOpt2Prov(13),
--                    forceOpt2Dus(14),
--                    failed(15)
--                }
--            ACCESS read-only
--            STATUS mandatory
--          DESCRIPTION
--                "Current QL(quality-level) selected for Timing"
--            ::= { toeTimingCurrentEntry 3 }

--        toeTimingNominatedSrcTable OBJECT-TYPE
--            SYNTAX SEQUENCE OF ToeTimingNominatedSrcEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "This table is used to show all Timing nominated clock source"
--            ::= { toeSynceGroup 4 }

--        toeTimingNominatedSrcEntry OBJECT-TYPE
--            SYNTAX ToeTimingNominatedSrcEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "The entry of timingNominatedSrcTable"
--            INDEX { toeTimingNominatedSlotIndex , toeTimingNominatedName }
--            ::= { toeTimingNominatedSrcTable 1 }

--            ToeTimingNominatedSrcEntry ::= SEQUENCE {
--            toeTimingNominatedSlotIndex  INTEGER,
--            toeTimingNominatedName       INTEGER,
--            toeTimingNominatedPriority   INTEGER,
--            toeTimingNominatedQlIn       INTEGER,
--            toeTimingNominatedSignalFail INTEGER,
--            toeTimingNominatedState      INTEGER
--        }

--        toeTimingNominatedSlotIndex OBJECT-TYPE
--            SYNTAX INTEGER
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Timing interface index"
--            ::= { toeTimingNominatedSrcEntry 1 }

--        toeTimingNominatedName OBJECT-TYPE
--            SYNTAX INTEGER {
--                    internal(1),
--                    eth1(2),
--                    eth2(3),
--                    eth3(4),
--                    eth4(5)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Timing interface name"
--            ::= { toeTimingNominatedSrcEntry 2  }

--        toeTimingNominatedPriority OBJECT-TYPE
--            SYNTAX INTEGER (1..255)
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Priority of nominated clock source"
--            ::= { toeTimingNominatedSrcEntry 3 }

--        toeTimingNominatedQlIn OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    qlOpt1Prc(1),
--                    qlOpt1SsuA(2),
--                    qlOpt1SsuB(3),
--                    qlOpt1Eec1(4),
--                    qlOpt1Dnu(5),
--                    qlOpt2Prs(6),
--                    qlOpt2Stu(7),
--                    qlOpt2St2(8),
--                    qlOpt2Tnc(9),
--                    qlOpt2St3(10),
--                    qlOpt2Smc(11),
--                    qlOpt2St4(12),
--                    qlOpt2Prov(13),
--                    qlOpt2Dus(14),
--                    qlFailed(15)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Current QL(quality-level) status of nominated clock source"
--            ::= { toeTimingNominatedSrcEntry 4 }

--        toeTimingNominatedSignalFail OBJECT-TYPE
--            SYNTAX INTEGER {
--                    no(1),
--                    yes(2)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Current signal fail status of nominated clock source"
--            ::= { toeTimingNominatedSrcEntry 5 }

--        toeTimingNominatedState OBJECT-TYPE
--            SYNTAX INTEGER {
--                    normal(1),
--                    failed(2),
--                    waitToRestore(3)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Current state of nominated clock source"
--            ::= { toeTimingNominatedSrcEntry 6 }

--        toeTimingQLInterfaceTable OBJECT-TYPE
--            SYNTAX SEQUENCE OF ToeTimingInterfaceEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "This table is used to configure Timing interfaces"
--            ::= { toeSynceGroup 5 }

--        toeTimingInterfaceEntry OBJECT-TYPE
--            SYNTAX ToeTimingInterfaceEntry
--            ACCESS not-accessible
--            STATUS mandatory
--            DESCRIPTION
--                "The entry of timingQLInterfaceTable."
--            INDEX { toeTimingInterfaceSlotIndex , toeTimingInterfaceName }
--            ::= { toeTimingQLInterfaceTable 1 }

--            ToeTimingInterfaceEntry ::= SEQUENCE {
--            toeTimingInterfaceSlotIndex INTEGER,
--            toeTimingInterfaceName     INTEGER,
--            toeTimingInterfaceSsm      INTEGER,
--            toeTimingInterfaceRxQlMode INTEGER,
--            toeTimingInterfaceRxQl     INTEGER,
--            toeTimingInterfaceTxQlMode INTEGER,
--            toeTimingInterfaceTxQl     INTEGER
--        }

--        toeTimingInterfaceSlotIndex OBJECT-TYPE
--            SYNTAX INTEGER
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Timing interface index"
--            ::= { toeTimingInterfaceEntry 1 }

--        toeTimingInterfaceName OBJECT-TYPE
--            SYNTAX INTEGER {
--                    internal(1),
--                    eth1(2),
--                    eth2(3),
--                    eth3(4),
--                    eth4(5)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Timing interface name"
--            ::= { toeTimingInterfaceEntry 2  }


--        toeTimingInterfaceSsm OBJECT-TYPE
--            SYNTAX INTEGER {
--                    disable(1),
--                    enable(2)
--                }
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Interface SSM transmit/receive config"
--            ::= { toeTimingInterfaceEntry 3 }

--        toeTimingInterfaceRxQlMode OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    forceOpt1Prc(1),
--                    forceOpt1SsuA(2),
--                    forceOpt1SsuB(3),
--                    forceOpt1Eec1(4),
--                    forceOpt1Dnu(5),
--                    forceOpt2Prs(6),
--                    forceOpt2Stu(7),
--                    forceOpt2St2(8),
--                    forceOpt2Tnc(9),
--                    forceOpt2St3(10),
--                    forceOpt2Smc(11),
--                    forceOpt2St4(12),
--                    forceOpt2Prov(13),
--                    forceOpt2Dus(14)
--                }
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Interface Rx QL mode setup"
--            ::= { toeTimingInterfaceEntry 4 }

--        toeTimingInterfaceRxQl OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    forceOpt1Prc(1),
--                    forceOpt1SsuA(2),
--                    forceOpt1SsuB(3),
--                    forceOpt1Eec1(4),
--                    forceOpt1Dnu(5),
--                    forceOpt2Prs(6),
--                    forceOpt2Stu(7),
--                    forceOpt2St2(8),
--                    forceOpt2Tnc(9),
--                    forceOpt2St3(10),
--                    forceOpt2Smc(11),
--                    forceOpt2St4(12),
--                    forceOpt2Prov(13),
--                    forceOpt2Dus(14),
--                    failed(15)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Interface Rx QL current status"
--            ::= { toeTimingInterfaceEntry 5 }

--        toeTimingInterfaceTxQlMode OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    forceOpt1Prc(1),
--                    forceOpt1SsuA(2),
--                    forceOpt1SsuB(3),
--                    forceOpt1Eec1(4),
--                    forceOpt1Dnu(5),
--                    forceOpt2Prs(6),
--                    forceOpt2Stu(7),
--                    forceOpt2St2(8),
--                    forceOpt2Tnc(9),
--                    forceOpt2St3(10),
--                    forceOpt2Smc(11),
--                    forceOpt2St4(12),
--                    forceOpt2Prov(13),
--                    forceOpt2Dus(14)
--                }
--            ACCESS read-write
--            STATUS mandatory
--            DESCRIPTION
--                "Interface Tx QL mode setup"
--            ::= { toeTimingInterfaceEntry 6 }

--        toeTimingInterfaceTxQl OBJECT-TYPE
--            SYNTAX INTEGER {
--                    auto(0),
--                    forceOpt1Prc(1),
--                    forceOpt1SsuA(2),
--                    forceOpt1SsuB(3),
--                    forceOpt1Eec1(4),
--                    forceOpt1Dnu(5),
--                    forceOpt2Prs(6),
--                    forceOpt2Stu(7),
--                    forceOpt2St2(8),
--                    forceOpt2Tnc(9),
--                    forceOpt2St3(10),
--                    forceOpt2Smc(11),
--                    forceOpt2St4(12),
--                    forceOpt2Prov(13),
--                    forceOpt2Dus(14),
--                    failed(15)
--                }
--            ACCESS read-only
--            STATUS mandatory
--            DESCRIPTION
--                "Interface Tx QL current status"
--            ::= { toeTimingInterfaceEntry 7 }

-- End of SyncE --


    timeSlotIpAssignTable       OBJECT IDENTIFIER ::= { tdmoe-card 2 }

        bundleAllocationConfig  OBJECT-TYPE
            SYNTAX  SEQUENCE OF BundleAllocationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Bundle Allocation table."
            ::= {timeSlotIpAssignTable 1 }

        bundleAllocationEntry  OBJECT-TYPE
            SYNTAX  BundleAllocationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Bundle Allocation table."
            INDEX { tdmoeSlotIndex }
            ::= { bundleAllocationConfig 1 }

            BundleAllocationEntry ::= SEQUENCE {
            tdmoeBundleAllocationMode   INTEGER
        }

        tdmoeBundleAllocationMode    OBJECT-TYPE
            SYNTAX  INTEGER {
                    mode-16 (1),
                    mode-32 (2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mode16:trib1-16,trib2-16,trib3-16,trib4-16
                mode32:trib1-32,trib2-disable,trib3-32,trib4-disable"
            ::= { bundleAllocationEntry 2 }




        timeSlotAssignConfig   OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TimeSlotAssignEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMOE bundle timeslot map table."
            ::= {timeSlotIpAssignTable 2 }

        timeSlotAssignEntry     OBJECT-TYPE
            SYNTAX  TimeSlotAssignEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "bundletimeSlot map Entry."
            INDEX { timeSlotSlotIndex , timeSlotTribIndex , timeSlotTsIndex }
            ::= { timeSlotAssignConfig 1 }

            TimeSlotAssignEntry ::= SEQUENCE {
            timeSlotSlotIndex           LargeSlotIndex,
            timeSlotTribIndex           Tributaryport,
            timeSlotTsIndex             INTEGER,
            timeSlotBundleID            Bundleid

    }
        timeSlotSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { timeSlotAssignEntry 1 }

        timeSlotTribIndex  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port index."
            ::= { timeSlotAssignEntry 2 }

        timeSlotTsIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { timeSlotAssignEntry 3 }

        timeSlotBundleID  OBJECT-TYPE
            SYNTAX  Bundleid
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "timeslot bundle index."
            ::= { timeSlotAssignEntry 4 }


        bundleIPConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  BundleIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMOE bundle ip table."
            ::= { timeSlotIpAssignTable 3}

        bundleIPEntry     OBJECT-TYPE
            SYNTAX  BundleIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "timeSlotIP Entry."
            INDEX { tdmoeSlotIndex }
            ::= { bundleIPConfig 1 }

            BundleIPEntry ::= SEQUENCE {
            tdmoeSrcIpAddress           IpAddress,
            tdmoeSubnetMask             IpAddress,
            tdmoeGatewayIpAddress       IpAddress,
            tdmoeSecSrcIpAddress           IpAddress,
            tdmoeSecSubnetMask             IpAddress,
            tdmoeSecGatewayIpAddress       IpAddress,
            toePriMacAddress                        DisplayString
        }

        tdmoeSrcIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle Source IP Address"
            ::= { bundleIPEntry 2 }

        tdmoeSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle Subnet Mask"
            ::= { bundleIPEntry 3 }


        tdmoeGatewayIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle Gateway IP"
            ::= { bundleIPEntry 4 }

        tdmoeSecSrcIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary bundle Source IP Address"
            ::= { bundleIPEntry 5}

        tdmoeSecSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary bundle Subnet Mask"
            ::= { bundleIPEntry 6 }


        tdmoeSecGatewayIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary bundle Gateway IP"
            ::= { bundleIPEntry 7 }


        toePriMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary mac address "
            ::= { bundleIPEntry 8}


--  Time Slot Ip Table


        timeSlotIPConfig      OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TimeSlotIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMOE timeslot ip table."
            ::= { timeSlotIpAssignTable 4 }

        timeSlotIPEntry       OBJECT-TYPE
            SYNTAX  TimeSlotIPEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "timeSlotIP Entry."
            INDEX { tdmoeSlotIndex }
            ::= { timeSlotIPConfig 1 }

            TimeSlotIPEntry ::= SEQUENCE {
            tdmoePort                   INTEGER,
            tdmoeBundleID               Bundleid2,
            tdmoeSrcUdpPortNumber       INTEGER,
            tdmoeFormat                 INTEGER,
            tdmoeDestIPAddress          IpAddress,
            tdmoeTos                    INTEGER,
            tdmoeStratum                INTEGER,
            tdmoeCellInBundle           INTEGER,
            tdmoeJitterTolerance        INTEGER,
            tdmoeJitterBuffer           INTEGER,
            tdmoeVLAN                   INTEGER,
            tdmoeCVLANId                INTEGER,
            tdmoeCVLANPriority          INTEGER,
            tdmoeSVLANId                INTEGER,
            tdmoeSVLANPriority          INTEGER,
            tdmoeAction                 INTEGER,
            tdmoeConfirm                INTEGER,
            toeBP                              INTEGER,
            toeBPMS                            INTEGER,
            toeBPMode                       INTEGER,
            toeBPSecUdpPW                    INTEGER,
            toeBPPriUdpHB                    INTEGER,
            toeBPSecUdpHB                    INTEGER,
            toeBPSecIP                   IpAddress,
            toeBPCVLANId                     INTEGER,
            toeBPCVLANPriority          INTEGER,
            toeBPSVLANId                     INTEGER,
            toeBPSVLANPriority        INTEGER,
            toeBuType                     INTEGER,
            tdmoeSrcEcid                INTEGER,
            toeMacAddress             DisplayString

    }

        tdmoePort  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trib1(1),
                    trib2(2),
                    trib3(3),
                    trib4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4"
            ::= { timeSlotIPEntry 2 }

        tdmoeBundleID  OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { timeSlotIPEntry 3 }

        tdmoeSrcUdpPortNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UDP Number"
            ::= { timeSlotIPEntry 4}

        tdmoeFormat  OBJECT-TYPE
            SYNTAX  INTEGER {
                    aal1(1),
                    cesopsn(2),
                    satop(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "format"
            ::= { timeSlotIPEntry 5}

        tdmoeDestIPAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Address"
            ::= { timeSlotIPEntry 6}

        tdmoeTos  OBJECT-TYPE
            SYNTAX  INTEGER (0..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TOS Number"
            ::= { timeSlotIPEntry 7}

        tdmoeStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Stratum Setup"
            ::= { timeSlotIPEntry 8}

        tdmoeCellInBundle  OBJECT-TYPE
            SYNTAX  INTEGER (1..1600)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Cell In Bundle"
            ::= { timeSlotIPEntry 9}

        tdmoeJitterTolerance  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Jitter Delay"
            ::= { timeSlotIPEntry 10}

        tdmoeJitterBuffer  OBJECT-TYPE
            SYNTAX  INTEGER (1..512)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Jitter Size"
            ::= { timeSlotIPEntry 11}

        tdmoeVLAN  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    cvlan(2),
                    svlan(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VLAN switch"
            ::= { timeSlotIPEntry 12}

        tdmoeCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { timeSlotIPEntry 13}

        tdmoeCVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { timeSlotIPEntry 14}

        tdmoeSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { timeSlotIPEntry 15}

        tdmoeSVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { timeSlotIPEntry 16}

        tdmoeAction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    add-bundle(1),
                    delete-bundle(2),
                    delete-all(3),
                    active-all(4),
                    change-bundle(5),
                    stop-Tx-bundle(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle action"
            ::= { timeSlotIPEntry 17}

        tdmoeConfirm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Confirm Setup"
            ::= { timeSlotIPEntry 18}

        toeBP OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle protection enable"
            ::= { timeSlotIPEntry 19}

        toeBPMS OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Master or Slave"
            ::= { timeSlotIPEntry 20}

        toeBPMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    non-Revertible(1),
                    revertible(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Revertible"
            ::= { timeSlotIPEntry 21}

        toeBPSecUdpPW  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary PW UDP port"
            ::= { timeSlotIPEntry 22}

        toeBPPriUdpHB  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Primary HB UDP port"
            ::= { timeSlotIPEntry 23}

        toeBPSecUdpHB  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secondary HB UDP port"
            ::= { timeSlotIPEntry 24}

        toeBPSecIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Secodary Destination IP"
            ::= { timeSlotIPEntry 25}

        toeBPCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { timeSlotIPEntry 26}

        toeBPCVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { timeSlotIPEntry 27}

        toeBPSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { timeSlotIPEntry 28}

        toeBPSVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { timeSlotIPEntry 29}

        toeBuType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bu type"
            ::= { timeSlotIPEntry 30}

        tdmoeSrcEcid  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ECID"
            ::= { timeSlotIPEntry 31}

        toeMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "mac address "
            ::= { timeSlotIPEntry 32}


        toeBPControl     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  ToeBPControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "link aggregate config"
            ::= {timeSlotIpAssignTable 5}

        toeBPControlEntry    OBJECT-TYPE
            SYNTAX    ToeBPControlEntry
            ACCESS    not-accessible
            STATUS    mandatory
            DESCRIPTION
                "link aggregate Entry."
            INDEX { toeBPControlSlot }
            ::= { toeBPControl 1 }

            ToeBPControlEntry  ::= SEQUENCE {
            toeBPControlSlot              LargeSlotIndex,
            toeBPControlport            INTEGER,
            toeBPControlbundle            Bundleid2,
            toeBPControlMode             INTEGER,
            toeBPControlconfirm            INTEGER
        }

        toeBPControlSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { toeBPControlEntry 1 }

        toeBPControlport    OBJECT-TYPE
            SYNTAX  INTEGER {
                    trib1(1),
                    trib2(2),
                    trib3(3),
                    trib4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "force change trib"
            ::= {toeBPControlEntry  2}

        toeBPControlbundle  OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "force change bundle"
            ::= {toeBPControlEntry  3}

        toeBPControlMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unLock(1),
                    force-change(2),
                    lock-pri(3),
                    lock-sec(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "force change mode"
            ::= {toeBPControlEntry  4}

        toeBPControlconfirm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "force change confirm"
            ::= {toeBPControlEntry 5}



--
--  Alarm Control Table SYNTAX
--

    tdmoeAlarmTable             OBJECT IDENTIFIER ::= { tdmoe-card   3}

        tdmoeAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { tdmoeAlarmTable 1 }

        tdmoeAlarmControlEntry  OBJECT-TYPE
            SYNTAX  TdmoeAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the alarm control table."
            INDEX { tdmoeSlotIndex }
            ::= { tdmoeAlarmControlTable 1 }

            TdmoeAlarmControlEntry ::= SEQUENCE {
            tdmoeArp-Lost               AlarmSeverity,
            tdmoeRx-Lost                AlarmSeverity,
            tdmoeJit-Buf-Underrun       AlarmSeverity,
            tdmoeJit-Buf-Overrun        AlarmSeverity,
            tdmoeEthernet-Link          AlarmSeverity,
            tdmoeLossOfBundle           AlarmSeverity,
            tdmoeSFP-alarm               AlarmSeverity,
            tdmoeBP-alarm               AlarmSeverity,
            tdmoeL-bit-alm               AlarmSeverity,
            tdmoeR-bit-alm               AlarmSeverity,
            tdmoeSyncEClockSwitch-alm    AlarmSeverity,
            tdmoeIPConflictAlm           AlarmSeverity

        }

        tdmoeArp-Lost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "arp-bundle alarm severity type"
            ::= { tdmoeAlarmControlEntry 2 }

        tdmoeRx-Lost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "rx-lost means the received packet sequence number is not the same as expected sequence
                number. rx-Lost-bundle alarm severity type"
            ::= { tdmoeAlarmControlEntry 3 }

        tdmoeJit-Buf-Underrun    OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Jit-Buf-Underrun means jitter buffer is empty. jitter buffer underrun-bundle alarm severity type"
            ::= { tdmoeAlarmControlEntry 4 }

        tdmoeJit-Buf-Overrun    OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Jit-Buf-Overrun means that jitter buffer is full and there is no room for
                new data to enter. jitter buffer overrun-bundle alarm severity type"
            ::= { tdmoeAlarmControlEntry 5}

        tdmoeEthernet-Link    OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "jitter buffer overrun-bundle alarm severity type"
            ::= { tdmoeAlarmControlEntry 6}

        tdmoeLossOfBundle OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Loss of bundle"
            ::= { tdmoeAlarmControlEntry 7 }

        tdmoeSFP-alarm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SFP-alarm"
            ::= { tdmoeAlarmControlEntry 8 }

        tdmoeBP-alarm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle protection-alarm"
            ::= { tdmoeAlarmControlEntry 9 }

        tdmoeL-bit-alm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle L bit alarm"
            ::= { tdmoeAlarmControlEntry 10 }

        tdmoeR-bit-alm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "bundle R bit alarm"
            ::= { tdmoeAlarmControlEntry 11 }

        tdmoeSyncEClockSwitch-alm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SyncE Clock Switch alarm"
            ::= { tdmoeAlarmControlEntry 12 }

        tdmoeIPConflictAlm OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ip Conflict Switch alarm"
            ::= { tdmoeAlarmControlEntry 13 }
--
--    Alarm Threshold Setup Table
--

        tdmoeThresControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeThresControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { tdmoeAlarmTable 2}

        tdmoeThresControlEntry  OBJECT-TYPE
            SYNTAX  TdmoeThresControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the threshold control table."
            INDEX { tdmoeSlotIndex }
            ::= { tdmoeThresControlTable 1 }

            TdmoeThresControlEntry ::= SEQUENCE {
            tdmoeThresArp-Lost          INTEGER,
            tdmoeThresRx-Lost           INTEGER,
--            tdmoeThresCell-Lost         INTEGER,
            tdmoeThresJit-Buf-Underrun  INTEGER,
            tdmoeThresJit-Buf-Overrun   INTEGER
        }

        tdmoeThresArp-Lost OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold of arp-bundle. ARP-bundle is count of ARP loss for a boundle."
            ::= { tdmoeThresControlEntry 2 }

        tdmoeThresRx-Lost  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold of ex-Lost-bundle. Rx-Lost is count for a boundle about ethernet Lost/ jump events Packets."
            ::= { tdmoeThresControlEntry 3 }

--        tdmoeThresCell-Lost  OBJECT-TYPE
--            SYNTAX  INTEGER  (1..65535)
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                "Threshold of cell-Lost-bundle. Cell-Lost is count for a boundle about Rx AAL1 Lost Cells."
--            ::= { tdmoeThresControlEntry 4 }

        tdmoeThresJit-Buf-Underrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Threshold of underrun-bundle. Underrun is count of underrun events for a boundle."
            ::= { tdmoeThresControlEntry 4}

        tdmoeThresJit-Buf-Overrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Threshold of overrun-bundle. Overrun is count of overrun events for a boundle."
            ::= { tdmoeThresControlEntry 5}

--
--  Alarm History Table
--

            AlarmSubChannel ::= INTEGER {
        bundle0(1),
        bundle1(2),
        bundle2(3),
        bundle3(4),
        bundle4(5),
        bundle5(6),
        bundle6(7),
        bundle7(8),
        bundle8(9),
        bundle9(10),
        bundle10(11),
        bundle11(12),
        bundle12(13),
        bundle13(14),
        bundle14(15),
        bundle15(16),
        bundle16(17),
        bundle17(18),
        bundle18(19),
        bundle19(20),
        bundle20(21),
        bundle21(22),
        bundle22(23),
        bundle23(24),
        bundle24(25),
        bundle25(26),
        bundle26(27),
        bundle27(28),
        bundle28(29),
        bundle29(30),
        bundle30(31),
        bundle31(32),
        none(33)
    }

        tdmoeAlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { tdmoe-card 4}

        tdmoeAlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  TdmoeAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { tdmoehisSlotIndex , tdmoehisTribIndex ,
        tdmoehisAlarmSubchannel , tdmoehisAlarmHistoryIndex }
            ::= { tdmoeAlarmHistoryTable 1 }

            TdmoeAlarmHistoryEntry ::= SEQUENCE {
            tdmoehisSlotIndex           LargeSlotIndex,
            tdmoehisTribIndex           Alarmtributaryport,
            tdmoehisAlarmSubchannel     AlarmSubChannel,
            tdmoehisAlarmHistoryIndex   INTEGER,
            tdmoehisThreshold           INTEGER,
            tdmoehisCurrentState        INTEGER,
            tdmoehisCurrentCount        INTEGER,
            tdmoehisAlarm               AlarmSeverity
        }

        tdmoehisSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeAlarmHistoryEntry 1 }

        tdmoehisTribIndex  OBJECT-TYPE
            SYNTAX  Alarmtributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE alarm portIndex"
            ::= { tdmoeAlarmHistoryEntry 2 }


        tdmoehisAlarmSubchannel  OBJECT-TYPE
            SYNTAX  AlarmSubChannel
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE alarm subchannel"
            ::= { tdmoeAlarmHistoryEntry 3}

        tdmoehisAlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    arp-Lost(1),
                    rx-Lost(2),
                    lossOfBundle(3),
                    jit-buf-underrun(4),
                    jit-buf-overrun(5),
                    eth1-link-down(6),
                    eth2-link-down(7),
                    eth3-link-down(8),
                    eth4-link-down(9),
                    spf1-tx-power-high(10),
                    spf2-tx-power-high(11),
                    spf1-tx-power-low(12),
                    spf2-tx-power-low(13),
                    spf1-rx-power-high(14),
                    spf2-rx-power-high(15),
                    spf1-rx-power-low(16),
                    spf2-rx-power-low(17),
                    spf1-tx-bias-high(18),
                    spf2-tx-bias-high(19),
                    spf1-tx-bias-low(20),
                    spf2-tx-bias-low(21),
                    bp-pri-hb-lost(22),
                    bp-sec-hb-lost(23),
                    bundle-l-bit(26),
                    bundle-r-bit(27),
                    syncEClockSwitch(28),
                    ipConflict(29)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { tdmoeAlarmHistoryEntry 4}

        tdmoehisThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold value"
            ::= { tdmoeAlarmHistoryEntry 5 }

        tdmoehisCurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { tdmoeAlarmHistoryEntry 6 }

        tdmoehisCurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { tdmoeAlarmHistoryEntry 7 }

        tdmoehisAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { tdmoeAlarmHistoryEntry 8 }




--
--  Current Performance Table
--

    tdmoePerformanceTable       OBJECT IDENTIFIER ::= { tdmoe-card   5}

        tdmoeCurrentPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Current Performance Table"
            ::= { tdmoePerformanceTable 1}

        tdmoeCurrentPerfEntry  OBJECT-TYPE
            SYNTAX  TdmoeCurrentPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { tdmoeSlotIndex , tdmoeTribIndex , tdmoeBundleIDIndex }
            ::= { tdmoeCurrentPerfTable 1 }

            TdmoeCurrentPerfEntry ::= SEQUENCE  {
            tdmoeTribIndex              Tributaryport,
            tdmoeBundleIDIndex          Bundleid2,
            tdmoeCurrentRx-Lost         INTEGER,
--            tdmoeCurrentCell-Lost       INTEGER,
            tdmoeCurrentJit-Buf-Underrun    INTEGER,
            tdmoeCurrentJit-Buf-Overrun     INTEGER,
            tdmoeCurr15MinTimeElapsed       INTEGER,
            tdmoeValid15MinInterval         INTEGER,
            tdmoeCurrentHBPriLost     INTEGER,
            tdmoeCurrentHBSecLost    INTEGER
        }

        tdmoeTribIndex  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE perf portIndex"
            ::= { tdmoeCurrentPerfEntry 2 }


        tdmoeBundleIDIndex   OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE bundle 1-32"
            ::= { tdmoeCurrentPerfEntry 3 }

        tdmoeCurrentRx-Lost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current Rx-Lost Counter. Rx-Lost is count for a boundle about ethernet Lost/ jump events Packets."
            ::= { tdmoeCurrentPerfEntry 4 }

--        tdmoeCurrentCell-Lost  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                "Current Cell-Lost Counter. Cell-Lost is count for a boundle about Rx AAL1 Lost Cells."
--            ::= { tdmoeCurrentPerfEntry 5 }

        tdmoeCurrentJit-Buf-Underrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current J-UR Counter. Underrun is count of jitter buffer underrun events."
            ::= { tdmoeCurrentPerfEntry 5 }

        tdmoeCurrentJit-Buf-Overrun   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current J-OR Counter. Overrun is count of jitter buffer overrun events."
            ::= { tdmoeCurrentPerfEntry 6 }


        tdmoeCurr15MinTimeElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { tdmoeCurrentPerfEntry 7}

        tdmoeValid15MinInterval  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { tdmoeCurrentPerfEntry 8}

        tdmoeCurrentHBPriLost   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current Heart Beating primary packet lost."
            ::= { tdmoeCurrentPerfEntry 9 }

        tdmoeCurrentHBSecLost    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Current Heart Beating secondary packet lost"
            ::= { tdmoeCurrentPerfEntry 10 }
--
--  Interval Performance Table
--

        tdmoeIntervalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval Performance Table"
            ::= { tdmoePerformanceTable 2 }

        tdmoeIntervalPerfEntry  OBJECT-TYPE
            SYNTAX  TdmoeIntervalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Interval performance entry"
            INDEX { tdmoeSlotIndex , tdmoeTribIndex , tdmoeBundleIDIndex , tdmoeIntervalPerfNum }
            ::= { tdmoeIntervalPerfTable 1 }

            TdmoeIntervalPerfEntry  ::= SEQUENCE  {

            tdmoeIntervalPerfNum        INTEGER ,
            tdmoeIntervalRx-Lost        INTEGER,
--            tdmoeIntervalCell-Lost      INTEGER,
            tdmoeIntervalJit-Buf-Underrun   INTEGER,
            tdmoeIntervalJit-Buf-Overrun    INTEGER,
            tdmoeIntervalHBPriLost         INTEGER,
            tdmoeIntervalHBSecLost        INTEGER

    }


        tdmoeIntervalPerfNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { tdmoeIntervalPerfEntry 4 }

        tdmoeIntervalRx-Lost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " interval rx-lost counter "
            ::= { tdmoeIntervalPerfEntry 5}

--        tdmoeIntervalCell-Lost  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " interval cell-lost counter"
--            ::= { tdmoeIntervalPerfEntry 6 }

        tdmoeIntervalJit-Buf-Underrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer underrun Counter "
            ::= { tdmoeIntervalPerfEntry 6}

        tdmoeIntervalJit-Buf-Overrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer overrun Counter "
            ::= { tdmoeIntervalPerfEntry 7}


        tdmoeIntervalHBPriLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Primary Heart Beating lost Counter "
            ::= { tdmoeIntervalPerfEntry 8}

        tdmoeIntervalHBSecLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "  Secondary Heart Beating lost Counter "
            ::= { tdmoeIntervalPerfEntry 9}

--
--  Total Performance Table
--
        tdmoeTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Total Performance Table"
            ::= {  tdmoePerformanceTable 3 }

        tdmoeTotalPerfEntry  OBJECT-TYPE
            SYNTAX  TdmoeTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { tdmoeSlotIndex , tdmoeTribIndex , tdmoeBundleIDIndex }
            ::= { tdmoeTotalPerfTable 1 }

            TdmoeTotalPerfEntry ::= SEQUENCE  {

            tdmoeTotalRx-Lost           INTEGER,
--            tdmoeTotalCell-Lost         INTEGER,
            tdmoeTotalJit-Buf-Underrun  INTEGER,
            tdmoeTotalJit-Buf-Overrun   INTEGER,
            tdmoeTotalHBPriLost         INTEGER,
            tdmoeTotalHBSecLost        INTEGER

    }


        tdmoeTotalRx-Lost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Rx-lost Counter in current 24 hours"
            ::= { tdmoeTotalPerfEntry 4 }

--        tdmoeTotalCell-Lost  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " Cell-lost Counter in current 24 hours"
--            ::= { tdmoeTotalPerfEntry 5 }

        tdmoeTotalJit-Buf-Underrun OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Jitter buffer underrun Counter in current 24 hours"
            ::= { tdmoeTotalPerfEntry 5}

        tdmoeTotalJit-Buf-Overrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Jitter buffer overrun Counter in current 24 hours"
            ::= { tdmoeTotalPerfEntry 6}

        tdmoeTotalHBPriLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Heart Beating Primary lost Counter in current 24 hours"
            ::= { tdmoeTotalPerfEntry 7}

        tdmoeTotalHBSecLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Heart Beating Secondary lost Counter in current 24 hours"
            ::= { tdmoeTotalPerfEntry 8}

--
-- Seven Days Performance Table
--
        tdmoeSevenDaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 Days Performance Table"
            ::= {  tdmoePerformanceTable 4}

        tdmoeSevenDaysPerfEntry  OBJECT-TYPE
            SYNTAX  TdmoeSevenDaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "7 days performance table"
            INDEX { tdmoeSlotIndex , tdmoeTribIndex , tdmoeBundleIDIndex ,
        tdmoeDaysIndex }
            ::= { tdmoeSevenDaysPerfTable 1 }

            TdmoeSevenDaysPerfEntry ::= SEQUENCE  {

            tdmoeDaysIndex              INTEGER,
            tdmoeDateStrIndex           DisplayString,
            tdmoeSevenDaysRx-Lost       INTEGER,
--            tdmoeSevenDaysCell-Lost     INTEGER,
            tdmoeSevenDaysJit-Buf-Underrun  INTEGER,
            tdmoeSevenDaysJit-Buf-Overrun   INTEGER,
            tdmoeSevenDaysHBPriLost        INTEGER,
            tdmoeSevenDaysHBSecLost       INTEGER

    }



        tdmoeDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { tdmoeSevenDaysPerfEntry 4 }

        tdmoeDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { tdmoeSevenDaysPerfEntry 5 }

        tdmoeSevenDaysRx-Lost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Rx-lost Counter in seven days"
            ::= { tdmoeSevenDaysPerfEntry 6}

--        tdmoeSevenDaysCell-Lost  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " Cell-lost Counter in seven days"
--            ::= { tdmoeSevenDaysPerfEntry 7 }

        tdmoeSevenDaysJit-Buf-Underrun OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer underrun  Counter in seven days"
            ::= { tdmoeSevenDaysPerfEntry 7}

        tdmoeSevenDaysJit-Buf-Overrun  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " jitter buffer overrun  Counter in seven days"
            ::= { tdmoeSevenDaysPerfEntry 8}

        tdmoeSevenDaysHBPriLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Heart Beating Primary  lost  Counter in seven days"
            ::= { tdmoeSevenDaysPerfEntry 9}

        tdmoeSevenDaysHBSecLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Heart Beating Secondary lost Counter in seven days"
            ::= { tdmoeSevenDaysPerfEntry 10}



--  Time Slot Ip Map Table

    timeSlotIpMapTable          OBJECT IDENTIFIER ::= { tdmoe-card   6}

        bundleAllocationInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF BundleAllocationInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Ip Map table."
            ::= { timeSlotIpMapTable 1 }

        bundleAllocationInfoEntry  OBJECT-TYPE
            SYNTAX  BundleAllocationInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Time Slot Ip Map table."
            INDEX { tdmoeMapSlotIndex }
            ::= { bundleAllocationInfo 1 }

            BundleAllocationInfoEntry ::= SEQUENCE  {
            tdmoeMapSlotIndex           LargeSlotIndex,
            tdmoeMapBundleAllocationMode    INTEGER
        }

        tdmoeMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { bundleAllocationInfoEntry 1 }

        tdmoeMapBundleAllocationMode  OBJECT-TYPE
            SYNTAX  INTEGER  {
                    mode-16 (1),
                    mode-32 (2)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { bundleAllocationInfoEntry 2 }


        timeSlotAssignInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TimeSlotAssignInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Ip Map table."
            ::= { timeSlotIpMapTable 2 }

        timeSlotAssignInfoEntry  OBJECT-TYPE
            SYNTAX  TimeSlotAssignInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Time Slot Ip Map table."
            INDEX { tdmoeMapSlotIndex , tdmoeMapTribIndex ,
        tdmoeMapTsIndex }
            ::= { timeSlotAssignInfo 1 }

            TimeSlotAssignInfoEntry ::= SEQUENCE  {
            tdmoeMapTribIndex           Tributaryport,
            tdmoeMapTsIndex             INTEGER,
            tdmoeMapBundleID            Bundleid

    }

        tdmoeMapTribIndex  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE  portIndex"
            ::= { timeSlotAssignInfoEntry 2 }

        tdmoeMapTsIndex  OBJECT-TYPE
            SYNTAX  INTEGER (0..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { timeSlotAssignInfoEntry 3 }


        tdmoeMapBundleID   OBJECT-TYPE
            SYNTAX   Bundleid
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE bundle 0-31"
            ::= { timeSlotAssignInfoEntry 4 }



        bundleIpinfo   OBJECT-TYPE
            SYNTAX  SEQUENCE OF BundleIPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Ip Map table."
            ::= { timeSlotIpMapTable 3 }

        bundleIPInfoEntry     OBJECT-TYPE
            SYNTAX  BundleIPInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "timeSlotIP Entry."
            INDEX { tdmoeBundleInfoSlotIndex }
            ::= { bundleIpinfo 1 }

            BundleIPInfoEntry ::= SEQUENCE {
            tdmoeBundleInfoSlotIndex    LargeSlotIndex,
            tdmoeBundleInfoSrcIpAddress IpAddress,
            tdmoeBundleInfoSubnetMask   IpAddress,
            tdmoeBundleInfoGatewayIpAddress IpAddress,
            tdmoeInfoSecSrcIpAddress IpAddress,
            tdmoeInfoSecSubnetMask   IpAddress,
            tdmoeInfoSecGatewayIpAddress IpAddress,
            toeInfoPriMacAddr            DisplayString
        }

        tdmoeBundleInfoSlotIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { bundleIPInfoEntry 1 }

        tdmoeBundleInfoSrcIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Source IP Address"
            ::= { bundleIPInfoEntry 2 }

        tdmoeBundleInfoSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Subnet Mask"
            ::= { bundleIPInfoEntry 3 }


        tdmoeBundleInfoGatewayIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Gateway IP"
            ::= { bundleIPInfoEntry 4 }

        tdmoeInfoSecSrcIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Source IP Address"
            ::= { bundleIPInfoEntry 5 }

        tdmoeInfoSecSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Subnet Mask"
            ::= { bundleIPInfoEntry 6 }


        tdmoeInfoSecGatewayIpAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle Gateway IP"
            ::= { bundleIPInfoEntry 7 }

        toeInfoPriMacAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary mac address "
            ::= { bundleIPInfoEntry 8}




        timeSlotIpInfo  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TimeSlotIpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Time Slot Ip Map table."
            ::= { timeSlotIpMapTable 4 }




        timeSlotIpInfoEntry  OBJECT-TYPE
            SYNTAX  TimeSlotIpInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Time Slot Ip Map table."
            INDEX { tdmoeMapSlotIndex , tdmoeMapTribIndex ,
        tdmoeMapBundleIDIndex }
            ::= { timeSlotIpInfo 1 }

            TimeSlotIpInfoEntry ::= SEQUENCE  {
            tdmoeMapBundleIDIndex       Bundleid2,
            tdmoeMapSrcUdpPortNumber    INTEGER,
            tdmoeMapFormat              INTEGER,
            tdmoeMapCellInBundle        INTEGER,
            tdmoeMapJit-Tolerance       INTEGER,
            tdmoeMapJit-Buffer          INTEGER,
            tdmoeMapDestIPAddress       DisplayString,
            tdmoeMapTos                 INTEGER,
            tdmoeMapStratum             INTEGER,
            tdmoeMapVLAN                INTEGER,
            tdmoeMapCVLANId             INTEGER,
            tdmoeMapCVLANPriority       INTEGER,
            tdmoeMapSVLANId             INTEGER,
            tdmoeMapSVLANPriority       INTEGER,
            toeMapBP                              INTEGER,
            toeMapBPMS                       INTEGER,
            toeMapBPMode                       INTEGER,
            toeMapBPSecUdpPW                    INTEGER,
            toeMapBPPriUdpHB                    INTEGER,
            toeMapBPSecUdpHB                    INTEGER,
            toeMapBPSecIP                   IpAddress,
            toeMapBPCVLANId                     INTEGER,
            toeMapBPCVLANPriority          INTEGER,
            toeMapBPSVLANId                     INTEGER,
            toeMapBPSVLANPriority        INTEGER,
            tdmoeMapBuType        INTEGER,
            tdmoeMapEcid        INTEGER,
            tdmoeMapDestMACAddr       DisplayString
        }

        tdmoeMapBundleIDIndex  OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { timeSlotIpInfoEntry 3 }

        tdmoeMapSrcUdpPortNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Udp Num"
            ::= { timeSlotIpInfoEntry 4 }

        tdmoeMapFormat  OBJECT-TYPE
            SYNTAX   INTEGER {
                    aal1(1),
                    cesopsn(2),
                    satop(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Format"
            ::= { timeSlotIpInfoEntry 5 }

        tdmoeMapCellInBundle  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Cells Num"
            ::= { timeSlotIpInfoEntry 6 }

        tdmoeMapJit-Tolerance  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Jitter Delay"
            ::= { timeSlotIpInfoEntry 7 }

        tdmoeMapJit-Buffer  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Jitter Size"
            ::= { timeSlotIpInfoEntry 8 }

        tdmoeMapDestIPAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Address"
            ::= { timeSlotIpInfoEntry 9 }

        tdmoeMapTos  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TOS Number"
            ::= { timeSlotIpInfoEntry 10 }

        tdmoeMapStratum  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stratum1(1),
                    stratum2(2),
                    stratum3(3),
                    stratum3e(4),
                    stratum4(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Stratum Setup"
            ::= { timeSlotIpInfoEntry 11 }

        tdmoeMapVLAN  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    cvlan(2),
                    svlan(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "VLAN switch"
            ::= { timeSlotIpInfoEntry 12 }

        tdmoeMapCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { timeSlotIpInfoEntry 13 }

        tdmoeMapCVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { timeSlotIpInfoEntry 14 }

        tdmoeMapSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= { timeSlotIpInfoEntry 15 }

        tdmoeMapSVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { timeSlotIpInfoEntry 16 }
        toeMapBP OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle protection enable"
            ::= { timeSlotIpInfoEntry 17}

        toeMapBPMS OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                }
            ACCESS read-only
            STATUS  mandatory
            DESCRIPTION
                "Master or Slave"
            ::= { timeSlotIpInfoEntry 18}

        toeMapBPMode OBJECT-TYPE
            SYNTAX  INTEGER {
                    non-Revertible(1),
                    revertible(2)
                }
            ACCESS read-only
            STATUS  mandatory
            DESCRIPTION
                "Revertible"
            ::= { timeSlotIpInfoEntry 19}

        toeMapBPSecUdpPW  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary PW UDP port"
            ::= { timeSlotIpInfoEntry 20}

        toeMapBPPriUdpHB  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary HB UDP port"
            ::= { timeSlotIpInfoEntry 21}

        toeMapBPSecUdpHB  OBJECT-TYPE
            SYNTAX  INTEGER (1..65535)
            ACCESS read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary HB UDP port"
            ::= { timeSlotIpInfoEntry 22}

        toeMapBPSecIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secodary Destination IP"
            ::= { timeSlotIpInfoEntry 23}

        toeMapBPCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN ID"
            ::= { timeSlotIpInfoEntry 24}

        toeMapBPCVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "customer VLAN Priority"
            ::= { timeSlotIpInfoEntry 25}

        toeMapBPSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4094)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN ID"
            ::= {timeSlotIpInfoEntry 26}

        toeMapBPSVLANPriority  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p-0(1),
                    p-1(2),
                    p-2(3),
                    p-3(4),
                    p-4(5),
                    p-5(6),
                    p-6(7),
                    p-7(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "provider VLAN Priority"
            ::= { timeSlotIpInfoEntry 27}

        tdmoeMapBuType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ip(1),
                    cesoEth(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "BuType"
            ::= { timeSlotIpInfoEntry 28 }

        tdmoeMapEcid  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ECID"
            ::= { timeSlotIpInfoEntry 29 }

        tdmoeMapDestMACAddr  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Address"
            ::= { timeSlotIpInfoEntry 30 }



--  Bundle Delay/Size Info

        toeBundleDelayInfoTable     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  ToeBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle Delay Info."
            ::= { timeSlotIpMapTable 5 }

        toeBundleDelayInfoEntry       OBJECT-TYPE
            SYNTAX  ToeBundleDelayInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle Delay Info Entry"
            INDEX { toeBDInfoSlot , toeBDInfoPort , toeBDInfoBundleID }
            ::= {toeBundleDelayInfoTable 1 }

            ToeBundleDelayInfoEntry ::= SEQUENCE  {
            toeBDInfoSlot       LargeSlotIndex,
            toeBDInfoPort       Tributaryport,
            toeBDInfoBundleID   Bundleid2,
            toeBDInfoFormat     INTEGER,
            toeBDInfoUdpNumber  INTEGER,
            toeBDInfoPktPerSec  INTEGER,
            toeBDInfoPropDelay  DisplayString,
            toeBDInfoPktSize    DisplayString,
            toeBDInfoOverHead   DisplayString
        }

        toeBDInfoSlot   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot ID"
            ::= {toeBundleDelayInfoEntry 1 }


        toeBDInfoPort  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { toeBundleDelayInfoEntry 2 }

        toeBDInfoBundleID  OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { toeBundleDelayInfoEntry 3 }

        toeBDInfoFormat  OBJECT-TYPE
            SYNTAX   INTEGER {
                    aal1(1),
                    cesopsn(2),
                    satop(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Format"
            ::= {toeBundleDelayInfoEntry 4 }

        toeBDInfoUdpNumber  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Udp Num"
            ::= { toeBundleDelayInfoEntry 5 }

        toeBDInfoPktPerSec  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ip Map Cells Num"
            ::= {toeBundleDelayInfoEntry 6 }

        toeBDInfoPropDelay OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Propagation Delay"
            ::= { toeBundleDelayInfoEntry  7}

        toeBDInfoPktSize OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Packet Size"
            ::= { toeBundleDelayInfoEntry  8}

        toeBDInfoOverHead OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OverHead"
            ::= { toeBundleDelayInfoEntry  9}



--  Bundle Protection Status

        toeBundleProtectInfoTable     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  ToeBundleProtectInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle Delay Info."
            ::= { timeSlotIpMapTable 6 }

        toeBundleProtectInfoEntry       OBJECT-TYPE
            SYNTAX  ToeBundleProtectInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle Delay Info Entry"
            INDEX { toeBPInfoSlot , toeBPInfoPort , toeBPInfoBundleID }
            ::= {toeBundleProtectInfoTable 1 }

            ToeBundleProtectInfoEntry ::= SEQUENCE  {
            toeBPInfoSlot       LargeSlotIndex,
            toeBPInfoPort       Tributaryport,
            toeBPInfoBundleID   Bundleid2,
            toeBPInfoPriHB         INTEGER,
            toeBPInfoPriState     INTEGER,
            toeBPInfoSecHB       INTEGER,
            toeBPInfoSecState    INTEGER,
            toeBPInfoBDStatus       INTEGER,
            toeBPInfoPriLost       INTEGER,
            toeBPInfoSecLost       INTEGER

    }

        toeBPInfoSlot   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot ID"
            ::= {toeBundleProtectInfoEntry 1 }


        toeBPInfoPort  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { toeBundleProtectInfoEntry 2 }

        toeBPInfoBundleID  OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ID"
            ::= { toeBundleProtectInfoEntry 3 }

        toeBPInfoPriHB OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary HB status"
            ::= { toeBundleProtectInfoEntry 4 }

        toeBPInfoPriState OBJECT-TYPE
            SYNTAX  INTEGER {
                    working(1),
                    standby(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary State"
            ::= { toeBundleProtectInfoEntry 5 }

        toeBPInfoSecHB OBJECT-TYPE
            SYNTAX  INTEGER {
                    down(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary HB Status"
            ::= { toeBundleProtectInfoEntry 6 }

        toeBPInfoSecState OBJECT-TYPE
            SYNTAX  INTEGER{
                    working(1),
                    standby(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary State"
            ::= { toeBundleProtectInfoEntry 7 }

        toeBPInfoBDStatus OBJECT-TYPE
            SYNTAX  INTEGER{
                    inactive(1),
                    active(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Status"
            ::= { toeBundleProtectInfoEntry 8 }

        toeBPInfoPriLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Primary HB lost Counter"
            ::= { toeBundleProtectInfoEntry 9 }

        toeBPInfoSecLost  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Secondary HB lost Counter"
            ::= { toeBundleProtectInfoEntry 10}
--
-- Loopback table
--
    tdmoeDiagTable          OBJECT IDENTIFIER ::= { tdmoe-card  7}

        tdmoeDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagonal Control Table"
            ::= { tdmoeDiagTable 1}

        tdmoeDiagControlEntry  OBJECT-TYPE
            SYNTAX  TdmoeDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagonal Control entry"
            INDEX { tdmoeDiagSlotIndex , tdmoeDiagPort }
            ::= { tdmoeDiagControlTable 1 }

            TdmoeDiagControlEntry ::= SEQUENCE {
            tdmoeDiagSlotIndex          LargeSlotIndex,
            tdmoeDiagPort                  Tributaryport,
            tdmoeLoopBack               INTEGER
        }

        tdmoeDiagSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot 1~12, total 12 slots."
            ::= { tdmoeDiagControlEntry 1 }



        tdmoeDiagPort   OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "trib port1~4 "
            ::= { tdmoeDiagControlEntry 2 }


        tdmoeLoopBack   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    llb(4),
                    local(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "loopback type-plb:payload loopback; llb:line loopback"
            ::= { tdmoeDiagControlEntry 3}


        tdmoeDiagMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeDiagMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagonal Map Table"
            ::= { tdmoeDiagTable 2}

        tdmoeDiagMapEntry  OBJECT-TYPE
            SYNTAX  TdmoeDiagMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Diagonal Control entry"
            INDEX { tdmoeDiagMapSlotIndex , tdmoeDiagPortIndex , tdmoeDiagMapIndex }
            ::= { tdmoeDiagMapTable 1 }

            TdmoeDiagMapEntry ::= SEQUENCE {
            tdmoeDiagMapSlotIndex       LargeSlotIndex,
            tdmoeDiagPortIndex          Tributaryport,
            tdmoeDiagMapIndex           INTEGER,
            tdmoeDiagStatus             INTEGER
        }



        tdmoeDiagMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeDiagMapEntry 1 }

        tdmoeDiagPortIndex    OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "trib port1~4 "
            ::= { tdmoeDiagMapEntry 2 }

        tdmoeDiagMapIndex      OBJECT-TYPE
            SYNTAX  INTEGER (0..31)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "map channel 1~32 "
            ::= { tdmoeDiagMapEntry 3}

        tdmoeDiagStatus      OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    used(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "map channel status "
            ::= { tdmoeDiagMapEntry 4}


--
-- Transmission delay measurement table
--

        tdmoeDiagRoundTripDelayTable     OBJECT-TYPE
            SYNTAX  SEQUENCE OF  TdmoeDiagRoundTripDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Round Trip Delay"
            ::= {  tdmoeDiagTable 3 }

        tdmoeDiagRoundTripDelayEntry       OBJECT-TYPE
            SYNTAX  TdmoeDiagRoundTripDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle Delay Info Entry"
            INDEX { tdmoeDiagRoundTripSlotIndex , tdmoeDiagRoundTripPortIndex ,
        tdmoeDiagRoundTripBundleID }
            ::= {tdmoeDiagRoundTripDelayTable 1 }

            TdmoeDiagRoundTripDelayEntry ::= SEQUENCE  {
            tdmoeDiagRoundTripSlotIndex       LargeSlotIndex,
            tdmoeDiagRoundTripPortIndex                      Tributaryport,
            tdmoeDiagRoundTripBundleID               Bundleid2,
            tdmoeDiagRoundTripPeriod                    INTEGER,
            tdmoeDiagRoundTripEnable                   INTEGER
        }

        tdmoeDiagRoundTripSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeDiagRoundTripDelayEntry 1 }

        tdmoeDiagRoundTripPortIndex    OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "trib port 1~4 "
            ::= { tdmoeDiagRoundTripDelayEntry 2 }

        tdmoeDiagRoundTripBundleID      OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle ID "
            ::= { tdmoeDiagRoundTripDelayEntry 3}

        tdmoeDiagRoundTripPeriod  OBJECT-TYPE
--            SYNTAX  INTEGER (1..600)
            SYNTAX  INTEGER (0..600)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Period time for transmission delay measurement (second) "
            ::= { tdmoeDiagRoundTripDelayEntry 4 }

        tdmoeDiagRoundTripEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ethernet transmission time delay measurement control "
            ::= { tdmoeDiagRoundTripDelayEntry 5 }


--
-- bundle arp status table
--
    tdmoeBundleArpStatusTable  OBJECT IDENTIFIER ::= {  tdmoeDiagTable  4}
	
        tdmoeArpPrimaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeArpPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp status table"
            ::= {tdmoeBundleArpStatusTable  1}

        tdmoeArpPrimaryStatusEntry  OBJECT-TYPE
            SYNTAX  TdmoeArpPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle arp status table."
            INDEX { arpSlotPrimaryIndex , arpPrimaryNumIndex }
            ::= { tdmoeArpPrimaryStatusTable 1 }
			
            TdmoeArpPrimaryStatusEntry ::= SEQUENCE  {
            arpSlotPrimaryIndex           LargeSlotIndex,
            arpPrimaryNumIndex            INTEGER (1..64),
            arpPrimarySrcIpAddress        IpAddress,
            arpPrimaryMacAddress          DisplayString,
            arpPrimarySVLANId             INTEGER,
            arpPrimaryCVLANId             INTEGER,
            arpPrimaryRxRequest           Counter,
            arpPrimaryTxReply             Counter,
            arpPrimaryTxRequest           Counter,
            arpPrimaryRxReply             Counter,
            isPrimaryBundleIp             INTEGER
        }
		
        arpSlotPrimaryIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeArpPrimaryStatusEntry 1 }	
			
        arpPrimaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~64) "
            ::= { tdmoeArpPrimaryStatusEntry 2 }		
			
        arpPrimarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { tdmoeArpPrimaryStatusEntry 3 }	

        arpPrimaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoeArpPrimaryStatusEntry 4 }
			
        arpPrimarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoeArpPrimaryStatusEntry 5 }	
			
        arpPrimaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoeArpPrimaryStatusEntry 6 }	
			
        arpPrimaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { tdmoeArpPrimaryStatusEntry 7 }	
			
        arpPrimaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Reply counter"
            ::= { tdmoeArpPrimaryStatusEntry 8 }
			
        arpPrimaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Request counter"
            ::= { tdmoeArpPrimaryStatusEntry 9 }
			
        arpPrimaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { tdmoeArpPrimaryStatusEntry 10 }	
			
        isPrimaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { tdmoeArpPrimaryStatusEntry 11 }							

       tdmoeArpSecondaryStatusTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeArpSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth phy electric Config Table."
            ::= { tdmoeBundleArpStatusTable 2 }

        tdmoeArpSecondaryStatusEntry       OBJECT-TYPE
            SYNTAX  TdmoeArpSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { arpSlotSecondaryIndex , arpSecondaryNumIndex }
            ::= { tdmoeArpSecondaryStatusTable 1 }		
			
            TdmoeArpSecondaryStatusEntry ::= SEQUENCE  {
            arpSlotSecondaryIndex           LargeSlotIndex,
            arpSecondaryNumIndex            INTEGER (1..64),
            arpSecondarySrcIpAddress        IpAddress,
            arpSecondaryMacAddress          DisplayString,
            arpSecondarySVLANId             INTEGER,
            arpSecondaryCVLANId             INTEGER,
            arpSecondaryRxRequest           Counter,
            arpSecondaryTxReply             Counter,
            arpSecondaryTxRequest           Counter,
            arpSecondaryRxReply             Counter,
            isSecondaryBundleIp             INTEGER
        }	
        arpSlotSecondaryIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeArpSecondaryStatusEntry 1 }	
			
        arpSecondaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~64) "
            ::= { tdmoeArpSecondaryStatusEntry 2 }		
			
        arpSecondarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { tdmoeArpSecondaryStatusEntry 3 }	

        arpSecondaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoeArpSecondaryStatusEntry 4 }
			
        arpSecondarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoeArpSecondaryStatusEntry 5 }	
			
        arpSecondaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoeArpSecondaryStatusEntry 6 }	
			
        arpSecondaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { tdmoeArpSecondaryStatusEntry 7 }	
			
        arpSecondaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Reply counter"
            ::= { tdmoeArpSecondaryStatusEntry 8 }
			
        arpSecondaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Tx Request counter"
            ::= { tdmoeArpSecondaryStatusEntry 9 }
			
        arpSecondaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { tdmoeArpSecondaryStatusEntry 10 }	
			
        isSecondaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { tdmoeArpSecondaryStatusEntry 11 }	

        tdmoeArpOtherStatusTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeArpOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth phy electric Config Table."
            ::= { tdmoeBundleArpStatusTable 3 }

        tdmoeArpOtherStatusEntry       OBJECT-TYPE
            SYNTAX  TdmoeArpOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { arpSlotOtherIndex , arpOtherNumIndex }
            ::= { tdmoeArpOtherStatusTable 1 }		
			
            TdmoeArpOtherStatusEntry ::= SEQUENCE  {
            arpSlotOtherIndex           LargeSlotIndex,
            arpOtherNumIndex            INTEGER (1..8),
            arpOtherSrcIpAddress        IpAddress,
            arpOtherMacAddress          DisplayString,
            arpOtherSVLANId             INTEGER,
            arpOtherCVLANId             INTEGER,
            arpOtherRxRequest           Counter,
            arpOtherRxReply             Counter
        }	
        arpSlotOtherIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeArpOtherStatusEntry 1 }	
			
        arpOtherNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle arp number Index(1~8) "
            ::= { tdmoeArpOtherStatusEntry 2 }		
			
        arpOtherSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle arp Source IP."
            ::= { tdmoeArpOtherStatusEntry 3 }	

        arpOtherMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle arp Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoeArpOtherStatusEntry 4 }
			
        arpOtherSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoeArpOtherStatusEntry 5 }	
			
        arpOtherCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoeArpOtherStatusEntry 6 }	
			
        arpOtherRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Request counter"
            ::= { tdmoeArpOtherStatusEntry 7 }	
			
        arpOtherRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Arp Rx Reply counter"
            ::= { tdmoeArpOtherStatusEntry 8 }	

--
-- bundle ping status table
--
    tdmoeBundlePingStatusTable  OBJECT IDENTIFIER ::= {  tdmoeDiagTable  5}
	
        tdmoePingPrimaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoePingPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {tdmoeBundlePingStatusTable  1}

        tdmoePingPrimaryStatusEntry  OBJECT-TYPE
            SYNTAX  TdmoePingPrimaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pingSlotPrimaryIndex , pingPrimaryNumIndex }
            ::= { tdmoePingPrimaryStatusTable 1 }
			
            TdmoePingPrimaryStatusEntry ::= SEQUENCE  {
            pingSlotPrimaryIndex           LargeSlotIndex,
            pingPrimaryNumIndex            INTEGER (1..64),
            pingPrimarySrcIpAddress        IpAddress,
            pingPrimaryMacAddress          DisplayString,
            pingPrimarySVLANId             INTEGER,
            pingPrimaryCVLANId             INTEGER,
            pingPrimaryRxRequest           Counter,
            pingPrimaryTxReply             Counter,
            pingPrimaryTxRequest           Counter,
            pingPrimaryRxReply             Counter,
            isPPrimaryBundleIp             INTEGER
        }
        pingSlotPrimaryIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoePingPrimaryStatusEntry 1 }	
			
        pingPrimaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~64) "
            ::= { tdmoePingPrimaryStatusEntry 2 }		
			
        pingPrimarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { tdmoePingPrimaryStatusEntry 3 }	

        pingPrimaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoePingPrimaryStatusEntry 4 }
			
        pingPrimarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoePingPrimaryStatusEntry 5 }	
			
        pingPrimaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoePingPrimaryStatusEntry 6 }	
			
        pingPrimaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { tdmoePingPrimaryStatusEntry 7 }	
			
        pingPrimaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Reply counter"
            ::= { tdmoePingPrimaryStatusEntry 8 }
			
        pingPrimaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Request counter"
            ::= { tdmoePingPrimaryStatusEntry 9 }
			
        pingPrimaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { tdmoePingPrimaryStatusEntry 10 }	
			
        isPPrimaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { tdmoePingPrimaryStatusEntry 11 }	
--  ping Secordary
       tdmoePingSecondaryStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoePingSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {tdmoeBundlePingStatusTable  2}

        tdmoePingSecondaryStatusEntry  OBJECT-TYPE
            SYNTAX  TdmoePingSecondaryStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pingSlotSecondaryIndex , pingSecondaryNumIndex }
            ::= { tdmoePingSecondaryStatusTable 1 }
			
            TdmoePingSecondaryStatusEntry ::= SEQUENCE  {
            pingSlotSecondaryIndex           LargeSlotIndex,
            pingSecondaryNumIndex            INTEGER (1..64),
            pingSecondarySrcIpAddress        IpAddress,
            pingSecondaryMacAddress          DisplayString,
            pingSecondarySVLANId             INTEGER,
            pingSecondaryCVLANId             INTEGER,
            pingSecondaryRxRequest           Counter,
            pingSecondaryTxReply             Counter,
            pingSecondaryTxRequest           Counter,
            pingSecondaryRxReply             Counter,
            isPSecondaryBundleIp             INTEGER
        }
        pingSlotSecondaryIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoePingSecondaryStatusEntry 1 }	
			
        pingSecondaryNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~64) "
            ::= { tdmoePingSecondaryStatusEntry 2 }		
			
        pingSecondarySrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { tdmoePingSecondaryStatusEntry 3 }	

        pingSecondaryMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoePingSecondaryStatusEntry 4 }
			
        pingSecondarySVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoePingSecondaryStatusEntry 5 }	
			
        pingSecondaryCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoePingSecondaryStatusEntry 6 }	
			
        pingSecondaryRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { tdmoePingSecondaryStatusEntry 7 }	
			
        pingSecondaryTxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Reply counter"
            ::= { tdmoePingSecondaryStatusEntry 8 }
			
        pingSecondaryTxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Tx Request counter"
            ::= { tdmoePingSecondaryStatusEntry 9 }
			
        pingSecondaryRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { tdmoePingSecondaryStatusEntry 10 }	
			
        isPSecondaryBundleIp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Is bundle ip Set"
            ::= { tdmoePingSecondaryStatusEntry 11 }		

--  other
       tdmoePingOtherStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoePingOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping status table"
            ::= {tdmoeBundlePingStatusTable  3}

        tdmoePingOtherStatusEntry  OBJECT-TYPE
            SYNTAX  TdmoePingOtherStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle ping status table."
            INDEX { pingSlotOtherIndex , pingOtherNumIndex }
            ::= { tdmoePingOtherStatusTable 1 }
			
            TdmoePingOtherStatusEntry ::= SEQUENCE  {
            pingSlotOtherIndex           LargeSlotIndex,
            pingOtherNumIndex            INTEGER (1..8),
            pingOtherSrcIpAddress        IpAddress,
            pingOtherMacAddress          DisplayString,
            pingOtherSVLANId             INTEGER,
            pingOtherCVLANId             INTEGER,
            pingOtherRxRequest           Counter,
            pingOtherRxReply             Counter
        }
        pingSlotOtherIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoePingOtherStatusEntry 1 }	
			
        pingOtherNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle ping number Index(1~8) "
            ::= { tdmoePingOtherStatusEntry 2 }		
			
        pingOtherSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle ping Source IP."
            ::= { tdmoePingOtherStatusEntry 3 }	

        pingOtherMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle ping Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoePingOtherStatusEntry 4 }
			
        pingOtherSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoePingOtherStatusEntry 5 }	
			
        pingOtherCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoePingOtherStatusEntry 6 }	
			
        pingOtherRxRequest  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Request counter"
            ::= { tdmoePingOtherStatusEntry 7 }	
			
        pingOtherRxReply  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ping Rx Reply counter"
            ::= { tdmoePingOtherStatusEntry 8 }	
			
--
--  IP Conflict
--			
       tdmoeIpConflictTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeIpConflictEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Bundle IP Conflict status table."
            ::= {tdmoeDiagTable  6}

        tdmoeIpConflictEntry  OBJECT-TYPE
            SYNTAX  TdmoeIpConflictEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Bundle IP Conflict status table."
            INDEX { ipConflictSlotIndex , ipConflictNumIndex }
            ::= { tdmoeIpConflictTable 1 }
			
            TdmoeIpConflictEntry ::= SEQUENCE  {
            ipConflictSlotIndex           LargeSlotIndex,
            ipConflictNumIndex            INTEGER (1..16),
            ipConflictSrcIpAddress        IpAddress,
            ipConflictMacAddress          DisplayString,
            ipConflictSVLANId             INTEGER,
            ipConflictCVLANId             INTEGER
        }
        ipConflictSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeIpConflictEntry 1 }	
			
        ipConflictNumIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle IP Conflict Number Index(1~64) "
            ::= { tdmoeIpConflictEntry 2 }		
			
        ipConflictSrcIpAddress OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Bundle IP Conflict Source IP."
            ::= { tdmoeIpConflictEntry 3 }	

        ipConflictMacAddress  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..20))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "The Bundle IP Conflict Source Mac (xx:xx:xx:xx:xx:xx)"
            ::= { tdmoeIpConflictEntry 4 }
			
        ipConflictSVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SVlan Index"
            ::= { tdmoeIpConflictEntry 5 }	
			
        ipConflictCVLANId  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "CVlan Index"
            ::= { tdmoeIpConflictEntry 6 }	

						
--
--  Bundle Statistics Table
--

    tdmoeStatusAndStatisticsTable   OBJECT IDENTIFIER ::= { tdmoe-card   8}

        tdmoeBundleStatisticsTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeBundleStatisticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "bundle statistics table"
            ::= {tdmoeStatusAndStatisticsTable  1}

        tdmoebundleStatisticsEntry  OBJECT-TYPE
            SYNTAX  TdmoeBundleStatisticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in bundle statistics table."
            INDEX { bundleSlotIndex , bundleTribIndex ,
        bundleBundleIDIndex }
            ::= { tdmoeBundleStatisticsTable 1 }

            TdmoeBundleStatisticsEntry ::= SEQUENCE  {
            bundleSlotIndex             LargeSlotIndex,
            bundleTribIndex             Tributaryport,
            bundleBundleIDIndex         Bundleid2,
            bundleJit-Buf-Underrun      Counter,
            bundleJit-Buf-Overrun       Counter,
            bundleMinJitBuffer          Gauge,
            bundleMaxJitBuffer          Gauge,
            bundleRx-Lost               Counter,
            bundleRx-Good               Counter,
            bundleTx-Good               Counter,
            bundleJumped                Counter,
            bundleRe-order              Counter,
            toeBundleClear                   INTEGER
        }

        bundleSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot 1~12, total 12 slots."
            ::= { tdmoebundleStatisticsEntry 1 }

        bundleTribIndex  OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE alarm portIndex"
            ::= { tdmoebundleStatisticsEntry 2 }

        bundleBundleIDIndex   OBJECT-TYPE
            SYNTAX   Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TDMoE bundle 1-32"
            ::= { tdmoebundleStatisticsEntry 3 }

        bundleJit-Buf-Underrun  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TXC Byte Received"
            ::= { tdmoebundleStatisticsEntry 4 }

        bundleJit-Buf-Overrun  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TXC Byte Transmitted"
            ::= { tdmoebundleStatisticsEntry 5 }

        bundleMinJitBuffer  OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TXC Classified Packets Received"
            ::= { tdmoebundleStatisticsEntry 6 }

        bundleMaxJitBuffer   OBJECT-TYPE
            SYNTAX  Gauge
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Byte Received"
            ::= { tdmoebundleStatisticsEntry 7 }

        bundleRx-Lost  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Byte Transmitted"
            ::= { tdmoebundleStatisticsEntry 8 }

        bundleRx-Good  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Packets Received"
            ::= { tdmoebundleStatisticsEntry 9 }

        bundleTx-Good   OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Wan Packets Tranmitted"
            ::= { tdmoebundleStatisticsEntry 10 }

        bundleJumped  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Jumped packets"
            ::= { tdmoebundleStatisticsEntry 11 }

        bundleRe-order  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "re-order packets"
            ::= { tdmoebundleStatisticsEntry 12 }

        toeBundleClear  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    clear(2)
                }
            MAX-ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Clear Bundle Count"
            ::= { tdmoebundleStatisticsEntry 13 }
--
--  Traffic Statistics Table
--


        tdmoeEthPortStatisticsTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF   TdmoeEthPortStatisticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "bundle statistics table"
            ::= {tdmoeStatusAndStatisticsTable  2}

        tdmoeEthPortStatisticsEntry  OBJECT-TYPE
            SYNTAX  TdmoeEthPortStatisticsEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in bundle statistics table."
            INDEX { trafficSlotIndex , trafficPortIndex }
            ::= { tdmoeEthPortStatisticsTable 1 }

            TdmoeEthPortStatisticsEntry ::= SEQUENCE  {
            trafficSlotIndex            LargeSlotIndex,
            trafficPortIndex            EthportIndex,
            trafficTx-Packets           Counter,
            trafficTx-Bytes             Counter,
            trafficTx-UnicastPackets    Counter,
            trafficTx-MulticastPackets  Counter,
            trafficTx-BroadcastPackets  Counter,
            trafficTx-PausePackets      Counter,
            trafficRx-Packets           Counter,
            trafficRx-Bytes             Counter,
            trafficRx-UnicastPackets    Counter,
            trafficRx-MulticastPackets  Counter,
            trafficRx-BroadcastPackets  Counter,
            trafficRx-PausePackets      Counter,
            trafficRx-BulkyPackets      Counter,
            trafficRx-ShortyPackets     Counter,
            trafficRx-FragmentPackets   Counter,
            trafficCRCError             Counter
        }

        trafficSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot 1~12, total 12 slots."
            ::= { tdmoeEthPortStatisticsEntry 1 }

        trafficPortIndex  OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port Index"
            ::= { tdmoeEthPortStatisticsEntry 2 }

        trafficTx-Packets    OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good transmitted frames "
            ::= { tdmoeEthPortStatisticsEntry 3 }

        trafficTx-Bytes       OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good transmitted bytes "
            ::= { tdmoeEthPortStatisticsEntry 4 }

        trafficTx-UnicastPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good frames sent that have a unicast destination MAC address."
            ::= { tdmoeEthPortStatisticsEntry 5}

        trafficTx-MulticastPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good frames sent that have a multicast destination MAC address."
            ::= { tdmoeEthPortStatisticsEntry 6}

        trafficTx-BroadcastPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good frames sent that have a broadcast destination MAC address."
            ::= { tdmoeEthPortStatisticsEntry 7}

        trafficTx-PausePackets   OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "transmitted pause packets."
            ::= { tdmoeEthPortStatisticsEntry 8}

        trafficRx-Packets    OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good received packets "
            ::= { tdmoeEthPortStatisticsEntry 9}

        trafficRx-Bytes   OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good received bytes "
            ::= { tdmoeEthPortStatisticsEntry 10 }

        trafficRx-UnicastPackets   OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { tdmoeEthPortStatisticsEntry 11}

        trafficRx-MulticastPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good frames sent that have a multicast destination MAC address."
            ::= { tdmoeEthPortStatisticsEntry 12}

        trafficRx-BroadcastPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "The number of good frames sent that have a multicast destination MAC address."
            ::= { tdmoeEthPortStatisticsEntry 13}


        trafficRx-PausePackets         OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "transmitted pause packets."
            ::= { tdmoeEthPortStatisticsEntry 14}

        trafficRx-BulkyPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total frames received with a length of more than MaxSize octets(ethernet packet length 1514) but with a valid FCS."
            ::= { tdmoeEthPortStatisticsEntry 15 }


        trafficRx-ShortyPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total frames received with a length of less than 64 octets but with a valid FCS."
            ::= { tdmoeEthPortStatisticsEntry 16}

        trafficRx-FragmentPackets  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { tdmoeEthPortStatisticsEntry 17}

        trafficCRCError  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total frames received with a CRC error"
            ::= { tdmoeEthPortStatisticsEntry 18}


        tdmoeBundleStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeBundleStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "bundle statistics table"
            ::= {tdmoeStatusAndStatisticsTable  3}

        tdmoeBundleStatusEntry  OBJECT-TYPE
            SYNTAX  TdmoeBundleStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in bundle statistics table."
            INDEX { bundleSlotIndex , bundleTribIndex ,
        bundleBundleIDIndex }
            ::= { tdmoeBundleStatusTable 1 }

            TdmoeBundleStatusEntry ::= SEQUENCE  {
            bundleStatus                INTEGER
        }

        bundleStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    inactive (1),
                    active   (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bundle Status"
            ::= { tdmoeBundleStatusEntry 4 }


        tdmoeEthPortStatusTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeEthPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth port Status Table."
            ::= { tdmoeStatusAndStatisticsTable 4 }

        tdmoeEthPortStatusEntry       OBJECT-TYPE
            SYNTAX  TdmoeEthPortStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { enetSlotIndex , enetPortIndex }
            ::= { tdmoeEthPortStatusTable 1 }

            TdmoeEthPortStatusEntry ::= SEQUENCE {
            enetSlotIndex               LargeSlotIndex,
            enetPortIndex               EthportIndex,
            enetState                   INTEGER,
            enetAutoNegotiation         INTEGER,
            enetSpeed                   INTEGER,
            enetDuplex                  INTEGER,
            enetAutolaserShutdown       INTEGER,
            link                        INTEGER,
            enetPulseRepetitionTime     INTEGER
        }

        enetSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot 1~12, total 12 slots."
            ::= { tdmoeEthPortStatusEntry 1 }

        enetPortIndex    OBJECT-TYPE
            SYNTAX  EthportIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "eth port 1-4"
            ::= { tdmoeEthPortStatusEntry 2 }

        enetState         OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port State"
            ::= { tdmoeEthPortStatusEntry 3 }

        enetAutoNegotiation    OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "auto negotiation state"
            ::= {tdmoeEthPortStatusEntry 4 }

        enetSpeed    OBJECT-TYPE
            SYNTAX  INTEGER {
                    mbps-10   (1),
                    mbps-100  (2),
                    mbps-1000 (3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port speed 10/100/1000 mbps"
            ::= {tdmoeEthPortStatusEntry 5 }

        enetDuplex      OBJECT-TYPE
            SYNTAX  INTEGER {
                    half   (1),
                    full   (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port duplex mode(half/full)"
            ::= {tdmoeEthPortStatusEntry 6 }

        enetAutolaserShutdown    OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable  (1),
                    disable (2)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "autolasershutdown state"
            ::= {tdmoeEthPortStatusEntry 7}

        link    OBJECT-TYPE
            SYNTAX  INTEGER {
                    down  (1),
                    up    (2)

                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "autolasershutdown state"
            ::= {tdmoeEthPortStatusEntry 8}

        enetPulseRepetitionTime  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ALS/APSD pulse repetition time for automatic restart(sec)"
            ::= { tdmoeEthPortStatusEntry 9 }

--  Optical Information Table
--



        tdmoeOpticalInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF OpticalInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "optical information table"
            ::= {tdmoeStatusAndStatisticsTable  5}

        opticalInfoEntry  OBJECT-TYPE
            SYNTAX  OpticalInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in optical information table."
            INDEX { opticalSlotIndex , opticalPortIndex }
            ::= { tdmoeOpticalInformationTable 1 }

            OpticalInfoEntry ::= SEQUENCE  {
            opticalSlotIndex            LargeSlotIndex,
            opticalPortIndex            INTEGER,
            opticalConnector            INTEGER,
            opticalTransceiver          DisplayString,
            opticalLinkLength           DisplayString,
            opticalTechnology           DisplayString,
            opticalEncoding             DisplayString,
            opticalLength-9-125-mm      DisplayString,
            opticalLength-50-125-mm     DisplayString,
            opticalLength-62p5-125-mm   DisplayString,
            opticalTemperature          DisplayString,
            opticalVcc                  DisplayString,
            opticalTxBias               DisplayString,
            opticalTxPower              DisplayString,
            opticalRxPower              DisplayString,
            opticalDate              DisplayString,
            opticalVendorName              DisplayString,
            opticalOUI              DisplayString,
            opticalPN              DisplayString,
            opticalRev              DisplayString,
            opticalWavelength              DisplayString
        }

        opticalSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot 1~12, total 12 slots."
            ::= { opticalInfoEntry 1 }

        opticalPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    eth-1 (1),
                    eth-2 (2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "optical port"
            ::= { opticalInfoEntry 2 }

        opticalConnector  OBJECT-TYPE
            SYNTAX  INTEGER {
                    not-available(1),
                    sc(2),
                    fiber-channel-style-1-copper(3),
                    fiber-channel-style-2-copper(4),
                    bnc-tnc(5),
                    fibre-channel-coaxial-header(6),
                    fiberJack(7),
                    lc(8),
                    mt-rj(9),
                    mu(10),
                    sg(11),
                    optcal-pigtail(12),
                    hssdc-ii(13),
                    copper-pigtail(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP connector"
            ::= { opticalInfoEntry 3 }

        opticalTransceiver  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP transceiver"
            ::= { opticalInfoEntry 4 }

        opticalLinkLength  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP link length"
            ::= { opticalInfoEntry 5 }

        opticalTechnology  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP technology"
            ::= { opticalInfoEntry 6 }

        opticalEncoding  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP encoding"
            ::= { opticalInfoEntry 7 }

        opticalLength-9-125-mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 9/125 mm fiber"
            ::= { opticalInfoEntry 8 }

        opticalLength-50-125-mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 50/125 mm fiber"
            ::= { opticalInfoEntry 9 }

        opticalLength-62p5-125-mm  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP length for 62.5/125 mm fiber"
            ::= { opticalInfoEntry 10 }

        opticalTemperature  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Temperature"
            ::= { opticalInfoEntry 11 }

        opticalVcc  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Vcc"
            ::= { opticalInfoEntry 12 }

        opticalTxBias  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Tx Bias current"
            ::= { opticalInfoEntry 13 }

        opticalTxPower  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Tx power"
            ::= { opticalInfoEntry 14 }

        opticalRxPower  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 15 }

        opticalDate             OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 16 }

        opticalVendorName              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 17 }

        opticalOUI              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 18 }

        opticalPN              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 19 }

        opticalRev              OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 20 }

        opticalWavelength           OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SFP Rx power"
            ::= { opticalInfoEntry 21 }


--
-- Transmission delay measurement map table
--

        tdmoeDiagRoundTripMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeDiagRoundTripMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Transmission delay measurement map table"
            ::= {tdmoeStatusAndStatisticsTable  6}

        tdmoeDiagRoundTripMapEntry  OBJECT-TYPE
            SYNTAX  TdmoeDiagRoundTripMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in transmission delay measurement map table."
            INDEX { diagRoundTripMapSlotIndex , diagRoundTripMapPortIndex }
            ::= { tdmoeDiagRoundTripMapTable 1 }

            TdmoeDiagRoundTripMapEntry ::= SEQUENCE  {
            diagRoundTripMapSlotIndex           LargeSlotIndex,
            diagRoundTripMapPortIndex           Tributaryport,
            diagRoundTripMapBundleID            Bundleid2,
            diagRoundTripMapPeriod              INTEGER,
            diagRoundTripMapEnable              INTEGER,
            diagRoundTripMapErrorCode           INTEGER,
            diagRoundTripMapElapseTime          INTEGER,
            diagRoundTripMapMax                 DisplayString,
            diagRoundTripMapMin                 DisplayString,
            diagRoundTripMapAvg                 DisplayString,
            diagRoundTripMapPacketLoss          Counter
        }

        diagRoundTripMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { tdmoeDiagRoundTripMapEntry 1 }

        diagRoundTripMapPortIndex    OBJECT-TYPE
            SYNTAX  Tributaryport
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "trib port 1~4 "
            ::= { tdmoeDiagRoundTripMapEntry 2 }

        diagRoundTripMapBundleID      OBJECT-TYPE
            SYNTAX  Bundleid2
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "bundle ID "
            ::= { tdmoeDiagRoundTripMapEntry 3}

        diagRoundTripMapPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (0..600) --//RIKER2021 SilverCreek
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Period time for transmission delay measurement (second) "
            ::= { tdmoeDiagRoundTripMapEntry 4 }

        diagRoundTripMapEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Ethernet transmission time delay measurement control "
            ::= { tdmoeDiagRoundTripMapEntry 5 }

        diagRoundTripMapErrorCode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    inactive-delay-measurement(2),
                    no-measurement-available(3),
                    not-receive-any-return-packet(5),
                    packet-loss-too-much(9),
                    na(254),
                    unknown-problem(255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Test measurement result: 2, 3, 4, etc..
                Result 2 means 'test ok.'.
                Result 3 means 'Bundle inactive delay measurement not available.'.
                Result 4 means 'Did not receive any return packet, no measurement available, please retest.'."
            ::= { tdmoeDiagRoundTripMapEntry 6 }

        diagRoundTripMapElapseTime  OBJECT-TYPE
            SYNTAX  INTEGER (0..600)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Elapsed time (second) "
            ::= { tdmoeDiagRoundTripMapEntry 7 }

        diagRoundTripMapMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Maximum transmission delay time (millisecond) "
            ::= { tdmoeDiagRoundTripMapEntry 8 }

        diagRoundTripMapMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Minimum transmission delay time (millisecond) "
            ::= { tdmoeDiagRoundTripMapEntry 9 }

        diagRoundTripMapAvg  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Average transmission delay time (millisecond) "
            ::= { tdmoeDiagRoundTripMapEntry 10 }

        diagRoundTripMapPacketLoss  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Round trip test packet loss "
            ::= { tdmoeDiagRoundTripMapEntry 11 }


--
--  SYSTEM Information Table
--

        tdmoeSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= { tdmoe-card 9}

        systemInformationEntry  OBJECT-TYPE
            SYNTAX  SystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { tdmoeSlotIndex }
            ::= { tdmoeSystemInformationTable 1 }

            SystemInformationEntry ::= SEQUENCE {
            tdmoePROMVersion            DisplayString,
            tdmoeHardwareVersion        DisplayString,
            tdmoeFpgaVersion            DisplayString,
            tdmoeOscType                DisplayString,
            tdmoeBank1Version           DisplayString,
            tdmoeBank2Version           DisplayString,
            tdmoeActiveBank             INTEGER,
            tdmoeNextBank               INTEGER
        }

        tdmoePROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " tdmoe PROM Version"
            ::= { systemInformationEntry 2 }

        tdmoeHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " tdmoe Hardware Version"
            ::= { systemInformationEntry 3 }

        tdmoeFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { systemInformationEntry 4 }

        tdmoeOscType  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "osc version"
            ::= { systemInformationEntry 5 }

        tdmoeBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { systemInformationEntry 6 }

        tdmoeBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { systemInformationEntry 7}

        tdmoeActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { systemInformationEntry 8 }

        tdmoeNextBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Next Bank 1/2"
            ::= { systemInformationEntry 9 }

--
--  Command Control Table
--

        tdmoeCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TdmoeCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { tdmoe-card 10}

        tdmoeCommandControlEntry  OBJECT-TYPE
            SYNTAX  TdmoeCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { tdmoeSlotIndex }
            ::= { tdmoeCommandControlTable 1 }

            TdmoeCommandControlEntry ::= SEQUENCE {
            tdmoePerfReset              INTEGER,
            tdmoeAlarmHistoryReset      INTEGER,
            tdmoeCardReset              INTEGER,
            tdmoeLoadDefault            INTEGER
        }


        tdmoePerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { tdmoeCommandControlEntry 2 }

        tdmoeAlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { tdmoeCommandControlEntry 3 }

        tdmoeCardReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset "
            ::= { tdmoeCommandControlEntry 4 }

        tdmoeLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default"
            ::= { tdmoeCommandControlEntry 5}

--
--    Vlan VID setup table
--

        toeVlanSetupVidTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ToeVlanSetupVidEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMOE Vlan VID setup table"
            ::= { tdmoe-card 11 }

        toeVlanSetupVidEntry  OBJECT-TYPE
            SYNTAX  ToeVlanSetupVidEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in TDMOE Vlan VID setup table"
            INDEX { tvSetupVidSlot }
            ::= { toeVlanSetupVidTable 1 }

            ToeVlanSetupVidEntry ::= SEQUENCE  {
            tvSetupVidSlot              LargeSlotIndex,
            tvVLAN802-1Q                INTEGER,
            tvTdmPvid                   INTEGER,
            tvEth1Pvid                  INTEGER,
            tvEth2Pvid                  INTEGER,
            tvEth3Pvid                  INTEGER,
            tvEth4Pvid                  INTEGER
        }

        tvSetupVidSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { toeVlanSetupVidEntry 1 }

        tvVLAN802-1Q  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "802.1Q VLAN"
            ::= { toeVlanSetupVidEntry 2 }

        tvTdmPvid  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VID for TDM"
            ::= { toeVlanSetupVidEntry 3 }

        tvEth1Pvid  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VID for ethernet port 1"
            ::= { toeVlanSetupVidEntry 4 }

        tvEth2Pvid  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VID for ethernet port 2"
            ::= { toeVlanSetupVidEntry 5 }

        tvEth3Pvid  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VID for ethernet port 3"
            ::= { toeVlanSetupVidEntry 6 }

        tvEth4Pvid  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "VID for ethernet port 4"
            ::= { toeVlanSetupVidEntry 7 }


--
--    Vlan Group Setup Table
--
--  Hao 3/27 2013
        toeVlanSetupGroupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ToeVlanSetupGroupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Vlan Group Setup Table"
            ::= { tdmoe-card 12 }

        toeVlanSetupGroupEntry  OBJECT-TYPE
            SYNTAX  ToeVlanSetupGroupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in Vlan Group Setup Table"
            INDEX { tvSetupGroupSlot , tvGroupIndex }
            ::= { toeVlanSetupGroupTable 1 }

            ToeVlanSetupGroupEntry ::= SEQUENCE  {
            tvSetupGroupSlot            LargeSlotIndex,
            tvGroupIndex                INTEGER,
            tvTdmTag                    INTEGER,
            tvEth1Tag                   INTEGER,
            tvEth2Tag                   INTEGER,
            tvEth3Tag                   INTEGER,
            tvEth4Tag                   INTEGER,
            tvVlanID                    INTEGER,
            tvEnable                    INTEGER
        }

        tvSetupGroupSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { toeVlanSetupGroupEntry 1 }

        tvGroupIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "group index"
            ::= { toeVlanSetupGroupEntry 2 }

        tvTdmTag  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    tag(2),
                    untag(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan tdm tag/uptag"
            ::= { toeVlanSetupGroupEntry 3 }

        tvEth1Tag  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    tag(2),
                    untag(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan ethernet port 1 tag/uptag"
            ::= { toeVlanSetupGroupEntry 4 }

        tvEth2Tag  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    tag(2),
                    untag(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan ethernet port 2 tag/uptag"
            ::= { toeVlanSetupGroupEntry 5 }

        tvEth3Tag  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    tag(2),
                    untag(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan ethernet port 3 tag/uptag"
            ::= { toeVlanSetupGroupEntry 6 }

        tvEth4Tag  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    tag(2),
                    untag(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan ethernet port 4 tag/uptag"
            ::= { toeVlanSetupGroupEntry 7 }

        tvVlanID  OBJECT-TYPE
            SYNTAX  INTEGER (1..4095)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "vlan vid"
            ::= { toeVlanSetupGroupEntry 8 }

--Hao 3/27 2013
        tvEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "group enable"
            ::= { toeVlanSetupGroupEntry 9 }


--
--      tdmoeClockSourceConfigTable
--



    tdmoeClockSourceConfigTable       OBJECT IDENTIFIER ::= { tdmoe-card 13 }

        portModeConfig              OBJECT-TYPE
            SYNTAX  SEQUENCE OF   PortModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE  Port Clock Source Mode Config Table."
            ::= { tdmoeClockSourceConfigTable  1 }

        portModeConfigEntry            OBJECT-TYPE
            SYNTAX  PortModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE Port Clock Source Mode Config  Entry"
            INDEX { tdmoeClockSourceSlotIndex }
            ::= { portModeConfig 1 }

            PortModeConfigEntry ::= SEQUENCE {
            tdmoeClockSourceSlotIndex       LargeSlotIndex,
            tdmoeClockSourcePort1   INTEGER,
            tdmoeClockSourcePort2   INTEGER,
            tdmoeClockSourcePort3   INTEGER,
            tdmoeClockSourcePort4   INTEGER
        }

        tdmoeClockSourceSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { portModeConfigEntry 1 }

        tdmoeClockSourcePort1 OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4),
                    eth1SyncE(5),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portModeConfigEntry 2 }

        tdmoeClockSourcePort2 OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4),
                    eth2SyncE(5),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portModeConfigEntry 3 }

        tdmoeClockSourcePort3 OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4),
                    eth3SyncE(5),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portModeConfigEntry 4 }

        tdmoeClockSourcePort4 OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4),
                    eth4SyncE(5),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portModeConfigEntry 5 }

        portACRConfig              OBJECT-TYPE
            SYNTAX  SEQUENCE OF   PortACRConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE  Port ACR Config Table."
            ::= { tdmoeClockSourceConfigTable  2 }

        portACRConfigEntry            OBJECT-TYPE
            SYNTAX  PortACRConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE Port ACR Config  Entry"
            INDEX { tdmoeACRSlotIndex , tdmoeACRIndex }
            ::= { portACRConfig 1 }

            PortACRConfigEntry ::= SEQUENCE {
            tdmoeACRSlotIndex              LargeSlotIndex,
            tdmoeACRIndex               INTEGER,
            tdmoeACRTribID          INTEGER,
            tdmoeACRBundleID        Integer32,
            tdmoeACREnable          INTEGER,
            tdmoeACRStatus          INTEGER
        }

        tdmoeACRSlotIndex OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { portACRConfigEntry 1 }

        tdmoeACRIndex OBJECT-TYPE
            SYNTAX INTEGER {
                    acr1(1),
                    acr2(2),
                    acr3(3),
                    acr4(4)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portACRConfigEntry 2 }

        tdmoeACRTribID OBJECT-TYPE
            SYNTAX INTEGER {
                    trib1(1),
                    trib2(2),
                    trib3(3),
                    trib4(4)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portACRConfigEntry 3 }

        tdmoeACRBundleID OBJECT-TYPE
            SYNTAX Integer32 (0..15)
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portACRConfigEntry 4 }

        tdmoeACREnable OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portACRConfigEntry 5 }

        tdmoeACRStatus OBJECT-TYPE
            SYNTAX INTEGER {
                    idle(1),
                    acquisition(2),
                    tracking1(3),
                    tracking2(4),
                    tracking3(5),
                    tracking4(6),
                    tracking5(7),
                    none(99)
                }
            ACCESS read-only
            STATUS mandatory
            DESCRIPTION
                "The Clock Source Port Mode."
            ::= { portACRConfigEntry 6 }

        timeStampUploadConfig              OBJECT-TYPE
            SYNTAX  SEQUENCE OF   TimeStampUploadConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE  Port ACR Config Table."
            ::= { tdmoeClockSourceConfigTable  3 }

        timeStampUploadConfigEntry            OBJECT-TYPE
            SYNTAX  TimeStampUploadConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "TDMoE Port ACR Config  Entry"
            INDEX { tdmoeTimeStampSlotIndex }
            ::= { timeStampUploadConfig 1 }

            TimeStampUploadConfigEntry ::= SEQUENCE {
            tdmoeTimeStampSlotIndex              LargeSlotIndex,
            tdmoeSrcIP                      IpAddress,
            tdmoeSrcSubnetMask      IpAddress,
            tdmoeTftpServerIP       IpAddress,
            tdmoeAcrNum            Integer32,
            tdmoeEnable                     INTEGER
        }

        tdmoeTimeStampSlotIndex OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { timeStampUploadConfigEntry 1 }

        tdmoeSrcIP OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload Source IP."
            ::= { timeStampUploadConfigEntry 2 }

        tdmoeSrcSubnetMask OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload Source Subnet Mask."
            ::= { timeStampUploadConfigEntry 3 }

        tdmoeTftpServerIP OBJECT-TYPE
            SYNTAX IpAddress
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload TFTP server IP."
            ::= { timeStampUploadConfigEntry 4 }

        tdmoeAcrNum OBJECT-TYPE
            SYNTAX Integer32 (1..4)
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload ACR Number."
            ::= { timeStampUploadConfigEntry 5 }

        tdmoeEnable OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2),
                    none(99)
                }
            ACCESS read-write
            STATUS mandatory
            DESCRIPTION
                "The Time Stamp Upload Enable/Disable."
            ::= { timeStampUploadConfigEntry 6 }

-- end of tdmoe Clock Source Config Table --

        toeTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of TDMoE"
            ::= { tdmoe-card 100 }


--======================================================================--
--======================================================================--
--  8DBRA-card MIB
--======================================================================--
--======================================================================--

--
--  8DBRA Configuartion
--


        dbraBackupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraBackupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DBRA Backup table."
            ::= { oct-dbra-card 1 }

        dbraBackupEntry  OBJECT-TYPE
            SYNTAX  DbraBackupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dbra backup table."
            INDEX { dbraBackupSlotIndex }
            ::= { dbraBackupTable 1 }

            DbraBackupEntry ::= SEQUENCE {
            dbraBackupSlotIndex         LargeSlotIndex,
            dbraBackupType              INTEGER,
            dbraSite                    INTEGER,
            dbraMode                    INTEGER,
            dbraForceSwitch             INTEGER,
            dbraStatus                  INTEGER
        }

        dbraBackupSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraBackupEntry 1 }

        dbraBackupType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    port-backup(2),
                    card-backup(3),
                    dual-host(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA backup mode"
            ::= { dbraBackupEntry 2 }

        dbraSite  OBJECT-TYPE
            SYNTAX  INTEGER {
                    primary(1),
                    secondary(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA dual host site"
            ::= { dbraBackupEntry 3}

        dbraMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    non-revertible(1),
                    revertible(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Only use in card backup to determine whether slot changes to working
                or stand-by mode "
            ::= { dbraBackupEntry 4}

        dbraForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    force(2),
                    none(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Only use in card backup to force slot changes to working
                or stand-by mode "
            ::= { dbraBackupEntry 5}

        dbraStatus     OBJECT-TYPE
            SYNTAX  INTEGER {
                    working(1),
                    stand-by(2),
                    none(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Only show in card-backup to indicate the slot is working
                or stand-by STATUS "
            ::= { dbraBackupEntry 6}

--port map

        dbraPortMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraPortMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DBRA Port Map table."
            ::= { oct-dbra-card 2 }


        dbraPortMapEntry  OBJECT-TYPE
            SYNTAX  DbraPortMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dbra port map table."
            INDEX { dbraPortMapSlotIndex }
            ::= { dbraPortMapTable 1 }

            DbraPortMapEntry ::= SEQUENCE {
            dbraPortMapSlotIndex        LargeSlotIndex,
            dbraVirtualPort             INTEGER,
            dbraTsStart                 INTEGER,
            dbraTotalTS                 INTEGER,
            dbraRS232Port               INTEGER,
            dbraCommand                 INTEGER
        }

        dbraPortMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraPortMapEntry 1 }

        dbraVirtualPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    vp1(1),
                    vp2(2),
                    vp3(3),
                    vp4(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA virtual port"
            ::= { dbraPortMapEntry 2 }

        dbraTsStart  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA Time Slot Start range(1-32)"
            ::= { dbraPortMapEntry 3 }

        dbraTotalTS  OBJECT-TYPE
            SYNTAX  INTEGER (1..20)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA Time Slot Start (1-20)"
            ::= { dbraPortMapEntry 4}

        dbraRS232Port  OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA rs232 port"
            ::= { dbraPortMapEntry 5}

        dbraCommand  OBJECT-TYPE
            SYNTAX  INTEGER  {
                    setonly(1),
                    clear(2),
                    clearAndset(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA rs232 port"
            ::= { dbraPortMapEntry 6}


-- rs232 config

        dbraRs232ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraRs232ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DBRA rs232 config table."
            ::= { oct-dbra-card 3 }

        dbraRs232ConfigEntry  OBJECT-TYPE
            SYNTAX  DbraRs232ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dbra rs232 config table."
            INDEX { dbraRs232SlotIndex , dbraRs232PortIndex }
            ::= { dbraRs232ConfigTable 1 }

            DbraRs232ConfigEntry ::= SEQUENCE {
            dbraRs232SlotIndex          LargeSlotIndex,
            dbraRs232PortIndex          EightPortID,
            dbraRate                    INTEGER,
            dbraInterface               INTEGER,
            dbraPortMode                INTEGER,
            dbraUartRate                INTEGER,
            dbraUartDataLength          INTEGER,
            dbraUartPCMInv              INTEGER
        }

        dbraRs232SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraRs232ConfigEntry 1 }

        dbraRs232PortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dbra port 1-8"
            ::= { dbraRs232ConfigEntry 2 }

        dbraRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r1-2K(1),
                    r2-4K(2),
                    r4-8K(3),
                    r9-6K(4),
                    r19-2K(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA rate"
            ::= { dbraRs232ConfigEntry 3 }

        dbraInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    db25-RJ(1),
                    rj-only(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA interface"
            ::= { dbraRs232ConfigEntry 4 }

        dbraPortMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    oversample(1),
                    uart(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA Port Mode"
            ::= { dbraRs232ConfigEntry 5 }

        dbraUartRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0-6K(1),
                    r1-2K(2),
                    r2-4K(3),
                    r4-8K(4),
                    r9-6K(5),
                    r19-2K(6),
                    r38-4K(7),
                    r57-6K(8),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA uart mode port Rate"
            ::= { dbraRs232ConfigEntry 6 }

        dbraUartDataLength  OBJECT-TYPE
            SYNTAX  INTEGER {
                    length-7(1),
                    length-8(2),
                    length-9(3),
                    length-10(4),
                    length-11(5),
                    length-12(6),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA uart mode port Data Length"
            ::= { dbraRs232ConfigEntry 7 }

        dbraUartPCMInv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    null(99)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DBRA uart mode port PCM Invert"
            ::= { dbraRs232ConfigEntry 8 }



-- diagnostic control

        dbraDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { oct-dbra-card 4}

        dbraDiagControlEntry  OBJECT-TYPE
            SYNTAX  DbraDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { dbraDiagSlotIndex , dbraDiagPortIndex }
            ::= { dbraDiagControlTable 1 }

            DbraDiagControlEntry ::= SEQUENCE {
            dbraDiagSlotIndex           LargeSlotIndex,
            dbraDiagPortIndex           EightPortID,
            dbrars232Loopback           INTEGER
        }

        dbraDiagSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraDiagControlEntry 1 }

        dbraDiagPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dbra port 1-8"
            ::= { dbraDiagControlEntry 2 }

        dbrars232Loopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    to-rs232(2),
                    to-system(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "dbra loopback setup"
            ::= { dbraDiagControlEntry 3}


-- portmap information

        dbraPortMapInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraPortMapInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DBRA Port Map Information table."
            ::= { oct-dbra-card 5}


        dbraPortMapInfoEntry  OBJECT-TYPE
            SYNTAX  DbraPortMapInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the dbra port map info table."
            INDEX { dbraPortMapInfoSlotIndex , dbraPortMapInfoPortIndex ,
        dbraPortMapTimeSlotIndex }
            ::= { dbraPortMapInfoTable 1 }

            DbraPortMapInfoEntry ::= SEQUENCE {
            dbraPortMapInfoSlotIndex    LargeSlotIndex,
            dbraPortMapInfoPortIndex    INTEGER,
            dbraPortMapTimeSlotIndex    INTEGER,
            dbraMapToPort               INTEGER
        }

        dbraPortMapInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraPortMapInfoEntry 1 }

        dbraPortMapInfoPortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    vp1(1),
                    vp2(2),
                    vp3(3),
                    vp4(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA virtual port"
            ::= { dbraPortMapInfoEntry 2 }

        dbraPortMapTimeSlotIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA timeslot index"
            ::= { dbraPortMapInfoEntry 3 }

        dbraMapToPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    port-1(1),
                    port-2(2),
                    port-3(3),
                    port-4(4),
                    port-5(5),
                    port-6(6),
                    port-7(7),
                    port-8(8),
                    idle  (255)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA timeslot map to port"
            ::= { dbraPortMapInfoEntry 4 }

-- command control

        dbraCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { oct-dbra-card 6}

        dbraCommandControlEntry  OBJECT-TYPE
            SYNTAX  DbraCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { dbraCommandSlotIndex }
            ::= { dbraCommandControlTable 1 }

            DbraCommandControlEntry ::= SEQUENCE {
            dbraCommandSlotIndex        LargeSlotIndex,
            dbraCardReset               INTEGER,
            dbraLoadDefault             INTEGER,
            dbraDataMode                INTEGER,
            dbraDataType                INTEGER
        }

        dbraCommandSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraCommandControlEntry 1 }

        dbraCardReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset dbra card"
            ::= { dbraCommandControlEntry 2 }

        dbraLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { dbraCommandControlEntry 3 }

        dbraDataMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-56k(1),
                    data-64k(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "dbra data rate"
            ::= { dbraCommandControlEntry 4 }

        dbraDataType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    invert(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "dbra data type: normal or invert"
            ::= { dbraCommandControlEntry 5 }

-- card information

        dbraSystemInformationTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF DbraSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The system information table."
            ::= {  oct-dbra-card 7}

        dbraSystemInformationEntry  OBJECT-TYPE
            SYNTAX  DbraSystemInformationEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the system information table."
            INDEX { dbraSysInfoSlotIndex }
            ::= { dbraSystemInformationTable 1 }

            DbraSystemInformationEntry ::= SEQUENCE {
            dbraSysInfoSlotIndex        LargeSlotIndex,
            dbraPROMVersion             DisplayString,
            dbraHardwareVersion         DisplayString,
            dbraFpgaVersion             DisplayString
        }

        dbraSysInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DBRA slot 1-12"
            ::= { dbraSystemInformationEntry 1 }


        dbraPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " dbra PROM Version"
            ::= { dbraSystemInformationEntry 2 }

        dbraHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " dbra Hardware Version"
            ::= { dbraSystemInformationEntry 3 }

        dbraFpgaVersion     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " dbra Fpga Version"
            ::= { dbraSystemInformationEntry 4 }


        dbraTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 8DBRA"
            ::= { oct-dbra-card 100 }



--======================================================================--
--======================================================================--
--      SOCU/DP Control Table
--======================================================================--
--======================================================================--

        socudpConfigControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP Configuration Control Table"
            ::= { socudp-card 1 }

        socudpConfigControlEntry  OBJECT-TYPE
            SYNTAX  SocudpConfigControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP configuration control entry"
            INDEX { socudpConfigControlIndex }
            ::= { socudpConfigControlTable 1 }

            SocudpConfigControlEntry ::= SEQUENCE {
            socudpConfigControlIndex      SmallSlotIndex,
            socudp-DATA-RATE     INTEGER
        }

        socudpConfigControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpConfigControlEntry 1 }

        socudp-DATA-RATE   OBJECT-TYPE
            SYNTAX  INTEGER {
                    data-rate-2-4K(1),
                    data-rate-4-8K(2),
                    data-rate-9-6K(3),
                    data-rate-19-2K(4),
                    data-rate-56K(5),
                    data-rate-64K(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " data rate "
            ::= { socudpConfigControlEntry 2 }


--
-- Line Status Table
--

        socudpLineStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpLineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP Line Status Table."
            ::= { socudp-card 2 }

        socudpLineStatusEntry  OBJECT-TYPE
            SYNTAX  SocudpLineStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of OCU/DP line status table."
            INDEX { socudpLineStatusIndex }
            ::= { socudpLineStatusTable 1 }

            SocudpLineStatusEntry ::=SEQUENCE {
            socudpLineStatusIndex     SmallSlotIndex,
            socudpOOS                 INTEGER,
            socudpLOS                 INTEGER
        }

        socudpLineStatusIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpLineStatusEntry 1 }

        socudpOOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP OOS"
            ::= { socudpLineStatusEntry 2 }

        socudpLOS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    yes(1),
                    no(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP LOS"
            ::= { socudpLineStatusEntry 3 }

--
-- Line Diagnostic Control Table
--

        socudpLineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpLineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP Diagnostic Control Table."
            ::= { socudp-card 3 }

        socudpLineDiagControlEntry  OBJECT-TYPE
            SYNTAX  SocudpLineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of OCU/DP diagnostic control table."
            INDEX { socudpLineDiagControlIndex }
            ::= { socudpLineDiagControlTable 1 }

            SocudpLineDiagControlEntry ::=SEQUENCE {
            socudpLineDiagControlIndex       SmallSlotIndex,
            socudpLoopbackType               INTEGER,
            socudpPatternStatus              INTEGER
        }

        socudpLineDiagControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpLineDiagControlEntry 1 }

        socudpLoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no-loopback(1),
                    local(2),
                    payload(3)
--                        remote(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP Loopback Type"
            ::= { socudpLineDiagControlEntry 2 }

        socudpPatternStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OCU/DP pattern Type"
            ::= { socudpLineDiagControlEntry 3 }

--
--  Alarm Control Table
--

        socudpAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The alarm control table."
            ::= { socudp-card 4 }

        socudpAlarmControlEntry  OBJECT-TYPE
            SYNTAX  SocudpAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the OCU/DP alarm control table."
            INDEX { socudpAlarmControlIndex }
            ::= { socudpAlarmControlTable 1 }

            SocudpAlarmControlEntry ::=SEQUENCE {
            socudpAlarmControlIndex        SmallSlotIndex,
            socudpOOS-Line                 INTEGER,
            socudpLOS-Line                 INTEGER
        }

        socudpAlarmControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpAlarmControlEntry 1 }

        socudpOOS-Line  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    major(2),
                    critical(3),
                    minor(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "OOS-Line State"
            ::= { socudpAlarmControlEntry 2 }

        socudpLOS-Line  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    major(2),
                    critical(3),
                    minor(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS-Line State"
            ::= { socudpAlarmControlEntry 3 }

--
--  Alarm Queue Table
--

        socudpAlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpAlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { socudp-card 5 }

        socudpAlarmQueueEntry  OBJECT-TYPE
            SYNTAX  SocudpAlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { socudpPortAlarmQIndex ,
        socudpAlarmQueueIndex }
            ::= { socudpAlarmQueueTable 1 }

            SocudpAlarmQueueEntry ::=SEQUENCE {
            socudpPortAlarmQIndex                 SmallSlotIndex,
            socudpAlarmQueueIndex                 INTEGER (1..40),
            socudpAlarmQueueString                DisplayString (SIZE(0..255))
        }

        socudpPortAlarmQIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpAlarmQueueEntry 1 }

        socudpAlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { socudpAlarmQueueEntry 2 }

        socudpAlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { socudpAlarmQueueEntry 3 }

--
--  Command Control Table
--

        socudpCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF SocudpCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { socudp-card 6 }

        socudpCommandControlEntry  OBJECT-TYPE
            SYNTAX  SocudpCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { socudpCommandControlIndex }
            ::= { socudpCommandControlTable 1 }

            SocudpCommandControlEntry ::= SEQUENCE {
            socudpCommandControlIndex       SmallSlotIndex,
            socudpAlarmQueueReset           INTEGER,
            socudpPortLoadDefault           INTEGER,
            socudpPortReset                 INTEGER
        }

        socudpCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { socudpCommandControlEntry 1 }

        socudpAlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { socudpCommandControlEntry 2 }

        socudpPortLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default OCU/DP Port"
            ::= { socudpCommandControlEntry 3 }

        socudpPortReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset OCU/DP Port"
            ::= { socudpCommandControlEntry 4 }

--
-- Test Status Table
--
--         socudpTestStatusTable  OBJECT-TYPE
--             SYNTAX  SEQUENCE OF SocudpTestStatusEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP Test Status Table."
--             ::= { socudp-card 7 }
--
--         socudpTestStatusEntry  OBJECT-TYPE
--             SYNTAX  SocudpTestStatusEntry
--             ACCESS  not-accessible
--             STATUS  mandatory
--             DESCRIPTION
--                "An entry of OCU/DP test status table."
--             INDEX  { socudpTestStatusIndex }
--             ::= { socudpTestStatusTable 1 }
--
--         SocudpTestStatusEntry ::=SEQUENCE {
--               socudpTestStatusIndex          INTEGER,
--               socudpLOOPBACK                 INTEGER,
--               socudpPATTERN                  INTEGER,
--               socudpOCULOOPBACK              INTEGER,
--               socudpCSULOOPBACK              INTEGER,
--               socudpPOLARITYREVERSE          INTEGER
--             }
--
--         socudpTestStatusIndex  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        slot-A(1),
--                        slot-B(2),
--                        slot-C(3),
--                        slot-D(4),
--                        slot-E(5),
--                        slot-F(6),
--                        slot-H(7),
--                        slot-J(8),
--                        slot-K(9)
--                     }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "Slot A-K."
--             ::= { socudpTestStatusEntry 1 }
--
--         socudpLOOPBACK  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        off(1),
--                        local(2),
--                        plb(3),
--                        remote(4)
--                        }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP LOOPBACK"
--             ::= { socudpTestStatusEntry 2 }
--
--         socudpPATTERN  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        off(1),
--                        on(2)
--                        }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP PATTERN TRANSMITTED"
--             ::= { socudpTestStatusEntry 3 }
--
--         socudpOCULOOPBACK  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        normal(1),
--                        loopback(2)
--                        }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP OCU LOOPBACK"
--             ::= { socudpTestStatusEntry 4 }
--
--         socudpCSULOOPBACK  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        normal(1),
--                        loopback(2)
--                        }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP CSU LOOPBACK"
--             ::= { socudpTestStatusEntry 5 }
--
--         socudpPOLARITYREVERSE  OBJECT-TYPE
--             SYNTAX  INTEGER {
--                        normal(1),
--                        reverse(2)
--                        }
--             ACCESS  read-only
--             STATUS  mandatory
--             DESCRIPTION
--                "OCU/DP POLARITY REVERSE"
--             ::= { socudpTestStatusEntry 6 }

        socudpTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of SOCUDP"
            ::= { socudp-card 100 }


--======================================================================--


--======================================================================--
--======================================================================--
--  octDte card MIB
--======================================================================--
--======================================================================--


--
--      DTE Control Table
--

        dte8ConfigCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8ConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Configuration Control Table"
            ::= { octDte-card 1 }

        dte8ConfigCtrlEntry  OBJECT-TYPE
            SYNTAX  Dte8ConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE configuration control entry"
            INDEX { dte8ccSlotIndex ,
        dte8ccPortIndex }
            ::= { dte8ConfigCtrlTable 1 }

            Dte8ConfigCtrlEntry ::= SEQUENCE {
            dte8ccSlotIndex             LargeSlotIndex,
            dte8ccPortIndex             EightPortID,
            dte8Interface               INTEGER,
            dte8DS0Rate                 INTEGER,
            dte8Oversampling            INTEGER,
            dte8OversamplingRate        INTEGER,
            dte8SupportDataRate         DisplayString,
            dte8RTSCTS                  INTEGER,
            dte8DTRDSR                  INTEGER
        }

        dte8ccSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8ConfigCtrlEntry 1 }

        dte8ccPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8ConfigCtrlEntry 2 }

        dte8Interface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs485(2),
                    rs422(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Interface Type"
            ::= { dte8ConfigCtrlEntry 3 }

        dte8DS0Rate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate64k(1),
                    rate56k(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE DS0 Sampling Rate"
            ::= { dte8ConfigCtrlEntry 4 }

        dte8Oversampling   OBJECT-TYPE
            SYNTAX  INTEGER (1..6)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE oversampling numver"
            ::= { dte8ConfigCtrlEntry 5 }

        dte8OversamplingRate   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Rate (Kbps)"
            ::= { dte8ConfigCtrlEntry 6 }

        dte8SupportDataRate   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Supported Data Rate"
            ::= { dte8ConfigCtrlEntry 7 }

        dte8RTSCTS   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE RTS/CTS control"
            ::= { dte8ConfigCtrlEntry 8 }

        dte8DTRDSR   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE DTR/DSR control"
            ::= { dte8ConfigCtrlEntry 9 }



--
--  Alarm Control Table
--

        dte8AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE alarm control table."
            ::= { octDte-card 3 }

        dte8AlarmControlEntry  OBJECT-TYPE
            SYNTAX  Dte8AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE alarm control entry."
            INDEX { dte8acSlotIndex ,
        dte8acPortIndex }
            ::= { dte8AlarmControlTable 1 }

            Dte8AlarmControlEntry ::= SEQUENCE {
            dte8acSlotIndex             LargeSlotIndex,
            dte8acPortIndex             EightPortID,
            dte8AlarmEnable             AlarmSeverity,
            dte8AlarmState              INTEGER,
            dte8AlarmCount              INTEGER,
            dte8ThrLOLCAlarmEnable      AlarmSeverity,
            dte8ThrLOLCState            INTEGER,
            dte8ThrLOLCAlarmCount       INTEGER,
            dte8ThrLOCHAlarmEnable      AlarmSeverity,
            dte8ThrLOCHState            INTEGER,
            dte8ThrLOCHAlarmCount       INTEGER,
            dte8ThrCREAlarmEnable       AlarmSeverity,
            dte8ThrCREState             INTEGER,
            dte8ThrCREAlarmCount        INTEGER,
            dte8ThrResetCounter         INTEGER
        }

        dte8acSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8AlarmControlEntry 1 }

        dte8acPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8AlarmControlEntry 2 }

        dte8AlarmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm State"
            ::= { dte8AlarmControlEntry 3 }

        dte8AlarmState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { dte8AlarmControlEntry 4 }

        dte8AlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { dte8AlarmControlEntry 5 }

        dte8ThrLOLCAlarmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm Loss Of Clock State"
            ::= { dte8AlarmControlEntry 6 }

        dte8ThrLOLCState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State - Loss Of Clock"
            ::= { dte8AlarmControlEntry 7 }

        dte8ThrLOLCAlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count - Loss Of Clock "
            ::= { dte8AlarmControlEntry 8 }

        dte8ThrLOCHAlarmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm Loss Of Channel State"
            ::= { dte8AlarmControlEntry 9 }

        dte8ThrLOCHState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State - Loss Of Channel"
            ::= { dte8AlarmControlEntry 10 }

        dte8ThrLOCHAlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count - Loss Of Channel "
            ::= { dte8AlarmControlEntry 11 }

        dte8ThrCREAlarmEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm Clock Recovery Error State"
            ::= { dte8AlarmControlEntry 12 }

        dte8ThrCREState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State - Clock Recovery Error"
            ::= { dte8AlarmControlEntry 13 }

        dte8ThrCREAlarmCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count - Clock Recovery Error "
            ::= { dte8AlarmControlEntry 14 }

        dte8ThrResetCounter  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTE Through Clock alarm counter"
            ::= { dte8AlarmControlEntry 15 }


--
-- Line Diagnostic Control Table
--

        dte8DiagCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8DiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Diagnostic Control Table."
            ::= { octDte-card 4 }

        dte8DiagCtrlEntry  OBJECT-TYPE
            SYNTAX  Dte8DiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Diagnostic Control entry."
            INDEX { dte8dcSlotIndex ,
        dte8dcPortIndex }
            ::= { dte8DiagCtrlTable 1 }

            Dte8DiagCtrlEntry ::= SEQUENCE {
            dte8dcSlotIndex             LargeSlotIndex,
            dte8dcPortIndex             EightPortID,
            dte8LoopbackType            INTEGER,
            dte8LoopbackStatus          INTEGER
        }

        dte8dcSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8DiagCtrlEntry 1 }

        dte8dcPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8DiagCtrlEntry 2 }

        dte8LoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noloopback(1),
                    toDTEloopback(2),
                    localloopback(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE Loopback Type"
            ::= { dte8DiagCtrlEntry 3 }

        dte8LoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopbacknotactive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE Loopback Status"
            ::= { dte8DiagCtrlEntry 4 }


--
--  Command Control Table
--

        dte8CommandInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8CommandInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { octDte-card 5 }

        dte8CommandInfoEntry  OBJECT-TYPE
            SYNTAX  Dte8CommandInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { dte8ciSlotIndex }
            ::= { dte8CommandInfoTable 1 }

            Dte8CommandInfoEntry ::= SEQUENCE {
            dte8ciSlotIndex             LargeSlotIndex,
            dte8CardReset               INTEGER,
            dte8CardLoadDefault         INTEGER,
            dte8FWversion               DisplayString,
            dte8HWversion               DisplayString
        }

        dte8ciSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8CommandInfoEntry 1 }

        dte8CardReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset DTE Port"
            ::= { dte8CommandInfoEntry 2 }

        dte8CardLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    loadDefault(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default DTE Port"
            ::= { dte8CommandInfoEntry 3 }

        dte8FWversion  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE FW Version"
            ::= { dte8CommandInfoEntry 4 }

        dte8HWversion  OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE HW Version"
            ::= { dte8CommandInfoEntry 5 }


--
--  DTE Status Table
--

        dte8StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE status table."
            ::= { octDte-card 8 }

        dte8StatusEntry  OBJECT-TYPE
            SYNTAX  Dte8StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE status entry."
            INDEX { dte8stSlotIndex ,
        dte8stPortIndex }
            ::= { dte8StatusTable 1 }

            Dte8StatusEntry ::= SEQUENCE {
            dte8stSlotIndex             LargeSlotIndex,
            dte8stPortIndex             EightPortID,
            dte8RTSloss                 INTEGER,
            dte8RTS                     INTEGER,
            dte8CTS                     INTEGER,
            dte8DSR                     INTEGER,
            dte8DTR                     INTEGER,
            dte8RxBytesCounter          Counter,
            dte8TxBytesCounter          Counter,
            dte8ResetCounter            INTEGER,
            dte8LOLC                    INTEGER,
            dte8LOCH                    INTEGER,
            dte8CRE                     INTEGER
        }

        dte8stSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8StatusEntry 1 }

        dte8stPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8StatusEntry 2 }

        dte8RTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS status "
            ::= { dte8StatusEntry 3 }

        dte8RTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE RTS status "
            ::= { dte8StatusEntry 4 }

        dte8CTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE CTS status "
            ::= { dte8StatusEntry 5 }

        dte8DSR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE DSR status "
            ::= { dte8StatusEntry 6 }

        dte8DTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    deactive(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE DTR status "
            ::= { dte8StatusEntry 7 }

        dte8RxBytesCounter  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Rx bytes counter "
            ::= { dte8StatusEntry 8 }

        dte8TxBytesCounter  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Tx bytes counter "
            ::= { dte8StatusEntry 9 }

        dte8ResetCounter  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset DTE bytes counter"
            ::= { dte8StatusEntry 10 }

        dte8LOLC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Loss Of Clock status "
            ::= { dte8StatusEntry 11 }

        dte8LOCH  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Loss Of Channel status "
            ::= { dte8StatusEntry 12 }

        dte8CRE  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE Clock Recovery Error status "
            ::= { dte8StatusEntry 13 }

--
--  Mode Setup Table
--

        dte8ModeSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8ModeSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Card Mode Setup table."
            ::= { octDte-card 10 }

        dte8ModeSetupEntry  OBJECT-TYPE
            SYNTAX  Dte8ModeSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Card Mode Setup entry."
            INDEX { dte8ModeSlotIndex }
            ::= { dte8ModeSetupTable 1 }

            Dte8ModeSetupEntry ::= SEQUENCE {
            dte8ModeSlotIndex           LargeSlotIndex,
            dte8CardMode                INTEGER
        }

        dte8ModeSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8ModeSetupEntry 1 }

        dte8CardMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    oversampling(1),
                    terminalServer(2),
                    omnibus(3),
                    terminalServerAdvanced(5),
                    omnibusAdvanced(9),
                    oversamplingAdvanced(17),
                    throughclock(33)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Card Mode"
            ::= { dte8ModeSetupEntry 2 }


--
--  Omnibus Group Setup Table
--

        dte8OmnibusSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8OmnibusSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Group Setup table."
            ::= { octDte-card 11 }

        dte8OmnibusSetupEntry  OBJECT-TYPE
            SYNTAX  Dte8OmnibusSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Group Setup entry."
            INDEX { dte8OmnibusSlotIndex ,
        dte8OmnibusPortIndex }
            ::= { dte8OmnibusSetupTable 1 }

            Dte8OmnibusSetupEntry ::= SEQUENCE {
            dte8OmnibusSlotIndex        LargeSlotIndex,
            dte8OmnibusPortIndex        EightPortID,
            dte8OmnibusGroup            INTEGER
        }

        dte8OmnibusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8OmnibusSetupEntry 1 }

        dte8OmnibusPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8OmnibusSetupEntry 2 }

        dte8OmnibusGroup  OBJECT-TYPE
            SYNTAX  INTEGER {
                    group1(1),
                    group2(2),
                    group3(3),
                    group4(4),
                    group5(5),
                    group6(6),
                    group7(7),
                    group8(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Group"
            ::= { dte8OmnibusSetupEntry 3 }


--
--  Terminal Server DTE Control Table
--

        dte8TsDteTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsDteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Control Table"
            ::= { octDte-card 12 }

        dte8TsDteEntry  OBJECT-TYPE
            SYNTAX  Dte8TsDteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Control entry."
            INDEX { dte8TsDteSlotIndex ,
        dte8TsDtePortIndex }
            ::= { dte8TsDteTable 1 }

            Dte8TsDteEntry ::= SEQUENCE {
            dte8TsDteSlotIndex            LargeSlotIndex,
            dte8TsDtePortIndex            EightPortID,
            dte8TsDteInterface            INTEGER,
            dte8TsDteFrame                INTEGER,
            dte8TsDteBaudRate             INTEGER,
            dte8TsDteDataBit              INTEGER,
            dte8TsDteStopBit              INTEGER,
            dte8TsDteParityBit            INTEGER,
            dte8TsDteSwFlowControl        INTEGER,
            dte8TsDteFlowControlTime      INTEGER,
            dte8TsDteBufferSize           INTEGER,
            dte8TsDteBufferTimeout        INTEGER,
            dte8TsDteDuplex               INTEGER,
            dte8TsDteIdleDetect           INTEGER
        }

        dte8TsDteSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsDteEntry 1 }

        dte8TsDtePortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8TsDteEntry 2 }

        dte8TsDteInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs485(2),
                    rs422(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Interface Type"
            ::= { dte8TsDteEntry 3 }

        dte8TsDteFrame   OBJECT-TYPE
            SYNTAX  INTEGER {
                    slip(1),
                    rawdata(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Frame Type"
            ::= { dte8TsDteEntry 4 }

        dte8TsDteBaudRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate38400(1),
                    rate19200(2),
                    rate9600(3),
                    rate4800(4),
                    rate2400(5),
                    rate1200(6),
                    rate600(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE baud rate"
            ::= { dte8TsDteEntry 5 }

        dte8TsDteDataBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    data8bits(1),
                    data7bits(2),
                    data6bits(3),
                    data5bits(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Data bit"
            ::= { dte8TsDteEntry 6 }

        dte8TsDteStopBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop1bit(1),
                    stop2bits(2),
                    stop1dot5bits(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Stop bit"
            ::= { dte8TsDteEntry 7 }

        dte8TsDteParityBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    even(2),
                    odd(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Parity check"
            ::= { dte8TsDteEntry 8 }

        dte8TsDteSwFlowControl   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Software flow control"
            ::= { dte8TsDteEntry 9 }

        dte8TsDteFlowControlTime   OBJECT-TYPE
            SYNTAX  INTEGER (1..15)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE flow control time"
            ::= { dte8TsDteEntry 10 }

        dte8TsDteBufferSize   OBJECT-TYPE
            SYNTAX  INTEGER (1..2048)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Buffer Size"
            ::= { dte8TsDteEntry 11 }

        dte8TsDteBufferTimeout   OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Buffer Timeout"
            ::= { dte8TsDteEntry 12 }

        dte8TsDteDuplex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    full(1),
                    half(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Duplex"
            ::= { dte8TsDteEntry 13 }

        dte8TsDteIdleDetect   OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE Idle Detect"
            ::= { dte8TsDteEntry 14 }


--
--  Terminal Server DTE IP Control Table
--

        dte8TsDteIpTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsDteIpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Control Table"
            ::= { octDte-card 13 }

        dte8TsDteIpEntry  OBJECT-TYPE
            SYNTAX  Dte8TsDteIpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Control entry."
            INDEX { dte8TsDteIpSlotIndex ,
        dte8TsDteIpPortIndex }
            ::= { dte8TsDteIpTable 1 }

            Dte8TsDteIpEntry ::= SEQUENCE {
            dte8TsDteIpSlotIndex            LargeSlotIndex,
            dte8TsDteIpPortIndex            EightPortID,
            dte8TsDteIpRole                 INTEGER,
            dte8TsDteIpLocalIP              IpAddress,
            dte8TsDteIpSubnetMask           IpAddress,
            dte8TsDteIpDestinationIP1       IpAddress,
            dte8TsDteIpDestinationIP2       IpAddress,
            dte8TsDteIpDestinationIP3       IpAddress,
            dte8TsDteIpDestinationIP4       IpAddress,
            dte8TsDteIpDestinationIP5       IpAddress,
            dte8TsDteIpDestinationIP6       IpAddress,
            dte8TsDteIpDestinationIP7       IpAddress,
            dte8TsDteIpDestinationIP8       IpAddress
        }

        dte8TsDteIpSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsDteIpEntry 1 }

        dte8TsDteIpPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8TsDteIpEntry 2 }

        dte8TsDteIpRole   OBJECT-TYPE
            SYNTAX  INTEGER {
                    server(1),
                    client(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Role"
            ::= { dte8TsDteIpEntry 3 }

        dte8TsDteIpLocalIP   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Local IP"
            ::= { dte8TsDteIpEntry 4 }

        dte8TsDteIpSubnetMask   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP SubnetMask"
            ::= { dte8TsDteIpEntry 5 }

        dte8TsDteIpDestinationIP1   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 1"
            ::= { dte8TsDteIpEntry 6 }

        dte8TsDteIpDestinationIP2   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 2"
            ::= { dte8TsDteIpEntry 7 }

        dte8TsDteIpDestinationIP3   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 3"
            ::= { dte8TsDteIpEntry 8 }

        dte8TsDteIpDestinationIP4   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 4"
            ::= { dte8TsDteIpEntry 9 }

        dte8TsDteIpDestinationIP5   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 5"
            ::= { dte8TsDteIpEntry 10 }

        dte8TsDteIpDestinationIP6   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 6"
            ::= { dte8TsDteIpEntry 11 }

        dte8TsDteIpDestinationIP7   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 7"
            ::= { dte8TsDteIpEntry 12 }

        dte8TsDteIpDestinationIP8   OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server DTE IP Destination IP 8"
            ::= { dte8TsDteIpEntry 13 }


--
--  Terminal Server Router Wan Setup Table
--

        dte8TsWanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsWanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan Setup table."
            ::= { octDte-card 14 }

        dte8TsWanEntry  OBJECT-TYPE
            SYNTAX  Dte8TsWanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan Setup entry."
            INDEX { dte8TsWanSlotIndex ,
        dte8TsWanNI }
            ::= { dte8TsWanTable 1 }

            Dte8TsWanEntry ::= SEQUENCE {
            dte8TsWanSlotIndex      LargeSlotIndex,
            dte8TsWanNI             INTEGER,
            dte8TsWanIPAddress      IpAddress,
            dte8TsWanSubnetMask     IpAddress,
            dte8TsWanFrame          INTEGER,
            dte8TsWanRip1           INTEGER,
            dte8TsWanRip2           INTEGER
        }

        dte8TsWanSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsWanEntry 1 }

        dte8TsWanNI  OBJECT-TYPE
            SYNTAX  INTEGER {
                    wan-1(1),
                    wan-2(2),
                    wan-3(3),
                    wan-4(4),
                    wan-5(5),
                    wan-6(6),
                    wan-7(7),
                    wan-8(8),
                    wan-9(9),
                    wan-10(10),
                    wan-11(11),
                    wan-12(12),
                    wan-13(13),
                    wan-14(14),
                    wan-15(15),
                    wan-16(16),
                    wan-17(17),
                    wan-18(18),
                    wan-19(19),
                    wan-20(20),
                    wan-21(21),
                    wan-22(22),
                    wan-23(23),
                    wan-24(24),
                    wan-25(25),
                    wan-26(26),
                    wan-27(27),
                    wan-28(28),
                    wan-29(29),
                    wan-30(30),
                    wan-31(31),
                    wan-32(32),
                    wan-33(33),
                    wan-34(34),
                    wan-35(35),
                    wan-36(36),
                    wan-37(37),
                    wan-38(38),
                    wan-39(39),
                    wan-40(40),
                    wan-41(41),
                    wan-42(42),
                    wan-43(43),
                    wan-44(44),
                    wan-45(45),
                    wan-46(46),
                    wan-47(47),
                    wan-48(48),
                    wan-49(49),
                    wan-50(50),
                    wan-51(51),
                    wan-52(52),
                    wan-53(53),
                    wan-54(54),
                    wan-55(55),
                    wan-56(56),
                    wan-57(57),
                    wan-58(58),
                    wan-59(59),
                    wan-60(60),
                    wan-61(61),
                    wan-62(62),
                    wan-63(63),
                    wan-64(64)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan Index"
            ::= { dte8TsWanEntry 2 }

        dte8TsWanIPAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan IpAddress"
            ::= { dte8TsWanEntry 3 }

        dte8TsWanSubnetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan Subnet Mask"
            ::= { dte8TsWanEntry 4 }

        dte8TsWanFrame  OBJECT-TYPE
            SYNTAX  INTEGER {
                    hdlc(1),
                    ppp(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan Frame"
            ::= { dte8TsWanEntry 5 }

        dte8TsWanRip1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan RIP_I"
            ::= { dte8TsWanEntry 6 }

        dte8TsWanRip2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Router Wan RIP_II"
            ::= { dte8TsWanEntry 7 }


--
--  Terminal Server Static Router Display Table
--

        dte8TsStRouteDispTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsStRouteDispEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display table."
            ::= { octDte-card 15 }

        dte8TsStRouteDispEntry  OBJECT-TYPE
            SYNTAX  Dte8TsStRouteDispEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display entry."
            INDEX { dte8TsStRouteDispSlotIndex ,
        dte8TsStRouteDispIndex }
            ::= { dte8TsStRouteDispTable 1 }

            Dte8TsStRouteDispEntry ::= SEQUENCE {
            dte8TsStRouteDispSlotIndex        LargeSlotIndex,
            dte8TsStRouteDispIndex            INTEGER,
            dte8TsStRouteDispNetAddress       IpAddress,
            dte8TsStRouteDispNetMask          IpAddress,
            dte8TsStRouteDispGatewayIP        IpAddress,
            dte8TsStRouteDispNIAddress        IpAddress,
            dte8TsStRouteDispMetric           INTEGER
        }

        dte8TsStRouteDispSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsStRouteDispEntry 1 }

        dte8TsStRouteDispIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..64)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display Index(1-64)"
            ::= { dte8TsStRouteDispEntry 2 }

        dte8TsStRouteDispNetAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display Net Address"
            ::= { dte8TsStRouteDispEntry 3 }

        dte8TsStRouteDispNetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display Net Mask"
            ::= { dte8TsStRouteDispEntry 4 }

        dte8TsStRouteDispGatewayIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display Gateway Address"
            ::= { dte8TsStRouteDispEntry 5 }

        dte8TsStRouteDispNIAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display NI Address"
            ::= { dte8TsStRouteDispEntry 6 }

        dte8TsStRouteDispMetric  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Display Metric"
            ::= { dte8TsStRouteDispEntry 7 }


--
--  Terminal Server Static Router Add Delete Table
--

        dte8TsStRouteAddDelTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsStRouteAddDelEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete table."
            ::= { octDte-card 16 }

        dte8TsStRouteAddDelEntry  OBJECT-TYPE
            SYNTAX  Dte8TsStRouteAddDelEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete entry."
            INDEX { dte8TsStRouteAddDelSlotIndex }
            ::= { dte8TsStRouteAddDelTable 1 }

            Dte8TsStRouteAddDelEntry ::= SEQUENCE {
            dte8TsStRouteAddDelSlotIndex       LargeSlotIndex,
            dte8TsStRouteAddDelNetAddress      IpAddress,
            dte8TsStRouteAddDelNetMask         IpAddress,
            dte8TsStRouteAddDelGatewayIP       IpAddress,
            dte8TsStRouteAddDelNIAddress       IpAddress,
            dte8TsStRouteAddDelMetric          INTEGER,
            dte8TsStRouteAddDelCmd             INTEGER
        }

        dte8TsStRouteAddDelSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsStRouteAddDelEntry 1 }

        dte8TsStRouteAddDelNetAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete Net Address"
            ::= { dte8TsStRouteAddDelEntry 2 }

        dte8TsStRouteAddDelNetMask  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete Net Mask"
            ::= { dte8TsStRouteAddDelEntry 3 }

        dte8TsStRouteAddDelGatewayIP  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete Gateway Address"
            ::= { dte8TsStRouteAddDelEntry 4 }

        dte8TsStRouteAddDelNIAddress  OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete NI Address"
            ::= { dte8TsStRouteAddDelEntry 5 }

        dte8TsStRouteAddDelMetric  OBJECT-TYPE
            SYNTAX  INTEGER (1..16)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete Metric"
            ::= { dte8TsStRouteAddDelEntry 6 }

        dte8TsStRouteAddDelCmd  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noAction(1),
                    add(2),
                    delete(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Static Router Add Delete Command"
            ::= { dte8TsStRouteAddDelEntry 7 }


--
--  Terminal Server Map Setup Table
--

        dte8TsMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Map Setup table."
            ::= { octDte-card 17 }

        dte8TsMapEntry  OBJECT-TYPE
            SYNTAX  Dte8TsMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Map Setup entry."
            INDEX { dte8TsMapSlotIndex ,
        dte8TsMapVirtualPort ,
        dte8TsMapTSIndex }
            ::= { dte8TsMapTable 1 }

            Dte8TsMapEntry ::= SEQUENCE {
            dte8TsMapSlotIndex        LargeSlotIndex,
            dte8TsMapVirtualPort      INTEGER,
            dte8TsMapTSIndex          TimeslotID,
            dte8TsMapOption           INTEGER
        }

        dte8TsMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsMapEntry 1 }

        dte8TsMapVirtualPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    virtualPort1(1),
                    virtualPort2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Map Virtual Port"
            ::= { dte8TsMapEntry 2 }

        dte8TsMapTSIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Map Time Slot"
            ::= { dte8TsMapEntry 3 }

        dte8TsMapOption  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    wan1(2),
                    wan2(3),
                    wan3(4),
                    wan4(5),
                    wan5(6),
                    wan6(7),
                    wan7(8),
                    wan8(9),
                    wan9(10),
                    wan10(11),
                    wan11(12),
                    wan12(13),
                    wan13(14),
                    wan14(15),
                    wan15(16),
                    wan16(17),
                    wan17(18),
                    wan18(19),
                    wan19(20),
                    wan20(21),
                    wan21(22),
                    wan22(23),
                    wan23(24),
                    wan24(25),
                    wan25(26),
                    wan26(27),
                    wan27(28),
                    wan28(29),
                    wan29(30),
                    wan30(31),
                    wan31(32),
                    wan32(33),
                    wan33(34),
                    wan34(35),
                    wan35(36),
                    wan36(37),
                    wan37(38),
                    wan38(39),
                    wan39(40),
                    wan40(41),
                    wan41(42),
                    wan42(43),
                    wan43(44),
                    wan44(45),
                    wan45(46),
                    wan46(47),
                    wan47(48),
                    wan48(49),
                    wan49(50),
                    wan50(51),
                    wan51(52),
                    wan52(53),
                    wan53(54),
                    wan54(55),
                    wan55(56),
                    wan56(57),
                    wan57(58),
                    wan58(59),
                    wan59(60),
                    wan60(61),
                    wan61(62),
                    wan62(63),
                    wan63(64),
                    wan64(65)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Terminal Server Map Option"
            ::= { dte8TsMapEntry 4 }


--
--  Omnibus DTE Control Table
--

        dte8OmDteTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8OmDteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Setup Table"
            ::= { octDte-card 21 }

        dte8OmDteEntry  OBJECT-TYPE
            SYNTAX  Dte8OmDteEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Setup entry."
            INDEX { dte8OmDteSlotIndex ,
        dte8OmDtePortIndex }
            ::= { dte8OmDteTable 1 }

            Dte8OmDteEntry ::= SEQUENCE {
            dte8OmDteSlotIndex         LargeSlotIndex,
            dte8OmDtePortIndex         EightPortID,
            dte8OmDteInterface         INTEGER,
            dte8OmDteDataID            INTEGER,
            dte8OmDteBaudRate          INTEGER,
            dte8OmDteDataBit           INTEGER,
            dte8OmDteStopBit           INTEGER,
            dte8OmDteParityBit         INTEGER,
            dte8OmDteRole              INTEGER,
            dte8OmDteHwFlowControl     INTEGER,
            dte8OmDteONTimer           INTEGER,
            dte8OmDteOFFTimer          INTEGER,
            dte8OmDteBufferSize        INTEGER,
            dte8OmDteBufferTimeout     INTEGER,
            dte8OmDteDuplex            INTEGER,
            dte8OmDteIdleDetect        INTEGER
        }

        dte8OmDteSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8OmDteEntry 1 }

        dte8OmDtePortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8OmDteEntry 2 }

        dte8OmDteInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs485(2),
                    rs422(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Interface Type"
            ::= { dte8OmDteEntry 3 }

        dte8OmDteDataID   OBJECT-TYPE
            SYNTAX  INTEGER (1..8)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Data ID"
            ::= { dte8OmDteEntry 4 }

        dte8OmDteBaudRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate38400(1),
                    rate19200(2),
                    rate9600(3),
                    rate4800(4),
                    rate2400(5),
                    rate1200(6),
                    rate600(7)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE baud rate"
            ::= { dte8OmDteEntry 5 }

        dte8OmDteDataBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    data8bits(1),
                    data7bits(2),
                    data6bits(3),
                    data5bits(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Data Bit"
            ::= { dte8OmDteEntry 6 }

        dte8OmDteStopBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop1bit(1),
                    stop2bits(2),
                    stop1dot5bits(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Stop Bit"
            ::= { dte8OmDteEntry 7 }

        dte8OmDteParityBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    even(2),
                    odd(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Parity check"
            ::= { dte8OmDteEntry 8 }

        dte8OmDteRole   OBJECT-TYPE
            SYNTAX  INTEGER {
                    slave(1),
                    master(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Role"
            ::= { dte8OmDteEntry 9 }

        dte8OmDteHwFlowControl   OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Hardware flow control"
            ::= { dte8OmDteEntry 10 }

        dte8OmDteONTimer   OBJECT-TYPE
            SYNTAX  INTEGER (0..60)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE ON Timer"
            ::= { dte8OmDteEntry 11 }

        dte8OmDteOFFTimer   OBJECT-TYPE
            SYNTAX  INTEGER (0..60)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE OFF Timer"
            ::= { dte8OmDteEntry 12 }

        dte8OmDteBufferSize   OBJECT-TYPE
            SYNTAX  INTEGER (1..2048)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Buffer Size"
            ::= { dte8OmDteEntry 13 }

        dte8OmDteBufferTimeout   OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Buffer Timeout"
            ::= { dte8OmDteEntry 14 }

        dte8OmDteDuplex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    full(1),
                    half(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Duplex"
            ::= { dte8OmDteEntry 15 }

        dte8OmDteIdleDetect   OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus DTE Idle Detect"
            ::= { dte8OmDteEntry 16 }
--
--  Omnibus Map Table
--

        dte8OmMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8OmMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Map table."
            ::= { octDte-card 22 }

        dte8OmMapEntry  OBJECT-TYPE
            SYNTAX  Dte8OmMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Map entry."
            INDEX { dte8OmMapSlotIndex ,
        dte8OmMapVirtualPort ,
        dte8OmMapTSIndex }
            ::= { dte8OmMapTable 1 }

            Dte8OmMapEntry ::= SEQUENCE {
            dte8OmMapSlotIndex         LargeSlotIndex,
            dte8OmMapVirtualPort       INTEGER,
            dte8OmMapTSIndex           TimeslotID,
            dte8OmMapOption            INTEGER
        }

        dte8OmMapSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8OmMapEntry 1 }

        dte8OmMapVirtualPort  OBJECT-TYPE
            SYNTAX  INTEGER {
                    virtualPort1(1),
                    virtualPort2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Map Virtual Port"
            ::= { dte8OmMapEntry 2 }

        dte8OmMapTSIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Map Time Slot"
            ::= { dte8OmMapEntry 3 }

        dte8OmMapOption  OBJECT-TYPE
            SYNTAX  INTEGER {
                    idle(1),
                    bg1west(2),
                    bg2west(3),
                    bg3west(4),
                    bg4west(5),
                    bg5west(6),
                    bg6west(7),
                    bg7west(8),
                    bg8west(9),
                    bg1east(10),
                    bg2east(11),
                    bg3east(12),
                    bg4east(13),
                    bg5east(14),
                    bg6east(15),
                    bg7east(16),
                    bg8east(17)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Omnibus Map Option"
            ::= { dte8OmMapEntry 4 }


        octDteTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 8UDTE"
            ::= { octDte-card 100 }


--
--      Oversampling advanced DTE Control Table
--

        dte8OvaConfigCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8OvaConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced Configuration Control Table"
            ::= { octDte-card 30 }

        dte8OvaConfigCtrlEntry  OBJECT-TYPE
            SYNTAX  Dte8OvaConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced configuration control entry"
            INDEX { dte8OvaccSlotIndex , dte8OvaccPortIndex }
            ::= { dte8OvaConfigCtrlTable 1 }

            Dte8OvaConfigCtrlEntry ::= SEQUENCE {
            dte8OvaccSlotIndex             LargeSlotIndex,
            dte8OvaccPortIndex             EightPortID,
            dte8OvaInterface               INTEGER,
            dte8OvaDS0Rate                 INTEGER,
            dte8OvaOversampling            INTEGER,
            dte8OvaOversamplingRate        INTEGER,
            dte8OvaSupportDataRate         DisplayString,
            dte8OvaDteBaudRate             INTEGER,
            dte8OvaDteDataBit              INTEGER,
            dte8OvaDteStopBit              INTEGER,
            dte8OvaDteParityBit            INTEGER,
            dte8OvaDteDuplex               INTEGER,
            dte8OvaDteIdleDetect           INTEGER,
            dte8OvaRTSCTS                  INTEGER,
            dte8OvaDTRDSR                  INTEGER
        }

        dte8OvaccSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8OvaConfigCtrlEntry 1 }

        dte8OvaccPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8OvaConfigCtrlEntry 2 }

        dte8OvaInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs485(2),
                    rs422(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced Interface Type"
            ::= { dte8OvaConfigCtrlEntry 3 }

        dte8OvaDS0Rate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate64k(1),
                    rate56k(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DS0 Sampling Rate"
            ::= { dte8OvaConfigCtrlEntry 4 }

        dte8OvaOversampling   OBJECT-TYPE
            SYNTAX  INTEGER (1..6)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced oversampling numver"
            ::= { dte8OvaConfigCtrlEntry 5 }

        dte8OvaOversamplingRate   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced Oversampling Rate (Kbps)"
            ::= { dte8OvaConfigCtrlEntry 6 }

        dte8OvaSupportDataRate   OBJECT-TYPE
            SYNTAX  DisplayString
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced Supported Data Rate"
            ::= { dte8OvaConfigCtrlEntry 7 }

        dte8OvaDteBaudRate   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rate110(1),
                    rate150(2),
                    rate200(3),
                    rate300(4),
                    rate600(5),
                    rate1200(6),
                    rate2400(7),
                    rate4800(8),
                    rate9600(9),
                    rate19200(10),
                    rate28800(11),
                    rate38400(12),
                    rate57600(13),
                    rate115200(14),
                    rate128000(15)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTE baud rate"
            ::= { dte8OvaConfigCtrlEntry 8 }

        dte8OvaDteDataBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    data8bits(1),
                    data7bits(2),
                    data6bits(3),
                    data5bits(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTE Data bit"
            ::= { dte8OvaConfigCtrlEntry 9 }

        dte8OvaDteStopBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop1bit(1),
                    stop2bits(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTEOversampling Advanced  DTE Stop bit"
            ::= { dte8OvaConfigCtrlEntry 10 }

        dte8OvaDteParityBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    none(1),
                    even(2),
                    odd(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTE Parity check"
            ::= { dte8OvaConfigCtrlEntry 11 }

        dte8OvaDteDuplex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    full(1),
                    half(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTE Duplex"
            ::= { dte8OvaConfigCtrlEntry 12 }

        dte8OvaDteIdleDetect   OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTE Idle Detect"
            ::= { dte8OvaConfigCtrlEntry 13 }


        dte8OvaRTSCTS   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced RTS/CTS control"
            ::= { dte8OvaConfigCtrlEntry 14 }

        dte8OvaDTRDSR   OBJECT-TYPE
            SYNTAX  INTEGER {
                    active(1),
                    permanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Oversampling Advanced DTR/DSR control"
            ::= { dte8OvaConfigCtrlEntry 15 }

--
--      Through Clock DTE Control Table
--

        dte8ThrConfigCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8ThrConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock Configuration Control Table"
            ::= { octDte-card 50 }

        dte8ThrConfigCtrlEntry  OBJECT-TYPE
            SYNTAX  Dte8ThrConfigCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock configuration control entry"
            INDEX { dte8ThrccSlotIndex , dte8ThrccPortIndex }
            ::= { dte8ThrConfigCtrlTable 1 }

            Dte8ThrConfigCtrlEntry ::= SEQUENCE {
            dte8ThrccSlotIndex             LargeSlotIndex,
            dte8ThrccPortIndex             EightPortID,
            dte8ThrInterface               INTEGER,
            dte8ThrBaudRate                INTEGER,
            dte8ThrClkInputInverse         INTEGER,
            dte8ThrClkOutputInverse        INTEGER,
            dte8ThrPCMDataInverse          INTEGER,
            dte8ThrSyncMode                INTEGER
        }

        dte8ThrccSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8ThrConfigCtrlEntry 1 }

        dte8ThrccPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8ThrConfigCtrlEntry 2 }

        dte8ThrInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1)
--                    rs485(2),
--                    rs422(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock Interface Type"
            ::= { dte8ThrConfigCtrlEntry 3 }

        dte8ThrBaudRate   OBJECT-TYPE
            SYNTAX  INTEGER (1..38400)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock baud rate"
            ::= { dte8ThrConfigCtrlEntry 4 }

        dte8ThrClkInputInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock clock input inverse"
            ::= { dte8ThrConfigCtrlEntry 5 }

        dte8ThrClkOutputInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock clock output inverse"
            ::= { dte8ThrConfigCtrlEntry 6 }

        dte8ThrPCMDataInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock PCM data inverse"
            ::= { dte8ThrConfigCtrlEntry 7 }

        dte8ThrSyncMode   OBJECT-TYPE
            SYNTAX  INTEGER {
                    through(1),
                    sync(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "8UDTE Through Clock sync mode"
            ::= { dte8ThrConfigCtrlEntry 8 }

--
--  DTE8 TS Alarm Control Table
--

        dte8TsAlarmCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte8TsAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE TS alarm control table."
            ::= { octDte-card 51 }

        dte8TsAlarmCtrlEntry  OBJECT-TYPE
            SYNTAX  Dte8TsAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "8UDTE TS alarm control entry."
            INDEX { dte8TsACSlotIndex ,
        dte8TsACPortIndex }
            ::= { dte8TsAlarmCtrlTable 1 }

            Dte8TsAlarmCtrlEntry ::= SEQUENCE {
            dte8TsACSlotIndex             LargeSlotIndex,
            dte8TsACPortIndex             EightPortID,
            dte8TsACConnEnable            AlarmSeverity,
            dte8TsACConnCount             INTEGER,
            dte8TsACDisConnEnable         AlarmSeverity,
            dte8TsACDisConnCount          INTEGER
        }

        dte8TsACSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { dte8TsAlarmCtrlEntry 1 }

        dte8TsACPortIndex  OBJECT-TYPE
            SYNTAX  EightPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1~8"
            ::= { dte8TsAlarmCtrlEntry 2 }

        dte8TsACConnEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm TERM-CONN"
            ::= { dte8TsAlarmCtrlEntry 3 }

        dte8TsACConnCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count - TERM-CONN "
            ::= { dte8TsAlarmCtrlEntry 4 }

        dte8TsACDisConnEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE-Alarm TERM-DISCONN"
            ::= { dte8TsAlarmCtrlEntry 5 }

        dte8TsACDisConnCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count - TERM-DISCONN "
            ::= { dte8TsAlarmCtrlEntry 6 }

--======================================================================--

--============================================================================--
--============================================================================--
--  ECA card MIB
--============================================================================--
--============================================================================--

            EcaPortID ::= INTEGER {
        ep-1(1),
        ep-2(2),
        cp-1(3),
        cp-2(4)
    }
--
--  u/a law Format Table
--
        ecaModeConfigTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   EcaModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ECA law format config table."
            ::= { eca-card  1 }

        ecaModeConfigEntry     OBJECT-TYPE
            SYNTAX  EcaModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Format Mode Table."
            INDEX { ecaModeConfigSlotIndex , ecaModeConfigPortIndex }
            ::= { ecaModeConfigTable 1 }

            EcaModeConfigEntry ::= SEQUENCE {
            ecaModeConfigSlotIndex       SmallSlotIndex,
            ecaModeConfigPortIndex       EcaPortID,
            ecaModeConfigFormat          INTEGER
        }

        ecaModeConfigSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { ecaModeConfigEntry 1 }

        ecaModeConfigPortIndex  OBJECT-TYPE
            SYNTAX  EcaPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Port index, total 2 port."
            ::= { ecaModeConfigEntry 2 }

        ecaModeConfigFormat  OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-Law(1),
                    a-Law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Format Mode."
            ::= { ecaModeConfigEntry 3 }

--
--  Echo Cancellation Table
--
        ecaCancellationCfgTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   EcaCancellationCfgEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Echo Cancellation Config table."
            ::= { eca-card  2 }

        ecaCancellationCfgEntry     OBJECT-TYPE
            SYNTAX  EcaCancellationCfgEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of Echo Cancellation table."
            INDEX { ecaCancellationConfigSlotIndex ,
        ecaCancellationConfigPortIndex ,
        ecaCancellationConfigTsIndex }
            ::= { ecaCancellationCfgTable 1 }

            EcaCancellationCfgEntry ::= SEQUENCE {
            ecaCancellationConfigSlotIndex       SmallSlotIndex,
            ecaCancellationConfigPortIndex       EcaPortID,
            ecaCancellationConfigTsIndex         TimeslotID,
            ecaCancellationConfigMode            INTEGER

    }
        ecaCancellationConfigSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { ecaCancellationCfgEntry 1 }

        ecaCancellationConfigPortIndex  OBJECT-TYPE
            SYNTAX  EcaPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Port index, total 2 port."
            ::= { ecaCancellationCfgEntry 2 }

        ecaCancellationConfigTsIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { ecaCancellationCfgEntry 3 }

        ecaCancellationConfigMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bypass(1),
                    s64msUni-D(2),
                    s64msBi-D(3),
                    s128ms(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Echo Cancellation mode."
            ::= { ecaCancellationCfgEntry 4 }

--
--  ECA status table
--

        ecaStatusTable              OBJECT-TYPE
            SYNTAX  SEQUENCE OF   EcaStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Echo canceller card status table."
            ::= { eca-card 3 }

        ecaStatusEntry     OBJECT-TYPE
            SYNTAX  EcaStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of Echo canceller card status."
            INDEX { ecaStatusSlotIndex , ecaStatusPortIndex , ecaStatusTsIndex }
            ::= { ecaStatusTable 1 }

            EcaStatusEntry ::= SEQUENCE {
            ecaStatusSlotIndex                  SmallSlotIndex,
            ecaStatusPortIndex                  EcaPortID,
            ecaStatusTsIndex                    TimeslotID,
            ecaStatustoneDetectorStatus         INTEGER,
            ecaStatusnarrowBandStatus           INTEGER
        }
        ecaStatusSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { ecaStatusEntry 1 }

        ecaStatusPortIndex  OBJECT-TYPE
            SYNTAX  EcaPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Port index, total 2 port."
            ::= { ecaStatusEntry 2 }

        ecaStatusTsIndex  OBJECT-TYPE
            SYNTAX  TimeslotID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Time slot index."
            ::= { ecaStatusEntry 3 }

        ecaStatustoneDetectorStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Tone Detector status."
            ::= { ecaStatusEntry 4 }

        ecaStatusnarrowBandStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Narrow Band Signal Detector status."
            ::= { ecaStatusEntry 5 }


--
-- ECA Card Control Table
--

        ecaCardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EcaCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The ECA Card control table."
            ::= { eca-card 4 }

        ecaCardControlEntry  OBJECT-TYPE
            SYNTAX  EcaCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the ECA Card control table."
            INDEX { ecaCardIndex }
            ::= { ecaCardControlTable 1 }

            EcaCardControlEntry ::= SEQUENCE {
            ecaCardIndex                SmallSlotIndex,
            ecaReset                    INTEGER,
            ecaLoadDefault              INTEGER
        }

        ecaCardIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { ecaCardControlEntry 1 }

        ecaReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset eca card"
            ::= { ecaCardControlEntry 2 }

        ecaLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { ecaCardControlEntry 3 }

--
--  ECA System Information Table
--

        ecaSystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF EcaSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The ECA system information table."
            ::= { eca-card 5}

        ecaSystemInfoEntry  OBJECT-TYPE
            SYNTAX  EcaSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the ECA system information table."
            INDEX { ecaSystemInfoSlotIndex }
            ::= { ecaSystemInfoTable 1 }

            EcaSystemInfoEntry ::= SEQUENCE {
            ecaSystemInfoSlotIndex              SmallSlotIndex,
            ecaSystemInfoPROMVersion            DisplayString,
            ecaSystemInfoHardwareVersion        DisplayString,
            ecaSystemInfoFpgaVersion            DisplayString,
            ecaSystemInfoBank1Version           DisplayString,
            ecaSystemInfoBank2Version           DisplayString,
            ecaSystemInfoActiveBank             INTEGER
        }

        ecaSystemInfoSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { ecaSystemInfoEntry 1 }

        ecaSystemInfoPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " eca PROM Version"
            ::= { ecaSystemInfoEntry 2 }

        ecaSystemInfoHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " eca Hardware Version"
            ::= { ecaSystemInfoEntry 3 }

        ecaSystemInfoFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { ecaSystemInfoEntry 4 }

        ecaSystemInfoBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { ecaSystemInfoEntry 5 }

        ecaSystemInfoBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { ecaSystemInfoEntry 6}

        ecaSystemInfoActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { ecaSystemInfoEntry 7 }


        ecaTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of ECA"
            ::= { eca-card 100 }


--======================================================================--
--======================================================================--
--  6rs232a-card MIB
--======================================================================--
--======================================================================--

--
--  6RS232A Configuration
--

        rs232aConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Rs232a Interface Configuration table."
            ::= { rs232a-card 1 }

        rs232aConfigEntry  OBJECT-TYPE
            SYNTAX  Rs232aConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Rs232a Configuration table."
            INDEX { rsCfgSlotIndex , rsCfgPortIndex }
            ::= { rs232aConfigTable 1 }

            Rs232aConfigEntry ::= SEQUENCE {
            rsCfgSlotIndex                LargeSlotIndex,
            rsCfgPortIndex                SixPortID,
            rsCfgMux                      INTEGER,
            rsCfgSyncMode                 INTEGER,
            rsCfgRate                     INTEGER,
            rsCfgBitPosition              INTEGER,
            rsCfgClockPolarity            INTEGER,
            rsCfgDataPolarity             INTEGER,
            rsCfgRTS                      INTEGER,
            rsCfgTTM                      INTEGER,
            rsCfgInterface                INTEGER,
            rsCfgBitPosition0Used         INTEGER,
            rsCfgBitPosition1Used         INTEGER,
            rsCfgBitPosition2Used         INTEGER,
            rsCfgBitPosition3Used         INTEGER,
            rsCfgBitPosition4Used         INTEGER,
            rsCfgBitPosition5Used         INTEGER,
            rsCfgBitPosition6Used         INTEGER,
            rsCfgBitPosition7Used         INTEGER,
            rsCfgWarrning                 DisplayString
        }

        rsCfgSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aConfigEntry 1 }

        rsCfgPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { rs232aConfigEntry 2 }

        rsCfgMux  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonMux(1),
                    mux(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a MUX mode"
            ::= { rs232aConfigEntry 3 }


        rsCfgSyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    async8(1),
                    async9(2),
                    async10(3),
                    async11(4),
                    async12(5),
                    sync(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Sync mode"
            ::= { rs232aConfigEntry 4 }

        rsCfgRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0-6K(1),
                    r1-2K(2),
                    r2-4K(3),
                    r4-8K(4),
                    r9-6K(5),
                    r19-2K(6),
                    r38-4K(7),
                    r48K(8),
                    r64K(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Base Rate"
            ::= { rs232aConfigEntry 5 }

        rsCfgBitPosition  OBJECT-TYPE
            SYNTAX  INTEGER {
                    position-0(1),
                    position-1(2),
                    position-2(3),
                    position-3(4),
                    position-4(5),
                    position-5(6),
                    position-6(7),
                    position-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bit position"
            ::= { rs232aConfigEntry 6 }

        rsCfgClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Clock Polarity"
            ::= { rs232aConfigEntry 7 }

        rsCfgDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Data Polarity"
            ::= { rs232aConfigEntry 8 }

        rsCfgRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a RTS Mode"
            ::= {  rs232aConfigEntry 9 }

        rsCfgTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttmOff(1),
                    ttmOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a TTM Mode"
            ::= { rs232aConfigEntry 10 }

        rsCfgInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    db44(1),
                    rj45(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Interface Type"
            ::= { rs232aConfigEntry 11 }

        rsCfgBitPosition0Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 0 Stream Position Used"
            ::= { rs232aConfigEntry 12 }

        rsCfgBitPosition1Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 1 Stream Position Used"
            ::= { rs232aConfigEntry 13 }

        rsCfgBitPosition2Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 2 Stream Position Used"
            ::= { rs232aConfigEntry 14 }

        rsCfgBitPosition3Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 3 Stream Position Used"
            ::= { rs232aConfigEntry 15 }

        rsCfgBitPosition4Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 4 Stream Position Used"
            ::= { rs232aConfigEntry 16 }

        rsCfgBitPosition5Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 5 Stream Position Used"
            ::= { rs232aConfigEntry 17 }

        rsCfgBitPosition6Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 6 Stream Position Used"
            ::= { rs232aConfigEntry 18 }

        rsCfgBitPosition7Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Bits 7 Stream Position Used"
            ::= { rs232aConfigEntry 19 }

        rsCfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a map setup warning"
            ::= { rs232aConfigEntry 20 }


--
--  Rs232a Status
--

        rs232aStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Rs232a Status table."
            ::= { rs232a-card 2 }

        rs232aStatusEntry  OBJECT-TYPE
            SYNTAX  Rs232aStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Rs232a Status table."
            INDEX { rs232aStatusSlotIndex , rs232aStatusPortIndex }
            ::= { rs232aStatusTable 1 }

            Rs232aStatusEntry ::= SEQUENCE {
            rs232aStatusSlotIndex         LargeSlotIndex,
            rs232aStatusPortIndex         SixPortID,
            rs232aStatusS1                INTEGER,
            rs232aStatusS3                INTEGER,
            rs232aStatusS4                INTEGER,
            rs232aStatusS6                INTEGER,
            rs232aStatusS8                INTEGER,
            rs232aStatusS9                INTEGER,
            rs232aStatusE4                INTEGER,
            rs232aStatusE5                INTEGER,
            rs232aStatusE6                INTEGER,
            rs232aStatusX                 INTEGER,
            rs232aStatusDteCTS            INTEGER,
            rs232aStatusDteDCD            INTEGER,
            rs232aStatusRTSloss           INTEGER,
            rs232aStatusEXTCLKloss        INTEGER,
            rs232aStatusDSRstatus         INTEGER,
            rs232aStatusCTSstatus         INTEGER,
            rs232aStatusDCDstatus         INTEGER,
            rs232aStatusDTRstatus         INTEGER,
            rs232aStatusRTSstatus         INTEGER,
            rs232aStatusRemoteAlarm       INTEGER,
            rs232aStatusRemoteS1          INTEGER,
            rs232aStatusRemoteS3          INTEGER,
            rs232aStatusRemoteS4          INTEGER,
            rs232aStatusRemoteS6          INTEGER,
            rs232aStatusRemoteS8          INTEGER,
            rs232aStatusRemoteS9          INTEGER,
            rs232aStatusRemoteE4          INTEGER,
            rs232aStatusRemoteE5          INTEGER,
            rs232aStatusRemoteE6          INTEGER,
            rs232aStatusRemoteX           INTEGER
        }

        rs232aStatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aStatusEntry 1 }

        rs232aStatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { rs232aStatusEntry 2 }

        rs232aStatusS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S1"
            ::= { rs232aStatusEntry 3 }

        rs232aStatusS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S3"
            ::= { rs232aStatusEntry 4 }

        rs232aStatusS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S4"
            ::= { rs232aStatusEntry 5 }

        rs232aStatusS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S6"
            ::= { rs232aStatusEntry 6 }

        rs232aStatusS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S8"
            ::= { rs232aStatusEntry 7 }

        rs232aStatusS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit S9"
            ::= { rs232aStatusEntry 8 }

        rs232aStatusE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit E4"
            ::= { rs232aStatusEntry 9 }

        rs232aStatusE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit E5"
            ::= { rs232aStatusEntry 10 }

        rs232aStatusE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit E6"
            ::= { rs232aStatusEntry 11 }

        rs232aStatusX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rtswithFrameSYNC(12),
                    frameSYNC(13),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit X"
            ::= { rs232aStatusEntry 12 }

        rs232aStatusDteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit DTE CTS"
            ::= { rs232aStatusEntry 13 }

        rs232aStatusDteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Status bit DTE DCD"
            ::= { rs232aStatusEntry 14 }

        rs232aStatusRTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a RTS loss"
            ::= { rs232aStatusEntry 15 }

        rs232aStatusEXTCLKloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a EXT-CLK loss"
            ::= { rs232aStatusEntry 16 }

        rs232aStatusDSRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a DSR"
            ::= { rs232aStatusEntry 17 }

        rs232aStatusCTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a CTS"
            ::= { rs232aStatusEntry 18 }

        rs232aStatusDCDstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a DCD"
            ::= { rs232aStatusEntry 19 }

        rs232aStatusDTRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a DTR"
            ::= { rs232aStatusEntry 20 }

        rs232aStatusRTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a RTS"
            ::= { rs232aStatusEntry 21 }

        rs232aStatusRemoteAlarm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a RTS"
            ::= { rs232aStatusEntry 22 }

        rs232aStatusRemoteS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S1"
            ::= { rs232aStatusEntry 23 }

        rs232aStatusRemoteS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S3"
            ::= { rs232aStatusEntry 24 }

        rs232aStatusRemoteS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S4"
            ::= { rs232aStatusEntry 25 }

        rs232aStatusRemoteS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S6"
            ::= { rs232aStatusEntry 26 }

        rs232aStatusRemoteS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S8"
            ::= { rs232aStatusEntry 27 }

        rs232aStatusRemoteS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit S9"
            ::= { rs232aStatusEntry 28 }

        rs232aStatusRemoteE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit E4"
            ::= { rs232aStatusEntry 29 }

        rs232aStatusRemoteE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit E5"
            ::= { rs232aStatusEntry 30 }

        rs232aStatusRemoteE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit E6"
            ::= { rs232aStatusEntry 31 }

        rs232aStatusRemoteX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Rs232a remote status bit X"
            ::= { rs232aStatusEntry 32 }

--
--  Alarm Control Table
--

        rs232aAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The rs232a alarm control table."
            ::= { rs232a-card 3 }

        rs232aAlarmControlEntry  OBJECT-TYPE
            SYNTAX  Rs232aAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the rs232a alarm control table."
            INDEX { rs232aAlarmSlotIndex , rs232aAlarmPortIndex }
            ::= { rs232aAlarmControlTable 1 }

            Rs232aAlarmControlEntry ::= SEQUENCE {
            rs232aAlarmSlotIndex           LargeSlotIndex,
            rs232aAlarmPortIndex           SixPortID,
            rs232aAlarmSetup               AlarmSeverity
        }

        rs232aAlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aAlarmControlEntry 1 }

        rs232aAlarmPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { rs232aAlarmControlEntry 2 }

        rs232aAlarmSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { rs232aAlarmControlEntry 3 }


--
--  Alarm History Table
--

        rs232aAlmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aAlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: rs232aAlmHistoryUnitIndex "
            ::= { rs232a-card 4 }

        rs232aAlmHistoryEntry  OBJECT-TYPE
            SYNTAX  Rs232aAlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { rs232aAlmHisSlotIndex , rs232aAlmHisPortIndex }
            ::= { rs232aAlmHistoryTable 1 }

            Rs232aAlmHistoryEntry ::= SEQUENCE {
            rs232aAlmHisSlotIndex      LargeSlotIndex,
            rs232aAlmHisPortIndex      SixPortID,
            rs232aAlmHistoryState          INTEGER,
            rs232aAlmHistoryCount          Counter,
            rs232aAlmHistoryEnable         AlarmSeverity
        }

        rs232aAlmHisSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aAlmHistoryEntry 1 }

        rs232aAlmHisPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { rs232aAlmHistoryEntry 2 }

        rs232aAlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { rs232aAlmHistoryEntry 3 }

        rs232aAlmHistoryCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { rs232aAlmHistoryEntry 4 }

        rs232aAlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { rs232aAlmHistoryEntry 5 }


--
-- Diagnostic Control Table
--

        rs232aDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { rs232a-card 5 }

        rs232aDiagControlEntry  OBJECT-TYPE
            SYNTAX  Rs232aDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { rs232aDiagCtrlSlotIndex , rs232aDiagCtrlPortIndex }
            ::= { rs232aDiagControlTable 1 }

            Rs232aDiagControlEntry ::= SEQUENCE {
            rs232aDiagCtrlSlotIndex     LargeSlotIndex,
            rs232aDiagCtrlPortIndex     SixPortID,
            rs232aNearLoopback             INTEGER
        }

        rs232aDiagCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aDiagControlEntry 1 }

        rs232aDiagCtrlPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { rs232aDiagControlEntry 2 }

        rs232aNearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    toDTE(2),
                    toLocal(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rs232a Loopback Type"
            ::= { rs232aDiagControlEntry 3 }

--
-- Card Control Table
--

        rs232aCardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The rs232a Card control table."
            ::= { rs232a-card 6 }

        rs232aCardControlEntry  OBJECT-TYPE
            SYNTAX  Rs232aCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the rs232a Card control table."
            INDEX { rs232aCardIndex }
            ::= { rs232aCardControlTable 1 }

            Rs232aCardControlEntry ::= SEQUENCE {
            rs232aCardIndex                LargeSlotIndex,
            rs232aReset                    INTEGER,
            rs232aLoadDefault              INTEGER
        }

        rs232aCardIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aCardControlEntry 1 }

        rs232aReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset rs232a card"
            ::= { rs232aCardControlEntry 2 }

        rs232aLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { rs232aCardControlEntry 3 }

--
--  Rs232a System Information Table
--

        rs232aSystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Rs232aSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Rs232a system information table."
            ::= { rs232a-card 7}

        rs232aSystemInfoEntry  OBJECT-TYPE
            SYNTAX  Rs232aSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Rs232a system information table."
            INDEX { rs232aSISlotIndex }
            ::= { rs232aSystemInfoTable 1 }

            Rs232aSystemInfoEntry ::= SEQUENCE {
            rs232aSISlotIndex            LargeSlotIndex,
            rs232aPROMVersion            DisplayString,
            rs232aHardwareVersion        DisplayString,
            rs232aFpgaVersion            DisplayString,
            rs232aBank1Version           DisplayString,
            rs232aBank2Version           DisplayString,
            rs232aActiveBank             INTEGER
        }

        rs232aSISlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { rs232aSystemInfoEntry 1 }

        rs232aPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " rs232a PROM Version"
            ::= { rs232aSystemInfoEntry 2 }

        rs232aHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " rs232a Hardware Version"
            ::= { rs232aSystemInfoEntry 3 }

        rs232aFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { rs232aSystemInfoEntry 4 }

        rs232aBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { rs232aSystemInfoEntry 5 }

        rs232aBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { rs232aSystemInfoEntry 6}

        rs232aActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { rs232aSystemInfoEntry 7 }


        rs232aTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of Rs232a"
            ::= { rs232a-card 100 }

--============================================================================--
--  ABRA card MIB
--============================================================================--
--============================================================================--

    AbraPortID ::= INTEGER {
        group1(1),
        group2(2),
        group3(3),
        group4(4),
        group5(5),
        group6(6),
        group7(7),
        group8(8)
    }

    AbraM2PortID ::= INTEGER {
        group1(1),
        group2(2),
        group3(3),
        group4(4),
        group5(5),
        group6(6),
        group7(7),
        group8(8),
        group9(9),
        group10(10),
        group11(11),
        group12(12),
        group13(13),
        group14(14),
        group15(15),
        group16(16),
        group17(17),
        group18(18),
        group19(19),
        group20(20),
        group21(21),
        group22(22),
        group23(23),
        group24(24),
        group25(25),
        group26(26),
        group27(27),
        group28(28),
        group29(29),
        group30(30),
        group31(31),
        group32(32),
        group33(33),
        group34(34),
        group35(35),
        group36(36),
        group37(37),
        group38(38),
        group39(39),
        group40(40),
        group41(41),
        group42(42)
    }

    AbraM2ChannelID ::= INTEGER {
        ch1master(1),
        ch2slave(2),
        ch3slave(3)
    }

--
--  u/a law Format Table
--
        abraModeConfigTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   AbraModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ABRA law format config table."
            ::= { abra-card  1 }

        abraModeConfigEntry     OBJECT-TYPE
            SYNTAX  AbraModeConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the Format Mode Table."
            INDEX { abraModeConfigSlotIndex }
            ::= { abraModeConfigTable 1 }

            AbraModeConfigEntry ::= SEQUENCE {
            abraModeConfigSlotIndex       SmallSlotIndex,
            abraModeConfigFormat          INTEGER
        }

        abraModeConfigSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraModeConfigEntry 1 }

        abraModeConfigFormat  OBJECT-TYPE
            SYNTAX  INTEGER {
                    uLaw(1),
                    aLaw(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Format Mode."
            ::= { abraModeConfigEntry 2 }

--
--  Analogy Bridge Config Table
--
        abraConfigureTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   AbraConfigureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Analogy Bridge Switch Config Table."
            ::= { abra-card  2 }

        abraConfigureEntry     OBJECT-TYPE
            SYNTAX  AbraConfigureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of Analogy Bridge Switch Config Table."
            INDEX { abraConfigSlotIndex ,
        abraConfigGroupIndex ,
        abraConfigChIndex }
            ::= { abraConfigureTable 1 }

            AbraConfigureEntry ::= SEQUENCE {
            abraConfigSlotIndex       SmallSlotIndex,
            abraConfigGroupIndex      AbraPortID,
            abraConfigChIndex         GroupChannelID,
            abraConfigAnalogBR        INTEGER,
            abraConfigAttribute       INTEGER
        }

        abraConfigSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraConfigureEntry 1 }

        abraConfigGroupIndex  OBJECT-TYPE
            SYNTAX  AbraPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Group index, total 8 port."
            ::= { abraConfigureEntry 2 }

        abraConfigChIndex  OBJECT-TYPE
            SYNTAX  GroupChannelID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Channel index."
            ::= { abraConfigureEntry 3 }

        abraConfigAnalogBR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or disable analog bridge."
            ::= { abraConfigureEntry 4 }

        abraConfigAttribute  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2),
                    member(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Enable or disable analog bridge."
            ::= { abraConfigureEntry 5 }

--
-- ABRA Card Control Table
--

        abraCardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The ABRA Card control table."
            ::= { abra-card 3 }

        abraCardControlEntry  OBJECT-TYPE
            SYNTAX  AbraCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the ABRA Card control table."
            INDEX { abraCardIndex }
            ::= { abraCardControlTable 1 }

            AbraCardControlEntry ::= SEQUENCE {
            abraCardIndex                SmallSlotIndex,
            abraReset                    INTEGER,
            abraLoadDefault              INTEGER
        }

        abraCardIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraCardControlEntry 1 }

        abraReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset abra card"
            ::= { abraCardControlEntry 2 }

        abraLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { abraCardControlEntry 3 }

--
--  ABRA System Information Table
--

        abraSystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The ABRA system information table."
            ::= { abra-card 4}

        abraSystemInfoEntry  OBJECT-TYPE
            SYNTAX  AbraSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the ABRA system information table."
            INDEX { abraSystemInfoSlotIndex }
            ::= { abraSystemInfoTable 1 }

            AbraSystemInfoEntry ::= SEQUENCE {
            abraSystemInfoSlotIndex              SmallSlotIndex,
            abraSystemInfoPROMVersion            DisplayString,
            abraSystemInfoHardwareVersion        DisplayString,
            abraSystemInfoFpgaVersion            DisplayString,
            abraSystemInfoBank1Version           DisplayString,
            abraSystemInfoBank2Version           DisplayString,
            abraSystemInfoActiveBank             INTEGER
        }

        abraSystemInfoSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraSystemInfoEntry 1 }

        abraSystemInfoPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " abra PROM Version"
            ::= { abraSystemInfoEntry 2 }

        abraSystemInfoHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " abra Hardware Version"
            ::= { abraSystemInfoEntry 3 }

        abraSystemInfoFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..40))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { abraSystemInfoEntry 4 }

        abraSystemInfoBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { abraSystemInfoEntry 5 }

        abraSystemInfoBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { abraSystemInfoEntry 6}

        abraSystemInfoActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank1(1),
                    bank2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { abraSystemInfoEntry 7 }

--
-- ABRA Silence Detection Table
--

        abraSilenceDetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraSilenceDetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The ABRA Silence detection table."
            ::= { abra-card 5 }

        abraSilenceDetEntry  OBJECT-TYPE
            SYNTAX  AbraSilenceDetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the ABRA Silence detection table."
            INDEX { abraSilenceDetSlotIndex }
            ::= { abraSilenceDetTable 1 }

            AbraSilenceDetEntry ::= SEQUENCE {
            abraSilenceDetSlotIndex              SmallSlotIndex,
            abraSilenceDetSilenceDet             INTEGER,
            abraSilenceDetThreshold              INTEGER,
            abraSilenceDetDetPeriod              INTEGER
        }

        abraSilenceDetSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraSilenceDetEntry 1 }

        abraSilenceDetSilenceDet  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Silence Detection."
            ::= { abraSilenceDetEntry 2 }

        abraSilenceDetThreshold  OBJECT-TYPE
            SYNTAX  INTEGER (0..8159)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Threshold (uniform PCM code)."
            ::= { abraSilenceDetEntry 3 }

        abraSilenceDetDetPeriod  OBJECT-TYPE
            SYNTAX  INTEGER (0..25)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "No-of-det-period-(N) (each period = 20ms)"
            ::= { abraSilenceDetEntry 4 }

--
--  ABRA Mode (Master/Slave or Conference) Table
--
        abraModeTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   AbraModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ABRA Mode Config Table."
            ::= { abra-card  6 }

        abraModeEntry     OBJECT-TYPE
            SYNTAX  AbraModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of ABRA Mode Config Table."
            INDEX { abraModeSlotIndex ,
        abraModeGroupIndex }
            ::= { abraModeTable 1 }

            AbraModeEntry ::= SEQUENCE {
            abraModeSlotIndex       SmallSlotIndex,
            abraModeGroupIndex      AbraPortID,
            abraMode                INTEGER
        }

        abraModeSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraModeEntry 1 }

        abraModeGroupIndex  OBJECT-TYPE
            SYNTAX  AbraPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Group index, total 8 port."
            ::= { abraModeEntry 2 }

        abraMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    masterSlave(1),
                    conference(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Mode of ABRA's Group. (Master/Slave or Conference)"
            ::= { abraModeEntry 3 }

--
--  ABRA Function (Analog or Digital or MJU) Table
--
        abraFunctionTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   AbraFunctionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "ABRA Function Config Table."
            ::= { abra-card  8 }

        abraFunctionEntry     OBJECT-TYPE
            SYNTAX  AbraFunctionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of ABRA Function Config Table."
            INDEX { abraFunctionSlotIndex ,
        abraFunctionGroupIndex }
            ::= { abraFunctionTable 1 }

            AbraFunctionEntry ::= SEQUENCE {
            abraFunctionSlotIndex       SmallSlotIndex,
            abraFunctionGroupIndex      AbraPortID,
            abraFunction                INTEGER,
            abraMjuRate                 INTEGER
        }

        abraFunctionSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraFunctionEntry 1 }

        abraFunctionGroupIndex  OBJECT-TYPE
            SYNTAX  AbraPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Group index, total 8 port."
            ::= { abraFunctionEntry 2 }

        abraFunction  OBJECT-TYPE
            SYNTAX  INTEGER {
                    analog(1),
                    digital(2),
                    mju(3)

                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Function of ABRA's Group. (Analog or Digital of MJU)"
            ::= { abraFunctionEntry 3 }

        abraMjuRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    subRate(1),
                    rate64k(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Rate of ABRA's MJU Group."
            ::= { abraFunctionEntry 4 }

--
-- ABRA Card Mode Table
--

        abraCardModeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraCardModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { abra-card  9 }

        abraCardModeEntry  OBJECT-TYPE
            SYNTAX  AbraCardModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { abraCardModeSlotIndex }
            ::= { abraCardModeTable 1 }

            AbraCardModeEntry ::= SEQUENCE {
            abraCardModeSlotIndex     SmallSlotIndex,
            abraCardMode              INTEGER
        }

        abraCardModeSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ABRA slot index"
            ::= { abraCardModeEntry 1 }

        abraCardMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    m1(1),
                    m2(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Mode"
            ::= { abraCardModeEntry 2 }

--
--  M2 Analogy Bridge Config Table
--
        abraM2ConfigureTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF   AbraM2ConfigureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Analogy Bridge Switch Config Table."
            ::= { abra-card  10 }

        abraM2ConfigureEntry     OBJECT-TYPE
            SYNTAX  AbraM2ConfigureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of Analogy Bridge Switch Config Table."
            INDEX { abraM2ConfigSlotIndex ,
        abraM2ConfigGroupIndex ,
        abraM2ConfigChIndex }
            ::= { abraM2ConfigureTable 1 }

            AbraM2ConfigureEntry ::= SEQUENCE {
            abraM2ConfigSlotIndex       SmallSlotIndex,
            abraM2ConfigGroupIndex      AbraM2PortID,
            abraM2ConfigChIndex         AbraM2ChannelID,
            abraM2ConfigAnalogBR        INTEGER,
            abraM2ConfigAttribute       INTEGER
        }

        abraM2ConfigSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Slot A~D, total 4 slots."
            ::= { abraM2ConfigureEntry 1 }

        abraM2ConfigGroupIndex  OBJECT-TYPE
            SYNTAX  AbraM2PortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Echo Group index, total 8 port."
            ::= { abraM2ConfigureEntry 2 }

        abraM2ConfigChIndex  OBJECT-TYPE
            SYNTAX  AbraM2ChannelID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Channel index."
            ::= { abraM2ConfigureEntry 3 }

        abraM2ConfigAnalogBR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable or disable analog bridge."
            ::= { abraM2ConfigureEntry 4 }

        abraM2ConfigAttribute  OBJECT-TYPE
            SYNTAX  INTEGER {
                    master(1),
                    slave(2)
                    --member(3),
                    --na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Enable or disable analog bridge."
            ::= { abraM2ConfigureEntry 5 }

--
-- ABRA M2 Input Signal Table
--

        abraM2InputTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraM2InputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { abra-card  11 }

        abraM2InputEntry  OBJECT-TYPE
            SYNTAX  AbraM2InputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { abraM2InputSlotIndex }
            ::= { abraM2InputTable 1 }

            AbraM2InputEntry ::= SEQUENCE {
            abraM2InputSlotIndex     SmallSlotIndex,
            abraM2Input              INTEGER
        }

        abraM2InputSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ABRA slot index"
            ::= { abraM2InputEntry 1 }

        abraM2Input  OBJECT-TYPE
            SYNTAX  INTEGER {
                    normal(1),
                    neg3dbi(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Mode"
            ::= { abraM2InputEntry 2 }


--
-- ABRA card protection Table
--

        abraCardProtectTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF AbraCardProtectEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { abra-card  12 }

        abraCardProtectEntry  OBJECT-TYPE
            SYNTAX  AbraCardProtectEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { abraCpSlotIndex }
            ::= { abraCardProtectTable 1 }

            AbraCardProtectEntry ::= SEQUENCE {
            abraCpSlotIndex        SmallSlotIndex,
            abraCardProtection     INTEGER,
            abraCardProtectAlarm   AlarmSeverity,
            abraForceSwitch        INTEGER,
            abraCardProtectStatus  INTEGER
        }

        abraCpSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ABRA slot index"
            ::= { abraCardProtectEntry 1 }

        abraCardProtection  OBJECT-TYPE
            SYNTAX  INTEGER {
                    notAvailable(0),
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Protection setup"
            ::= { abraCardProtectEntry 2 }

        abraCardProtectAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Protection alarm"
            ::= { abraCardProtectEntry 3 }

        abraForceSwitch  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    forceSwitch(2),
                    forcePrimary(3),
                    forceSecondary(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Protection force switch"
            ::= { abraCardProtectEntry 4 }

        abraCardProtectStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disabled(1),
                    standby(2),
                    working(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "ABRA Card Protection status"
            ::= { abraCardProtectEntry 5 }


--
        abraTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of ABRA"
            ::= { abra-card 100 }


--======================================================================--
--======================================================================--
--  TTA-card MIB
--======================================================================--
--======================================================================--

    ttaSysConfigTable                  OBJECT IDENTIFIER ::= { tta-card 1 }
--
--  In & Out Table
--

    ttaInOutTable         OBJECT IDENTIFIER ::= { ttaSysConfigTable 1 }

--
--  In & Out 1 Table
--

        ttaInOut1Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaInOut1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA In and Out 1 Table "
            ::= { ttaInOutTable 1 }

        ttaInOut1Entry  OBJECT-TYPE
            SYNTAX  TtaInOut1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA In and Out 1 Table "
            INDEX { ttaInOut1SlotIndex , ttaInOut1PortIndex }
            ::= { ttaInOut1Table 1 }

            TtaInOut1Entry ::= SEQUENCE {
            ttaInOut1SlotIndex      LargeSlotIndex,
            ttaInOut1PortIndex      FourPortID,
            ttaInOut1PreTripTimer   INTEGER,
            ttaInOut1TripHoldTimer  INTEGER,
            ttaInOut1DebounceTimer  INTEGER
        }

        ttaInOut1SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaInOut1Entry 1 }

        ttaInOut1PortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaInOut1Entry 2 }

        ttaInOut1PreTripTimer  OBJECT-TYPE
            SYNTAX  INTEGER (1..30)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PRE-TRIP Timer (ms)(1-30) "
            ::= { ttaInOut1Entry 3 }

        ttaInOut1TripHoldTimer  OBJECT-TYPE
            SYNTAX  INTEGER (1..256)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " TRIP-HOLD Timer (ms)(1-256) "
            ::= { ttaInOut1Entry 4 }

        ttaInOut1DebounceTimer  OBJECT-TYPE
            SYNTAX  INTEGER (1..3)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Debounce Timer (ms)(1-3) "
            ::= { ttaInOut1Entry 5 }

--
--  In & Out 2 Table
--

        ttaInOut2Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaInOut2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA In and Out 2 Table1 "
            ::= { ttaInOutTable 2 }

        ttaInOut2Entry  OBJECT-TYPE
            SYNTAX  TtaInOut2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA In and Out 2 Table "
            INDEX { ttaInOut2SlotIndex }
            ::= { ttaInOut2Table 1 }

            TtaInOut2Entry ::= SEQUENCE {
            ttaInOut2SlotIndex      LargeSlotIndex,
--            ttaInOut2InOutInv       INTEGER,
            ttaInOut2IrigTimeStp    INTEGER,
            ttaInOut2PickUpNum      INTEGER,
            ttaInOut2DataDropTmr    INTEGER
--            ttaInOut2GlobalLoopbk   INTEGER



    }

        ttaInOut2SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaInOut2Entry 1 }

--        ttaInOut2InOutInv  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    disable(1),
--                    enable(2)
--                }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                " Input & Output Inverter "
--            ::= { ttaInOut2Entry 2 }

        ttaInOut2IrigTimeStp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IRIG Time Setup "
            ::= { ttaInOut2Entry 3 }

        ttaInOut2PickUpNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Pick Up Number (times)(1-255) "
            ::= { ttaInOut2Entry 4 }

        ttaInOut2DataDropTmr  OBJECT-TYPE
            SYNTAX  INTEGER (5..1000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Data Drop Timer (ms)(5-1000) "
            ::= { ttaInOut2Entry 5 }

--        ttaInOut2GlobalLoopbk  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    disable(1),
--                    enable(2)
--                }
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                " Global Loopback "
--            ::= { ttaInOut2Entry 6 }

     ttaNewInOut1Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaNewInOut1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA NewIn and Out 1 Table "
            ::= { ttaInOutTable 3 }

        ttaNewInOut1Entry  OBJECT-TYPE
            SYNTAX  TtaNewInOut1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA In and Out 1 Table "
            INDEX { ttaNewInOut1Slot , ttaNewInOut1Port }
            ::= { ttaNewInOut1Table 1 }

        TtaNewInOut1Entry ::= SEQUENCE {
            ttaNewInOut1Slot      LargeSlotIndex,
            ttaNewInOut1Port      FourPortID,
            ttaNewInOut1InSup     INTEGER,
            ttaNewInOut1InSigLimit   INTEGER,
            ttaNewInOut1InSigExtend  INTEGER,
            ttaNewInOut1OutPerTrip    INTEGER,
            ttaNewInOut1OutSigLimit   INTEGER,
            ttaNewInOut1OutSigExtend  INTEGER
        }

        ttaNewInOut1Slot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaNewInOut1Entry 1 }

        ttaNewInOut1Port  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaNewInOut1Entry 2 }

        ttaNewInOut1InSup     OBJECT-TYPE
            SYNTAX  INTEGER (0..255) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Input Suppression (ms)(0-255) "
            ::= { ttaNewInOut1Entry 3 }

        ttaNewInOut1InSigLimit   OBJECT-TYPE
            SYNTAX  INTEGER (0..4095) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Input Signal Limit (ms)(0-4095) "
            ::= { ttaNewInOut1Entry 4 }

        ttaNewInOut1InSigExtend  OBJECT-TYPE
            SYNTAX  INTEGER (0..255) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Input Signal Extend (ms)(0-255) "
            ::= { ttaNewInOut1Entry 5 }

        ttaNewInOut1OutPerTrip    OBJECT-TYPE
            SYNTAX  INTEGER (1..30) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Pre Trip Timer (ms)(1-30) "
            ::= { ttaNewInOut1Entry 6 }

        ttaNewInOut1OutSigLimit   OBJECT-TYPE
            SYNTAX  INTEGER (0..4095) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Output Signal Limit (ms)(0-4095) "
            ::= { ttaNewInOut1Entry 7 }

        ttaNewInOut1OutSigExtend  OBJECT-TYPE
            SYNTAX  INTEGER (0..255) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Output Signal Extend (ms)(0-255) "
            ::= { ttaNewInOut1Entry 8 }


--
--  NEW In & Out 2 Table
--

        ttaNewInOut2Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaNewInOut2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA New In and Out 2 Table1 "
            ::= { ttaInOutTable 4 }

        ttaNewInOut2Entry  OBJECT-TYPE
            SYNTAX  TtaNewInOut2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA NewIn and Out 2 Table "
            INDEX { ttaNewInOut2Slot}
            ::= { ttaNewInOut2Table 1 }

        TtaNewInOut2Entry ::= SEQUENCE {
            ttaNewInOut2Slot         LargeSlotIndex,
            ttaNewInOut2InOutMode       INTEGER,
            ttaNewInOut2IrigTimeStp    INTEGER,
            ttaNewInOut2PickUpNum      INTEGER,
            ttaNewInOut2DataDropTmr    INTEGER

         }

        ttaNewInOut2Slot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaNewInOut2Entry 1 }

        ttaNewInOut2InOutMode  OBJECT-TYPE
           SYNTAX  INTEGER {
                    one-to-one(1),
                    four-to-one(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Input & Output Inverter "
           ::= { ttaNewInOut2Entry 2 }

        ttaNewInOut2IrigTimeStp  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IRIG Time Setup "
            ::= { ttaNewInOut2Entry 3 }

        ttaNewInOut2PickUpNum  OBJECT-TYPE
            SYNTAX  INTEGER (1..255)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Pick Up Number (times)(1-255) "
            ::= { ttaNewInOut2Entry 4 }

        ttaNewInOut2DataDropTmr  OBJECT-TYPE
            SYNTAX  INTEGER (5..1000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Data Drop Timer (ms)(5-1000) "
            ::= { ttaNewInOut2Entry 5 }





--
--  Alarm Delay Min/Max Times Table
--

        ttaAlarmDelayTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaAlarmDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Alarm Delay Min/Max Times Table "
            ::= { ttaSysConfigTable 2 }

        ttaAlarmDelayEntry  OBJECT-TYPE
            SYNTAX  TtaAlarmDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Alarm Delay Min/Max Times Table "
            INDEX { ttaAlarmDelaySlotIndex , ttaAlarmDelayPortIndex }
            ::= { ttaAlarmDelayTable 1 }

            TtaAlarmDelayEntry ::= SEQUENCE {
            ttaAlarmDelaySlotIndex      LargeSlotIndex,
            ttaAlarmDelayPortIndex      FourPortID,
            ttaAlarmDelayUpper          INTEGER,
            ttaAlarmDelayLower          INTEGER,
            ttaAlarmDelayLocUserId      INTEGER,
            ttaAlarmDelayReUserId       INTEGER
  --          ttaAlarmInputDelay1         INTEGER,
  --          ttaAlarmInputDelay2         INTEGER
        }

        ttaAlarmDelaySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaAlarmDelayEntry 1 }

        ttaAlarmDelayPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaAlarmDelayEntry 2 }

        ttaAlarmDelayUpper  OBJECT-TYPE
            SYNTAX  INTEGER (0..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Upper (us)(0-1000000) "
            ::= { ttaAlarmDelayEntry 3 }

        ttaAlarmDelayLower  OBJECT-TYPE
            SYNTAX  INTEGER (0..1000000)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Lower (us)(0-1000000) "
            ::= { ttaAlarmDelayEntry 4 }

        ttaAlarmDelayLocUserId  OBJECT-TYPE
            SYNTAX  INTEGER (0..127)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Local User ID (0-127) "
            ::= { ttaAlarmDelayEntry 5 }

        ttaAlarmDelayReUserId  OBJECT-TYPE
            SYNTAX  INTEGER (0..127)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Remote User ID (0-127) "
            ::= { ttaAlarmDelayEntry 6 }

--      ttaAlarmInputDelay1 OBJECT-TYPE
--            SYNTAX  INTEGER (0..255)
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                " Input Delay 1 (0-255) "
--            ::= { ttaAlarmDelayEntry 7 }

--        ttaAlarmInputDelay2 OBJECT-TYPE
--            SYNTAX  INTEGER (0..255)
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--               " Input Delay 2 (0-255) "
--            ::= { ttaAlarmDelayEntry 8 }

--
--Transfer Trip Input Rating Table
--

        ttaTrTripInputTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaTrTripInputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Transfer Trip Input Rating Table "
            ::= { ttaSysConfigTable 3 }

        ttaTrTripInputEntry     OBJECT-TYPE
            SYNTAX  TtaTrTripInputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Transfer Trip Input Rating Table "
            INDEX { ttaTrTripInputSlotIndex , ttaTrTripInputPortIndex }
            ::= { ttaTrTripInputTable 1 }

            TtaTrTripInputEntry ::= SEQUENCE {
            ttaTrTripInputSlotIndex       LargeSlotIndex,
            ttaTrTripInputPortIndex       FourPortID,
            ttaTrTripInputMaxDCInput      INTEGER
        }

        ttaTrTripInputSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaTrTripInputEntry 1 }

        ttaTrTripInputPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaTrTripInputEntry 2 }

        ttaTrTripInputMaxDCInput  OBJECT-TYPE
            SYNTAX  INTEGER {
                    power24V(1),
                    power48V(2),
                    power125V(3),
                    power250V(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Max. DC Input (V) "
            ::= { ttaTrTripInputEntry 3 }

--
--  Multi-channel Table
--

        ttaMultiChTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaMultiChEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Multi-channel Table "
            ::= { ttaSysConfigTable 4 }

        ttaMultiChEntry  OBJECT-TYPE
            SYNTAX  TtaMultiChEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Multi-channel Table "
            INDEX { ttaMultiChSlotIndex , ttaMultiChPortIndex }
            ::= { ttaMultiChTable 1 }

            TtaMultiChEntry ::= SEQUENCE {
            ttaMultiChSlotIndex      LargeSlotIndex,
            ttaMultiChPortIndex      FourPortID,
            ttaMultiChNoOfTS         INTEGER
        }

        ttaMultiChSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaMultiChEntry 1 }

        ttaMultiChPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaMultiChEntry 2 }

        ttaMultiChNoOfTS  OBJECT-TYPE
            SYNTAX  INTEGER (1..3)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " # of TS (1-3)"
            ::= { ttaMultiChEntry 3 }

--
--  Channel Lost Detection Table
--

        ttaChLostDetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaChLostDetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Channel Lost Detection Table "
            ::= { ttaSysConfigTable 5 }

        ttaChLostDetEntry  OBJECT-TYPE
            SYNTAX  TtaChLostDetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Channel Lost Detection Table "
            INDEX { ttaChLostDetSlotIndex , ttaChLostDetPortIndex }
            ::= { ttaChLostDetTable 1 }

            TtaChLostDetEntry ::= SEQUENCE {
            ttaChLostDetSlotIndex      LargeSlotIndex,
            ttaChLostDetPortIndex      FourPortID,
            ttaChLostDetLostDet        INTEGER
        }

        ttaChLostDetSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaChLostDetEntry 1 }

        ttaChLostDetPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaChLostDetEntry 2 }

        ttaChLostDetLostDet  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Lost Detection "
            ::= { ttaChLostDetEntry 3 }

--
--  CH. Lost Relay One Shot Timer Table
--

        ttaOneShotTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaOneShotEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA CH. Lost Relay One Shot Timer Table "
            ::= { ttaSysConfigTable 6 }

        ttaOneShotEntry  OBJECT-TYPE
            SYNTAX  TtaOneShotEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA CH. Lost Relay One Shot Timer Table "
            INDEX { ttaOneShotSlotIndex , ttaOneShotPortIndex }
            ::= { ttaOneShotTable 1 }

            TtaOneShotEntry ::= SEQUENCE {
            ttaOneShotSlotIndex      LargeSlotIndex,
            ttaOneShotPortIndex      FourPortID,
            ttaOneShotOneShotPer     INTEGER
        }

        ttaOneShotSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaOneShotEntry 1 }

        ttaOneShotPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaOneShotEntry 2 }

        ttaOneShotOneShotPer  OBJECT-TYPE
            SYNTAX  INTEGER (0..1023)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " One Shot Period (ms)(0-1023) "
            ::= { ttaOneShotEntry 3 }

--
--  Alarm Relay Control Table
--

    ttaAlmRlyCtrlTable         OBJECT IDENTIFIER ::= { ttaSysConfigTable 7 }

--
--  Alarm Relay Control 1 Table
--

        ttaAlmRlyCtrl1Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaAlmRlyCtrl1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Alarm Relay Control 1 Table "
            ::= { ttaAlmRlyCtrlTable 1 }

        ttaAlmRlyCtrl1Entry  OBJECT-TYPE
            SYNTAX  TtaAlmRlyCtrl1Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Alarm Relay Control 1 Table "
            INDEX { ttaAlmRlyCtrl1SlotIndex , ttaAlmRlyCtrl1PortIndex }
            ::= { ttaAlmRlyCtrl1Table 1 }

            TtaAlmRlyCtrl1Entry ::= SEQUENCE {
            ttaAlmRlyCtrl1SlotIndex      LargeSlotIndex,
            ttaAlmRlyCtrl1PortIndex      INTEGER,
            ttaAlmRlyCtrl1Status         AlarmSeverity,
            ttaAlmRlyCtrl1Clean          INTEGER
        }

        ttaAlmRlyCtrl1SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaAlmRlyCtrl1Entry 1 }

        ttaAlmRlyCtrl1PortIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1Of1(1),
                    p1Of2(2),
                    p2Of1(3),
                    p2Of2(4),
                    p3Of1(5),
                    p3Of2(6),
                    p4Of1(7),
                    p4Of2(8)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port p1Of1 to p4Of2, Total 8 ports "
            ::= { ttaAlmRlyCtrl1Entry 2 }

        ttaAlmRlyCtrl1Status  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Status "
            ::= { ttaAlmRlyCtrl1Entry 3 }

        ttaAlmRlyCtrl1Clean  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Clean "
            ::= { ttaAlmRlyCtrl1Entry 4 }

--
--  Alarm Relay Control 2 Table
--

        ttaAlmRlyCtrl2Table  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaAlmRlyCtrl2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Alarm Relay Control 2 Table "
            ::= { ttaAlmRlyCtrlTable 2 }

        ttaAlmRlyCtrl2Entry  OBJECT-TYPE
            SYNTAX  TtaAlmRlyCtrl2Entry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Alarm Relay Control 2 Table "
            INDEX { ttaRlySlotIndex }
            ::= { ttaAlmRlyCtrl2Table 1 }

            TtaAlmRlyCtrl2Entry ::= SEQUENCE {
            ttaRlySlotIndex            LargeSlotIndex,
            ttaRlyCardAlmRlyStatus     AlarmSeverity,
            ttaRlyCardAlmRlyClean      INTEGER
        }

        ttaRlySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaAlmRlyCtrl2Entry 1 }

        ttaRlyCardAlmRlyStatus  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Card Alarm Relay Status "
            ::= { ttaAlmRlyCtrl2Entry 2 }

        ttaRlyCardAlmRlyClean  OBJECT-TYPE
            SYNTAX  INTEGER {
                    enable(1),
                    disable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Card Alarm Relay Clean "
            ::= { ttaAlmRlyCtrl2Entry 3 }

--
--  PCM Rx Threshold Table
--

        ttaRxThrTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaRxThrEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The PCM Rx Threshold Table "
            ::= { ttaSysConfigTable 8 }

        ttaRxThrEntry  OBJECT-TYPE
            SYNTAX  TtaRxThrEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA PCM Rx Threshold Table "
            INDEX { ttaRxThrSlotIndex , ttaRxThrChIndex }
            ::= { ttaRxThrTable 1 }

            TtaRxThrEntry ::= SEQUENCE {
            ttaRxThrSlotIndex      LargeSlotIndex,
            ttaRxThrChIndex        INTEGER,
            ttaRxThrRxThreshold    INTEGER
        }

        ttaRxThrSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaRxThrEntry 1 }

        ttaRxThrChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaRxThrEntry 2 }

        ttaRxThrRxThreshold  OBJECT-TYPE
            SYNTAX  INTEGER (0..255) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PCM Rx Threshold (frame)(1-255), 0 can not use "
            ::= { ttaRxThrEntry 3 }

--
-- Trip Output  OR Table
--

        ttaORTripOutputTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaORTripOutputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Trip Output OR Table "
            ::= { ttaSysConfigTable 9 }

        ttaORTripOutputEntry     OBJECT-TYPE
            SYNTAX  TtaORTripOutputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Transfer Trip Input Rating Table "
            INDEX { ttaORTripOutputSlot , ttaORTripOutputPort }
            ::= { ttaORTripOutputTable 1 }

        TtaORTripOutputEntry ::= SEQUENCE {
            ttaORTripOutputSlot       LargeSlotIndex,
            ttaORTripOutputPort       FourPortID,
            ttaORTripOutputIn1        INTEGER,
            ttaORTripOutputIn2        INTEGER,
            ttaORTripOutputIn3        INTEGER,
            ttaORTripOutputIn4        INTEGER,
            ttaORTripOutputIn1Delay1  INTEGER,
            ttaORTripOutputIn2Delay1  INTEGER,
            ttaORTripOutputIn3Delay1  INTEGER,
            ttaORTripOutputIn4Delay1  INTEGER,
            ttaORTripOutputIn1Delay2  INTEGER,
            ttaORTripOutputIn2Delay2  INTEGER,
            ttaORTripOutputIn3Delay2  INTEGER,
            ttaORTripOutputIn4Delay2  INTEGER,
            ttaORTripOutputRx1        INTEGER,
            ttaORTripOutputRx2        INTEGER,
            ttaORTripOutputRx3        INTEGER,
            ttaORTripOutputRx4        INTEGER,
            ttaORTripOutputRx1Inv        INTEGER,
            ttaORTripOutputRx2Inv        INTEGER,
            ttaORTripOutputRx3Inv        INTEGER,
            ttaORTripOutputRx4Inv        INTEGER
        }

        ttaORTripOutputSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaORTripOutputEntry 1 }

        ttaORTripOutputPort  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaORTripOutputEntry 2 }

        ttaORTripOutputIn1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 1 "
            ::= { ttaORTripOutputEntry 3 }

        ttaORTripOutputIn2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 "
            ::= { ttaORTripOutputEntry 4 }

        ttaORTripOutputIn3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3"
            ::= { ttaORTripOutputEntry 5 }

        ttaORTripOutputIn4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4"
            ::= { ttaORTripOutputEntry 6 }

        ttaORTripOutputIn1Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In Delay1"
            ::= { ttaORTripOutputEntry 7 }

        ttaORTripOutputIn2Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 Delay1"
            ::= { ttaORTripOutputEntry 8 }

        ttaORTripOutputIn3Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3 Delay1"
            ::= { ttaORTripOutputEntry 9 }

        ttaORTripOutputIn4Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4 Delay1"
            ::= { ttaORTripOutputEntry 10}

       ttaORTripOutputIn1Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In Delay2"
            ::= { ttaORTripOutputEntry 11 }

        ttaORTripOutputIn2Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 Delay2"
            ::= { ttaORTripOutputEntry 12 }

        ttaORTripOutputIn3Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3 Delay2"
            ::= { ttaORTripOutputEntry 13 }

        ttaORTripOutputIn4Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4 Delay2"
            ::= { ttaORTripOutputEntry 14}


        ttaORTripOutputRx1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 1 "
            ::= { ttaORTripOutputEntry 15}

        ttaORTripOutputRx2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 2 "
            ::= { ttaORTripOutputEntry 16}

        ttaORTripOutputRx3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 3 "
            ::= { ttaORTripOutputEntry 17}

        ttaORTripOutputRx4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 4 "
            ::= { ttaORTripOutputEntry 18}

        ttaORTripOutputRx1Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 1 inverse"
            ::= { ttaORTripOutputEntry 19}

        ttaORTripOutputRx2Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 2 inverse"
            ::= { ttaORTripOutputEntry 20}

        ttaORTripOutputRx3Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 3 inverse"
            ::= { ttaORTripOutputEntry 21}

        ttaORTripOutputRx4Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 4 inverse"
            ::= { ttaORTripOutputEntry 22}

--
-- Trip Output AND Table
--

        ttaANDTripOutputTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaANDTripOutputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Trip Output AND Table "
            ::= { ttaSysConfigTable 10 }

        ttaANDTripOutputEntry     OBJECT-TYPE
            SYNTAX  TtaANDTripOutputEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Transfer Trip Input Rating Table "
            INDEX { ttaANDTripOutputSlot , ttaANDTripOutputPort }
            ::= { ttaANDTripOutputTable 1 }

        TtaANDTripOutputEntry ::= SEQUENCE {
            ttaANDTripOutputSlot       LargeSlotIndex,
            ttaANDTripOutputPort       FourPortID,
            ttaANDTripOutputIn1        INTEGER,
            ttaANDTripOutputIn2        INTEGER,
            ttaANDTripOutputIn3        INTEGER,
            ttaANDTripOutputIn4        INTEGER,
            ttaANDTripOutputIn1Delay1  INTEGER,
            ttaANDTripOutputIn2Delay1  INTEGER,
            ttaANDTripOutputIn3Delay1  INTEGER,
            ttaANDTripOutputIn4Delay1  INTEGER,
            ttaANDTripOutputIn1Delay2  INTEGER,
            ttaANDTripOutputIn2Delay2  INTEGER,
            ttaANDTripOutputIn3Delay2  INTEGER,
            ttaANDTripOutputIn4Delay2  INTEGER,
            ttaANDTripOutputRx1        INTEGER,
            ttaANDTripOutputRx2        INTEGER,
            ttaANDTripOutputRx3        INTEGER,
            ttaANDTripOutputRx4        INTEGER,
            ttaANDTripOutputRx1Inv        INTEGER,
            ttaANDTripOutputRx2Inv        INTEGER,
            ttaANDTripOutputRx3Inv        INTEGER,
            ttaANDTripOutputRx4Inv        INTEGER
        }

        ttaANDTripOutputSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaANDTripOutputEntry 1 }

        ttaANDTripOutputPort  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaANDTripOutputEntry 2 }

        ttaANDTripOutputIn1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 1 "
            ::= { ttaANDTripOutputEntry 3 }

        ttaANDTripOutputIn2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 "
            ::= { ttaANDTripOutputEntry 4 }

        ttaANDTripOutputIn3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3"
            ::= { ttaANDTripOutputEntry 5 }

        ttaANDTripOutputIn4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4"
            ::= { ttaANDTripOutputEntry 6 }

        ttaANDTripOutputIn1Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In Delay1"
            ::= { ttaANDTripOutputEntry 7 }

        ttaANDTripOutputIn2Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 Delay1"
            ::= { ttaANDTripOutputEntry 8 }

        ttaANDTripOutputIn3Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3 Delay1"
            ::= { ttaANDTripOutputEntry 9 }

        ttaANDTripOutputIn4Delay1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4 Delay1"
            ::= { ttaANDTripOutputEntry 10}

       ttaANDTripOutputIn1Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In Delay2"
            ::= { ttaANDTripOutputEntry 11 }

        ttaANDTripOutputIn2Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 2 Delay2"
            ::= { ttaANDTripOutputEntry 12 }

        ttaANDTripOutputIn3Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 3 Delay2"
            ::= { ttaANDTripOutputEntry 13 }

        ttaANDTripOutputIn4Delay2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " In 4 Delay2"
            ::= { ttaANDTripOutputEntry 14}


        ttaANDTripOutputRx1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 1 "
            ::= { ttaANDTripOutputEntry 15}

        ttaANDTripOutputRx2  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 2 "
            ::= { ttaANDTripOutputEntry 16}

        ttaANDTripOutputRx3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 3 "
            ::= { ttaANDTripOutputEntry 17}

        ttaANDTripOutputRx4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 4 "
            ::= { ttaANDTripOutputEntry 18}

        ttaANDTripOutputRx1Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 1 inverse"
            ::= { ttaANDTripOutputEntry 19}

        ttaANDTripOutputRx2Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 2 inverse"
            ::= { ttaANDTripOutputEntry 20}

        ttaANDTripOutputRx3Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 3 inverse"
            ::= { ttaANDTripOutputEntry 21}

        ttaANDTripOutputRx4Inv  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Rx 4 inverse"
            ::= { ttaANDTripOutputEntry 22}


--
--  Input Delay Min/Max Times Table
--

        ttaInputDelayTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaInputDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Input Delay Min/Max Times Table "
            ::= { ttaSysConfigTable 11 }

        ttaInputDelayEntry  OBJECT-TYPE
            SYNTAX  TtaInputDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Input Delay Min/Max Times Table "
            INDEX { ttaInputDelaySlot , ttaInputDelayPort }
            ::= { ttaInputDelayTable 1 }

            TtaInputDelayEntry ::= SEQUENCE {
            ttaInputDelaySlot      LargeSlotIndex,
            ttaInputDelayPort      FourPortID,
            ttaInputDelay1         INTEGER,
            ttaInputDelay2         INTEGER
        }

        ttaInputDelaySlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaInputDelayEntry 1 }

        ttaInputDelayPort  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaInputDelayEntry 2 }

        ttaInputDelay1 OBJECT-TYPE
            SYNTAX  INTEGER (0..65535) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Input Delay 1 (0-255) "
            ::= { ttaInputDelayEntry 3 }

        ttaInputDelay2 OBJECT-TYPE
            SYNTAX  INTEGER (0..65535) --//RIKER2021 SilverCreek
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
               " Input Delay 2 (0-255) "
            ::= { ttaInputDelayEntry 4 }




    ttaAlarmTable                  OBJECT IDENTIFIER ::= { tta-card 2 }
--
--Alarm Trap Debounce Time Table
--

--        ttaAlmTrapDbTimeTable         OBJECT-TYPE
--            SYNTAX  SEQUENCE OF TtaAlmTrapDbTimeEntry
--            ACCESS  not-accessible
--            STATUS  mandatory
--            DESCRIPTION
--                " The TTA Alarm Trap Debounce Time Table "
--            ::= { ttaAlarmTable  1 }

--        ttaAlmTrapDbTimeEntry     OBJECT-TYPE
--            SYNTAX  TtaAlmTrapDbTimeEntry
--            ACCESS  not-accessible
--            STATUS  mandatory
--            DESCRIPTION
--                " An entry in the Alarm Trap Debounce Time Table "
--            INDEX  {ttaAlmTrapDbTimeSlotIndex }
--            ::= { ttaAlmTrapDbTimeTable 1 }

--        TtaAlmTrapDbTimeEntry ::= SEQUENCE {
--            ttaAlmTrapDbTimeSlotIndex       LargeSlotIndex,
--            ttaAlmTrapDbTimeAlmTrapDbTime   INTEGER
--        }

--        ttaAlmTrapDbTimeSlotIndex  OBJECT-TYPE
--            SYNTAX  LargeSlotIndex
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--            "Slot 1~12, total 12 slots."
--            ::= { ttaAlmTrapDbTimeEntry 1 }

--        ttaAlmTrapDbTimeAlmTrapDbTime  OBJECT-TYPE
--            SYNTAX  INTEGER (0..2500)
--            ACCESS  read-write
--            STATUS  mandatory
--            DESCRIPTION
--                " Alarm Trap Debounce Time "
--            ::= { ttaAlmTrapDbTimeEntry 2 }

--
--  Alarm Setup Table
--

        ttaAlarmSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaAlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Alarm Setup Table "
            ::= { ttaAlarmTable 1 }

        ttaAlarmSetupEntry  OBJECT-TYPE
            SYNTAX  TtaAlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Alarm Setup Table "
            INDEX { ttaAlarmSlotIndex }
            ::= { ttaAlarmSetupTable 1 }

            TtaAlarmSetupEntry ::= SEQUENCE {
            ttaAlarmSlotIndex           LargeSlotIndex,
            ttaAlarmInputTrigger        AlarmSeverity,
            ttaAlarmOutputTrigger       AlarmSeverity,
            ttaAlarmRTTimeRange         AlarmSeverity,
            ttaAlarmLocalChLost         AlarmSeverity,
            ttaAlarmRemoteChLost        AlarmSeverity,
            ttaAlarmIrigLoss            AlarmSeverity,
            ttaAlarmTestTrigger         AlarmSeverity,
            ttaAlarmTestResponse        AlarmSeverity
        }

        ttaAlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaAlarmSetupEntry 1 }

        ttaAlarmInputTrigger  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 2 }

        ttaAlarmOutputTrigger  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 3 }

        ttaAlarmRTTimeRange  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 4 }

        ttaAlarmLocalChLost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 5 }

        ttaAlarmRemoteChLost  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 6 }

        ttaAlarmIrigLoss  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 7 }

        ttaAlarmTestTrigger  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 8 }

        ttaAlarmTestResponse  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm is enabled or not "
            ::= { ttaAlarmSetupEntry 9 }

--
--  Alarm Queue Table
--

        ttaAlmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Alarm Queue Table "
            ::= { ttaAlarmTable 2 }

        ttaAlmQueueEntry  OBJECT-TYPE
            SYNTAX  TtaAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Alarm Queue Table "
            INDEX { ttaAlmQueueIndex }
            ::= { ttaAlmQueueTable 1 }

            TtaAlmQueueEntry ::= SEQUENCE {
            ttaAlmQueueIndex          INTEGER (1..40),
            ttaAlmQueueString         DisplayString (SIZE(0..255)),
            ttaAlmQueueType           AlarmType,
            ttaAlmQueueSlot           AlarmSlotIndex,
            ttaAlmQueuePort           AlarmPort,
            ttaAlmQueueSeverity       AlarmSeverityDisp
        }

        ttaAlmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index (1-40)"
            ::= { ttaAlmQueueEntry 1 }

        ttaAlmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue String "
            ::= { ttaAlmQueueEntry 2 }

        ttaAlmQueueType  OBJECT-TYPE
            SYNTAX  AlarmType
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm type "
            ::= { ttaAlmQueueEntry 3 }

        ttaAlmQueueSlot  OBJECT-TYPE
            SYNTAX  AlarmSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Slot"
            ::= { ttaAlmQueueEntry 4 }

        ttaAlmQueuePort  OBJECT-TYPE
            SYNTAX  AlarmPort
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Port"
            ::= { ttaAlmQueueEntry 5 }

        ttaAlmQueueSeverity  OBJECT-TYPE
            SYNTAX  AlarmSeverityDisp
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Severity "
            ::= { ttaAlmQueueEntry 6 }


    ttaSysStatusTable                  OBJECT IDENTIFIER ::= { tta-card 3 }

--
--Delay Time Table
--

    ttaDelayTimeTable         OBJECT IDENTIFIER ::= { ttaSysStatusTable 1 }

--
--One Way Delay Measurement
--

        ttaOneWayDelayTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaOneWayDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The One Way Delay Measurement Table "
            ::= { ttaDelayTimeTable  1 }

        ttaOneWayDelayEntry     OBJECT-TYPE
            SYNTAX  TtaOneWayDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the One Way Delay Measurement Table "
            INDEX { ttaOneWayDelaySlotIndex , ttaOneWayDelayChIndex }
            ::= { ttaOneWayDelayTable 1 }

            TtaOneWayDelayEntry ::= SEQUENCE {
            ttaOneWayDelaySlotIndex       LargeSlotIndex,
            ttaOneWayDelayChIndex         INTEGER,
            ttaOneWayDelayMax             DisplayString (SIZE(0..255)),
            ttaOneWayDelayMin             DisplayString (SIZE(0..255)),
            ttaOneWayDelayInbound         DisplayString (SIZE(0..255)),
            ttaOneWayDelayOutbound        DisplayString (SIZE(0..255))
        }

        ttaOneWayDelaySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaOneWayDelayEntry 1 }

        ttaOneWayDelayChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaOneWayDelayEntry 2 }

        ttaOneWayDelayMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Max (ms) "
            ::= { ttaOneWayDelayEntry 3 }

        ttaOneWayDelayMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Min (ms) "
            ::= { ttaOneWayDelayEntry 4 }

        ttaOneWayDelayInbound  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Inbound (ms) "
            ::= { ttaOneWayDelayEntry 5 }

        ttaOneWayDelayOutbound  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Outbound (ms) "
            ::= { ttaOneWayDelayEntry 6 }

--
--R-Trip Delay Measurement
--

        ttaRTripDelayTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaRTripDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The R-Trip Delay Measurement Table "
            ::= { ttaDelayTimeTable 2 }

        ttaRTripDelayEntry     OBJECT-TYPE
            SYNTAX  TtaRTripDelayEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the R-Trip Delay Measurement Table "
            INDEX { ttaRTripDelaySlotIndex , ttaRTripDelayChIndex }
            ::= { ttaRTripDelayTable 1 }

            TtaRTripDelayEntry ::= SEQUENCE {
            ttaRTripDelaySlotIndex       LargeSlotIndex,
            ttaRTripDelayChIndex         INTEGER,
            ttaRTripDelayMax             DisplayString (SIZE(0..255)),
            ttaRTripDelayMin             DisplayString (SIZE(0..255)),
            ttaRTripDelayInbound         DisplayString (SIZE(0..255)),
            ttaRTripDelayOutbound        DisplayString (SIZE(0..255))
        }

        ttaRTripDelaySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaRTripDelayEntry 1 }

        ttaRTripDelayChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaRTripDelayEntry 2 }

        ttaRTripDelayMax  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Max (ms) "
            ::= { ttaRTripDelayEntry 3 }

        ttaRTripDelayMin  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Min (ms) "
            ::= { ttaRTripDelayEntry 4 }

        ttaRTripDelayInbound  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Inbound (ms) "
            ::= { ttaRTripDelayEntry 5 }

        ttaRTripDelayOutbound  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Outbound (ms) "
            ::= { ttaRTripDelayEntry 6 }

--
--Transfer Trip Status Table
--

        ttaTrTripStaTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaTrTripStaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Transfer Trip Status Table "
            ::= { ttaSysStatusTable  2 }

        ttaTrTripStaEntry     OBJECT-TYPE
            SYNTAX  TtaTrTripStaEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Transfer Trip Status Table "
            INDEX { ttaTrTripStaSlotIndex , ttaTrTripStaPortIndex }
            ::= { ttaTrTripStaTable 1 }

            TtaTrTripStaEntry ::= SEQUENCE {
            ttaTrTripStaSlotIndex       LargeSlotIndex,
            ttaTrTripStaPortIndex       FourPortID,
            ttaTrTripStaInput           INTEGER,
            ttaTrTripStaOutput          INTEGER
        }

        ttaTrTripStaSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaTrTripStaEntry 1 }

        ttaTrTripStaPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 4, Total 4 ports "
            ::= { ttaTrTripStaEntry 2 }

        ttaTrTripStaInput  OBJECT-TYPE
            SYNTAX  INTEGER{
                    offOpen(1),
                    onClose(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Input "
            ::= { ttaTrTripStaEntry 3 }

        ttaTrTripStaOutput  OBJECT-TYPE
            SYNTAX  INTEGER{
                    offOpen(1),
                    onClose(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Output "
            ::= { ttaTrTripStaEntry 4 }

--
--Remote Alarm Indication Table
--

        ttaReAlarmIndTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaReAlarmIndEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Remote Alarm Indication Table "
            ::= { ttaSysStatusTable  3 }

        ttaReAlarmIndEntry     OBJECT-TYPE
            SYNTAX  TtaReAlarmIndEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Remote Alarm Indication Table "
            INDEX { ttaReAlarmIndSlotIndex , ttaReAlarmIndChIndex }
            ::= { ttaReAlarmIndTable 1 }

            TtaReAlarmIndEntry ::= SEQUENCE {
            ttaReAlarmIndSlotIndex       LargeSlotIndex,
            ttaReAlarmIndChIndex         INTEGER,
            ttaReAlarmIndStatus          INTEGER
        }

        ttaReAlarmIndSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaReAlarmIndEntry 1 }

        ttaReAlarmIndChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaReAlarmIndEntry 2 }

        ttaReAlarmIndStatus  OBJECT-TYPE
            SYNTAX  INTEGER{
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Status "
            ::= { ttaReAlarmIndEntry 3 }

--
--  IRIG Status Table
--

        ttaIrigStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaIrigStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA IRIG Status Table "
            ::= { ttaSysStatusTable 4 }

        ttaIrigStatusEntry  OBJECT-TYPE
            SYNTAX  TtaIrigStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA IRIG Status Table "
            INDEX { ttaIrigSlotIndex }
            ::= { ttaIrigStatusTable 1 }

            TtaIrigStatusEntry ::= SEQUENCE {
            ttaIrigSlotIndex           LargeSlotIndex,
            ttaIrigSyncUnsync          INTEGER,
            ttaIrigIrigTime            DisplayString (SIZE(0..255))
        }

        ttaIrigSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaIrigStatusEntry 1 }

        ttaIrigSyncUnsync  OBJECT-TYPE
            SYNTAX  INTEGER{
                    unsync(1),
                    sync(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " IRIG is Sync or not "
            ::= { ttaIrigStatusEntry 2 }

        ttaIrigIrigTime  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " IRIG Time "
            ::= { ttaIrigStatusEntry 3 }

--
--Channel Status Table
--

        ttaChStatusTable         OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaChStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Channel Status Table "
            ::= { ttaSysStatusTable  5 }

        ttaChStatusEntry     OBJECT-TYPE
            SYNTAX  TtaChStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Channel Status Table "
            INDEX { ttaChStatusSlotIndex , ttaChStatusChIndex }
            ::= { ttaChStatusTable 1 }

            TtaChStatusEntry ::= SEQUENCE {
            ttaChStatusSlotIndex       LargeSlotIndex,
            ttaChStatusChIndex         INTEGER,
            ttaChStatusPickUpCnt       INTEGER,
            ttaChStatusCrcErrCnt       INTEGER,
            ttaChStatusIdStatus        INTEGER
        }

        ttaChStatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaChStatusEntry 1 }

        ttaChStatusChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaChStatusEntry 2 }

        ttaChStatusPickUpCnt  OBJECT-TYPE
            SYNTAX  INTEGER(0..255) --//RIKER2021 SilverCreek
--            SYNTAX  INTEGER{
--                    na(256)
--                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Pick Up Cnt. "
            ::= { ttaChStatusEntry 3 }

        ttaChStatusCrcErrCnt  OBJECT-TYPE
           SYNTAX  INTEGER(0..255) --//RIKER2021 SilverCreek
--            SYNTAX  INTEGER{
--                    na(256)
--                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CRC Error Cnt. "
            ::= { ttaChStatusEntry 4 }

        ttaChStatusIdStatus  OBJECT-TYPE
            SYNTAX  INTEGER{
                    match(1),
                    mismatch(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ID Status "
            ::= { ttaChStatusEntry 5 }

--
--  Round Trip Test Results Table
--

        ttaRTTestResultTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaRTTestResultEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Round Trip Test Results Table "
            ::= { tta-card 4 }

        ttaRTTestResultEntry  OBJECT-TYPE
            SYNTAX  TtaRTTestResultEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Round Trip Test Results Table "
            INDEX { ttaTestSlotIndex , ttaTestChIndex }
            ::= { ttaRTTestResultTable 1 }

            TtaRTTestResultEntry ::= SEQUENCE {
            ttaTestSlotIndex           LargeSlotIndex,
            ttaTestChIndex             INTEGER,
            ttaTestTriggerTime         DisplayString (SIZE(0..255)),
            ttaTestResponseTime        DisplayString (SIZE(0..255)),
            ttaTestRTrip               DisplayString (SIZE(0..255))
        }

        ttaTestSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaRTTestResultEntry 1 }

        ttaTestChIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    p1-1(1),
                    p1-2(2),
                    p1-3(3),
                    p2-1(4),
                    p2-2(5),
                    p2-3(6),
                    p3-1(7),
                    p3-2(8),
                    p3-3(9),
                    p4-1(10),
                    p4-2(11),
                    p4-3(12)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Channel p1-1 to p4-3, Total 12 channels "
            ::= { ttaRTTestResultEntry 2 }

        ttaTestTriggerTime  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Trigger Time Stamp "
            ::= { ttaRTTestResultEntry 3 }

        ttaTestResponseTime  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Response Time Stamp "
            ::= { ttaRTTestResultEntry 4 }

        ttaTestRTrip  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " R-Trip (ms) "
            ::= { ttaRTTestResultEntry 5 }

--
--PCM Rx Address Table
--

--        ttaPCMRxAddTable         OBJECT-TYPE
--            SYNTAX  SEQUENCE OF TtaPCMRxAddEntry
--            ACCESS  not-accessible
--            STATUS  mandatory
--            DESCRIPTION
--                " The PCM Rx Address Table "
--            ::= { ttaSysStatusTable  6 }

--        ttaPCMRxAddEntry     OBJECT-TYPE
--            SYNTAX  TtaPCMRxAddEntry
--            ACCESS  not-accessible
--            STATUS  mandatory
--            DESCRIPTION
--                " An entry in the PCM Rx Address Table "
--            INDEX  {ttaPCMRxAddSlotIndex, ttaPCMRxAddChanIndex }
--            ::= { ttaPCMRxAddTable 1 }

--        TtaPCMRxAddEntry ::= SEQUENCE {
--            ttaPCMRxAddSlotIndex       LargeSlotIndex,
--            ttaPCMRxAddChanIndex       INTEGER,
--            ttaPCMRxAddAddress         INTEGER
--        }

--        ttaPCMRxAddSlotIndex  OBJECT-TYPE
--            SYNTAX  LargeSlotIndex
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--            "Slot 1~12, total 12 slots."
--            ::= { ttaPCMRxAddEntry 1 }

--        ttaPCMRxAddChanIndex  OBJECT-TYPE
--            SYNTAX  INTEGER {
--                    channel1(1),
--                    channel2(2),
--                    channel3(3),
--                    channel4(4),
--                    channel5(5),
--                    channel6(6),
--                    channel7(7),
--                    channel8(8),
--                    channel9(9),
--                    channel10(10),
--                    channel11(11),
--                    channel12(12)
--                }
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " Channel 1 to 12, Total 12 channels "
--            ::= { ttaPCMRxAddEntry 2 }

--        ttaPCMRxAddAddress  OBJECT-TYPE
--            SYNTAX  INTEGER
--            ACCESS  read-only
--            STATUS  mandatory
--            DESCRIPTION
--                " PCM Rx Address "
--            ::= { ttaPCMRxAddEntry 3 }


--
-- Card Control Table
--

        ttaCardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA Card Control Table "
            ::= { tta-card 5 }

        ttaCardControlEntry  OBJECT-TYPE
            SYNTAX  TtaCardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA Card Control Table "
            INDEX { ttaCardIndex }
            ::= { ttaCardControlTable 1 }

            TtaCardControlEntry ::= SEQUENCE {
            ttaCardIndex                LargeSlotIndex,
            ttaReset                    INTEGER,
            ttaLoadDefault              INTEGER
        }

        ttaCardIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaCardControlEntry 1 }

        ttaReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Reset TTA card "
            ::= { ttaCardControlEntry 2 }

        ttaLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Load default "
            ::= { ttaCardControlEntry 3 }


--
--  TTA System Information Table
--

        ttaSystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TtaSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The TTA System Information Table "
            ::= { tta-card 6 }

        ttaSystemInfoEntry  OBJECT-TYPE
            SYNTAX  TtaSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the TTA System Information Table "
            INDEX { ttaSystemInfoSlotIndex }
            ::= { ttaSystemInfoTable 1 }

            TtaSystemInfoEntry ::= SEQUENCE {
            ttaSystemInfoSlotIndex              LargeSlotIndex,
            ttaSystemInfoPROMVersion            DisplayString,
            ttaSystemInfoHardwareVersion        DisplayString,
            ttaSystemInfoFpgaVersion            DisplayString,
            ttaSystemInfoBank1Version           DisplayString,
            ttaSystemInfoBank2Version           DisplayString,
            ttaSystemInfoActiveBank             INTEGER
        }

        ttaSystemInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { ttaSystemInfoEntry 1 }

        ttaSystemInfoPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TTA PROM Version "
            ::= { ttaSystemInfoEntry 2 }

        ttaSystemInfoHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TTA Hardware Version "
            ::= { ttaSystemInfoEntry 3 }

        ttaSystemInfoFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FPGA Version "
            ::= { ttaSystemInfoEntry 4 }

        ttaSystemInfoBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bank-1 Version "
            ::= { ttaSystemInfoEntry 5 }

        ttaSystemInfoBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bank-2 Version "
            ::= { ttaSystemInfoEntry 6}

        ttaSystemInfoActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Active Bank 1/2 "
            ::= { ttaSystemInfoEntry 7 }


        ttaTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Total cards of TTA "
            ::= { tta-card 100 }


--======================================================================--
--======================================================================--
--  M4TE Card MIB
--======================================================================--
--======================================================================--

--
--  E1/T1 mode Table
--

        m4tePortModeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4tePortModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE port mode table."
            ::= { m4teCard 1 }

        m4tePortModeEntry  OBJECT-TYPE
            SYNTAX  M4tePortModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE port mode entry."
            INDEX { m4tePMSlotIndex , m4tePMPortIndex }
            ::= { m4tePortModeTable 1 }

            M4tePortModeEntry ::= SEQUENCE  {
            m4tePMSlotIndex             SmallSlotIndex,
            m4tePMPortIndex             FourPortID,
            m4tePortMode                INTEGER,
            m4tePortState               INTEGER
        }

        m4tePMSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4tePortModeEntry 1 }

        m4tePMPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4tePortModeEntry 2 }

        m4tePortMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    e1Imp120Ohm(1),
                    t1Mode(2),
                    e1Imp75Ohm(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "M4TE port mode: if map exist, can not change from T1 to E1 or E1 to T1"
            ::= { m4tePortModeEntry 3 }

        m4tePortState  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    cleared(1),
                    mapExist(2),
                    protectionExist(3),
                    mappedAndProtected(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port state"
            ::= { m4tePortModeEntry 4 }


--
--  M4TE E1 Line Control Table
--

        m4E1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE E1 line control table."
            ::= { m4teCard 2 }

        m4E1LineControlEntry  OBJECT-TYPE
            SYNTAX  M4E1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE E1 line control entry."
            INDEX { m4E1LCSlotIndex , m4E1LCPortIndex }
            ::= { m4E1LineControlTable 1 }

            M4E1LineControlEntry ::= SEQUENCE  {
            m4E1LCSlotIndex              SmallSlotIndex,
            m4E1LCPortIndex              FourPortID,
            m4E1LineFrame                INTEGER,
            m4E1LineCoding               INTEGER,
            m4E1Interface                INTEGER,
            m4E1FDL                      INTEGER,
            m4E1FDLSabit                 INTEGER,
            m4E1AIS                      INTEGER,
            m4E1RAI                      INTEGER,
            m4E1CRC                      INTEGER,
            m4E1IdleCode                 INTEGER,
            m4E1CASMode                  INTEGER,
            m4E1SignallingMode           INTEGER,
            m4E1CGA                      INTEGER,
            m4E1OutOfService             INTEGER,
            m4E1Protect                  INTEGER,
            m4E1Master                   INTEGER
        }

        m4E1LCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4E1LineControlEntry 1 }

        m4E1LCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4E1LineControlEntry 2 }

        m4E1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { m4E1LineControlEntry 3 }

        m4E1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    hdb3(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { m4E1LineControlEntry 4 }

        m4E1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    twistedPair(1),
                    coaxialCable(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that E1 line use 75/120 Ohm Cable."
            ::= { m4E1LineControlEntry 5 }

        m4E1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    --fdl(1),
                    off(2),
                    hdlc(3),
                    ssm(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link ON/OFF"
            ::= { m4E1LineControlEntry 6 }

        m4E1FDLSabit  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    sa4(1),
                    sa5(2),
                    sa6(3),
                    sa7(4),
                    sa8(5),
                    sa4and5(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Facility Data Link use Sax bit"
            ::= { m4E1LineControlEntry 7 }

        m4E1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 line Alarm Indication Signal."
            ::= { m4E1LineControlEntry 8 }

        m4E1RAI  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "RAI-ON indicates that RAI (Remote Alarm Indication) ON."
            ::= { m4E1LineControlEntry 9 }

        m4E1CRC  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 Cycle Redundancy Check ON/OFF"
            ::= { m4E1LineControlEntry 10 }

        m4E1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { m4E1LineControlEntry 11 }

        m4E1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { m4E1LineControlEntry 12 }

        m4E1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                    -- cd01(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS or CD01"
            ::= { m4E1LineControlEntry 13 }

        m4E1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { m4E1LineControlEntry 14 }

        m4E1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { m4E1LineControlEntry 15 }

        m4E1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { m4E1LineControlEntry 16 }

        m4E1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { m4E1LineControlEntry 17 }


--
--  M4TE T1 Line Control Table
--

        m4T1LineControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4T1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE T1 line control table."
            ::= { m4teCard 3 }

        m4T1LineControlEntry  OBJECT-TYPE
            SYNTAX  M4T1LineControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE T1 line control entry."
            INDEX { m4T1LCSlotIndex , m4T1LCPortIndex }
            ::= { m4T1LineControlTable 1 }

            M4T1LineControlEntry ::= SEQUENCE  {
            m4T1LCSlotIndex              SmallSlotIndex,
            m4T1LCPortIndex              FourPortID,
            m4T1LineFrame                INTEGER,
            m4T1LineCoding               INTEGER,
            m4T1Interface                INTEGER,
            m4T1LineBuildOut             INTEGER,
            m4T1Equalizer                INTEGER,
            m4T1AIS                      INTEGER,
            m4T1YEL                      INTEGER,
            m4T1Inband                   INTEGER,
            m4T1IdleCode                 INTEGER,
            m4T1CASMode                  INTEGER,
            m4T1SignallingMode           INTEGER,
            m4T1CGA                      INTEGER,
            m4T1OutOfService             INTEGER,
            m4T1FDL                      INTEGER,
            m4T1Protect                  INTEGER,
            m4T1Master                   INTEGER
        }

        m4T1LCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4T1LineControlEntry 1 }

        m4T1LCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4T1LineControlEntry 2 }

        m4T1LineFrame  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    d4(1),
                    esf(2),
                    esfT1403(3),
                    none(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line frame format"
            ::= { m4T1LineControlEntry 3 }

        m4T1LineCoding  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    ami(1),
                    b8zs(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Coding type"
            ::= { m4T1LineControlEntry 4 }

        m4T1Interface  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    longHaul(1),
                    shortHaul(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Interface indicates that T1 line use Long/Short haul."
            ::= { m4T1LineControlEntry 5 }

        m4T1LineBuildOut  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    lbo0dB(1),
                    lboNeg7p5dB(2),
                    lboNeg15dB(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line build out."
            ::= { m4T1LineControlEntry 6 }

        m4T1Equalizer  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    equ0to110Ft(1),
                    equ110to220ft(2),
                    equ220to330ft(3),
                    equ330to440ft(4),
                    equ440to550ft(5),
                    equ550to660ft(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line equalizer."
            ::= { m4T1LineControlEntry 7 }

        m4T1AIS  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    frame(1),
--                    unframe(2),
                    off(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line Alarm Indication Signal."
            ::= { m4T1LineControlEntry 8 }

        m4T1YEL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "YEL-ON indicates that yellow alarm ON."
            ::= { m4T1LineControlEntry 9 }

        m4T1Inband  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 line inband ON/OFF"
            ::= { m4T1LineControlEntry 10 }

        m4T1IdleCode  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Line Idle Code Value"
            ::= { m4T1LineControlEntry 11 }

        m4T1CASMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CAS or CCS"
            ::= { m4T1LineControlEntry 12 }

        m4T1SignallingMode  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    trans(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TRANS"
            ::= { m4T1LineControlEntry 13 }

        m4T1CGA  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    norm(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Method used to signal the Carrier Group Alarm state
                to the other end of the selected link."
            ::= { m4T1LineControlEntry 14 }

        m4T1OutOfService  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    busy(1),
                    idle(2),
                    ais(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "When NORM (CGA) is select, the parameter determines the
                state of the A, B signaling bits during the
                Out-of-Service periods."
            ::= { m4T1LineControlEntry 15 }

        m4T1FDL  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    on(1),
                    off(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T1 Facility Data Link ON/OFF"
            ::= { m4T1LineControlEntry 16 }

        m4T1Protect  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    disable(1),
                    circuit(2),
                    line(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "disable or enable."
            ::= { m4T1LineControlEntry 17 }

        m4T1Master  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    xxxx(1),
                    slave(2),
                    master(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "master or slave"
            ::= { m4T1LineControlEntry 18 }


--
--  User Current Performance Table
--

        m4teUserCurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teUserCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Current Performance Table"
            ::= { m4teCard 4 }

        m4teUserCurrPerfEntry  OBJECT-TYPE
            SYNTAX  M4teUserCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User current performance entry"
            INDEX { m4teUCPSlotIndex , m4teUCPPortIndex }
            ::= { m4teUserCurrPerfTable 1 }

            M4teUserCurrPerfEntry ::= SEQUENCE  {
            m4teUCPSlotIndex          SmallSlotIndex,
            m4teUCPPortIndex          FourPortID,
            m4teUserCurrPerfES        INTEGER,
            m4teUserCurrPerfSES       INTEGER,
            m4teUserCurrPerfBES       INTEGER,
            m4teUserCurrPerfUAS       INTEGER,
            m4teUserCurrPerfCSS       INTEGER,
            m4teUserCurrPerfBPV       INTEGER,
            m4teUserCurrPerfDMlofc    INTEGER,
            m4teUserCurr15MinElapsed  INTEGER,
            m4teUserValid15MinIntv    INTEGER
        }

        m4teUCPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teUserCurrPerfEntry 1 }

        m4teUCPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teUserCurrPerfEntry 2 }

        m4teUserCurrPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teUserCurrPerfEntry 3 }

        m4teUserCurrPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teUserCurrPerfEntry 4 }

        m4teUserCurrPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teUserCurrPerfEntry 5 }

        m4teUserCurrPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teUserCurrPerfEntry 6 }

        m4teUserCurrPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CS Error Counter "
            ::= { m4teUserCurrPerfEntry 7 }

        m4teUserCurrPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teUserCurrPerfEntry 8 }

        m4teUserCurrPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teUserCurrPerfEntry 9 }

        m4teUserCurr15MinElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { m4teUserCurrPerfEntry 11 }

        m4teUserValid15MinIntv  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { m4teUserCurrPerfEntry 12 }


--
--  User Interval Performance Table
--

        m4teUserIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teUserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Interval Performance Table"
            ::= { m4teCard 5 }

        m4teUserIntvPerfEntry  OBJECT-TYPE
            SYNTAX  M4teUserIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User interval performance entry"
            INDEX { m4teUIPSlotIndex , m4teUIPPortIndex , m4teUserIntvPerfNumber }
            ::= { m4teUserIntvPerfTable 1 }

            M4teUserIntvPerfEntry ::= SEQUENCE  {
            m4teUIPSlotIndex         SmallSlotIndex,
            m4teUIPPortIndex         FourPortID,
            m4teUserIntvPerfNumber   INTEGER,
            m4teUserIntvPerfES       INTEGER,
            m4teUserIntvPerfSES      INTEGER,
            m4teUserIntvPerfBES      INTEGER,
            m4teUserIntvPerfUAS      INTEGER,
            m4teUserIntvPerfCSS      INTEGER,
            m4teUserIntvPerfBPV      INTEGER,
            m4teUserIntvPerfDMlofc   INTEGER
        }

        m4teUIPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teUserIntvPerfEntry 1 }

        m4teUIPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teUserIntvPerfEntry 2 }

        m4teUserIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Interval Index"
            ::= { m4teUserIntvPerfEntry 3 }

        m4teUserIntvPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teUserIntvPerfEntry 4 }

        m4teUserIntvPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teUserIntvPerfEntry 5 }

        m4teUserIntvPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teUserIntvPerfEntry 6 }

        m4teUserIntvPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teUserIntvPerfEntry 7 }

        m4teUserIntvPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teUserIntvPerfEntry 8 }

        m4teUserIntvPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teUserIntvPerfEntry 9 }

        m4teUserIntvPerfDMlofc   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teUserIntvPerfEntry 10 }


--
--  User Total Performance Table
--
        m4teUserTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teUserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User Total Performance Table"
            ::= { m4teCard 6 }

        m4teUserTotalPerfEntry  OBJECT-TYPE
            SYNTAX  M4teUserTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User total performance entry"
            INDEX { m4teUTPSlotIndex , m4teUTPPortIndex }
            ::= { m4teUserTotalPerfTable 1 }

            M4teUserTotalPerfEntry ::= SEQUENCE  {
            m4teUTPSlotIndex             SmallSlotIndex,
            m4teUTPPortIndex             FourPortID,
            m4teUserTotalPerfES          INTEGER,
            m4teUserTotalPerfSES         INTEGER,
            m4teUserTotalPerfBES         INTEGER,
            m4teUserTotalPerfUAS         INTEGER,
            m4teUserTotalPerfCSS         INTEGER,
            m4teUserTotalPerfBPV         INTEGER,
            m4teUserTotalPerfDMlofc      INTEGER
        }

        m4teUTPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teUserTotalPerfEntry 1 }

        m4teUTPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teUserTotalPerfEntry 2 }

        m4teUserTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teUserTotalPerfEntry 3 }

        m4teUserTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teUserTotalPerfEntry 4 }

        m4teUserTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teUserTotalPerfEntry 5 }

        m4teUserTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teUserTotalPerfEntry 6 }

        m4teUserTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teUserTotalPerfEntry 7 }

        m4teUserTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teUserTotalPerfEntry 8 }

        m4teUserTotalPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teUserTotalPerfEntry 9 }


--
--  User Seven Days Performance Table
--
        m4teUser7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teUser7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 Days Performance Table"
            ::= { m4teCard 7 }

        m4teUser7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  M4teUser7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "User 7 days performance table"
            INDEX { m4teUDPSlotIndex , m4teUDPPortIndex , m4teUserDaysIndex }
            ::= { m4teUser7DaysPerfTable 1 }

            M4teUser7DaysPerfEntry ::= SEQUENCE  {
            m4teUDPSlotIndex             SmallSlotIndex,
            m4teUDPPortIndex             FourPortID,
            m4teUserDaysIndex            INTEGER,
            m4teUserDateStrIndex         DisplayString,
            m4teUser7DaysPerfES          INTEGER,
            m4teUser7DaysPerfSES         INTEGER,
            m4teUser7DaysPerfBES         INTEGER,
            m4teUser7DaysPerfUAS         INTEGER,
            m4teUser7DaysPerfCSS         INTEGER,
            m4teUser7DaysPerfDMlofc      INTEGER,
            m4teUser7DaysPerfBPV         INTEGER
        }

        m4teUDPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teUser7DaysPerfEntry 1 }

        m4teUDPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teUser7DaysPerfEntry 2 }

        m4teUserDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { m4teUser7DaysPerfEntry 3 }

        m4teUserDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { m4teUser7DaysPerfEntry 4 }

        m4teUser7DaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teUser7DaysPerfEntry 5 }

        m4teUser7DaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teUser7DaysPerfEntry 6 }

        m4teUser7DaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teUser7DaysPerfEntry 7 }

        m4teUser7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teUser7DaysPerfEntry 8 }

        m4teUser7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teUser7DaysPerfEntry 9 }

        m4teUser7DaysPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teUser7DaysPerfEntry 10 }

        m4teUser7DaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teUser7DaysPerfEntry 11 }


--
--  Line Current Performance Table
--

        m4teLineCurrPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLineCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Current Performance Table"
            ::= { m4teCard 8 }

        m4teLineCurrPerfEntry  OBJECT-TYPE
            SYNTAX  M4teLineCurrPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line current performance entry"
            INDEX { m4teLCPSlotIndex , m4teLCPPortIndex }
            ::= { m4teLineCurrPerfTable 1 }

            M4teLineCurrPerfEntry ::= SEQUENCE  {
            m4teLCPSlotIndex             SmallSlotIndex,
            m4teLCPPortIndex             FourPortID,
            m4teLineCurrPerfES           INTEGER,
            m4teLineCurrPerfSES          INTEGER,
            m4teLineCurrPerfBES          INTEGER,
            m4teLineCurrPerfUAS          INTEGER,
            m4teLineCurrPerfCSS          INTEGER,
            m4teLineCurrPerfBPV          INTEGER,
            m4teLineCurrPerfDMlofc       INTEGER,
            m4teLineCurr15MinElapsed     INTEGER,
            m4teLineValid15MinIntv       INTEGER
        }

        m4teLCPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLineCurrPerfEntry 1 }

        m4teLCPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLineCurrPerfEntry 2 }

        m4teLineCurrPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ESS Error Counter "
            ::= { m4teLineCurrPerfEntry 3 }

        m4teLineCurrPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teLineCurrPerfEntry 4 }

        m4teLineCurrPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teLineCurrPerfEntry 5 }

        m4teLineCurrPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teLineCurrPerfEntry 6 }

        m4teLineCurrPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teLineCurrPerfEntry 7 }

        m4teLineCurrPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teLineCurrPerfEntry 8 }

        m4teLineCurrPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teLineCurrPerfEntry 9 }

        m4teLineCurr15MinElapsed  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 15-minute time elapsed"
            ::= { m4teLineCurrPerfEntry 11 }

        m4teLineValid15MinIntv  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Current 1-day Valid 15-min interval"
            ::= { m4teLineCurrPerfEntry 12 }


--
--  Line Interval Performance Table
--

        m4teLineIntvPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Interval Performance Table"
            ::= { m4teCard 9 }

        m4teLineIntvPerfEntry  OBJECT-TYPE
            SYNTAX  M4teLineIntvPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line interval performance entry"
            INDEX { m4teLIPSlotIndex , m4teLIPPortIndex , m4teLineIntvPerfNumber }
            ::= { m4teLineIntvPerfTable 1 }

            M4teLineIntvPerfEntry ::= SEQUENCE {
            m4teLIPSlotIndex         SmallSlotIndex,
            m4teLIPPortIndex         FourPortID,
            m4teLineIntvPerfNumber   INTEGER,
            m4teLineIntvPerfES       INTEGER,
            m4teLineIntvPerfSES      INTEGER,
            m4teLineIntvPerfBES      INTEGER,
            m4teLineIntvPerfUAS      INTEGER,
            m4teLineIntvPerfCSS      INTEGER,
            m4teLineIntvPerfBPV      INTEGER,
            m4teLineIntvPerfDMlofc   INTEGER,
            m4teLineIntvAvailable    INTEGER
        }

        m4teLIPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLineIntvPerfEntry 1 }

        m4teLIPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLineIntvPerfEntry 2 }

        m4teLineIntvPerfNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..96)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Index "
            ::= { m4teLineIntvPerfEntry 3 }

        m4teLineIntvPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teLineIntvPerfEntry 4 }

        m4teLineIntvPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teLineIntvPerfEntry 5 }

        m4teLineIntvPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teLineIntvPerfEntry 6 }

        m4teLineIntvPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teLineIntvPerfEntry 7 }

        m4teLineIntvPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teLineIntvPerfEntry 8 }

        m4teLineIntvPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teLineIntvPerfEntry 9 }

        m4teLineIntvPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teLineIntvPerfEntry 10 }

        m4teLineIntvAvailable  OBJECT-TYPE
            SYNTAX  INTEGER   {
                    available(1),
                    na(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Interval Available "
            ::= { m4teLineIntvPerfEntry 11 }


--
--  Line Total Performance Table
--

        m4teLineTotalPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line Total Performance Table"
            ::= { m4teCard 10 }

        m4teLineTotalPerfEntry  OBJECT-TYPE
            SYNTAX  M4teLineTotalPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line total performance table"
            INDEX { m4teLTPSlotIndex , m4teLTPPortIndex }
            ::= { m4teLineTotalPerfTable 1 }

            M4teLineTotalPerfEntry ::= SEQUENCE  {
            m4teLTPSlotIndex             SmallSlotIndex,
            m4teLTPPortIndex             FourPortID,
            m4teLineTotalPerfES          INTEGER,
            m4teLineTotalPerfSES         INTEGER,
            m4teLineTotalPerfBES         INTEGER,
            m4teLineTotalPerfUAS         INTEGER,
            m4teLineTotalPerfCSS         INTEGER,
            m4teLineTotalPerfBPV         INTEGER,
            m4teLineTotalPerfDMlofc      INTEGER
        }

        m4teLTPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLineTotalPerfEntry 1 }

        m4teLTPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLineTotalPerfEntry 2 }

        m4teLineTotalPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teLineTotalPerfEntry 3 }

        m4teLineTotalPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teLineTotalPerfEntry 4 }

        m4teLineTotalPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teLineTotalPerfEntry 5 }

        m4teLineTotalPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teLineTotalPerfEntry 6 }

        m4teLineTotalPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teLineTotalPerfEntry 7 }

        m4teLineTotalPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teLineTotalPerfEntry 8 }

        m4teLineTotalPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teLineTotalPerfEntry 9 }


--
--  Line Seven Days Performance Table
--
        m4teLine7DaysPerfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLine7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 Days Performance Table"
            ::= { m4teCard 11 }

        m4teLine7DaysPerfEntry  OBJECT-TYPE
            SYNTAX  M4teLine7DaysPerfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Line 7 days performance entry"
            INDEX { m4teLDPSlotIndex , m4teLDPPortIndex , m4teLineDaysIndex }
            ::= { m4teLine7DaysPerfTable 1 }

            M4teLine7DaysPerfEntry ::= SEQUENCE  {
            m4teLDPSlotIndex             SmallSlotIndex,
            m4teLDPPortIndex             FourPortID,
            m4teLineDaysIndex            INTEGER,
            m4teLineDateStrIndex         DisplayString,
            m4teLine7DaysPerfES          INTEGER,
            m4teLine7DaysPerfSES         INTEGER,
            m4teLine7DaysPerfBES         INTEGER,
            m4teLine7DaysPerfUAS         INTEGER,
            m4teLine7DaysPerfCSS         INTEGER,
            m4teLine7DaysPerfDMlofc      INTEGER,
            m4teLine7DaysPerfBPV         INTEGER
        }

        m4teLDPSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLine7DaysPerfEntry 1 }

        m4teLDPPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLine7DaysPerfEntry 2 }

        m4teLineDaysIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..7)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days index "
            ::= { m4teLine7DaysPerfEntry 3 }

        m4teLineDateStrIndex  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Seven Days String "
            ::= { m4teLine7DaysPerfEntry 4 }

        m4teLine7DaysPerfES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ES Error Counter "
            ::= { m4teLine7DaysPerfEntry 5 }

        m4teLine7DaysPerfSES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " SES Error Counter "
            ::= { m4teLine7DaysPerfEntry 6 }

        m4teLine7DaysPerfBES  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BES Error Counter "
            ::= { m4teLine7DaysPerfEntry 7 }

        m4teLine7DaysPerfUAS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " UAS Error Counter "
            ::= { m4teLine7DaysPerfEntry 8 }

        m4teLine7DaysPerfCSS  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CSS Error Counter "
            ::= { m4teLine7DaysPerfEntry 9 }

        m4teLine7DaysPerfDMlofc  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " E1 DM or T1 LOFC error Counter "
            ::= { m4teLine7DaysPerfEntry 10 }

        m4teLine7DaysPerfBPV  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BPV Error Counter "
            ::= { m4teLine7DaysPerfEntry 11 }


--
--  Alarm Queue Table
--

        m4teAlarmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teAlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Queue Table "
            ::= { m4teCard 12 }

        m4teAlarmQueueEntry  OBJECT-TYPE
            SYNTAX  M4teAlarmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm queue entry"
            INDEX { m4teAQSlotIndex , m4teAQPortIndex , m4teAlarmQueueIndex }
            ::= { m4teAlarmQueueTable 1 }

            M4teAlarmQueueEntry ::= SEQUENCE {
            m4teAQSlotIndex            SmallSlotIndex,
            m4teAQPortIndex            FourPortID,
            m4teAlarmQueueIndex        INTEGER,
            m4teAlarmQueueString       DisplayString
        }

        m4teAQSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teAlarmQueueEntry 1 }

        m4teAQPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teAlarmQueueEntry 2 }

        m4teAlarmQueueIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Alarm Queue Index(1-40)"
            ::= { m4teAlarmQueueEntry 3 }

        m4teAlarmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { m4teAlarmQueueEntry 4 }


--
--  Alarm History Table
--

        m4teAlarmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Table"
            ::= { m4teCard 13 }

        m4teAlarmHistoryEntry  OBJECT-TYPE
            SYNTAX  M4teAlarmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Alarm history entry"
            INDEX { m4teAHSlotIndex , m4teAHPortIndex , m4teAlarmHistoryIndex }
            ::= { m4teAlarmHistoryTable 1 }

            M4teAlarmHistoryEntry ::= SEQUENCE {
            m4teAHSlotIndex              SmallSlotIndex,
            m4teAHPortIndex              FourPortID,
            m4teAlarmHistoryIndex        INTEGER,
            m4teThreshold                INTEGER,
            m4teCurrentState             INTEGER,
            m4teCurrentCount             INTEGER,
            m4teAlarm                    AlarmSeverity
        }

        m4teAHSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teAlarmHistoryEntry 1 }

        m4teAHPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teAlarmHistoryEntry 2 }

        m4teAlarmHistoryIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    raiYelLine(1),
                    aisLine(2),
                    losLine(3),
                    lofLine(4),
                    bpvLine(5),
                    essLine(6),
                    uasLine(7),
                    cssLine(8),
                    tpca(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Index "
            ::= { m4teAlarmHistoryEntry 3 }

        m4teThreshold  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Threshold Value "
            ::= { m4teAlarmHistoryEntry 4 }

        m4teCurrentState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current State"
            ::= { m4teAlarmHistoryEntry 5 }

        m4teCurrentCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Current Count "
            ::= { m4teAlarmHistoryEntry 6 }

        m4teAlarm  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm History Alarm State"
            ::= { m4teAlarmHistoryEntry 7 }


--
--  Line Availability Table
--

        m4teLineAvailTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE line control table."
            ::= { m4teCard 14 }

        m4teLineAvailEntry  OBJECT-TYPE
            SYNTAX  M4teLineAvailEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE line control entry."
            INDEX { m4teLASlotIndex , m4teLAPortIndex }
            ::= { m4teLineAvailTable 1 }

            M4teLineAvailEntry ::= SEQUENCE {
            m4teLASlotIndex              SmallSlotIndex,
            m4teLAPortIndex              FourPortID,
            m4teAvailableSeconds         DisplayString,
            m4teUnavailableSeconds       DisplayString,
            m4teLineAvailability         DisplayString
        }

        m4teLASlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLineAvailEntry 1 }

        m4teLAPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLineAvailEntry 2 }

        m4teAvailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Seconds"
            ::= { m4teLineAvailEntry 3 }

        m4teUnavailableSeconds  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Unavailable Seconds"
            ::= { m4teLineAvailEntry 4 }

        m4teLineAvailability  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE(0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line Available Percentage"
            ::= { m4teLineAvailEntry 5 }


--
--  Alarm Control Table
--

        m4teAlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE alarm control table."
            ::= { m4teCard 15 }

        m4teAlarmControlEntry  OBJECT-TYPE
            SYNTAX  M4teAlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE alarm control table."
            INDEX { m4teACSlotIndex , m4teACPortIndex }
            ::= { m4teAlarmControlTable 1 }

            M4teAlarmControlEntry ::= SEQUENCE {
            m4teACSlotIndex          SmallSlotIndex,
            m4teACPortIndex          FourPortID,
            m4teRaiYel               AlarmSeverity,
            m4teAIS                  AlarmSeverity,
            m4teLOS                  AlarmSeverity,
            m4teLOF                  AlarmSeverity,
            m4teBPV                  AlarmSeverity,
            m4teES                   AlarmSeverity,
            m4teUAS                  AlarmSeverity,
            m4teCSS                  AlarmSeverity,
            m4teTCPA                 AlarmSeverity
        }

        m4teACSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teAlarmControlEntry 1 }

        m4teACPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teAlarmControlEntry 2 }

        m4teRaiYel  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "E1 RAI or T1 YEL State"
            ::= { m4teAlarmControlEntry 3 }

        m4teAIS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "AIS State"
            ::= { m4teAlarmControlEntry 4 }

        m4teLOS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOS State"
            ::= { m4teAlarmControlEntry 5 }

        m4teLOF  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LOF State"
            ::= { m4teAlarmControlEntry 6 }

        m4teBPV  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "BPV State"
            ::= { m4teAlarmControlEntry 7 }

        m4teES   OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "ES State"
            ::= { m4teAlarmControlEntry 8 }

        m4teUAS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "UAS State"
            ::= { m4teAlarmControlEntry 9 }

        m4teCSS  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "CSS State"
            ::= { m4teAlarmControlEntry 10 }

        m4teTCPA  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TCPA State"
            ::= { m4teAlarmControlEntry 11 }


--
--  Threshold Control Table
--

        m4teThresholdCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE alarm control table."
            ::= { m4teCard 16 }

        m4teThresholdCtrlEntry  OBJECT-TYPE
            SYNTAX  M4teThresholdCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE alarm control entry."
            INDEX { m4teTCSlotIndex , m4teTCPortIndex }
            ::= { m4teThresholdCtrlTable 1 }

            M4teThresholdCtrlEntry ::= SEQUENCE {
            m4teTCSlotIndex          SmallSlotIndex,
            m4teTCPortIndex          FourPortID,
            m4teThresholdBPV         INTEGER,
            m4teThresholdESS         INTEGER,
            m4teThresholdUAS         INTEGER,
            m4teThresholdCSS         INTEGER,
            m4teThresholdTCPA        INTEGER
        }

        m4teTCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teThresholdCtrlEntry 1 }

        m4teTCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teThresholdCtrlEntry 2 }

        m4teThresholdBPV  OBJECT-TYPE
            SYNTAX  INTEGER (5..9)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of BPV"
            ::= { m4teThresholdCtrlEntry 3 }

        m4teThresholdESS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of ESS"
            ::= { m4teThresholdCtrlEntry 4 }

        m4teThresholdUAS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of UAS"
            ::= { m4teThresholdCtrlEntry 5 }

        m4teThresholdCSS  OBJECT-TYPE
            SYNTAX  INTEGER (1..900)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of CS"
            ::= { m4teThresholdCtrlEntry 6 }

        m4teThresholdTCPA  OBJECT-TYPE
            SYNTAX  INTEGER (1..2048)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Threshold of TCPA "
            ::= { m4teThresholdCtrlEntry 7 }

--
-- Line Diagnostic Control Table
--

        m4teLineDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teLineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE line diagostic table."
            ::= { m4teCard 17 }

        m4teLineDiagControlEntry  OBJECT-TYPE
            SYNTAX  M4teLineDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE line diagostic entry."
            INDEX { m4teDCSlotIndex , m4teDCPortIndex }
            ::= { m4teLineDiagControlTable 1 }

            M4teLineDiagControlEntry ::= SEQUENCE {
            m4teDCSlotIndex              SmallSlotIndex,
            m4teDCPortIndex              FourPortID,
            m4teLoopbackType             INTEGER,
            m4teLoopbackStatus           INTEGER,
            m4teBERTControl              INTEGER,
            m4teBERTStatus               INTEGER,
            m4teBERTElapseSeconds        INTEGER,
            m4teBERTErrorSeconds         INTEGER,
            m4teBERTErrorCounts          INTEGER,
            m4teInbandLoopbackPeriod     INTEGER
        }

        m4teDCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teLineDiagControlEntry 1 }

        m4teDCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teLineDiagControlEntry 2 }

        m4teLoopbackType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    localLoopback(2),
                    payloadLoopback(3),
                    lineLoopback(4),
                    e1RemotePLBactive(5),
                    e1RemoteLLBactive(6),
                    e1RemotePLBdeactive(7),
                    e1RemoteLLBdeactive(8),
                    t1RemoteLlbInbandActive(11),
                    t1RemotePlbAttActive(12),
                    t1RemotePlbAnsiActive(13),
                    t1RemoteLlbAnsiActive(14),
                    t1RemoteLlbInbandDeactive(15),
                    t1RemotePlbAttDeactive(16),
                    t1RemotePlbAnsiDeactive(17),
                    t1RemoteLlbAnsiDeactive(18)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "M4TE Loopback Type"
            ::= { m4teLineDiagControlEntry 3 }

        m4teLoopbackStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopbackNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE Loopback Status"
            ::= { m4teLineDiagControlEntry 4 }

        m4teBERTControl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bertDeactive(1),
                    bertActiveFull(2),
                    bertResetErrorCount(3),
                    bertInjectError(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "M4TE BERT (E1 PRBS or T1 QRSS) Control"
            ::= { m4teLineDiagControlEntry 5 }

        m4teBERTStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bertSync(1),
                    bertUnsync(2),
                    bertNotActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE BERT Status"
            ::= { m4teLineDiagControlEntry 6 }

        m4teBERTElapseSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE BERT Elapse Seconds"
            ::= { m4teLineDiagControlEntry 7 }

        m4teBERTErrorSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE BERT Error Seconds"
            ::= { m4teLineDiagControlEntry 8 }

        m4teBERTErrorCounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE BERT Error Counts"
            ::= { m4teLineDiagControlEntry 9 }

        m4teInbandLoopbackPeriod  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "period(in seconds) of inband local, payload, or line loopback"
            ::= { m4teLineDiagControlEntry 10 }

--
--  Command Control Table
--

        m4teCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE command control table."
            ::= { m4teCard 18 }

        m4teCommandControlEntry  OBJECT-TYPE
            SYNTAX  M4teCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE command control entry."
            INDEX { m4teCCSlotIndex , m4teCCPortIndex }
            ::= { m4teCommandControlTable 1 }

            M4teCommandControlEntry ::= SEQUENCE {
            m4teCCSlotIndex              SmallSlotIndex,
            m4teCCPortIndex              FourPortID,
            m4teAlarmQueueReset          INTEGER,
            m4teUserPerfReset            INTEGER,
            m4teAlarmHistoryReset        INTEGER,
            m4teCardReset                INTEGER,
            m4teCardLoadDefault          INTEGER
        }

        m4teCCSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teCommandControlEntry 1 }

        m4teCCPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teCommandControlEntry 2 }

        m4teAlarmQueueReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm Queue "
            ::= { m4teCommandControlEntry 3 }

        m4teUserPerfReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset User Performance"
            ::= { m4teCommandControlEntry 4 }

        m4teAlarmHistoryReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Alarm History"
            ::= { m4teCommandControlEntry 5 }

        m4teCardReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reset Card"
            ::= { m4teCommandControlEntry 6 }

        m4teCardLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0),
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Card Load Default"
            ::= { m4teCommandControlEntry 7 }


--
--  SYSTEM Information Table
--

        m4teSystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE system information table."
            ::= { m4teCard 19 }

        m4teSystemInfoEntry  OBJECT-TYPE
            SYNTAX  M4teSystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE system information entry."
            INDEX { m4teSISlotIndex }
            ::= { m4teSystemInfoTable 1 }

            M4teSystemInfoEntry ::= SEQUENCE {
            m4teSISlotIndex              SmallSlotIndex,
            m4teFirmwareVersion          DisplayString,
            m4teHardwareVersion          DisplayString
        }

        m4teSISlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teSystemInfoEntry 1 }

        m4teFirmwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Firmware Version"
            ::= { m4teSystemInfoEntry 2 }

        m4teHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Hardware Version"
            ::= { m4teSystemInfoEntry 3 }


--
--  M4TE signaling convertion setup Table
--

        m4teSigConvertSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teSigConvertSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE signaling convertion setup table."
            ::= { m4teCard 20 }

        m4teSigConvertSetupEntry  OBJECT-TYPE
            SYNTAX  M4teSigConvertSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "M4TE signaling convertion setup entry."
            INDEX { m4teScSlotIndex , m4teScPortIndex , m4teScTsIndex }
            ::= { m4teSigConvertSetupTable 1 }

            M4teSigConvertSetupEntry ::= SEQUENCE {
            m4teScSlotIndex              SmallSlotIndex,
            m4teScPortIndex              FourPortID,
            m4teScTsIndex                INTEGER,
            m4teScTsType                 INTEGER,
            m4teScConvertionTable        INTEGER
        }

        m4teScSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teSigConvertSetupEntry 1 }

        m4teScPortIndex  OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE port"
            ::= { m4teSigConvertSetupEntry 2 }

        m4teScTsIndex  OBJECT-TYPE
            SYNTAX  INTEGER (1..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TS index"
            ::= { m4teSigConvertSetupEntry 3 }

        m4teScTsType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    data(1),
                    voice(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "TS type"
            ::= { m4teSigConvertSetupEntry 4 }

        m4teScConvertionTable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noConvert(1),
                    table1(2),
                    table2(3),
                    table3(4),
                    table4(5),
                    table5(6),
                    table6(7),
                    table7(8),
                    table8(9),
                    table9(10),
                    table10(11),
                    table11(12),
                    table12(13),
                    table13(14),
                    table14(15),
                    table15(16),
                    table16(17)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "unsing table X"
            ::= { m4teSigConvertSetupEntry 5 }


--
--  M4TE Customer Information Table
--

        m4teCustomerInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF M4teCustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Customer Information table."
            ::= { m4teCard 99 }

        m4teCustomerInfoEntry  OBJECT-TYPE
            SYNTAX  M4teCustomerInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "Customer Information entry."
            INDEX { m4teCISlotIndex , m4teCIPortIndex }
            ::= { m4teCustomerInfoTable 1 }

            M4teCustomerInfoEntry ::= SEQUENCE {
            m4teCISlotIndex              SmallSlotIndex,
            m4teCIPortIndex              FourPortID,
            m4teCICustomerInfo           DisplayString
        }

        m4teCISlotIndex    OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "M4TE slot"
            ::= { m4teCustomerInfoEntry 1 }

        m4teCIPortIndex    OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port number"
            ::= { m4teCustomerInfoEntry 2 }

        m4teCICustomerInfo  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..64) )
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Customer information"
            ::= { m4teCustomerInfoEntry 3 }


        m4teTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of M4TE"
            ::= { m4teCard 100 }


--======================================================================--
--======================================================================--
--  dte6-card MIB
--======================================================================--
--======================================================================--

--
-- DTE6 Mode Table
--

        dte6ModeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6ModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { dte6-card 1 }

        dte6ModeEntry  OBJECT-TYPE
            SYNTAX  Dte6ModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { dte6ModeSlotIndex }
            ::= { dte6ModeTable 1 }

            Dte6ModeEntry ::= SEQUENCE {
            dte6ModeSlotIndex     LargeSlotIndex,
            dte6ModeCardMode      INTEGER
        }

        dte6ModeSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6ModeEntry 1 }

        dte6ModeCardMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    m1(1),
                    m2(2),
                    m3(3),
                    m4(4),
                    m5(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Card Mode"
            ::= { dte6ModeEntry 2 }


--
--  DTE6 Configuration
--

        dte6ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Interface Configuration table."
            ::= { dte6-card 2 }

        dte6ConfigEntry  OBJECT-TYPE
            SYNTAX  Dte6ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Configuration table."
            INDEX { dte6CfgSlotIndex , dte6CfgPortIndex }
            ::= { dte6ConfigTable 1 }

            Dte6ConfigEntry ::= SEQUENCE {
            dte6CfgSlotIndex                LargeSlotIndex,
            dte6CfgPortIndex                SixPortID,
            dte6CfgInterface                INTEGER,
            dte6CfgMux                      INTEGER,
            dte6CfgSyncMode                 INTEGER,
            dte6CfgRate                     INTEGER,
            dte6CfgBitPosition              INTEGER,
            dte6CfgClockPolarity            INTEGER,
            dte6CfgDataPolarity             INTEGER,
            dte6CfgRTS                      INTEGER,
            dte6CfgTTM                      INTEGER,
            dte6CfgBitPosition0Used         INTEGER,
            dte6CfgBitPosition1Used         INTEGER,
            dte6CfgBitPosition2Used         INTEGER,
            dte6CfgBitPosition3Used         INTEGER,
            dte6CfgBitPosition4Used         INTEGER,
            dte6CfgBitPosition5Used         INTEGER,
            dte6CfgBitPosition6Used         INTEGER,
            dte6CfgBitPosition7Used         INTEGER,
            dte6CfgWarrning                 DisplayString
        }

        dte6CfgSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6ConfigEntry 1 }

        dte6CfgPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6ConfigEntry 2 }

        dte6CfgInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs422(2),
                    x21(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Interface mode"
            ::= { dte6ConfigEntry 3 }

        dte6CfgMux  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonMux(1),
                    mux(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 MUX mode"
            ::= { dte6ConfigEntry 4 }


        dte6CfgSyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    async8(1),
                    async9(2),
                    async10(3),
                    async11(4),
                    async12(5),
                    sync(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Sync mode"
            ::= { dte6ConfigEntry 5 }

        dte6CfgRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0-6K(1),
                    r1-2K(2),
                    r2-4K(3),
                    r4-8K(4),
                    r9-6K(5),
                    r19-2K(6),
                    r38-4K(7),
                    r48K(8),
                    r64K(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Base Rate"
            ::= { dte6ConfigEntry 6 }

        dte6CfgBitPosition  OBJECT-TYPE
            SYNTAX  INTEGER {
                    position-0(1),
                    position-1(2),
                    position-2(3),
                    position-3(4),
                    position-4(5),
                    position-5(6),
                    position-6(7),
                    position-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bit position"
            ::= { dte6ConfigEntry 7 }

        dte6CfgClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Clock Polarity"
            ::= { dte6ConfigEntry 8 }

        dte6CfgDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Data Polarity"
            ::= { dte6ConfigEntry 9 }

        dte6CfgRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS Mode"
            ::= {  dte6ConfigEntry 10 }

        dte6CfgTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttmOff(1),
                    ttmOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 TTM Mode"
            ::= { dte6ConfigEntry 11 }

        dte6CfgBitPosition0Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 0 Stream Position Used"
            ::= { dte6ConfigEntry 12 }

        dte6CfgBitPosition1Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 1 Stream Position Used"
            ::= { dte6ConfigEntry 13 }

        dte6CfgBitPosition2Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 2 Stream Position Used"
            ::= { dte6ConfigEntry 14 }

        dte6CfgBitPosition3Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 3 Stream Position Used"
            ::= { dte6ConfigEntry 15 }

        dte6CfgBitPosition4Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 4 Stream Position Used"
            ::= { dte6ConfigEntry 16 }

        dte6CfgBitPosition5Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 5 Stream Position Used"
            ::= { dte6ConfigEntry 17 }

        dte6CfgBitPosition6Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 6 Stream Position Used"
            ::= { dte6ConfigEntry 18 }

        dte6CfgBitPosition7Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Bits 7 Stream Position Used"
            ::= { dte6ConfigEntry 19 }

        dte6CfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 map setup warning"
            ::= { dte6ConfigEntry 20 }


--
--  DTE6 Status
--

        dte6StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Status table."
            ::= { dte6-card 3}

        dte6StatusEntry  OBJECT-TYPE
            SYNTAX  Dte6StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Status table."
            INDEX { dte6StatusSlotIndex , dte6StatusPortIndex }
            ::= { dte6StatusTable 1 }

            Dte6StatusEntry ::= SEQUENCE {
            dte6StatusSlotIndex         LargeSlotIndex,
            dte6StatusPortIndex         SixPortID,
            dte6StatusS1                INTEGER,
            dte6StatusS3                INTEGER,
            dte6StatusS4                INTEGER,
            dte6StatusS6                INTEGER,
            dte6StatusS8                INTEGER,
            dte6StatusS9                INTEGER,
            dte6StatusE4                INTEGER,
            dte6StatusE5                INTEGER,
            dte6StatusE6                INTEGER,
            dte6StatusX                 INTEGER,
            dte6StatusDteCTS            INTEGER,
            dte6StatusDteDCD            INTEGER,
            dte6StatusRTSloss           INTEGER,
            dte6StatusEXTCLKloss        INTEGER,
            dte6StatusDSRstatus         INTEGER,
            dte6StatusCTSstatus         INTEGER,
            dte6StatusDCDstatus         INTEGER,
            dte6StatusDTRstatus         INTEGER,
            dte6StatusRTSstatus         INTEGER,
            dte6StatusRemoteAlarm       INTEGER,
            dte6StatusFrameSync         INTEGER,
            dte6StatusRemoteS1          INTEGER,
            dte6StatusRemoteS3          INTEGER,
            dte6StatusRemoteS4          INTEGER,
            dte6StatusRemoteS6          INTEGER,
            dte6StatusRemoteS8          INTEGER,
            dte6StatusRemoteS9          INTEGER,
            dte6StatusRemoteE4          INTEGER,
            dte6StatusRemoteE5          INTEGER,
            dte6StatusRemoteE6          INTEGER,
            dte6StatusRemoteX           INTEGER
        }

        dte6StatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6StatusEntry 1 }

        dte6StatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6StatusEntry 2 }

        dte6StatusS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S1"
            ::= { dte6StatusEntry 3 }

        dte6StatusS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S3"
            ::= { dte6StatusEntry 4 }

        dte6StatusS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S4"
            ::= { dte6StatusEntry 5 }

        dte6StatusS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S6"
            ::= { dte6StatusEntry 6 }

        dte6StatusS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S8"
            ::= { dte6StatusEntry 7 }

        dte6StatusS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit S9"
            ::= { dte6StatusEntry 8 }

        dte6StatusE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit E4"
            ::= { dte6StatusEntry 9 }

        dte6StatusE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit E5"
            ::= { dte6StatusEntry 10 }

        dte6StatusE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit E6"
            ::= { dte6StatusEntry 11 }

        dte6StatusX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rtswithFrameSYNC(12),
                    frameSYNC(13),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit X"
            ::= { dte6StatusEntry 12 }

        dte6StatusDteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit DTE CTS"
            ::= { dte6StatusEntry 13 }

        dte6StatusDteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit DTE DCD"
            ::= { dte6StatusEntry 14 }

        dte6StatusRTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS loss"
            ::= { dte6StatusEntry 15 }

        dte6StatusEXTCLKloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 EXT-CLK loss"
            ::= { dte6StatusEntry 16 }

        dte6StatusDSRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DSR"
            ::= { dte6StatusEntry 17 }

        dte6StatusCTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 CTS"
            ::= { dte6StatusEntry 18 }

        dte6StatusDCDstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DCD"
            ::= { dte6StatusEntry 19 }

        dte6StatusDTRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DTR"
            ::= { dte6StatusEntry 20 }

        dte6StatusRTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS"
            ::= { dte6StatusEntry 21 }

        dte6StatusRemoteAlarm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Rdmote_X"
            ::= { dte6StatusEntry 22 }

        dte6StatusFrameSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Local Sync"
            ::= { dte6StatusEntry 23 }

        dte6StatusRemoteS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S1"
            ::= { dte6StatusEntry 24 }

        dte6StatusRemoteS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S3"
            ::= { dte6StatusEntry 25 }

        dte6StatusRemoteS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S4"
            ::= { dte6StatusEntry 26 }

        dte6StatusRemoteS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S6"
            ::= { dte6StatusEntry 27 }

        dte6StatusRemoteS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S8"
            ::= { dte6StatusEntry 28 }

        dte6StatusRemoteS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit S9"
            ::= { dte6StatusEntry 29 }

        dte6StatusRemoteE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit E4"
            ::= { dte6StatusEntry 30}

        dte6StatusRemoteE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit E5"
            ::= { dte6StatusEntry 31 }

        dte6StatusRemoteE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit E6"
            ::= { dte6StatusEntry 32 }

        dte6StatusRemoteX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 remote status bit X"
            ::= { dte6StatusEntry 33 }

--
--  Alarm Control Table
--

        dte6AlarmControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 alarm control table."
            ::= { dte6-card 4 }

        dte6AlarmControlEntry  OBJECT-TYPE
            SYNTAX  Dte6AlarmControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 alarm control table."
            INDEX { dte6AlarmSlotIndex , dte6AlarmPortIndex }
            ::= { dte6AlarmControlTable 1 }

            Dte6AlarmControlEntry ::= SEQUENCE {
            dte6AlarmSlotIndex           LargeSlotIndex,
            dte6AlarmPortIndex           SixPortID,
            dte6AlarmSetup               AlarmSeverity,
            dte6AlarmM4LOLCSetup         AlarmSeverity,
            dte6AlarmM4LOCHSetup         AlarmSeverity,
            dte6AlarmM4CRESetup          AlarmSeverity
        }

        dte6AlarmSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6AlarmControlEntry 1 }

        dte6AlarmPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6AlarmControlEntry 2 }

        dte6AlarmSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { dte6AlarmControlEntry 3 }

        dte6AlarmM4LOLCSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 LOLC is enabled or not"
            ::= { dte6AlarmControlEntry 4 }

        dte6AlarmM4LOCHSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 LOCH is enabled or not"
            ::= { dte6AlarmControlEntry 5 }

        dte6AlarmM4CRESetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 CRE is enabled or not"
            ::= { dte6AlarmControlEntry 6 }

--
--  Alarm History Table
--

        dte6AlmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: dte6AlmHistoryUnitIndex "
            ::= { dte6-card 5 }

        dte6AlmHistoryEntry  OBJECT-TYPE
            SYNTAX  Dte6AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { dte6AlmHisSlotIndex , dte6AlmHisPortIndex }
            ::= { dte6AlmHistoryTable 1 }

            Dte6AlmHistoryEntry ::= SEQUENCE {
            dte6AlmHisSlotIndex      LargeSlotIndex,
            dte6AlmHisPortIndex      SixPortID,
            dte6AlmHistoryState          INTEGER,
            dte6AlmHistoryCount          Counter,
            dte6AlmHistoryEnable         AlarmSeverity,
            dte6AlmHisM4LOLCState        INTEGER,
            dte6AlmHisM4LOLCCount        Counter,
            dte6AlmHisM4LOLCEnable       AlarmSeverity,
            dte6AlmHisM4LOCHState        INTEGER,
            dte6AlmHisM4LOCHCount        Counter,
            dte6AlmHisM4LOCHEnable       AlarmSeverity,
            dte6AlmHisM4CREState         INTEGER,
            dte6AlmHisM4CRECount         Counter,
            dte6AlmHisM4CREEnable        AlarmSeverity,
            dte6AlmHisResetCount         INTEGER
        }

        dte6AlmHisSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6AlmHistoryEntry 1 }

        dte6AlmHisPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6AlmHistoryEntry 2 }

        dte6AlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { dte6AlmHistoryEntry 3 }

        dte6AlmHistoryCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { dte6AlmHistoryEntry 4 }

        dte6AlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { dte6AlmHistoryEntry 5 }

        dte6AlmHisM4LOLCState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 LOLC Current State"
            ::= { dte6AlmHistoryEntry 6 }

        dte6AlmHisM4LOLCCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 LOLC Count which happened "
            ::= { dte6AlmHistoryEntry 7 }

        dte6AlmHisM4LOLCEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 LOLC is enabled or not"
            ::= { dte6AlmHistoryEntry 8 }

        dte6AlmHisM4LOCHState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 LOCH Current State"
            ::= { dte6AlmHistoryEntry 9 }

        dte6AlmHisM4LOCHCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 LOCH Count which happened "
            ::= { dte6AlmHistoryEntry 10 }

        dte6AlmHisM4LOCHEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 LOCH is enabled or not"
            ::= { dte6AlmHistoryEntry 11 }

        dte6AlmHisM4CREState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 CRE Current State"
            ::= { dte6AlmHistoryEntry 12 }

        dte6AlmHisM4CRECount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm M4 CRE Count which happened "
            ::= { dte6AlmHistoryEntry 13 }

        dte6AlmHisM4CREEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm M4 CRE is enabled or not"
            ::= { dte6AlmHistoryEntry 14 }

        dte6AlmHisResetCount  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset alarm counter"
            ::= { dte6AlmHistoryEntry 15 }

--
-- Diagnostic Control Table
--

        dte6DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { dte6-card 6 }

        dte6DiagControlEntry  OBJECT-TYPE
            SYNTAX  Dte6DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { dte6DiagCtrlSlotIndex , dte6DiagCtrlPortIndex }
            ::= { dte6DiagControlTable 1 }

            Dte6DiagControlEntry ::= SEQUENCE {
            dte6DiagCtrlSlotIndex     LargeSlotIndex,
            dte6DiagCtrlPortIndex     SixPortID,
            dte6NearLoopback          INTEGER
        }

        dte6DiagCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6DiagControlEntry 1 }

        dte6DiagCtrlPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6DiagControlEntry 2 }

        dte6NearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    toDTE(2),
                    toLocal(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Loopback Type"
            ::= { dte6DiagControlEntry 3 }

--
-- DTE6 Card Control Table
--

        dte6CardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Card control table."
            ::= { dte6-card 7 }

        dte6CardControlEntry  OBJECT-TYPE
            SYNTAX  Dte6CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 6UDTEA Card control table."
            INDEX { dte6CardIndex }
            ::= { dte6CardControlTable 1 }

            Dte6CardControlEntry ::= SEQUENCE {
            dte6CardIndex                LargeSlotIndex,
            dte6Reset                    INTEGER,
            dte6LoadDefault              INTEGER
        }

        dte6CardIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6CardControlEntry 1 }

        dte6Reset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset dte6 card"
            ::= { dte6CardControlEntry 2 }

        dte6LoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { dte6CardControlEntry 3 }


--
--  DTE6 System Information Table
--

        dte6SystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 system information table."
            ::= { dte6-card 8}

        dte6SystemInfoEntry  OBJECT-TYPE
            SYNTAX  Dte6SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 system information table."
            INDEX { dte6SISlotIndex }
            ::= { dte6SystemInfoTable 1 }

            Dte6SystemInfoEntry ::= SEQUENCE {
            dte6SISlotIndex            LargeSlotIndex,
            dte6PROMVersion            DisplayString,
            dte6HardwareVersion        DisplayString,
            dte6FpgaVersion            DisplayString,
            dte6Bank1Version           DisplayString,
            dte6Bank2Version           DisplayString,
            dte6ActiveBank             INTEGER,
            dte6HardwareSupport        INTEGER
        }

        dte6SISlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6SystemInfoEntry 1 }

        dte6PROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE6 PROM Version"
            ::= { dte6SystemInfoEntry 2 }

        dte6HardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " DTE6 Hardware Version"
            ::= { dte6SystemInfoEntry 3 }

        dte6FpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { dte6SystemInfoEntry 4 }

        dte6Bank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { dte6SystemInfoEntry 5 }

        dte6Bank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { dte6SystemInfoEntry 6}

        dte6ActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { dte6SystemInfoEntry 7 }

        dte6HardwareSupport    OBJECT-TYPE
            SYNTAX  INTEGER{
                    r1(1),
                    r2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Revision1 support m1 m2 m3 m4, Revision2 support m1 m2 m3 m4 m5"
            ::= { dte6SystemInfoEntry 8 }

--
--  DTE6 M2 Configuration
--

        dte6M2ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M2ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Interface M2 Configuration table."
            ::= { dte6-card 9 }

        dte6M2ConfigEntry  OBJECT-TYPE
            SYNTAX  Dte6M2ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Configuration table."
            INDEX { dte6M2CfgSlotIndex , dte6M2CfgPortIndex }
            ::= { dte6M2ConfigTable 1 }

            Dte6M2ConfigEntry ::= SEQUENCE {
            dte6M2CfgSlotIndex                LargeSlotIndex,
            dte6M2CfgPortIndex                SixPortID,
            dte6M2CfgInterface                INTEGER,
            dte6M2CfgChannel                  INTEGER,
            dte6M2CfgDS0Rate                  INTEGER,
            dte6M2CfgClockPolarity            INTEGER,
            dte6M2CfgDataPolarity             INTEGER,
            dte6M2CfgTTM                      INTEGER,
            dte6M2CfgRTS                      INTEGER,
            dte6M2CfgDTR                      INTEGER,
            dte6M2CfgOversamplingRate         INTEGER,
            dte6M2CfgSupportDataRate          DisplayString,
            dte6M2CfgWarrning                 DisplayString,
            dte6M2CfgV54                      INTEGER
        }

        dte6M2CfgSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6M2ConfigEntry 1 }

        dte6M2CfgPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6M2ConfigEntry 2 }

        dte6M2CfgInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs422(2),
                    x21(3),
                    v35(4),
                    v36(5),
                    eia530Rs449(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Interface mode"
            ::= { dte6M2ConfigEntry 3 }

        dte6M2CfgChannel  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Channel"
            ::= { dte6M2ConfigEntry 4 }


        dte6M2CfgDS0Rate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r64K(1),
                    r56K(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DS0 Rate"
            ::= { dte6M2ConfigEntry 5 }

        dte6M2CfgClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Clock Polarity"
            ::= { dte6M2ConfigEntry 6 }

        dte6M2CfgDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Data Polarity"
            ::= { dte6M2ConfigEntry 7 }

        dte6M2CfgTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttmOff(1),
                    ttmOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 TTM Mode"
            ::= { dte6M2ConfigEntry 8 }

        dte6M2CfgRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS Mode"
            ::= { dte6M2ConfigEntry 9 }

        dte6M2CfgDTR  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dtrActive(1),
                    dtrPermanent(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DTR Mode"
            ::= {  dte6M2ConfigEntry 10 }

        dte6M2CfgOversamplingRate  OBJECT-TYPE
            SYNTAX  INTEGER (0..384)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Oversampling Rate"
            ::= { dte6M2ConfigEntry 11 }

        dte6M2CfgSupportDataRate  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..160) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Support Data Rate"
            ::= { dte6M2ConfigEntry 12 }

        dte6M2CfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Warrning"
            ::= { dte6M2ConfigEntry 13 }

        dte6M2CfgV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    ansi(2),
                    itu(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 V.54 Setup"
            ::= { dte6M2ConfigEntry 14 }

--
--  DTE6 M2 Status
--

        dte6M2StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M2StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 M2Status table."
            ::= { dte6-card 10}

        dte6M2StatusEntry  OBJECT-TYPE
            SYNTAX  Dte6M2StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Status table."
            INDEX { dte6M2StatusSlotIndex , dte6M2StatusPortIndex }
            ::= { dte6M2StatusTable 1 }

            Dte6M2StatusEntry ::= SEQUENCE {
            dte6M2StatusSlotIndex         LargeSlotIndex,
            dte6M2StatusPortIndex         SixPortID,
            dte6M2StatusDteDCD            INTEGER,
            dte6M2StatusRTSloss           INTEGER,
            dte6M2StatusEXTCLKloss        INTEGER,
            dte6M2StatusDSRstatus         INTEGER,
            dte6M2StatusCTSstatus         INTEGER,
            dte6M2StatusDCDstatus         INTEGER,
            dte6M2StatusDTRstatus         INTEGER,
            dte6M2StatusRTSstatus         INTEGER,
            dte6M2StatusRxBytesCounter    INTEGER,
            dte6M2StatusTxBytesCounter    INTEGER
        }

        dte6M2StatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6M2StatusEntry 1 }

        dte6M2StatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6M2StatusEntry 2 }

        dte6M2StatusDteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Status bit DTE DCD"
            ::= { dte6M2StatusEntry 3 }

        dte6M2StatusRTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS loss"
            ::= { dte6M2StatusEntry 4 }

        dte6M2StatusEXTCLKloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 EXT-CLK loss"
            ::= { dte6M2StatusEntry 5 }

        dte6M2StatusDSRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DSR"
            ::= { dte6M2StatusEntry 6 }

        dte6M2StatusCTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 CTS"
            ::= { dte6M2StatusEntry 7 }

        dte6M2StatusDCDstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DCD"
            ::= { dte6M2StatusEntry 8 }

        dte6M2StatusDTRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DTR"
            ::= { dte6M2StatusEntry 9 }

        dte6M2StatusRTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS"
            ::= { dte6M2StatusEntry 10 }

        dte6M2StatusRxBytesCounter  OBJECT-TYPE
            SYNTAX  INTEGER (0..131071)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RxBytesCounter"
            ::= { dte6M2StatusEntry 11 }

        dte6M2StatusTxBytesCounter  OBJECT-TYPE
            SYNTAX  INTEGER (0..131071)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 TxBytesCounter"
            ::= { dte6M2StatusEntry 12 }


--
-- DTE6 M2 Diagnostic Control Table
--

        dte6M2DiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M2DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 M2 Diagnostic Control Table."
            ::= { dte6-card 11 }

        dte6M2DiagControlEntry  OBJECT-TYPE
            SYNTAX  Dte6M2DiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 diagnostic control table."
            INDEX { dte6M2DiagCtrlSlotIndex , dte6M2DiagCtrlPortIndex }
            ::= { dte6M2DiagControlTable 1 }

            Dte6M2DiagControlEntry ::= SEQUENCE {
            dte6M2DiagCtrlSlotIndex            LargeSlotIndex,
            dte6M2DiagCtrlPortIndex            SixPortID,
            dte6M2DiagCtrlloopbacktype         INTEGER,
            dte6M2DiagCtrlloopbackstatus       INTEGER,
            dte6M2DiagCtrlbertctrl             INTEGER,
            dte6M2DiagCtrlbertstatus           INTEGER,
            dte6M2DiagCtrlelapseseconds        INTEGER,
            dte6M2DiagCtrlerrorseconds         INTEGER,
            dte6M2DiagCtrlerrorcounts          INTEGER
        }

        dte6M2DiagCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6M2DiagControlEntry 1 }

        dte6M2DiagCtrlPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { dte6M2DiagControlEntry 2 }

        dte6M2DiagCtrlloopbacktype  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noloopback(1),
                    loopbackToDTE(2),
                    loopbackToLine(3),
                    remoteV54active(4),
                    remoteV54deactive(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M2 Loopback Type"
            ::= { dte6M2DiagControlEntry 3 }

        dte6M2DiagCtrlloopbackstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    success(1),
                    fail(2),
                    loopbacknotactive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M2 Loopback Status"
            ::= { dte6M2DiagControlEntry 4 }

        dte6M2DiagCtrlbertctrl  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bertDEACTIVE(1),
                    bertACTIVEDTE(2),
                    bertRESETERRORCOUNT(3),
                    bertINJECTERROR(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M2 PRBS/QRSS Control"
            ::= { dte6M2DiagControlEntry 5 }

        dte6M2DiagCtrlbertstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    bertSYNC(1),
                    bertUNSYNC(2),
                    bertNOTACTIVE(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M2 PRBS/QRSS Status"
            ::= { dte6M2DiagControlEntry 6 }

        dte6M2DiagCtrlelapseseconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte6 M2 PRBS/QRSS Elapse Seconds"
            ::= { dte6M2DiagControlEntry 7 }

        dte6M2DiagCtrlerrorseconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte6 M2 PRBS/QRSS Error Seconds"
            ::= { dte6M2DiagControlEntry 8 }

        dte6M2DiagCtrlerrorcounts  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "dte6 M2 PRBS/QRSS Error Counts"
            ::= { dte6M2DiagControlEntry 9 }

--  DTE6 M4 Config
        dte6M4ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M4ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Interface M4 Configuration table."
            ::= { dte6-card 12}

        dte6M4ConfigEntry  OBJECT-TYPE
            SYNTAX  Dte6M4ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Configuration table."
            INDEX  { dte6M4CfgSlotIndex, dte6M4CfgPortIndex }
            ::= { dte6M4ConfigTable 1 }

            Dte6M4ConfigEntry ::= SEQUENCE {
            dte6M4CfgSlotIndex             LargeSlotIndex,
            dte6M4CfgPortIndex             SixPortID,
            dte6M4CfgInterface             INTEGER,
            dte6M4CfgBaudRate              INTEGER,
            dte6M4CfgClkInInverse          INTEGER,
            dte6M4CfgClkOutInverse         INTEGER,
            dte6M4CfgPCMDataInverse        INTEGER,
            dte6M4CfgWarrning              DisplayString
        }

        dte6M4CfgSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 slot index"
            ::= { dte6M4ConfigEntry 1 }

        dte6M4CfgPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, Total 4 ports"
            ::= { dte6M4ConfigEntry 2 }

        dte6M4CfgInterface   OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs422(2),
                    x21(3),
                    v35(4),
                    v36(5),
                    eia530Rs449(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 Interface mode"
            ::= { dte6M4ConfigEntry 3 }

        dte6M4CfgBaudRate   OBJECT-TYPE
            SYNTAX  INTEGER (1..38400)
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 baud rate"
            ::= { dte6M4ConfigEntry 4 }

        dte6M4CfgClkInInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 clock input inverse"
            ::= { dte6M4ConfigEntry 5 }

        dte6M4CfgClkOutInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 clock output inverse"
            ::= { dte6M4ConfigEntry 6 }

        dte6M4CfgPCMDataInverse   OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 M4 PCM data inverse"
            ::= { dte6M4ConfigEntry 7 }

        dte6M4CfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Warrning"
            ::= { dte6M4ConfigEntry 8 }

--  DTE6 M4 Status
        dte6M4StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M4StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 M4Status table."
            ::= { dte6-card 13}

        dte6M4StatusEntry  OBJECT-TYPE
            SYNTAX  Dte6M4StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Status table."
            INDEX  { dte6M4StatusSlotIndex,dte6M4StatusPortIndex }
            ::= { dte6M4StatusTable 1 }

        Dte6M4StatusEntry ::= SEQUENCE {
            dte6M4StatusSlotIndex        LargeSlotIndex,
            dte6M4StatusPortIndex        SixPortID,
            dte6M4StatusLOLC             INTEGER,
            dte6M4StatusLOCH             INTEGER,
            dte6M4StatusCRE              INTEGER,
            dte6M4StatusRxBytesCnt       INTEGER,
            dte6M4StatusTxBytesCnt       INTEGER
        }

        dte6M4StatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6M4StatusEntry 1 }

        dte6M4StatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, Total 4 ports"
            ::= { dte6M4StatusEntry 2 }

        dte6M4StatusLOLC  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Loss Of Clock status "
            ::= { dte6M4StatusEntry 3 }

        dte6M4StatusLOCH  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Loss Of Channel status "
            ::= { dte6M4StatusEntry 4 }

        dte6M4StatusCRE  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Clock Recovery Error status "
            ::= { dte6M4StatusEntry 5 }

        dte6M4StatusRxBytesCnt  OBJECT-TYPE
            SYNTAX  INTEGER (0..131071)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RxBytesCounter"
            ::= { dte6M4StatusEntry 6 }

        dte6M4StatusTxBytesCnt  OBJECT-TYPE
            SYNTAX  INTEGER (0..131071)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 TxBytesCounter"
            ::= { dte6M4StatusEntry 7 }

--  DTE6 M5 Configuration
        dte6M5ConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Dte6M5ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The DTE6 Interface M5 Configuration table."
            ::= { dte6-card 14 }

        dte6M5ConfigEntry  OBJECT-TYPE
            SYNTAX  Dte6M5ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the DTE6 Configuration table."
            INDEX { dte6M5CfgSlotIndex, dte6M5CfgPortIndex }
            ::= { dte6M5ConfigTable 1 }

        Dte6M5ConfigEntry ::= SEQUENCE {
            dte6M5CfgSlotIndex                LargeSlotIndex,
            dte6M5CfgPortIndex                SixPortID,
            dte6M5CfgInterface                INTEGER,
            dte6M5CfgChannel                  INTEGER,
            dte6M5CfgDS0Rate                  INTEGER,
            dte6M5CfgClockPolarity            INTEGER,
            dte6M5CfgDataPolarity             INTEGER,
            dte6M5CfgRTS                      INTEGER,
            dte6M5CfgV54                      INTEGER,
            dte6M5CfgV54RL                    INTEGER,
            dte6M5CfgV54LL                    INTEGER,
            dte6M5CfgWarrning                 DisplayString
        }

        dte6M5CfgSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 slot index"
            ::= { dte6M5ConfigEntry 1 }

        dte6M5CfgPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 4, Total 4 ports"
            ::= { dte6M5ConfigEntry 2 }

        dte6M5CfgInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rs232(1),
                    rs422(2),
                    x21(3),
                    v35(4),
                    v36(5),
                    eia530Rs449(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Interface mode"
            ::= { dte6M5ConfigEntry 3 }

        dte6M5CfgChannel  OBJECT-TYPE
            SYNTAX  INTEGER (0..32)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Channel"
            ::= { dte6M5ConfigEntry 4 }


        dte6M5CfgDS0Rate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r64K(1),
                    r56K(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 DS0 Rate"
            ::= { dte6M5ConfigEntry 5 }

        dte6M5CfgClockPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Clock Polarity"
            ::= { dte6M5ConfigEntry 6 }

        dte6M5CfgDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Data Polarity"
            ::= { dte6M5ConfigEntry 7 }

        dte6M5CfgRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 RTS Mode"
            ::= { dte6M5ConfigEntry 8 }

        dte6M5CfgV54  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    ansi(2),
                    itu(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 V54 Setup"
            ::= { dte6M5ConfigEntry 9 }

        dte6M5CfgV54RL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 V54 RL Setup"
            ::= { dte6M5ConfigEntry 10 }

        dte6M5CfgV54LL  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "DTE6 V54 LL Setup"
            ::= { dte6M5ConfigEntry 11 }

        dte6M5CfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "DTE6 Warrning"
            ::= { dte6M5ConfigEntry 12 }

--

        dte6TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of DTE6"
            ::= { dte6-card 100 }


--======================================================================--
--======================================================================--
--  6CDA Card MIB
--======================================================================--
--======================================================================--

--
--Config Table
--

        cda6ConfigTable     OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Config Table "
            ::= { cda6-card 1 }

        cda6ConfigEntry     OBJECT-TYPE
            SYNTAX  Cda6ConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Config Table "
            INDEX { cda6ConfigSlotIndex , cda6ConfigPortIndex }
            ::= { cda6ConfigTable 1 }

            Cda6ConfigEntry ::= SEQUENCE {
            cda6ConfigSlotIndex       LargeSlotIndex,
            cda6ConfigPortIndex       SixPortID,
            cda6ConfigInterface       INTEGER,
            cda6ConfigType            INTEGER,
            cda6ConfigOctetClock         INTEGER,
            cda6ConfigTxClock         INTEGER
        }

        cda6ConfigSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6ConfigEntry 1 }

        cda6ConfigPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports "
            ::= { cda6ConfigEntry 2 }

        cda6ConfigInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    contradirectional(1),
                    codirectional(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Interface "
            ::= { cda6ConfigEntry 3 }

        cda6ConfigType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    subordinate(1),
                    controlling(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Type "
            ::= { cda6ConfigEntry 4 }

        cda6ConfigOctetClock  OBJECT-TYPE
            SYNTAX  INTEGER {
                    fromControl(1),
                    fromSub(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Octet Clock "
            ::= { cda6ConfigEntry 5 }

        cda6ConfigTxClock  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rxPin(1),
                    txPin(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Tx Clock "
            ::= { cda6ConfigEntry 6 }

--
-- Loopback Test Table
--

        cda6LpbackTestTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6LpbackTestEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Loopback Test Table "
            ::= { cda6-card 2 }

        cda6LpbackTestEntry  OBJECT-TYPE
            SYNTAX  Cda6LpbackTestEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Loopback Test Table "
            INDEX { cda6SlotIndex , cda6PortIndex }
            ::= { cda6LpbackTestTable 1 }

            Cda6LpbackTestEntry ::= SEQUENCE {
            cda6SlotIndex               LargeSlotIndex,
            cda6PortIndex               SixPortID,
            cda6NearEndLoopback         INTEGER,
            cda6SendTestPattern         INTEGER,
            cda6Bert                    INTEGER,
            cda6BitError                INTEGER,
            cda6ErrorSeconds            INTEGER,
            cda6ElapsedSeconds          INTEGER
        }

        cda6SlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6LpbackTestEntry 1 }

        cda6PortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports "
            ::= { cda6LpbackTestEntry 2 }

        cda6NearEndLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    local(2),
                    line(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " NEAR-END LOOPBACK "
            ::= { cda6LpbackTestEntry 3 }

        cda6SendTestPattern  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    reset(3),
                    injectError(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Send Test Pattern "
            ::= { cda6LpbackTestEntry 4 }

        cda6Bert  OBJECT-TYPE
            SYNTAX  INTEGER {
                    sync(1),
                    unsync(2),
                    notActive(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BERT "
            ::= { cda6LpbackTestEntry 5 }

        cda6BitError  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " BIT ERROR "
            ::= { cda6LpbackTestEntry 6 }

        cda6ErrorSeconds OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ERROR SECONDS "
            ::= { cda6LpbackTestEntry 7 }

        cda6ElapsedSeconds  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " ELAPSED SECONDS "
            ::= { cda6LpbackTestEntry 8 }


--
--  Status Table
--

        cda6StatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The Status Table "
            ::= { cda6-card 3 }

        cda6StatusEntry  OBJECT-TYPE
            SYNTAX  Cda6StatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Status Table "
            INDEX { cda6StatusSlotIndex , cda6StatusPortIndex }
            ::= { cda6StatusTable 1 }

            Cda6StatusEntry ::= SEQUENCE {
            cda6StatusSlotIndex         LargeSlotIndex,
            cda6StatusPortIndex         SixPortID,
            cda6StatusLos               INTEGER,
            cda6StatusLoo               INTEGER,
            cda6StatusLocalLpback       INTEGER,
            cda6StatusLineLpback     INTEGER
        }

        cda6StatusSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6StatusEntry 1 }

        cda6StatusPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports "
            ::= { cda6StatusEntry 2 }

        cda6StatusLos  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LINE - LOS "
            ::= { cda6StatusEntry 3 }

        cda6StatusLoo  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " LINE - LOO "
            ::= { cda6StatusEntry 4 }

        cda6StatusLocalLpback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TEST - LOCAL LOOPBACK "
            ::= { cda6StatusEntry 5 }

        cda6StatusLineLpback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " TEST - Line LOOPBACK "
            ::= { cda6StatusEntry 6 }

--
--  Alarm Setup Table
--

        cda6AlarmSetupTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6AlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm Setup Table "
            ::= { cda6-card 4 }

        cda6AlarmSetupEntry  OBJECT-TYPE
            SYNTAX  Cda6AlarmSetupEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Alarm Setup Table "
            INDEX { cda6AlmStpSlotIndex , cda6AlmStpPortIndex , cda6AlmStpTypeIndex }
            ::= { cda6AlarmSetupTable 1 }

            Cda6AlarmSetupEntry ::= SEQUENCE {
            cda6AlmStpSlotIndex         LargeSlotIndex,
            cda6AlmStpPortIndex         SixPortID,
            cda6AlmStpTypeIndex         INTEGER,
            cda6AlmStpAlarm             INTEGER
        }

        cda6AlmStpSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6AlarmSetupEntry 1 }

        cda6AlmStpPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports "
            ::= { cda6AlarmSetupEntry 2 }

        cda6AlmStpTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    los(1),
                    loo(2),
                    txClkLoss(3),
                    rxClkLoss(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Type "
            ::= { cda6AlarmSetupEntry 3 }

        cda6AlmStpAlarm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    major(2),
                    critical(3),
                    minor(4),
                    na(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm "
            ::= { cda6AlarmSetupEntry 4 }

--
--  Alarm History Table
--

        cda6AlmHistoryTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Alarm History Table "
            ::= { cda6-card 5 }

        cda6AlmHistoryEntry  OBJECT-TYPE
            SYNTAX  Cda6AlmHistoryEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the Alarm History Table "
            INDEX { cda6AlmHistorySlotIndex , cda6AlmHistoryPortIndex , cda6AlmHistoryTypeIndex }
            ::= { cda6AlmHistoryTable 1 }

            Cda6AlmHistoryEntry ::= SEQUENCE {
            cda6AlmHistorySlotIndex     LargeSlotIndex,
            cda6AlmHistoryPortIndex     SixPortID,
            cda6AlmHistoryTypeIndex     INTEGER,
            cda6AlmHistoryState         INTEGER,
            cda6AlmHistoryCount         INTEGER,
            cda6AlmHistoryAlarm         INTEGER
        }

        cda6AlmHistorySlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6AlmHistoryEntry 1 }

        cda6AlmHistoryPortIndex  OBJECT-TYPE
            SYNTAX  SixPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Port 1 to 6, Total 6 ports "
            ::= { cda6AlmHistoryEntry 2 }

        cda6AlmHistoryTypeIndex  OBJECT-TYPE
            SYNTAX  INTEGER {
                    los(1),
                    loo(2),
                    txClkLoss(3),
                    rxClkLoss(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Type "
            ::= { cda6AlmHistoryEntry 3 }

        cda6AlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " State "
            ::= { cda6AlmHistoryEntry 4 }

        cda6AlmHistoryCount  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Count "
            ::= { cda6AlmHistoryEntry 5 }

        cda6AlmHistoryAlarm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    major(2),
                    critical(3),
                    minor(4),
                    na(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm "
            ::= { cda6AlmHistoryEntry 6 }

--
-- Card Control Table
--

        cda6CardControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The CDA6 Card Control Table "
            ::= { cda6-card 6 }

        cda6CardControlEntry  OBJECT-TYPE
            SYNTAX  Cda6CardControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the CDA6 Card Control Table "
            INDEX { cda6CardIndex }
            ::= { cda6CardControlTable 1 }

            Cda6CardControlEntry ::= SEQUENCE {
            cda6CardIndex                LargeSlotIndex,
            cda6Reset                    INTEGER,
            cda6LoadDefault              INTEGER,
            cda6AlarmReset            INTEGER
        }

        cda6CardIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6CardControlEntry 1 }

        cda6Reset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Reset CDA6 card "
            ::= { cda6CardControlEntry 2 }

        cda6LoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Load default "
            ::= { cda6CardControlEntry 3 }

        cda6AlarmReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Alarm Counr Reset "
            ::= { cda6CardControlEntry 4 }
--
--  CDA6 System Information Table
--

        cda6SystemInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Cda6SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " The CDA6 System Information Table "
            ::= { cda6-card 7 }

        cda6SystemInfoEntry  OBJECT-TYPE
            SYNTAX  Cda6SystemInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " An entry in the CDA6 System Information Table "
            INDEX { cda6SystemInfoSlotIndex }
            ::= { cda6SystemInfoTable 1 }

            Cda6SystemInfoEntry ::= SEQUENCE {
            cda6SystemInfoSlotIndex              LargeSlotIndex,
            cda6SystemInfoPROMVersion            DisplayString,
            cda6SystemInfoHardwareVersion        DisplayString,
            cda6SystemInfoFpgaVersion            DisplayString,
            cda6SystemInfoBank1Version           DisplayString,
            cda6SystemInfoBank2Version           DisplayString,
            cda6SystemInfoActiveBank             INTEGER
        }

        cda6SystemInfoSlotIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { cda6SystemInfoEntry 1 }

        cda6SystemInfoPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CDA6 PROM Version "
            ::= { cda6SystemInfoEntry 2 }

        cda6SystemInfoHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " CDA6 Hardware Version "
            ::= { cda6SystemInfoEntry 3 }

        cda6SystemInfoFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " FPGA Version "
            ::= { cda6SystemInfoEntry 4 }

        cda6SystemInfoBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bank-1 Version "
            ::= { cda6SystemInfoEntry 5 }

        cda6SystemInfoBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Bank-2 Version "
            ::= { cda6SystemInfoEntry 6}

        cda6SystemInfoActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Active Bank 1/2 "
            ::= { cda6SystemInfoEntry 7 }


        cda6TotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Total cards of CDA6 "
            ::= { cda6-card 100 }

--======================================================================--
--======================================================================--
--  QMAG Card MIB
--======================================================================--
--======================================================================--

--
--      QMAG All Port Config Control Table
--

        qmagAllPortSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QMagAllPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG All Port Configuration Control Table"
            ::= { qmag-card 1 }

        qmagAllPortSetEntry  OBJECT-TYPE
            SYNTAX  QMagAllPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG all port configuration control entry"
            INDEX { qmagAllPortSetIndex }
            ::= { qmagAllPortSetTable 1 }

            QMagAllPortSetEntry ::= SEQUENCE {
            qmagAllPortSetIndex    SmallSlotIndex,
            qmagAllPortSetAuLaw  INTEGER,
            qmagAllPortSetImpedance    INTEGER
        }

        qmagAllPortSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagAllPortSetEntry 1 }

        qmagAllPortSetAuLaw   OBJECT-TYPE
            SYNTAX  INTEGER {
                    u-law(1),
                    a-law(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " A/u LAW "
            ::= { qmagAllPortSetEntry 2 }

        qmagAllPortSetImpedance   OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp-900-ohm(1),
                    imp-600-ohm(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " IMPEDANCE "
            ::= { qmagAllPortSetEntry 3 }


--
--      QMAG All Port Signaling Config Control Table
--

        qmagSigSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QMagSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG All Port Signaling Configuration Control Table"
            ::= { qmag-card 2 }

        qmagSigSetEntry  OBJECT-TYPE
            SYNTAX  QMagSigSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG all port signaling configuration control entry"
            INDEX { qmagSigSetIndex ,
        qmagSigSetItemIndex ,
        qmagSigSetSigBitIndex }
            ::= { qmagSigSetTable 1 }

            QMagSigSetEntry ::= SEQUENCE {
            qmagSigSetIndex         SmallSlotIndex,
            qmagSigSetItemIndex     INTEGER,
            qmagSigSetSigBitIndex   INTEGER,
            qmagSigSetSigBit        INTEGER
        }

        qmagSigSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagSigSetEntry 1 }

        qmagSigSetItemIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    crankStop(1),
                    crankStart(2),
                    crankStartPLAR(3),
                    noRing(4),
                    ringing(5),
                    plarRinging(6),
                    oosAlarm(7)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "QMAG signaling setup "
            ::= { qmagSigSetEntry 2 }

        qmagSigSetSigBitIndex   OBJECT-TYPE
            SYNTAX  INTEGER {
                    a(1),
                    b(2),
                    c(3),
                    d(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Index "
            ::= { qmagSigSetEntry 3 }

        qmagSigSetSigBit   OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(0),
                    one(1),
                    do-not-care(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Signaling Bit Setup 0/1 or don't care "
            ::= { qmagSigSetEntry 4 }



--
--      Qmag Per Port Config Control Table
--

        qmagPortSetTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QMagPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG Per Port Configuration Control Table"
            ::= { qmag-card 3 }

        qmagPortSetEntry  OBJECT-TYPE
            SYNTAX  QMagPortSetEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG Per Port Configuration control entry"
            INDEX { qmagPortSetIndex ,
        qmagPortSetPortIndex }
            ::= { qmagPortSetTable 1 }

            QMagPortSetEntry ::= SEQUENCE {
            qmagPortSetIndex    SmallSlotIndex,
            qmagPortSetPortIndex    FourPortID,
            qmagPortSetTxGain      DisplayString,
            qmagPortSetRxGain      DisplayString,
            qmagPortSetPLAR         INTEGER,
            qmagPortStopWatch       INTEGER,
            qmagPortPLARStopWatch       INTEGER,
            qmagPortSetRingerLine      INTEGER
        }

        qmagPortSetIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagPortSetEntry 1 }

        qmagPortSetPortIndex   OBJECT-TYPE
            SYNTAX  FourPortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { qmagPortSetEntry 2 }

        qmagPortSetTxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-GAIN setting "
            ::= { qmagPortSetEntry 3 }

        qmagPortSetRxGain   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-GAIN setting "
            ::= { qmagPortSetEntry 4 }

        qmagPortSetPLAR   OBJECT-TYPE
            SYNTAX INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Per port PLAR setting "
            ::= { qmagPortSetEntry 5 }

        qmagPortStopWatch OBJECT-TYPE
            SYNTAX INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " StopWatch N/A, 0.7s, 1.0s, 1.5s, 2.0s  "
            ::= { qmagPortSetEntry 6 }

        qmagPortPLARStopWatch OBJECT-TYPE
            SYNTAX INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " StopWatch Plar N/A, 0.7s, 1.0s, 1.5s, 2.0s "
            ::= { qmagPortSetEntry 7 }

        qmagPortSetRingerLine    OBJECT-TYPE
            SYNTAX INTEGER {
                    l1-l2(1),
                    l1-gnd(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Ringer Across Line "
            ::= { qmagPortSetEntry 8 }

--
--  QMAG Command Control Table
--

        qmagCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QMagCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { qmag-card 4 }

        qmagCommandControlEntry  OBJECT-TYPE
            SYNTAX  QMagCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { qmagCommandControlIndex }
            ::= { qmagCommandControlTable 1 }

        QMagCommandControlEntry ::= SEQUENCE {
            qmagCommandControlIndex      SmallSlotIndex,
            qmagCommandControlReset      INTEGER,
            qmagCommandControlLoadDefault    INTEGER
        }

        qmagCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagCommandControlEntry 1 }

        qmagCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default MAG CONF"
            ::= { qmagCommandControlEntry 2 }

        qmagCommandControlReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: MAG Card Reset"
            ::= { qmagCommandControlEntry 3 }

--
--      QMAG Per Port Diag InfoTable
--

        qmagDiagInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QmagDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG Diag Info Table"
            ::= { qmag-card 5 }

        qmagDiagInfoEntry  OBJECT-TYPE
            SYNTAX  QmagDiagInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG Diag Infoentry"
            INDEX { qmagDiagInfoIndex ,
        qmagDiagInfoPort }
            ::= { qmagDiagInfoTable 1 }

        QmagDiagInfoEntry ::= SEQUENCE {
            qmagDiagInfoIndex              SmallSlotIndex,
            qmagDiagInfoPort        TwelvePortID,
            qmagDiagInfoAuLaw           INTEGER,
            qmagDiagInfoIMP             INTEGER,
            qmagDiagInfoCrank            EMOffOn,
            qmagDiagInfoRingSig           EMOffOn,
            qmagDiagInfoAIS               EMOffOn,
            qmagDiagInfoOOS              EMOffOn,
            qmagDiagInfoRingerLine        INTEGER,
            qmagDiagInfoRingDuration       INTEGER,
            qmagDiagInfoPlar      INTEGER,
            qmagDiagInfoInputPW           INTEGER,
            qmagDiagInfoPWStatus           INTEGER,
            qmagDiagInfoRingerGen           INTEGER,
            qmagDiagInfoRingerStatus           INTEGER,
            qmagDiagInfoTx               DisplayString,
            qmagDiagInfoRx              DisplayString
        }

        qmagDiagInfoIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagDiagInfoEntry 1 }

        qmagDiagInfoPort        OBJECT-TYPE
            SYNTAX  TwelvePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "port 1-12"
            ::= { qmagDiagInfoEntry 2 }

        qmagDiagInfoAuLaw           OBJECT-TYPE
            SYNTAX  INTEGER {
                    aLaw(1),
                    uLaw(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " A u Law"
            ::= { qmagDiagInfoEntry 3}

        qmagDiagInfoIMP             OBJECT-TYPE
            SYNTAX  INTEGER {
                    imp900(1),
                    imp600(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Impedance"
            ::= { qmagDiagInfoEntry 4}

        qmagDiagInfoCrank            OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Crank "
            ::= { qmagDiagInfoEntry 5}

        qmagDiagInfoRingSig           OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Ring Signal "
            ::= { qmagDiagInfoEntry 6}

        qmagDiagInfoAIS               OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " AIS alarm"
            ::= { qmagDiagInfoEntry 7}

        qmagDiagInfoOOS              OBJECT-TYPE
            SYNTAX  EMOffOn
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " OOS alarm "
            ::= { qmagDiagInfoEntry 8}

        qmagDiagInfoRingerLine        OBJECT-TYPE
            SYNTAX  INTEGER {
                    l1-l2(1),
                    l1-gnd(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { qmagDiagInfoEntry 9}

        qmagDiagInfoRingDuration       OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    sec-0-7(2),
                    sec-1-0(3),
                    sec-1-5(4),
                    sec-2-0(5)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Ring Duration"
            ::= { qmagDiagInfoEntry 10}

        qmagDiagInfoPlar      OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " PLAR "
            ::= { qmagDiagInfoEntry 11}

        qmagDiagInfoInputPW           OBJECT-TYPE
            SYNTAX  INTEGER {
                    plusMinus48v(1),
                    plusMinus24v(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " INPUT POWER"
            ::= { qmagDiagInfoEntry 12}

        qmagDiagInfoPWStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { qmagDiagInfoEntry 13}

        qmagDiagInfoRingerGen           OBJECT-TYPE
            SYNTAX  INTEGER {
                    vac-76-and-16-7Hz(1),
                    vac-76-and-20-0Hz(2),
                    vac-76-and-50-0Hz(3),
                    vac-76-and-25-0Hz(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " RingerGen"
            ::= { qmagDiagInfoEntry 14}

        qmagDiagInfoRingerStatus           OBJECT-TYPE
            SYNTAX  INTEGER {
                    fail(1),
                    ok(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Side L1~L4 "
            ::= { qmagDiagInfoEntry 15}

        qmagDiagInfoTx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port TX-signal "
            ::= { qmagDiagInfoEntry 16 }

        qmagDiagInfoRx   OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Per port RX-signal"
            ::= { qmagDiagInfoEntry 17}

--
-- QMAG Line Diagnostic Control Table
--

        qmagDiagControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF QmagDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "QMAG Diagnostic Control Table."
            ::= { qmag-card 6 }

        qmagDiagControlEntry  OBJECT-TYPE
            SYNTAX  QmagDiagControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry of QMAG diagnostic control table."
            INDEX { qmagDiagControlSlot }
            ::= { qmagDiagControlTable 1 }

        QmagDiagControlEntry ::= SEQUENCE {
            qmagDiagControlSlot          SmallSlotIndex,
            qmagDiagControlTest           INTEGER,
            qmagDiagControlRemain           INTEGER

    }

        qmagDiagControlSlot  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { qmagDiagControlEntry 1 }

        qmagDiagControlTest  OBJECT-TYPE
            SYNTAX  INTEGER {
                    stop(1),
                    crank-test(2),
                    ring-test(3),
                    channel-swap(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "QMAG  Test Button"
            ::= { qmagDiagControlEntry 2 }

        qmagDiagControlRemain  OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "remain time"
            ::= { qmagDiagControlEntry 3 }




        qmagTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Total cards of QMAG "
            ::= { qmag-card 100 }



--======================================================================--
--======================================================================--
--  VoIP Card MIB
--======================================================================--
--======================================================================--

--
--      VoIP WAN Setup Table
--

        voipWanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipWanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP WAN Setup Table"
            ::= { voip-card 1 }

        voipWanEntry  OBJECT-TYPE
            SYNTAX  VoipWanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP WAN Setup entry"
            INDEX { voipWanIndex }
            ::= { voipWanTable 1 }

            VoipWanEntry ::= SEQUENCE {
            voipWanIndex    LargeSlotIndex,
            voipWanType  INTEGER,
            voipWanMTU    INTEGER,
            voipWanDNS    INTEGER,
            voipWanPriDNS    IpAddress,
            voipWanSecDNS    IpAddress,
            voipWanDHCPHost    DisplayString,
            voipWanDHCPVendor    DisplayString,
            voipWanStaticIP    IpAddress,
            voipWanStaticSubnet    IpAddress,
            voipWanStaticGW    IpAddress,
            voipWanPPPoEAccount    DisplayString,
            voipWanPPPoEPW    DisplayString,
            voipWanPPPoEServer    DisplayString,
            voipWanPPPoEReConnect    INTEGER,
            voipWanPPPoEMaxIdle    INTEGER
        }

        voipWanIndex   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipWanEntry 1 }

        voipWanType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dhcp(1),
                    staticIP(2),
                    pppoe(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " WAN Type "
            ::= { voipWanEntry 2 }

        voipWanMTU    OBJECT-TYPE
            SYNTAX  INTEGER              
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "MTU "
            ::= { voipWanEntry 3 }

        voipWanDNS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server "
            ::= { voipWanEntry 4 }

        voipWanPriDNS    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server ( Primary ) IP"
            ::= { voipWanEntry 5 }

        voipWanSecDNS    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server ( Secondary ) IP"
            ::= { voipWanEntry 6 }

        voipWanDHCPHost    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DHCP hostname "
            ::= { voipWanEntry 7 }

        voipWanDHCPVendor    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " DHCP Vendor Class ID "
            ::= { voipWanEntry 8 }

        voipWanStaticIP    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Static IP address "
            ::= { voipWanEntry 9 }

        voipWanStaticSubnet    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Static IP Subnet "
            ::= { voipWanEntry 10 }

        voipWanStaticGW    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Static IP Gateway "
            ::= { voipWanEntry 11 }

        voipWanPPPoEAccount    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PPPoE Account "
            ::= { voipWanEntry 12 }

        voipWanPPPoEPW    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PPPoE Password "
            ::= { voipWanEntry 13 }

        voipWanPPPoEServer    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PPPoE Server name "
            ::= { voipWanEntry 14 }

        voipWanPPPoEReConnect    OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(0), --//RIKER2021 SilverCreek
                    alwaysOn(1),
                    onDemand(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PPPoE Reconnect Mode "
            ::= { voipWanEntry 15 }

        voipWanPPPoEMaxIdle    OBJECT-TYPE
            SYNTAX  INTEGER              
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " PPPoE Max Idle time "
            ::= { voipWanEntry 16 }

--
--      VoIP LAN Setup Table
--

        voipLanTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipLanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP LAN Setup Table"
            ::= { voip-card 2 }

        voipLanEntry  OBJECT-TYPE
            SYNTAX  VoipLanEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP LAN Setup entry"
            INDEX { voipLanIndex }
            ::= { voipLanTable 1 }

            VoipLanEntry ::= SEQUENCE {
            voipLanIndex    LargeSlotIndex,
            voipLanGateWay    IpAddress,
            voipLanSubnet    IpAddress,
            voipLanDHCP    INTEGER,
            voipLanStartIP    IpAddress,
            voipLanEndIP    IpAddress,
            voipLanGWEnable    INTEGER,
            voipLanDefaultGW    IpAddress,
            voipLanDefaultSubnet    IpAddress,
            voipLanLeaseTime    INTEGER,
            voipLanDNS    INTEGER,
            voipLanPriDNS    IpAddress,
            voipLanSecDNS    IpAddress
        }

        voipLanIndex   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipLanEntry 1 }

        voipLanGateWay    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "LAN IP / LAN default Gateway"
            ::= { voipLanEntry 2 }

        voipLanSubnet    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Subnet mask "
            ::= { voipLanEntry 3 }

        voipLanDHCP    OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "enable DHCP server "
            ::= { voipLanEntry 4 }

        voipLanStartIP    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Pool Starting Address  "
            ::= { voipLanEntry 5 }

        voipLanEndIP OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Pool Ending Address  "
            ::= { voipLanEntry 6 }

        voipLanGWEnable    OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Pool Uses Other Default Gw"
            ::= { voipLanEntry 7 }

        voipLanDefaultGW    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Pool Default Gateway "
            ::= { voipLanEntry 8 }

        voipLanDefaultSubnet    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP Pool Subnet mask  "
            ::= { voipLanEntry 9 }

        voipLanLeaseTime    OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Lease Time "
            ::= { voipLanEntry 10 }

        voipLanDNS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    auto(1),
                    manual(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server Assignment"
            ::= { voipLanEntry 11 }

        voipLanPriDNS    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server (Primary) IP "
            ::= { voipLanEntry 12 }

        voipLanSecDNS    OBJECT-TYPE
            SYNTAX  IpAddress
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Domain Name Server (Secondary) IP"
            ::= { voipLanEntry 13 }


--
--      VoIP SIP Proxy Server Table
--

        voipSIPProxyTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipSIPProxyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP LAN Setup Table"
            ::= { voip-card 3 }

        voipSIPProxyEntry  OBJECT-TYPE
            SYNTAX  VoipSIPProxyEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Proxy Sever entry"
            INDEX { voipSIPProxyIndex ,voipSIPProxyType}
            ::= { voipSIPProxyTable 1 }

            VoipSIPProxyEntry ::= SEQUENCE {
            voipSIPProxyIndex    LargeSlotIndex,
            voipSIPProxyType     INTEGER,
            voipSIPProxyEnable     INTEGER,
            voipSIPProxyDomainIP     DisplayString,
            voipSIPProxyPort     INTEGER,
            voipSIPProxyRealm     DisplayString,
            voipSIPProxyTTL     INTEGER,
            voipSIPProxySIPDomain     DisplayString,
            voipSIPProxyDomainReg     INTEGER     
        }

        voipSIPProxyIndex   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipSIPProxyEntry 1 }

        voipSIPProxyType     OBJECT-TYPE
            SYNTAX  INTEGER {
                    primary(1),
                    redundant(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "SIP Proxy Server Type"
            ::= { voipSIPProxyEntry 2 }

        voipSIPProxyEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable SIP Proxy"
            ::= { voipSIPProxyEntry 3 }

        voipSIPProxyDomainIP     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Proxy Server IP / Domain"
            ::= { voipSIPProxyEntry 4 }

        voipSIPProxyPort     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Proxy Server Port "
            ::= { voipSIPProxyEntry 5 }

        voipSIPProxyRealm     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Proxy Server Realm"
            ::= { voipSIPProxyEntry 6 }

        voipSIPProxyTTL     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "TTL (Registration interval) "
            ::= { voipSIPProxyEntry 7 }

        voipSIPProxySIPDomain     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SIP Domain"
            ::= { voipSIPProxyEntry 8 }

        voipSIPProxyDomainReg     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Use Domain to Register"
            ::= { voipSIPProxyEntry 9 }



--
--      VoIP SIP Representative Table
--

        voipRepresentTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipRepresentEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP LAN Setup Table"
            ::= { voip-card 4 }

        voipRepresentEntry  OBJECT-TYPE
            SYNTAX  VoipRepresentEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Proxy Sever entry"
            INDEX { voipRepresentIndex}
            ::= { voipRepresentTable 1 }

            VoipRepresentEntry ::= SEQUENCE {
            voipRepresentIndex    LargeSlotIndex,
            voipRepresentEnable     INTEGER,
            voipRepresentNumber     DisplayString,
            voipRepresentAccount     DisplayString,
            voipRepresentPW     DisplayString,
            voipRepresentFxoEnable     INTEGER,
            voipRepresentFxoNumber     DisplayString,
            voipRepresentFxoAccount     DisplayString,
            voipRepresentFxoPW     DisplayString  
        }


        voipRepresentIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipRepresentEntry 1 }

        voipRepresentEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable SIP Representative Number"
            ::= { voipRepresentEntry 2 }

        voipRepresentNumber     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number"
            ::= { voipRepresentEntry 3 }

        voipRepresentAccount     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Account"
            ::= { voipRepresentEntry 4 }

        voipRepresentPW     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Password"
            ::= { voipRepresentEntry 5 }


        voipRepresentFxoEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable SIP Representative FXS Enable"
            ::= { voipRepresentEntry 6 }

        voipRepresentFxoNumber     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Number"
            ::= { voipRepresentEntry 7 }

        voipRepresentFxoAccount     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Account"
            ::= { voipRepresentEntry 8 }

        voipRepresentFxoPW     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS Password"
            ::= { voipRepresentEntry 9 }

--
--      VoIP SIP Register Table
--

        voipSIPRegisterTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipSIPRegisterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP LAN Setup Table"
            ::= { voip-card 5 }

        voipSIPRegisterEntry  OBJECT-TYPE
            SYNTAX  VoipSIPRegisterEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Proxy Sever entry"
            INDEX { voipSIPRegisterIndex ,voipSIPRegisterLine}
            ::= { voipSIPRegisterTable 1 }

            VoipSIPRegisterEntry ::= SEQUENCE {
            voipSIPRegisterIndex    LargeSlotIndex,
            voipSIPRegisterLine     INTEGER,
            voipSIPRegisterEnable     INTEGER,
            voipSIPRegisterNumber     DisplayString,
            voipSIPRegisterAccount     DisplayString,
            voipSIPRegisterPW     DisplayString,
            voipSIPRegisterInvite     INTEGER,
            voipSIPRegisterHunt       INTEGER
        }

        voipSIPRegisterIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipSIPRegisterEntry 1 }

        voipSIPRegisterLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line No"
            ::= { voipSIPRegisterEntry 2 }

        voipSIPRegisterEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable"
            ::= { voipSIPRegisterEntry 3 }

        voipSIPRegisterNumber     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Number"
            ::= { voipSIPRegisterEntry 4 }

        voipSIPRegisterAccount     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Account"
            ::= { voipSIPRegisterEntry 5 }

        voipSIPRegisterPW     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Password"
            ::= { voipSIPRegisterEntry 6 }


        voipSIPRegisterInvite     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Invite with ID / Account"
            ::= { voipSIPRegisterEntry 7 }

        voipSIPRegisterHunt     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Hunt Group"
            ::= { voipSIPRegisterEntry 8 }



--
--      VoIP SIP Outbound Proxy Table
--

        voipSIPOutboundTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipSIPOutboundEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Outbound Proxy Table"
            ::= { voip-card 6 }

        voipSIPOutboundEntry  OBJECT-TYPE
            SYNTAX  VoipSIPOutboundEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Outbound Proxy entry"
            INDEX { voipSIPOutboundIndex}
            ::= { voipSIPOutboundTable 1 }

            VoipSIPOutboundEntry ::= SEQUENCE {
            voipSIPOutboundIndex    LargeSlotIndex,
            voipSIPOutboundEnable     INTEGER,
            voipSIPOutboundDomain     DisplayString,
            voipSIPOutboundPort     INTEGER
          }

        voipSIPOutboundIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipSIPOutboundEntry 1 }

        voipSIPOutboundEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Outbound Proxy Support"
            ::= { voipSIPOutboundEntry 2 }

        voipSIPOutboundDomain     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Outbound Proxy IP / Domain"
            ::= { voipSIPOutboundEntry 3 }

        voipSIPOutboundPort     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Outbound Proxy Port"
            ::= { voipSIPOutboundEntry 4 }


--
--      VoIP SIP Advanced Table
--

        voipSIPAdvTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipSIPAdvEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 7 }

        voipSIPAdvEntry  OBJECT-TYPE
            SYNTAX  VoipSIPAdvEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipSIPAdvIndex}
            ::= { voipSIPAdvTable 1 }

            VoipSIPAdvEntry ::= SEQUENCE {
            voipSIPAdvIndex    LargeSlotIndex,
            voipSIPAdvProtocol     INTEGER,
            voipSIPAdvRFC3986     INTEGER,
            voipSIPAdvInbox     INTEGER,
            voipSIPAdvSipProxy     INTEGER,
            voipSIPAdvExpiration     INTEGER,
            voipSIPAdvRefreshReq     INTEGER,
            voipSIPAdvRefresher     INTEGER

          }

        voipSIPAdvIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipSIPAdvEntry 1 }

        voipSIPAdvProtocol     OBJECT-TYPE
            SYNTAX  INTEGER {
                    udp(1),
                    tcp(2),
                    tls(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "SIP Transport Protocol"
            ::= { voipSIPAdvEntry 2 }

        voipSIPAdvRFC3986     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Support URI Percent-Encoding (RFC 3986)"
            ::= { voipSIPAdvEntry 3 }

        voipSIPAdvInbox     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable Non-SIP Inbox Call"
            ::= { voipSIPAdvEntry 4 }

        voipSIPAdvSipProxy     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable Support SIP Proxy "
            ::= { voipSIPAdvEntry 5 }

        voipSIPAdvExpiration     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Session Expiration "
            ::= { voipSIPAdvEntry 6 }

        voipSIPAdvRefreshReq     OBJECT-TYPE
            SYNTAX  INTEGER {                   
                    update(1),
                    reInvite(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Session Refresh Request "
            ::= { voipSIPAdvEntry 7 }            

        voipSIPAdvRefresher     OBJECT-TYPE
            SYNTAX  INTEGER {
                    uas(1),
                    uac(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Session Refresher"
            ::= { voipSIPAdvEntry 8 }              


--
--      VoIP Codec Option Table
--

        voipCodecOptionTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCodecOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 8 }

        voipCodecOptionEntry  OBJECT-TYPE
            SYNTAX  VoipCodecOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipCodecOptionIndex}
            ::= { voipCodecOptionTable 1 }

            VoipCodecOptionEntry ::= SEQUENCE {
            voipCodecOptionIndex    LargeSlotIndex,
            voipCodecOptionJitter     INTEGER,
            voipCodecOptionSC     INTEGER,
            voipCodecOptionEcho     INTEGER,
            voipCodecOptionRXTP     INTEGER,
            voipCodecOptionG723     INTEGER,
            voipCodecOptionG726     INTEGER
          }

        voipCodecOptionIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCodecOptionEntry 1 }

        voipCodecOptionJitter     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Jitter Buffer "
            ::= { voipCodecOptionEntry 2 }

        voipCodecOptionSC     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Silence Detection / Suppression"
            ::= { voipCodecOptionEntry 3 }

        voipCodecOptionEcho     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Echo Cancellation"
            ::= { voipCodecOptionEntry 4 }

        voipCodecOptionRXTP     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable RTCP-XR (RFC 3611)"
            ::= { voipCodecOptionEntry 5 }

        voipCodecOptionG723     OBJECT-TYPE
            SYNTAX  INTEGER {
                    r64000(1),
                    r53000(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G.723 6.4k/5.3k"
            ::= { voipCodecOptionEntry 6 }       

        voipCodecOptionG726     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "G726 Dynamic paylod Type(1-99)"
            ::= { voipCodecOptionEntry 7 }                    

--
--      VoIP Codec Setup Table
--

        voipCodecTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCodecEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 9 }

        voipCodecEntry  OBJECT-TYPE
            SYNTAX  VoipCodecEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipCodecIndex,voipCodecItem }
            ::= { voipCodecTable 1 }

            VoipCodecEntry ::= SEQUENCE {
            voipCodecIndex    LargeSlotIndex,
            voipCodecItem     INTEGER,
            voipCodecPriority     INTEGER,
            voipCodecEnable     INTEGER,            
            voipCodecInterval     INTEGER
          }

        voipCodecIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCodecEntry 1 }

        voipCodecItem     OBJECT-TYPE
            SYNTAX  INTEGER {
                    g711uLaw(1),
                    g723(2),
                    g726(3),
                    g729(4),
                    g711aLaw(5),
                    gsm(6)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Codec"
            ::= { voipCodecEntry 2 }

        voipCodecPriority     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Priority "
            ::= { voipCodecEntry 3 }

        voipCodecEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable"
            ::= { voipCodecEntry 4 }

        voipCodecInterval     OBJECT-TYPE
            SYNTAX  INTEGER {
                    ms10sec(1),
                    ms20sec(2),
                    ms30sec(3),
                    ms40sec(4),
                    ms50sec(5),
                    ms60sec(6),
                    ms70sec(7),
                    ms80sec(8),
                    ms90sec(9)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Packet Interval (ms)"
            ::= { voipCodecEntry 5 }

--
--      VoIP DTMF Setup Table
--

        voipDtmfTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 10 }

        voipDtmfEntry  OBJECT-TYPE
            SYNTAX  VoipDtmfEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipDtmfIndex}
            ::= { voipDtmfTable 1 }

            VoipDtmfEntry ::= SEQUENCE {
            voipDtmfIndex    LargeSlotIndex,
            voipDtmfOutOfBand     INTEGER,
            voipDtmfOutOfBandMode     INTEGER,
            voipDtmfOnLength     INTEGER,
            voipDtmfOffLength     INTEGER
          }

        voipDtmfIndex   OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipDtmfEntry 1 }

        voipDtmfOutOfBand     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                " Enable Out-of-Band DTMF"
            ::= { voipDtmfEntry 2 }

        voipDtmfOutOfBandMode     OBJECT-TYPE
            SYNTAX  INTEGER {
                    rfc2833(1),
                    sipInfo(2),
                    rfc2833Force(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Out-of-Band DTMF"
            ::= { voipDtmfEntry 3 }

        voipDtmfOnLength     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Minimum DTMF ON Length"
            ::= { voipDtmfEntry 4 }

        voipDtmfOffLength     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Minimum DTMF OFF Length"
            ::= { voipDtmfEntry 5 }


--
--      VoIP Hot Line Table
--

        voipHotLineTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipHotLineEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 11 }

        voipHotLineEntry  OBJECT-TYPE
            SYNTAX  VoipHotLineEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipHotLineIndex, voipHotLineLine     }
            ::= { voipHotLineTable 1 }

            VoipHotLineEntry ::= SEQUENCE {
            voipHotLineIndex    LargeSlotIndex,
            voipHotLineLine     INTEGER,
            voipHotLineEnable     INTEGER,
            voipHotLineDelay     INTEGER,
            voipHotLineNumber     DisplayString
          }

        voipHotLineIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipHotLineEntry 1 }

        voipHotLineLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Line ID"
            ::= { voipHotLineEntry 2 }

        voipHotLineEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable Hot Line"
            ::= { voipHotLineEntry 3}

        voipHotLineDelay     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Warm Line(Hot Line Delay) "
            ::= { voipHotLineEntry 4}

        voipHotLineNumber     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Hot Line No."
            ::= { voipHotLineEntry 5}

--
--      VoIP Phone Book Table
--

        voipPhoneBookTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipPhoneBookEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced Table"
            ::= { voip-card 12 }

        voipPhoneBookEntry  OBJECT-TYPE
            SYNTAX  VoipPhoneBookEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipPhoneBookIndex, voipPhoneBookItem     }
            ::= { voipPhoneBookTable 1 }

            VoipPhoneBookEntry ::= SEQUENCE {
            voipPhoneBookIndex    LargeSlotIndex,
            voipPhoneBookItem     INTEGER,
            voipPhoneBookName     DisplayString,
            voipPhoneBookNumber     DisplayString,
            voipPhoneBookDomain     DisplayString,
            voipPhoneBookPort       INTEGER
          }

        voipPhoneBookIndex    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipPhoneBookEntry 1 }

        voipPhoneBookItem     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Item ID"
            ::= { voipPhoneBookEntry 2 }

        voipPhoneBookName     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Gateway Name"
            ::= { voipPhoneBookEntry 3}

        voipPhoneBookNumber     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Gateway Number"
            ::= { voipPhoneBookEntry 4}

        voipPhoneBookDomain     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP / Domain Name"
            ::= { voipPhoneBookEntry 5}

        voipPhoneBookPort       OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { voipPhoneBookEntry 6}

--
--      VoIP Digital Map Option Table
--

        voipDigMapOpTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipDigMapOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Digital Map Option Table"
            ::= { voip-card 13 }

        voipDigMapOpEntry  OBJECT-TYPE
            SYNTAX  VoipDigMapOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Digital Map Option entry"
            INDEX { voipDigMapOpSlot }
            ::= { voipDigMapOpTable 1 }

            VoipDigMapOpEntry ::= SEQUENCE {
            voipDigMapOpSlot    LargeSlotIndex,
            voipDigMapOpAlert     INTEGER,
            voipDigMapOpPound     INTEGER,
            voipDigMapOpDialLen     INTEGER,
            voipDigMapOpCallRoute     INTEGER
          }

        voipDigMapOpSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipDigMapOpEntry 1 }

        voipDigMapOpAlert     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alert if Auto fails"
            ::= { voipDigMapOpEntry 2 }

        voipDigMapOpPound     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable Pound Key"
            ::= { voipDigMapOpEntry 3 }

        voipDigMapOpDialLen     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Max. Dial Length"
            ::= { voipDigMapOpEntry 4 }

        voipDigMapOpCallRoute     OBJECT-TYPE
            SYNTAX  INTEGER {
                    auto(1),
                    voip(2),
                    pstn(3),
                    deny(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Default Call Route "
            ::= { voipDigMapOpEntry 5 }

--
--      VoIP Digital Map Table
--

        voipDigMapTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipDigMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Digital Map Table"
            ::= { voip-card 14 }

        voipDigMapEntry  OBJECT-TYPE
            SYNTAX  VoipDigMapEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Digital Map entry"
            INDEX { voipDigMapSlot, voipDigMapItem     }
            ::= { voipDigMapTable 1 }

            VoipDigMapEntry ::= SEQUENCE {
            voipDigMapSlot    LargeSlotIndex,
            voipDigMapItem     INTEGER,
            voipDigMapEnable     INTEGER,
            voipDigMapScanCode     DisplayString,
            voipDigMapVoipDial     DisplayString,
            voipDigMapPstnDial     DisplayString,
            voipDigMapDialLen       INTEGER,
            voipDigMapDialRoute     INTEGER,
            voipBackupEnable       INTEGER,
            voipBackupPrefix       DisplayString,
            voipBackupDomainIP       DisplayString,
            voipBackupPort       INTEGER
          }

        voipDigMapSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipDigMapEntry 1 }

        voipDigMapItem     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Item ID"
            ::= { voipDigMapEntry 2 }

        voipDigMapEnable     OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
            "Item ID"
            ::= { voipDigMapEntry 3 }

        voipDigMapScanCode     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Gateway Name"
            ::= { voipDigMapEntry 4}

        voipDigMapVoipDial     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Gateway Number"
            ::= { voipDigMapEntry 5}

        voipDigMapPstnDial     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "IP / Domain Name"
            ::= { voipDigMapEntry 6}

        voipDigMapDialLen       OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Dial Length"
            ::= { voipDigMapEntry 7}

        voipDigMapDialRoute      OBJECT-TYPE
            SYNTAX  INTEGER{
                    auto(1),
                    voip(2),
                    pstn(3),
                    deny(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Route Mode"
            ::= { voipDigMapEntry 8}

        voipBackupEnable       OBJECT-TYPE
            SYNTAX  INTEGER{
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { voipDigMapEntry 9}

        voipBackupPrefix      OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { voipDigMapEntry 10}

        voipBackupDomainIP      OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { voipDigMapEntry 11}

        voipBackupPort      OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Port"
            ::= { voipDigMapEntry 12}

--
--  VoIP Command Control Table
--

        voipCommandTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { voip-card 15 }

        voipCommandEntry  OBJECT-TYPE
            SYNTAX  VoipCommandEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { voipCommandIndex }
            ::= { voipCommandTable 1 }

            VoipCommandEntry ::= SEQUENCE {
            voipCommandIndex      LargeSlotIndex,
            voipCommandReset      INTEGER,
            voipCommandLoadDefault    INTEGER,
            voipCommandVoipReset   INTEGER, 
            voipCommandReload   INTEGER
        }

        voipCommandIndex  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCommandEntry 1 }

        voipCommandLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default VOIP CONF"
            ::= { voipCommandEntry 2 }

        voipCommandReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Card Reset"
            ::= { voipCommandEntry 3 }

        voipCommandVoipReset    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    reset(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: VOIP Reset"
            ::= { voipCommandEntry 4 }

        voipCommandReload    OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(0), --//RIKER2021 SilverCreek
                    reload(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Reload Config"
            ::= { voipCommandEntry 5 }

--
--   VoIP Ethernet phy table
--

        voipEthPortTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipEthPortEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "Eth phy electric  Table."
            ::= { voip-card 16 }

        voipEthPortEntry       OBJECT-TYPE
            SYNTAX  VoipEthPortEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "Eth Phy Config Entry."
            INDEX { voipEthSlot , voipEthPort }
            ::= { voipEthPortTable 1 }

        VoipEthPortEntry ::= SEQUENCE {
            voipEthSlot         LargeSlotIndex,
            voipEthPort         INTEGER,
            voipEthLinkup       INTEGER,
            voipEthSpeed        INTEGER,
            voipEthDuplex       INTEGER
        }

        voipEthSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipEthPortEntry 1 }

        voipEthPort    OBJECT-TYPE
            SYNTAX  INTEGER {
                    wan  (1),
                    lan1 (2),
                    lan2 (3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "eth port WAN LAN1 LAN2"
            ::= { voipEthPortEntry 2 }

        voipEthLinkup         OBJECT-TYPE
            SYNTAX  INTEGER {
                    no (1),
                    yes (2)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "port Linkup"
            ::= { voipEthPortEntry 3 }

        voipEthSpeed    OBJECT-TYPE
            SYNTAX  INTEGER {
                    speed10mbps   (1),
                    speed100mbps  (2),
                    speed1000mbps (3),
                    na(4)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "port speed 10/100/1000 mbps"
            ::= { voipEthPortEntry 4 }

        voipEthDuplex      OBJECT-TYPE
            SYNTAX  INTEGER {
                    half   (1),
                    full   (2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "port duplex mode(half/full)"
            ::= { voipEthPortEntry 5 }


--
--      VoIP Voice Control Table
--

        voipVoiceControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipVoiceControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Voice Control Table"
            ::= { voip-card 17 }

        voipVoiceControlEntry  OBJECT-TYPE
            SYNTAX  VoipVoiceControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP advanced entry"
            INDEX { voipVoiceControlSlot}
            ::= { voipVoiceControlTable 1 }

            VoipVoiceControlEntry ::= SEQUENCE {
            voipVoiceControlSlot    LargeSlotIndex,
            voipVoiceControlAulaw    INTEGER,
            voipVoiceControlFxs     INTEGER
          }

        voipVoiceControlSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipVoiceControlEntry 1 }

        voipVoiceControlAulaw    OBJECT-TYPE
            SYNTAX  INTEGER {
                    alaw(1),
                    ulaw(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "A u Law"
            ::= { voipVoiceControlEntry 2 }

        voipVoiceControlFxs     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "max FXS channel"
            ::= { voipVoiceControlEntry 3 }


--
--   VoIP RTP Summary table
--

        voipRtpSumTable      OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipRtpSumEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "RTP Summary  Table."
            ::= { voip-card 18 }

        voipRtpSumEntry       OBJECT-TYPE
            SYNTAX  VoipRtpSumEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "RTP Summary Entry."
            INDEX { voipRtpSumSlot , voipRtpSumLine }
            ::= { voipRtpSumTable 1 }

        VoipRtpSumEntry ::= SEQUENCE {
            voipRtpSumSlot         LargeSlotIndex,
            voipRtpSumLine         INTEGER,
            voipRtpSumCodec       INTEGER,
            voipRtpSumIP        INTEGER,
            voipRtpSumPort       INTEGER,
            voipRtpSumPktSend       INTEGER,
            voipRtpSumPktRcv       INTEGER,
            voipRtpSumLost       INTEGER,
            voipRtpSumJitter       INTEGER,
            voipRtpSumByteSend       INTEGER,
            voipRtpSumByteRcv       INTEGER,
            voipRtpSumPeerSend       INTEGER
        }

 
        voipRtpSumSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            MAX-ACCESS  read-only --//RIKER2021 SilverCreek
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipRtpSumEntry 1 }

        voipRtpSumLine    OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only --//RIKER2021 SilverCreek
            STATUS  current
            DESCRIPTION
                "Line Numner"
            ::= { voipRtpSumEntry 2 }

        voipRtpSumCodec       OBJECT-TYPE
            SYNTAX  INTEGER {
                    g711uLaw (1),
                    g723(2),
                    g726and32k(3),
                    g729(4),
                    g711alaw(5)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Codec"
            ::= { voipRtpSumEntry 3 }

        voipRtpSumIP    OBJECT-TYPE
            SYNTAX  IpAddress
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "IP"
            ::= { voipRtpSumEntry 4 }

        voipRtpSumPort    OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Port"
            ::= { voipRtpSumEntry 5 }

        voipRtpSumPktSend       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Packer Send"
            ::= { voipRtpSumEntry 6 }

        voipRtpSumPktRcv       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Packer Receive"
            ::= { voipRtpSumEntry 7 }

        voipRtpSumLost       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Packer Lost"
            ::= { voipRtpSumEntry 8 }

        voipRtpSumJitter       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Jitter"
            ::= { voipRtpSumEntry 9 }

        voipRtpSumByteSend       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Byte Send"
            ::= { voipRtpSumEntry 10 }

        voipRtpSumByteRcv       OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Byte Receive"
            ::= { voipRtpSumEntry 11 }

        voipRtpSumPeerSend      OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Peer Say Send Pakcet"
            ::= { voipRtpSumEntry 12 }


--
--      VoIP FAX Mode Table
--

        voipFaxModeTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipFaxModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP FAX Mode Table"
            ::= { voip-card 19 }

        voipFaxModeEntry  OBJECT-TYPE
            SYNTAX  VoipFaxModeEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP FAX Mode entry"
            INDEX { voipFaxModeSlot, voipFaxModeLine     }
            ::= { voipFaxModeTable 1 }

            VoipFaxModeEntry ::= SEQUENCE {
            voipFaxModeSlot    LargeSlotIndex,
            voipFaxModeLine     INTEGER,
            voipFaxMode       INTEGER
          }

        voipFaxModeSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipFaxModeEntry 1 }

        voipFaxModeLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Line"
            ::= { voipFaxModeEntry 2 }

        voipFaxMode       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    t38fax(2),
                    t30fax(3),
                    t30modem(4),
                    t30only(5),
                    t38native(6),
                    t30v152(7),
                    t30v25(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FAX Mode"
            ::= { voipFaxModeEntry 3 }

--
--      VoIP FAX Option Table
--

        voipFaxOpTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipFaxOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP FAX Option Table"
            ::= { voip-card 20 }

        voipFaxOpEntry  OBJECT-TYPE
            SYNTAX  VoipFaxOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP FAX Option entry"
            INDEX { voipFaxOpSlot}
            ::= { voipFaxOpTable 1 }

            VoipFaxOpEntry ::= SEQUENCE {
            voipFaxOpSlot    LargeSlotIndex,
            voipFaxOpCED     INTEGER,
            voipFaxOpT38       INTEGER,
            voipFaxOpSense       INTEGER,
            voipFaxOpHighSpeed       INTEGER,
            voipFaxOpLowSpeed       INTEGER,
            voipFaxOpMaxRate       INTEGER,
            voipFaxOpPacketTime       INTEGER,
            voipFaxOpDelay       INTEGER,
            voipFaxOpFaxCodec       INTEGER,
            voipFaxOpPayload       INTEGER,
            voipFaxOpJitter       INTEGER
  
          }

        voipFaxOpSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipFaxOpEntry 1 }


        voipFaxOpCED     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Switch FAX On CED Detection"
            ::= { voipFaxOpEntry 2 }

        voipFaxOpT38       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Restrict T.38"
            ::= { voipFaxOpEntry 3}

        voipFaxOpSense      OBJECT-TYPE
            SYNTAX  INTEGER {
                    n2(1),
                    n1(2),
                    zero(3),
                    p1(4),
                    p2(5)                    
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FAX Detection Sensitivity"
            ::= { voipFaxOpEntry 4}

        voipFaxOpHighSpeed       OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    two(3),
                    three(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "High Speed Redundancy "
            ::= { voipFaxOpEntry 5}

        voipFaxOpLowSpeed       OBJECT-TYPE
            SYNTAX  INTEGER {
                    zero(1),
                    one(2),
                    two(3),
                    three(4),
                    four(5),
                    five(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Low Speed Redundancy "
            ::= { voipFaxOpEntry 6}

        voipFaxOpMaxRate       OBJECT-TYPE
            SYNTAX  INTEGER {
                    r2400(1),
                    r4800(2),
                    r7200(3),
                    r9600(4),
                    r12000(5),
                    r14400(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FAX Max Rate "
            ::= { voipFaxOpEntry 7}

        voipFaxOpPacketTime       OBJECT-TYPE
            SYNTAX  INTEGER {
                    p10(1),
                    p20(2),
                    p30(3),
                    p40(4)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "High Speed Packet Time"
            ::= { voipFaxOpEntry 8}

        voipFaxOpDelay       OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Audio Rollback Delay"
            ::= { voipFaxOpEntry 9}

        voipFaxOpFaxCodec       OBJECT-TYPE
            SYNTAX  INTEGER{
                    g711ulaw(1),
                    g711alaw(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FAX Codec "
            ::= { voipFaxOpEntry 10}

        voipFaxOpPayload       OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "T.30 V.152 Payload Type"
            ::= { voipFaxOpEntry 11}

        voipFaxOpJitter       OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FAX Jitter Buffer"
            ::= { voipFaxOpEntry 12}


--
--      VoIP SIP Proxy Option Table
--

        voipSipProxyOpTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipSipProxyOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Proxy Option Table"
            ::= { voip-card 21 }

        voipSipProxyOpEntry  OBJECT-TYPE
            SYNTAX  VoipSipProxyOpEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP SIP Proxy Option entry"
            INDEX { voipSipProxyOpSlot}
            ::= { voipSipProxyOpTable 1 }

            VoipSipProxyOpEntry ::= SEQUENCE {
            voipSipProxyOpSlot    LargeSlotIndex,
            voipSipProxyOpBind     INTEGER,
            voipSipProxyOpUnreg       INTEGER,
            voipSipProxyOpUnregAll       INTEGER,
            voipSipProxyOpSipAuth       INTEGER,
            voipSipProxyOpInvite       INTEGER,
            voipSipProxyOpMWI       INTEGER
  
          }

        voipSipProxyOpSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipSipProxyOpEntry 1 }


        voipSipProxyOpBind     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bind Proxy Interval for NAT"
            ::= { voipSipProxyOpEntry 2 }

        voipSipProxyOpUnreg  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Initial Unregister"
            ::= { voipSipProxyOpEntry 3 }

        voipSipProxyOpUnregAll  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Unregister All Contacts"
            ::= { voipSipProxyOpEntry 4 }

        voipSipProxyOpSipAuth       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Keep SIP Auth"
            ::= { voipSipProxyOpEntry 5 }


        voipSipProxyOpInvite    OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Keep INVITE Auth"
            ::= { voipSipProxyOpEntry 6 }

        voipSipProxyOpMWI       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Support Message Waiting Indication (MWI)"
            ::= { voipSipProxyOpEntry 7 }


--
--      VoIP UPnP NAT Traversal Table
--

        voipUpnpNatTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipUpnpNatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP UPnP NAT Traversal Table"
            ::= { voip-card 22 }

        voipUpnpNatEntry  OBJECT-TYPE
            SYNTAX  VoipUpnpNatEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP UPnP NAT Traversal entry"
            INDEX { voipUpnpNatSlot}
            ::= { voipUpnpNatTable 1 }

            VoipUpnpNatEntry ::= SEQUENCE {
            voipUpnpNatSlot    LargeSlotIndex,
            voipUpnpNatEnableUpnp     INTEGER,
            voipUpnpNatEnableNat       INTEGER,
            voipUpnpNatNatIP       DisplayString,
            voipUpnpNatEnableStun       INTEGER,
            voipUpnpNatStunIP       DisplayString,
            voipUpnpNatStunPort       INTEGER
  
          }

        voipUpnpNatSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipUpnpNatEntry 1 }


        voipUpnpNatEnableUpnp     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable UPnP"
            ::= { voipUpnpNatEntry 2 }

        voipUpnpNatEnableNat       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable NAT Public IP"
            ::= { voipUpnpNatEntry 3 }

        voipUpnpNatNatIP       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP/Domain "
            ::= { voipUpnpNatEntry 4 }


        voipUpnpNatEnableStun       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable STUN Client"
            ::= { voipUpnpNatEntry 5 }

        voipUpnpNatStunIP       OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STUN Server IP / Domain"
            ::= { voipUpnpNatEntry 6 }

        voipUpnpNatStunPort       OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "STUN Server Port"
            ::= { voipUpnpNatEntry 7 }


--
--      VoIP Status Table
--

        voipStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Status Table"
            ::= { voip-card 23 }

        voipStatusEntry  OBJECT-TYPE
            SYNTAX  VoipStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Status entry"
            INDEX { voipStatusSlot,
        voipStatusLine}
            ::= { voipStatusTable 1 }

            VoipStatusEntry ::= SEQUENCE {
            voipStatusSlot    LargeSlotIndex,
            voipStatusLine     INTEGER,
            voipStatusType       INTEGER,
            voipStatusNumber       DisplayString,
            voipStatusState       INTEGER,
            voipStatusCalls       INTEGER,
            voipStatusReg       INTEGER
  
          }

        voipStatusSlot  OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipStatusEntry 1 }


        voipStatusLine   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Line number"
            ::= { voipStatusEntry 2 }

        voipStatusType    OBJECT-TYPE
            SYNTAX  INTEGER {
                    fxs(1),
                    fxo(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Type"
            ::= { voipStatusEntry 3 }

        voipStatusNumber    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Number "
            ::= { voipStatusEntry 4 }

        voipStatusState    OBJECT-TYPE
            SYNTAX  INTEGER {
                    nothing(1),
                    error(2),
                    disable(3),
                    idle(4),
                    getDtmf(5),
                    regQuery(6),
                    dnsQuery(7),
                    inviting(8),
                    ringback(9),
                    callerIdRing(10),
                    callerIdSending(11),
                    callerIdSent(12),
                    alerting(13),
                    answering(14),
                    talking(15),
                    playBusyTone(16)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "State"
            ::= { voipStatusEntry 5 }

        voipStatusCalls    OBJECT-TYPE
            SYNTAX  INTEGER 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Calls"
            ::= { voipStatusEntry 6 }

        voipStatusReg    OBJECT-TYPE
            SYNTAX  INTEGER{
                   disable(1),
                   proceeding(2),
                   success(3),
                   failed(4)
                } 
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Register "
            ::= { voipStatusEntry 7 }


--
--      VoIP Calling Feature Representative Table
--

        voipCallRepresentTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCallRepresentEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature Represent Table"
            ::= { voip-card 24 }

        voipCallRepresentEntry  OBJECT-TYPE
            SYNTAX  VoipCallRepresentEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature Represent entry"
            INDEX { voipCallRepresentSlot}
            ::= { voipCallRepresentTable 1 }

            VoipCallRepresentEntry ::= SEQUENCE {
            voipCallRepresentSlot    LargeSlotIndex,
            voipFxsUncondition     INTEGER,
            voipFxsUnconditionParam     DisplayString,
            voipFxsBusy     INTEGER,
            voipFxsBusyParam     DisplayString,
            voipFxoUncondition     INTEGER,
            voipFxoUnconditionParam     DisplayString,
            voipFxoBusy     INTEGER,
            voipFxoBusyParam     DisplayString
        }


        voipCallRepresentSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCallRepresentEntry 1 }

        voipFxsUncondition     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable FXS uncondtion forward"
            ::= { voipCallRepresentEntry 2 }

        voipFxsUnconditionParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS uncondtion forward parameter"
            ::= { voipCallRepresentEntry 3 }


        voipFxsBusy     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable FXS busy forward"
            ::= { voipCallRepresentEntry 4 }

        voipFxsBusyParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXS busy forward parameter"
            ::= { voipCallRepresentEntry 5 }

        voipFxoUncondition     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable FXO uncondtion forward"
            ::= { voipCallRepresentEntry 6 }

        voipFxoUnconditionParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXO uncondtion forward parameter"
            ::= { voipCallRepresentEntry 7 }


        voipFxoBusy     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable FXO busy forward"
            ::= { voipCallRepresentEntry 8 }

        voipFxoBusyParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "FXO busy forward parameter"
            ::= { voipCallRepresentEntry 9 }

--
--      VoIP Calling Feature Table
--

        voipCallFeatureTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCallFeatureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature Table"
            ::= { voip-card 25 }

        voipCallFeatureEntry  OBJECT-TYPE
            SYNTAX  VoipCallFeatureEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature entry"
            INDEX { voipCallFeatureSlot, voipCallFeatureLine     }
            ::= { voipCallFeatureTable 1 }

            VoipCallFeatureEntry ::= SEQUENCE {
            voipCallFeatureSlot    LargeSlotIndex,
            voipCallFeatureLine     INTEGER,
            voipNotDisturb     INTEGER,
            voipUnconditionEnable     INTEGER,
            voipUnconditionParam     DisplayString,
            voipBusyEnable     INTEGER,
            voipBusyParam     DisplayString,
            voipNoAnswerEnable     INTEGER,
            voipNoAnswerParam     DisplayString
          }

        voipCallFeatureSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCallFeatureEntry 1 }

        voipCallFeatureLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Line ID"
            ::= { voipCallFeatureEntry 2 }

        voipNotDisturb     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Do Not Disturb"
            ::= { voipCallFeatureEntry 3}

        voipUnconditionEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Unconditional Forward"
            ::= { voipCallFeatureEntry 4}

        voipUnconditionParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Unconditional Forward Parameter"
            ::= { voipCallFeatureEntry 5}

        voipBusyEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Busy Forward"
            ::= { voipCallFeatureEntry 6}

        voipBusyParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Busy Forward Parameter"
            ::= { voipCallFeatureEntry 7}

        voipNoAnswerEnable     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "No Answer Forward "
            ::= { voipCallFeatureEntry 8}

        voipNoAnswerParam     OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..255))
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "No Answer Forward Parameter"
            ::= { voipCallFeatureEntry 9}


--
--      VoIP Calling Feature Option Table
--

        voipCallOptionTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCallOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature Option Table"
            ::= { voip-card 26 }

        voipCallOptionEntry  OBJECT-TYPE
            SYNTAX  VoipCallOptionEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Calling Feature Option entry"
            INDEX { voipCallOptionSlot, voipCallOptionLine     }
            ::= { voipCallOptionTable 1 }

            VoipCallOptionEntry ::= SEQUENCE {
            voipCallOptionSlot    LargeSlotIndex,
            voipCallOptionLine     INTEGER,
            voipCallHold     INTEGER,
            voipCallTransfer     INTEGER,
            voipCallWaiting     INTEGER,
            voipLoalMixer     INTEGER,
            voipNoAnswerTime     INTEGER
          }

        voipCallOptionSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCallOptionEntry 1 }

        voipCallOptionLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Line ID"
            ::= { voipCallOptionEntry 2 }

        voipCallHold     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Call Hold"
            ::= { voipCallOptionEntry 3}

        voipCallTransfer     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Call Transfer"
            ::= { voipCallOptionEntry 4}

        voipCallWaiting     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Call Waiting"
            ::= { voipCallOptionEntry 5}

        voipLoalMixer     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Local Mixer"
            ::= { voipCallOptionEntry 6}

        voipNoAnswerTime     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "No Answer Time"
            ::= { voipCallOptionEntry 7}

--
--      VoIP Ring Cadence Table
--

        voipRingCadenceTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipRingCadenceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Ring Cadence Table"
            ::= { voip-card 27 }

        voipRingCadenceEntry  OBJECT-TYPE
            SYNTAX  VoipRingCadenceEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Ring Cadence entry"
            INDEX { voipRingCadenceSlot}
            ::= { voipRingCadenceTable 1 }

            VoipRingCadenceEntry ::= SEQUENCE {
            voipRingCadenceSlot    LargeSlotIndex,
            voipRingCadenceR1On1     INTEGER,
            voipRingCadenceR1Off1     INTEGER,
            voipRingCadenceR1On2     INTEGER,
            voipRingCadenceR1Off2     INTEGER,
            voipRingCadenceR1On3     INTEGER,
            voipRingCadenceR1Off3     INTEGER,
            voipRingCadenceR2On1     INTEGER,
            voipRingCadenceR2Off1     INTEGER,
            voipRingCadenceR2On2     INTEGER,
            voipRingCadenceR2Off2     INTEGER,
            voipRingCadenceR2On3     INTEGER,
            voipRingCadenceR2Off3     INTEGER, 
            voipRingCadenceR3On1     INTEGER,
            voipRingCadenceR3Off1     INTEGER,
            voipRingCadenceR3On2     INTEGER,
            voipRingCadenceR3Off2     INTEGER,
            voipRingCadenceR3On3     INTEGER,
            voipRingCadenceR3Off3     INTEGER                     
        }


        voipRingCadenceSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipRingCadenceEntry 1 }

        voipRingCadenceR1On1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 On1"
            ::= { voipRingCadenceEntry 2 }

        voipRingCadenceR1Off1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 Off1"
            ::= { voipRingCadenceEntry 3}  

        voipRingCadenceR1On2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 On2"
            ::= { voipRingCadenceEntry 4 }

        voipRingCadenceR1Off2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 Off2"
            ::= { voipRingCadenceEntry 5} 

        voipRingCadenceR1On3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 On3"
            ::= { voipRingCadenceEntry 6 }

        voipRingCadenceR1Off3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 Off3"
            ::= { voipRingCadenceEntry 7}   

        voipRingCadenceR2On1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 2 On1"
            ::= { voipRingCadenceEntry 8 }

        voipRingCadenceR2Off1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 2 Off1"
            ::= { voipRingCadenceEntry 9}  

        voipRingCadenceR2On2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 2 On2"
            ::= { voipRingCadenceEntry 10}

        voipRingCadenceR2Off2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 1 Off2"
            ::= { voipRingCadenceEntry 11} 

        voipRingCadenceR2On3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 2 On3"
            ::= { voipRingCadenceEntry 12 }

        voipRingCadenceR2Off3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 2 Off3"
            ::= { voipRingCadenceEntry 13}                        

        voipRingCadenceR3On1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 On1"
            ::= { voipRingCadenceEntry 14 }

        voipRingCadenceR3Off1     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 Off1"
            ::= { voipRingCadenceEntry 15}  

        voipRingCadenceR3On2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 On2"
            ::= { voipRingCadenceEntry 16 }

        voipRingCadenceR3Off2     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 Off2"
            ::= { voipRingCadenceEntry 17} 

        voipRingCadenceR3On3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 On3"
            ::= { voipRingCadenceEntry 18 }

        voipRingCadenceR3Off3     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence Range 3 Off3"
            ::= { voipRingCadenceEntry 19}  

--
--      VoIP Line Setting Table
--

        voipLineSettingTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipLineSettingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Line Setting Table"
            ::= { voip-card 28 }

        voipLineSettingEntry  OBJECT-TYPE
            SYNTAX  VoipLineSettingEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Line Setting entry"
            INDEX { voipLineSettingSlot, voipLineSettingLine     }
            ::= { voipLineSettingTable 1 }

            VoipLineSettingEntry ::= SEQUENCE {
            voipLineSettingSlot    LargeSlotIndex,
            voipLineSettingLine     INTEGER,
            voipLineSetRingCadence     INTEGER

          }

        voipLineSettingSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipLineSettingEntry 1 }

        voipLineSettingLine     OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Line ID"
            ::= { voipLineSettingEntry 2 }

        voipLineSetRingCadence     OBJECT-TYPE
            SYNTAX  INTEGER {
                    one(1),
                    two(2),
                    three(3),
                    na(256)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Ring Cadence"
            ::= { voipLineSettingEntry 3}


--
--      VoIP Caller ID Table
--

        voipCallerIdTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF VoipCallerIdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Caller ID Table"
            ::= { voip-card 29 }

        voipCallerIdEntry  OBJECT-TYPE
            SYNTAX  VoipCallerIdEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "VoIP Caller ID entry"
            INDEX { voipCallerIdSlot}
            ::= { voipCallerIdTable 1 }

            VoipCallerIdEntry ::= SEQUENCE {
            voipCallerIdSlot    LargeSlotIndex,
            voipCallerIdFxsMode     INTEGER,
            voipCallerIdFirstRing       INTEGER,
            voipCallerIdFskMode       INTEGER,
            voipCallerIdFxoDetect       INTEGER
  
          }

        voipCallerIdSlot    OBJECT-TYPE
            SYNTAX  LargeSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { voipCallerIdEntry 1 }


        voipCallerIdFxsMode     OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    dtmf(2),
                    fsk(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable UPnP"
            ::= { voipCallerIdEntry 2 }

        voipCallerIdFirstRing       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable NAT Public IP"
            ::= { voipCallerIdEntry 3 }

        voipCallerIdFskMode       OBJECT-TYPE
            SYNTAX  INTEGER {
                    bellcore(1),
                    etsi(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "NAT IP/Domain "
            ::= { voipCallerIdEntry 4 }
        voipCallerIdFxoDetect       OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable (1),
                    enable(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Enable STUN Client"
            ::= { voipCallerIdEntry 5 }

        voipTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Total cards of VoIP "
            ::= { voip-card 100 }
--============================================================================--

--============================================================================--

--======================================================================--
--======================================================================--
--  3rs232a-card MIB
--======================================================================--
--======================================================================--

--
--  6RS232A Configuration
--

        trirs232aConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The Rs232a Interface Configuration table."
            ::= { trirs232a-card 1 }

        trirs232aConfigEntry  OBJECT-TYPE
            SYNTAX  TriRs232aConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 3Rs232a Configuration table."
            INDEX { trirsCfgSlotIndex , trirsCfgPortIndex }
            ::= { trirs232aConfigTable 1 }

            TriRs232aConfigEntry ::= SEQUENCE {
            trirsCfgSlotIndex                SmallSlotIndex,
            trirsCfgPortIndex                ThreePortID,
            trirsCfgMux                      INTEGER,
            trirsCfgSyncMode                 INTEGER,
            trirsCfgRate                     INTEGER,
            trirsCfgBitPos                   INTEGER,
            trirsCfgClkPolarity              INTEGER,
            trirsCfgDataPolarity             INTEGER,
            trirsCfgRTS                      INTEGER,
            trirsCfgTTM                      INTEGER,
            trirsCfgDteDceMode               INTEGER,
            trirsCfgDtrSel                   INTEGER,
            trirsCfgInterface                INTEGER,
            trirsCfgBitPos0Used              INTEGER,
            trirsCfgBitPos1Used              INTEGER,
            trirsCfgBitPos2Used              INTEGER,
            trirsCfgBitPos3Used              INTEGER,
            trirsCfgBitPos4Used              INTEGER,
            trirsCfgBitPos5Used              INTEGER,
            trirsCfgBitPos6Used              INTEGER,
            trirsCfgBitPos7Used              INTEGER,
            trirsCfgWarrning                 DisplayString
        }

        trirsCfgSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aConfigEntry 1 }

        trirsCfgPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, Total 3 ports"
            ::= { trirs232aConfigEntry 2 }

        trirsCfgMux  OBJECT-TYPE
            SYNTAX  INTEGER {
                    nonMux(1),
                    mux(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a MUX mode"
            ::= { trirs232aConfigEntry 3 }


        trirsCfgSyncMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    async8(1),
                    async9(2),
                    async10(3),
                    async11(4),
                    async12(5),
                    sync(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Sync mode"
            ::= { trirs232aConfigEntry 4 }

        trirsCfgRate  OBJECT-TYPE
            SYNTAX  INTEGER {
                    r0-6K(1),
                    r1-2K(2),
                    r2-4K(3),
                    r4-8K(4),
                    r7-2K(5),
                    r9-6K(6),
                    r14-4K(7),
                    r19-2K(8),
                    r38-4K(9),
                    r48K(10),
                    r64K(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Base Rate"
            ::= { trirs232aConfigEntry 5 }

        trirsCfgBitPos  OBJECT-TYPE
            SYNTAX  INTEGER {
                    position-0(1),
                    position-1(2),
                    position-2(3),
                    position-3(4),
                    position-4(5),
                    position-5(6),
                    position-6(7),
                    position-7(8)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bit position"
            ::= { trirs232aConfigEntry 6 }

        trirsCfgClkPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    clockNormal(1),
                    clockInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Clock Polarity"
            ::= { trirs232aConfigEntry 7 }

        trirsCfgDataPolarity  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dataNormal(1),
                    dataInverted(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Data Polarity"
            ::= { trirs232aConfigEntry 8 }

        trirsCfgRTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    rtsActive(1),
                    rtsPermanent(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a RTS Mode"
            ::= {  trirs232aConfigEntry 9 }

        trirsCfgTTM  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ttmOff(1),
                    ttmOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a TTM Mode"
            ::= { trirs232aConfigEntry 10 }

        trirsCfgDteDceMode  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dte(1),
                    dce(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a DTE/DCE Mode"
            ::= { trirs232aConfigEntry 11 }

        trirsCfgDtrSel  OBJECT-TYPE
            SYNTAX  INTEGER {
                    dtrOff(1),
                    dtrOn(2),
                    na(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Dtr"
            ::= { trirs232aConfigEntry 12 }


        trirsCfgInterface  OBJECT-TYPE
            SYNTAX  INTEGER {
                    db44(1),
                    rj45(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Interface Type"
            ::= { trirs232aConfigEntry 13 }

        trirsCfgBitPos0Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 0 Stream Position Used"
            ::= { trirs232aConfigEntry 14 }

        trirsCfgBitPos1Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 1 Stream Position Used"
            ::= { trirs232aConfigEntry 15 }

        trirsCfgBitPos2Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 2 Stream Position Used"
            ::= { trirs232aConfigEntry 16 }

        trirsCfgBitPos3Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 3 Stream Position Used"
            ::= { trirs232aConfigEntry 17 }

        trirsCfgBitPos4Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 4 Stream Position Used"
            ::= { trirs232aConfigEntry 18 }

        trirsCfgBitPos5Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 5 Stream Position Used"
            ::= { trirs232aConfigEntry 19 }

        trirsCfgBitPos6Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 6 Stream Position Used"
            ::= { trirs232aConfigEntry 20 }

        trirsCfgBitPos7Used  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unused(1),
                    port1(2),
                    port2(3),
                    port3(4),
                    port4(5),
                    port5(6),
                    port6(7),
                    port7(8),
                    port8(9)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Bits 7 Stream Position Used"
            ::= { trirs232aConfigEntry 21 }

        trirsCfgWarrning  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..70) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a map setup warning"
            ::= { trirs232aConfigEntry 22 }


--
--  3Rs232a Status
--

        trirs232aStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The 3Rs232a Status table."
            ::= { trirs232a-card 2 }

        trirs232aStatusEntry  OBJECT-TYPE
            SYNTAX  TriRs232aStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 3Rs232a Status table."
            INDEX { trirsStatusSlotIndex , trirsStatusPortIndex }
            ::= { trirs232aStatusTable 1 }

            TriRs232aStatusEntry ::= SEQUENCE {
            trirsStatusSlotIndex         SmallSlotIndex,
            trirsStatusPortIndex         ThreePortID,
            trirsStatusS1                INTEGER,
            trirsStatusS3                INTEGER,
            trirsStatusS4                INTEGER,
            trirsStatusS6                INTEGER,
            trirsStatusS8                INTEGER,
            trirsStatusS9                INTEGER,
            trirsStatusE4                INTEGER,
            trirsStatusE5                INTEGER,
            trirsStatusE6                INTEGER,
            trirsStatusX                 INTEGER,
            trirsStatusDteCTS            INTEGER,
            trirsStatusDteDCD            INTEGER,
            trirsStatusRTSloss           INTEGER,
            trirsStatusEXTCLKloss        INTEGER,
            trirsStatusDSRstatus         INTEGER,
            trirsStatusCTSstatus         INTEGER,
            trirsStatusDCDstatus         INTEGER,
            trirsStatusDTRstatus         INTEGER,
            trirsStatusRTSstatus         INTEGER,
            trirsStatusRemoteAlm         INTEGER,
            trirsStatusRemoteS1          INTEGER,
            trirsStatusRemoteS3          INTEGER,
            trirsStatusRemoteS4          INTEGER,
            trirsStatusRemoteS6          INTEGER,
            trirsStatusRemoteS8          INTEGER,
            trirsStatusRemoteS9          INTEGER,
            trirsStatusRemoteE4          INTEGER,
            trirsStatusRemoteE5          INTEGER,
            trirsStatusRemoteE6          INTEGER,
            trirsStatusRemoteX           INTEGER
        }

        trirsStatusSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aStatusEntry 1 }

        trirsStatusPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, Total 3 ports"
            ::= { trirs232aStatusEntry 2 }

        trirsStatusS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S1"
            ::= { trirs232aStatusEntry 3 }

        trirsStatusS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S3"
            ::= { trirs232aStatusEntry 4 }

        trirsStatusS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S4"
            ::= { trirs232aStatusEntry 5 }

        trirsStatusS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S6"
            ::= { trirs232aStatusEntry 6 }

        trirsStatusS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S8"
            ::= { trirs232aStatusEntry 7 }

        trirsStatusS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    dtr(4),
                    dsr(5),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit S9"
            ::= { trirs232aStatusEntry 8 }

        trirsStatusE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit E4"
            ::= { trirs232aStatusEntry 9 }

        trirsStatusE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit E5"
            ::= { trirs232aStatusEntry 10 }

        trirsStatusE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit E6"
            ::= { trirs232aStatusEntry 11 }

        trirsStatusX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rtswithFrameSYNC(12),
                    frameSYNC(13),
                    na(14)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit X"
            ::= { trirs232aStatusEntry 12 }

        trirsStatusDteCTS  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit DTE CTS"
            ::= { trirs232aStatusEntry 13 }

        trirsStatusDteDCD  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    rts(3),
                    remote-S1(6),
                    remote-S3(7),
                    remote-S4(8),
                    remote-S6(9),
                    remote-S8(10),
                    remote-S9(11)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Status bit DTE DCD"
            ::= { trirs232aStatusEntry 14 }

        trirsStatusRTSloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a RTS loss"
            ::= { trirs232aStatusEntry 15 }

        trirsStatusEXTCLKloss  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a EXT-CLK loss"
            ::= { trirs232aStatusEntry 16 }

        trirsStatusDSRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a DSR"
            ::= { trirs232aStatusEntry 17 }

        trirsStatusCTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a CTS"
            ::= { trirs232aStatusEntry 18 }

        trirsStatusDCDstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a DCD"
            ::= { trirs232aStatusEntry 19 }

        trirsStatusDTRstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a DTR"
            ::= { trirs232aStatusEntry 20 }

        trirsStatusRTSstatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a RTS"
            ::= { trirs232aStatusEntry 21 }

        trirsStatusRemoteAlm  OBJECT-TYPE
            SYNTAX  INTEGER {
                    no(1),
                    yes(2),
                    na(3)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a RTS"
            ::= { trirs232aStatusEntry 22 }

        trirsStatusRemoteS1  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S1"
            ::= { trirs232aStatusEntry 23 }

        trirsStatusRemoteS3  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S3"
            ::= { trirs232aStatusEntry 24 }

        trirsStatusRemoteS4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S4"
            ::= { trirs232aStatusEntry 25 }

        trirsStatusRemoteS6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S6"
            ::= { trirs232aStatusEntry 26 }

        trirsStatusRemoteS8  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S8"
            ::= { trirs232aStatusEntry 27 }

        trirsStatusRemoteS9  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit S9"
            ::= { trirs232aStatusEntry 28 }

        trirsStatusRemoteE4  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit E4"
            ::= { trirs232aStatusEntry 29 }

        trirsStatusRemoteE5  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit E5"
            ::= { trirs232aStatusEntry 30 }

        trirsStatusRemoteE6  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit E6"
            ::= { trirs232aStatusEntry 31 }

        trirsStatusRemoteX  OBJECT-TYPE
            SYNTAX  INTEGER {
                    off(1),
                    on(2),
                    na(14)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a remote status bit X"
            ::= { trirs232aStatusEntry 32 }

--
--  3RS232a Alarm Control Table
--

        trirs232aAlarmCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The 3rs232a alarm control table."
            ::= { trirs232a-card 3 }

        trirs232aAlarmCtrlEntry  OBJECT-TYPE
            SYNTAX  TriRs232aAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 3rs232a alarm control table."
            INDEX { trirsAlarmSlotIndex , trirsAlarmPortIndex }
            ::= { trirs232aAlarmCtrlTable 1 }

            TriRs232aAlarmCtrlEntry ::= SEQUENCE {
            trirsAlarmSlotIndex           SmallSlotIndex,
            trirsAlarmPortIndex           ThreePortID,
            trirsAlarmSetup               AlarmSeverity
        }

        trirsAlarmSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aAlarmCtrlEntry 1 }

        trirsAlarmPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { trirs232aAlarmCtrlEntry 2 }

        trirsAlarmSetup  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { trirs232aAlarmCtrlEntry 3 }


--
--  3RS232a Alarm History Table
--

        trirs232aAlmHisTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aAlmHisEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: 3rs232aAlmHisUnitIndex "
            ::= { trirs232a-card 4 }

        trirs232aAlmHisEntry  OBJECT-TYPE
            SYNTAX  TriRs232aAlmHisEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { trirsAlmHisSlotIndex , trirsAlmHisPortIndex }
            ::= { trirs232aAlmHisTable 1 }

            TriRs232aAlmHisEntry ::= SEQUENCE {
            trirsAlmHisSlotIndex      SmallSlotIndex,
            trirsAlmHisPortIndex      ThreePortID,
            trirsAlmHistoryState          INTEGER,
            trirsAlmHistoryCount          Counter,
            trirsAlmHistoryEnable         AlarmSeverity
        }

        trirsAlmHisSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aAlmHisEntry 1 }

        trirsAlmHisPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 6, Total 6 ports"
            ::= { trirs232aAlmHisEntry 2 }

        trirsAlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { trirs232aAlmHisEntry 3 }

        trirsAlmHistoryCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { trirs232aAlmHisEntry 4 }

        trirsAlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { trirs232aAlmHisEntry 5 }


--
-- 3RS232a Diagnostic Control Table
--

        trirs232aDiagCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            ::= { trirs232a-card 5 }

        trirs232aDiagCtrlEntry  OBJECT-TYPE
            SYNTAX  TriRs232aDiagCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                ""
            INDEX { trirs232aDiagCtrlSlotIndex , trirs232aDiagCtrlPortIndex }
            ::= { trirs232aDiagCtrlTable 1 }

            TriRs232aDiagCtrlEntry ::= SEQUENCE {
            trirs232aDiagCtrlSlotIndex     SmallSlotIndex,
            trirs232aDiagCtrlPortIndex     ThreePortID,
            trirs232aNearLoopback             INTEGER
        }

        trirs232aDiagCtrlSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aDiagCtrlEntry 1 }

        trirs232aDiagCtrlPortIndex  OBJECT-TYPE
            SYNTAX  ThreePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1 to 3, Total 3 ports"
            ::= { trirs232aDiagCtrlEntry 2 }

        trirs232aNearLoopback  OBJECT-TYPE
            SYNTAX  INTEGER {
                    noLoopback(1),
                    toDTE(2),
                    toLocal(3)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "3Rs232a Loopback Type"
            ::= { trirs232aDiagCtrlEntry 3 }

--
-- 3RS232a Card Control Table
--

        trirs232aCardCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aCardCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The 3rs232a Card control table."
            ::= { trirs232a-card 6 }

        trirs232aCardCtrlEntry  OBJECT-TYPE
            SYNTAX  TriRs232aCardCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 3rs232a Card control table."
            INDEX { trirs232aCardIndex }
            ::= { trirs232aCardCtrlTable 1 }

            TriRs232aCardCtrlEntry ::= SEQUENCE {
            trirs232aCardIndex                SmallSlotIndex,
            trirs232aReset                    INTEGER,
            trirs232aLoadDefault              INTEGER
        }

        trirs232aCardIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aCardCtrlEntry 1 }

        trirs232aReset  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    reset(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Reset 3rs232a card"
            ::= { trirs232aCardCtrlEntry 2 }

        trirs232aLoadDefault  OBJECT-TYPE
            SYNTAX  INTEGER {
                    na(1),
                    default(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Load default"
            ::= { trirs232aCardCtrlEntry 3 }

--
--  3Rs232a System Information Table
--

        trirs232aSysInfoTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF TriRs232aSysInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The 3Rs232a system information table."
            ::= { trirs232a-card 7}

        trirs232aSysInfoEntry  OBJECT-TYPE
            SYNTAX  TriRs232aSysInfoEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the 3Rs232a system information table."
            INDEX { trirs232aSISlotIndex }
            ::= { trirs232aSysInfoTable 1 }

            TriRs232aSysInfoEntry ::= SEQUENCE {
            trirs232aSISlotIndex            SmallSlotIndex,
            trirs232aPROMVersion            DisplayString,
            trirs232aHardwareVersion        DisplayString,
            trirs232aFpgaVersion            DisplayString,
            trirs232aBank1Version           DisplayString,
            trirs232aBank2Version           DisplayString,
            trirs232aActiveBank             INTEGER
        }

        trirs232aSISlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232aSysInfoEntry 1 }

        trirs232aPROMVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " trirs232a PROM Version"
            ::= { trirs232aSysInfoEntry 2 }

        trirs232aHardwareVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30) )
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " 3rs232a Hardware Version"
            ::= { trirs232aSysInfoEntry 3 }

        trirs232aFpgaVersion  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "FPGA Version"
            ::= { trirs232aSysInfoEntry 4 }

        trirs232aBank1Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-1 Version"
            ::= { trirs232aSysInfoEntry 5 }

        trirs232aBank2Version    OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..30))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Bank-2 Version"
            ::= { trirs232aSysInfoEntry 6}

        trirs232aActiveBank    OBJECT-TYPE
            SYNTAX  INTEGER{
                    bank-1(1),
                    bank-2(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Active Bank 1/2"
            ::= { trirs232aSysInfoEntry 7 }

--
-- 3RS232 Bert Control Table
--

        trirs232BertCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF Trirs232BertCtrlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "3RS232 Bert Control Table."
            ::= { trirs232a-card 8 }

        trirs232BertCtrlEntry  OBJECT-TYPE
            SYNTAX  Trirs232BertCtrlEntry
            MAX-ACCESS  not-accessible
            STATUS  current
            DESCRIPTION
                "An entry of 3RS232 Bert control table."
            INDEX { trirs232BertCtrlSlot , trirs232BertCtrlPort}
            ::= { trirs232BertCtrlTable 1 }

        Trirs232BertCtrlEntry ::= SEQUENCE {
            trirs232BertCtrlSlot          SmallSlotIndex,
            trirs232BertCtrlPort           INTEGER,
            trirs232BertCtrlType           INTEGER,
--            trirs232BertCtrlPattern        DisplayString,
            trirs232BertCtrlPeriod         INTEGER,
            trirs232BertCtrlEnable         INTEGER,
            trirs232BertCtrlSync           INTEGER,
            trirs232BertCtrlError          INTEGER,
            trirs232BertCtrlTime           INTEGER,
            trirs232BertCtrlES             INTEGER,
            trirs232BertCtrlSES            INTEGER,
            trirs232BertCtrlUS             INTEGER,
            trirs232BertCtrlDirect           INTEGER
       }

        trirs232BertCtrlSlot  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
            "Slot 1~12, total 12 slots."
            ::= { trirs232BertCtrlEntry 1 }

        trirs232BertCtrlPort  OBJECT-TYPE
            SYNTAX  ThreePortID
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Port"
            ::= { trirs232BertCtrlEntry 2 }

        trirs232BertCtrlType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    --off(1),
                    --prbs2exp20of1(2),
                    --prbs2exp15of1(3),
                    prbs2exp11of1(4),
                    prbs2exp9of1(5)
--                    userDefine(6)
                  }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Type"
            ::= { trirs232BertCtrlEntry 3 }

--        trirs232BertCtrlPattern  OBJECT-TYPE
--            SYNTAX  DisplayString (SIZE (0..255))
--            MAX-ACCESS  read-write
--            STATUS  current
--            DESCRIPTION
--                "Bert User Pattern"
--            ::= { trirs232BertCtrlEntry 4 }

        trirs232BertCtrlPeriod OBJECT-TYPE
            SYNTAX  INTEGER 
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Bert Spilt Mode"
            ::= { trirs232BertCtrlEntry 5 }

        trirs232BertCtrlEnable  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    enable(2),
                    clear(3),
                    insertErr(4)
                }
            MAX-ACCESS  read-write
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { trirs232BertCtrlEntry 6 }

        trirs232BertCtrlSync  OBJECT-TYPE
            SYNTAX  INTEGER {
                    unsync(1),
                    sync(2),
                    na(3)
                }
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Status"
            ::= { trirs232BertCtrlEntry 7 }

        trirs232BertCtrlError  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Count"
            ::= { trirs232BertCtrlEntry 8 }

        trirs232BertCtrlTime  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert run time"
            ::= { trirs232BertCtrlEntry 9 }

        trirs232BertCtrlES  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Error Second"
            ::= { trirs232BertCtrlEntry 10 }

        trirs232BertCtrlSES  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert SES"
            ::= { trirs232BertCtrlEntry 11 }

        trirs232BertCtrlUS  OBJECT-TYPE
            SYNTAX  INTEGER
            MAX-ACCESS  read-only
            STATUS  current
            DESCRIPTION
                "Bert Unsync Second"
            ::= { trirs232BertCtrlEntry 12 }  
            
        trirs232BertCtrlDirect  OBJECT-TYPE
            SYNTAX  INTEGER {
                    toNetwork(1),
                    toLine(2)
                  }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Bert Direct"
            ::= { trirs232BertCtrlEntry 13 }


        trirs232aTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of 3Rs232a"
            ::= { trirs232a-card 100 }

--============================================================================--
--======================================================================--
--======================================================================--
--  clka-card MIB
--======================================================================--
--======================================================================--            
        clkaConfigTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The clka Interface Configuration table."
            ::= { clka-card 1 }

        clkaConfigEntry  OBJECT-TYPE
            SYNTAX  ClkaConfigEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the clka Configuration table."
            INDEX { clkaCfgSlotIndex }
            ::= { clkaConfigTable 1 }

            ClkaConfigEntry ::= SEQUENCE {
            clkaCfgSlotIndex                 SmallSlotIndex,
            port1ClkaType                    INTEGER,
            port1ClkaImpedance               INTEGER,
            port2ClkaType                    INTEGER,
            port2ClkaImpedance               INTEGER
        }
        
       clkaCfgSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaConfigEntry 1 }


        port1ClkaType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    t1D4(2),
                    t1Esf(3),
                    e1Fas(4),
                    e1Crc4(5),                                                     
                    ext2048Khz(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clka port 1 type"
            ::= { clkaConfigEntry 2 }

        port1ClkaImpedance  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ohm75(1),
                    ohm120(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clka port 1 impedance"
            ::= { clkaConfigEntry 3 }

        port2ClkaType  OBJECT-TYPE
            SYNTAX  INTEGER {
                    disable(1),
                    t1D4(2),
                    t1Esf(3),
                    e1Fas(4),
                    e1Crc4(5),                                                     
                    ext2048Khz(6)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clka port 2 type"
            ::= { clkaConfigEntry 4 }

        port2ClkaImpedance  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ohm75(1),
                    ohm120(2)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "clka port 2 impedance"
            ::= { clkaConfigEntry 5 }

        clkaCommandControlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { clka-card 2 }

        clkaCommandControlEntry  OBJECT-TYPE
            SYNTAX  ClkaCommandControlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { clkaCommandControlIndex }
            ::= { clkaCommandControlTable 1 }

            ClkaCommandControlEntry ::= SEQUENCE {
            clkaCommandControlIndex               SmallSlotIndex,
            clkaCommandControlLoadDefault         INTEGER
        }

        clkaCommandControlIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaCommandControlEntry 1 }

        clkaCommandControlLoadDefault    OBJECT-TYPE
            SYNTAX  INTEGER {
                    load-default(1)
                }
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Command: Load Default CLKA CONF"
            ::= { clkaCommandControlEntry 2 }

        clkaStatusTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The command control table."
            ::= { clka-card 3 }

        clkaStatusEntry  OBJECT-TYPE
            SYNTAX  ClkaStatusEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the command control table."
            INDEX { clkaStatusSlotIndex }
            ::= { clkaStatusTable 1 }

            ClkaStatusEntry ::= SEQUENCE {
            clkaStatusSlotIndex               SmallSlotIndex,
            clkaP1Status                      INTEGER,
            clkaP2Status                      INTEGER,
            clkaAlarmInStatus                 INTEGER           
        }
        clkaStatusSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaStatusEntry 1 }
            
        clkaP1Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    los(1),
                    lof(2),
                    ais(3),
                    sync(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "clka port 1 status"
            ::= { clkaStatusEntry 2 }
        clkaP2Status  OBJECT-TYPE
            SYNTAX  INTEGER {
                    los(1),
                    lof(2),
                    ais(3),
                    sync(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "clka port 2 status"
            ::= { clkaStatusEntry 3 }  
            
        clkaAlarmInStatus  OBJECT-TYPE
            SYNTAX  INTEGER {
                    alarm(1),
                    normal(2)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "clka alarm input status"
            ::= { clkaStatusEntry 4 } 
--
--  CLKa Alarm Control Table
--

        clkaAlarmCtrlTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "The clka alarm control table."
            ::= { clka-card 4 }

        clkaAlarmCtrlEntry  OBJECT-TYPE
            SYNTAX  ClkaAlarmCtrlEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "An entry in the clka alarm control table."
            INDEX { clkaAlarmSlotIndex , clkaAlarmPortIndex }
            ::= { clkaAlarmCtrlTable 1 }

            ClkaAlarmCtrlEntry ::= SEQUENCE {
            clkaAlarmSlotIndex           SmallSlotIndex,
            clkaAlarmPortIndex           OnePortID,
            clkaAlarmAlarmIn               AlarmSeverity
        }

        clkaAlarmSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaAlarmCtrlEntry 1 }

        clkaAlarmPortIndex  OBJECT-TYPE
            SYNTAX  OnePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1"
            ::= { clkaAlarmCtrlEntry 2 }

        clkaAlarmAlarmIn  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-write
            STATUS  mandatory
            DESCRIPTION
                "Alarm-in is enabled or not"
            ::= { clkaAlarmCtrlEntry 3 }


--
--  CLKa Alarm History Table
--

        clkaAlmHisTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaAlmHisEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " Key: clkaAlmHisUnitIndex "
            ::= { clka-card 5 }

        clkaAlmHisEntry  OBJECT-TYPE
            SYNTAX  ClkaAlmHisEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { clkaAlmHisSlotIndex , clkaAlmHisPortIndex }
            ::= { clkaAlmHisTable 1 }

            ClkaAlmHisEntry ::= SEQUENCE {
            clkaAlmHisSlotIndex      SmallSlotIndex,
            clkaAlmHisPortIndex      OnePortID,
            clkaAlmHistoryState          INTEGER,
            clkaAlmHistoryCount          Counter,
            clkaAlmHistoryEnable         AlarmSeverity
        }

        clkaAlmHisSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaAlmHisEntry 1 }

        clkaAlmHisPortIndex  OBJECT-TYPE
            SYNTAX  OnePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port "
            ::= { clkaAlmHisEntry 2 }

        clkaAlmHistoryState  OBJECT-TYPE
            SYNTAX  INTEGER {
                    ok(1),
                    alarm(2),
                    disable(3),
                    na(4)
                }
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Current State"
            ::= { clkaAlmHisEntry 3 }

        clkaAlmHistoryCount  OBJECT-TYPE
            SYNTAX  Counter
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                " Alarm Count which happened "
            ::= { clkaAlmHisEntry 4 }

        clkaAlmHistoryEnable  OBJECT-TYPE
            SYNTAX  AlarmSeverity
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm is enabled or not"
            ::= { clkaAlmHisEntry 5 }
			
--
--  Alarm Queue Table
--
        clkaAlmQueueTable  OBJECT-TYPE
            SYNTAX  SEQUENCE OF ClkaAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                "clka Alm Queue Table"
            ::= { clka-card 6 }

        clkaAlmQueueEntry  OBJECT-TYPE
            SYNTAX  ClkaAlmQueueEntry
            ACCESS  not-accessible
            STATUS  mandatory
            DESCRIPTION
                " "
            INDEX { clkaAlmQueueSlotIndex ,
        clkaAlmQueuePortIndex ,
        clkaAlmQueueNumber }
            ::= { clkaAlmQueueTable 1 }

            ClkaAlmQueueEntry ::= SEQUENCE {
            clkaAlmQueueSlotIndex      SmallSlotIndex,
            clkaAlmQueuePortIndex      OnePortID,			
            clkaAlmQueueNumber         INTEGER (1..40),
            clkaAlmQueueString         DisplayString (SIZE(0..80))
        }

        clkaAlmQueueSlotIndex  OBJECT-TYPE
            SYNTAX  SmallSlotIndex
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
            "Slot A~D, total 4 slots."
            ::= { clkaAlmQueueEntry 1 }

        clkaAlmQueuePortIndex  OBJECT-TYPE
            SYNTAX  OnePortID
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Port 1"
            ::= { clkaAlmQueueEntry 2 }

			
        clkaAlmQueueNumber  OBJECT-TYPE
            SYNTAX  INTEGER (1..40)
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Select Latest Alarm Queue number (1-40)"
            ::= { clkaAlmQueueEntry 3 }

        clkaAlmQueueString  OBJECT-TYPE
            SYNTAX  DisplayString (SIZE (0..80))
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Alarm Queue String"
            ::= { clkaAlmQueueEntry 4 }
            
        clkaTotalCard   OBJECT-TYPE
            SYNTAX  INTEGER
            ACCESS  read-only
            STATUS  mandatory
            DESCRIPTION
                "Total cards of CLKa"
            ::= { clka-card 100 }
END
